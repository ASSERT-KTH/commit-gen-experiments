BLEU SCORE: 0.05341087579952926

TEST MSG: Enable Kotlin for unit tests
GENERATED MSG: add kotlin example

TEST DIFF (one line): diff - - git a / realm / build . gradle b / realm / build . gradle <nl> index e35f258 . . f2eead6 100644 <nl> - - - a / realm / build . gradle <nl> + + + b / realm / build . gradle <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> buildscript { <nl> + ext . kotlin _ version = ' 1 . 1 . 2 - 4 ' <nl> repositories { <nl> mavenLocal ( ) <nl> jcenter ( ) <nl> @ @ - 17 , 6 + 18 , 7 @ @ buildscript { <nl> classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 6 ' <nl> classpath " io . realm : realm - transformer : $ { file ( ' . . / version . txt ' ) . text . trim ( ) } " <nl> classpath ' net . ltgt . gradle : gradle - errorprone - plugin : 0 . 0 . 10 ' <nl> + classpath " org . jetbrains . kotlin : kotlin - gradle - plugin : $ kotlin _ version " <nl> } <nl> } <nl> <nl> diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index e5626b9 . . d567cbe 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> import java . security . MessageDigest <nl> <nl> apply plugin : ' com . android . library ' <nl> + apply plugin : ' kotlin - android ' <nl> apply plugin : ' com . github . dcendents . android - maven ' <nl> apply plugin : ' maven - publish ' <nl> apply plugin : ' com . jfrog . artifactory ' <nl> @ @ - 79 , 6 + 80 , 9 @ @ android { <nl> } <nl> <nl> sourceSets { <nl> + androidTest { <nl> + java . srcDirs + = ' src / androidTest / kotlin ' <nl> + } <nl> androidTestObjectServer { <nl> java . srcDirs + = ' src / syncIntegrationTest / java ' <nl> assets . srcDirs + = [ ' src / syncIntegrationTest / assets / ' ] <nl> @ @ - 137 , 6 + 141 , 7 @ @ android . registerTransform ( new RealmTransformer ( ) ) <nl> <nl> repositories { <nl> maven { url " https : / / jitpack . io " } <nl> + mavenCentral ( ) <nl> } <nl> <nl> dependencies { <nl> @ @ - 147 , 10 + 152 , 10 @ @ dependencies { <nl> compile " io . realm : realm - annotations : $ { version } " <nl> compile ' com . getkeepsafe . relinker : relinker : 1 . 2 . 2 ' <nl> <nl> - objectServerAnnotationProcessor project ( ' : realm - annotations - processor ' ) <nl> + kaptObjectServer project ( ' : realm - annotations - processor ' ) <nl> objectServerCompile ' com . squareup . okhttp3 : okhttp : 3 . 4 . 1 ' <nl> <nl> - androidTestAnnotationProcessor project ( ' : realm - annotations - processor ' ) <nl> + kaptAndroidTest project ( ' : realm - annotations - processor ' ) <nl> androidTestCompile fileTree ( dir : ' testLibs ' , include : [ ' * . jar ' ] ) <nl> androidTestCompile ' io . reactivex : rxjava : 1 . 1 . 0 ' <nl> androidTestCompile ' com . android . support : support - annotations : 25 . 3 . 1 ' <nl> @ @ - 159 , 6 + 164 , 8 @ @ dependencies { <nl> androidTestCompile ' com . google . dexmaker : dexmaker : 1 . 2 ' <nl> androidTestCompile ' com . google . dexmaker : dexmaker - mockito : 1 . 2 ' <nl> androidTestCompile ' org . hamcrest : hamcrest - library : 1 . 3 ' <nl> + androidTestCompile " org . jetbrains . kotlin : kotlin - stdlib - jre7 : $ kotlin _ version " <nl> + androidTestCompile " org . jetbrains . kotlin : kotlin - reflect : $ kotlin _ version " <nl> } <nl> <nl> task sourcesJar ( type : Jar ) { <nl> diff - - git a / realm / realm - library / src / androidTest / kotlin / io / realm / KotlinSchemaTests . kt b / realm / realm - library / src / androidTest / kotlin / io / realm / KotlinSchemaTests . kt <nl> new file mode 100644 <nl> index 0000000 . . b851ab4 <nl> - - - / dev / null <nl> + + + b / realm / realm - library / src / androidTest / kotlin / io / realm / KotlinSchemaTests . kt <nl> @ @ - 0 , 0 + 1 , 71 @ @ <nl> + / * <nl> + * Copyright 2017 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + package io . realm <nl> + <nl> + import android . support . test . runner . AndroidJUnit4 <nl> + import io . realm . entities . AllKotlinTypes <nl> + import io . realm . rule . TestRealmConfigurationFactory <nl> + import org . junit . After <nl> + import org . junit . Assert . assertFalse <nl> + import org . junit . Assert . assertTrue <nl> + import org . junit . Before <nl> + import org . junit . Rule <nl> + import org . junit . Test <nl> + import org . junit . runner . RunWith <nl> + import kotlin . reflect . full . memberProperties <nl> + <nl> + / * * <nl> + * This class tests how Kotlin classes are interpreted by Realm and exposed in the RealmSchema <nl> + * / <nl> + @ RunWith ( AndroidJUnit4 : : class ) <nl> + class KotlinSchemaTests { <nl> + <nl> + @ get : Rule <nl> + val configFactory = TestRealmConfigurationFactory ( ) <nl> + <nl> + private lateinit var realm : Realm <nl> + <nl> + @ Before <nl> + fun setUp ( ) { <nl> + realm = Realm . getInstance ( configFactory . createConfiguration ( ) ) <nl> + } <nl> + <nl> + @ After <nl> + fun tearDown ( ) { <nl> + realm . close ( ) <nl> + } <nl> + <nl> + @ Test <nl> + fun kotlinTypeNonNull ( ) { <nl> + val objSchema = realm . getSchema ( ) . get ( AllKotlinTypes : : class . simpleName ) <nl> + <nl> + / / Document current nullability . Ideally all should be non - nullable . This is currently <nl> + / / not the case . <nl> + / / TODO We should fix this . Tracked by https : / / github . com / realm / realm - java / issues / 4701 <nl> + assertTrue ( objSchema . isNullable ( AllKotlinTypes : : nonNullBinary . name ) ) ; <nl> + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullBoolean . name ) ) ; <nl> + assertTrue ( objSchema . isNullable ( AllKotlinTypes : : nonNullString . name ) ) ; <nl> + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullLong . name ) ) ; <nl> + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullInt . name ) ) ; <nl> + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullShort . name ) ) ; <nl> + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullByte . name ) ) ; <nl> + assertTrue ( objSchema . isNullable ( AllKotlinTypes : : nonNullDate . name ) ) ; <nl> + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullDouble . name ) ) ; <nl> + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullFloat . name ) ) ; <nl> + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullList . name ) ) ; <nl> + assertTrue ( objSchema . isNullable ( AllKotlinTypes : : nonNullObject . name ) ) ; <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / realm / realm - library / src / androidTest / kotlin / io / realm / entities / AllKotlinTypes . kt b / realm / realm - library / src / androidTest / kotlin / io / realm / entities / AllKotlinTypes . kt <nl> new file mode 100644 <nl> index 0000000 . . 527f8d9 <nl> - - - / dev / null <nl> + + + b / realm / realm - library / src / androidTest / kotlin / io / realm / entities / AllKotlinTypes . kt <nl> @ @ - 0 , 0 + 1 , 80 @ @ <nl> + / * <nl> + * Copyright 2017 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . entities <nl> + <nl> + import io . realm . RealmList <nl> + import io . realm . RealmObject <nl> + import io . realm . RealmResults <nl> + import io . realm . annotations . Ignore <nl> + import io . realm . annotations . Index <nl> + import io . realm . annotations . LinkingObjects <nl> + import io . realm . annotations . PrimaryKey <nl> + import java . util . * <nl> + <nl> + open class AllKotlinTypes : RealmObject ( ) { <nl> + <nl> + @ Ignore <nl> + var ignoredString : String = " " <nl> + var nullString : String ? = null <nl> + var nonNullString : String = " " <nl> + @ Index <nl> + var indexedString : String = " " <nl> + <nl> + var nullLong : Long ? = null <nl> + @ PrimaryKey <nl> + var nonNullLong : Long = 0 <nl> + <nl> + var nullShort : Short ? = null <nl> + var nonNullShort : Short = 0 <nl> + <nl> + var nullInt : Int ? = null <nl> + var nonNullInt : Int = 0 <nl> + <nl> + var nullByte : Byte ? = null <nl> + var nonNullByte : Byte = 0 <nl> + <nl> + var nullFloat : Float ? = null <nl> + var nonNullFloat : Float = 0F <nl> + <nl> + var nullDouble : Double ? = null <nl> + var nonNullDouble : Double = 0 . 0 / / Double by default <nl> + <nl> + var nullBoolean : Boolean ? = null <nl> + var nonNullBoolean : Boolean = false <nl> + <nl> + var nullDate : Date ? = null <nl> + var nonNullDate : Date = Date ( ) <nl> + <nl> + var nullBinary : ByteArray ? = null <nl> + var nonNullBinary : ByteArray = ByteArray ( 0 ) <nl> + <nl> + / / This turns into Byte [ ] which we dont support for some reason ? <nl> + / / var nullBoxedBinary : Array < Byte > ? = null <nl> + / / var nonNullBoxedBinary : Array < Byte > = emptyArray ( ) <nl> + <nl> + var nullObject : AllKotlinTypes ? = null <nl> + var nonNullObject : AllKotlinTypes = AllKotlinTypes ( ) <nl> + <nl> + var nullList : RealmList < AllKotlinTypes > ? = null / / This should not be allowed <nl> + var nonNullList : RealmList < AllKotlinTypes > = RealmList ( ) <nl> + <nl> + @ LinkingObjects ( " nonNullObject " ) <nl> + val objectParents : RealmResults < AllKotlinTypes > ? = null ; <nl> + <nl> + @ LinkingObjects ( " nonNullList " ) <nl> + val listParents : RealmResults < AllKotlinTypes > ? = null ; <nl> + }
NEAREST DIFF (one line): diff - - git a / examples / kotlinExample / . gitignore b / examples / kotlinExample / . gitignore <nl> new file mode 100644 <nl> index 0000000 . . 796b96d <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / . gitignore <nl> @ @ - 0 , 0 + 1 @ @ <nl> + / build <nl> diff - - git a / examples / kotlinExample / build . gradle b / examples / kotlinExample / build . gradle <nl> new file mode 100644 <nl> index 0000000 . . 3aef7cd <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / build . gradle <nl> @ @ - 0 , 0 + 1 , 47 @ @ <nl> + apply plugin : ' com . android . application ' <nl> + apply plugin : ' kotlin - android ' <nl> + apply plugin : ' android - command ' <nl> + <nl> + android { <nl> + compileSdkVersion 19 <nl> + buildToolsVersion " 20 . 0 . 0 " <nl> + defaultConfig { <nl> + applicationId ' io . realm . examples . kotlin ' <nl> + minSdkVersion 15 <nl> + targetSdkVersion 19 <nl> + versionCode 1 <nl> + versionName " 1 . 0 " <nl> + } <nl> + <nl> + buildTypes { <nl> + release { <nl> + minifyEnabled false <nl> + } <nl> + } <nl> + <nl> + command { <nl> + events 2000 <nl> + } <nl> + } <nl> + <nl> + dependencies { <nl> + compile " org . jetbrains . kotlin : kotlin - stdlib : $ kotlin _ version " <nl> + compile ' org . jetbrains . anko : anko : 0 . 6 . 2 - 19s ' <nl> + compile files ( " . . / . . / realm / build / libs / realm - $ { version } . jar " ) <nl> + <nl> + kapt files ( " . . / . . / realm / build / libs / realm - $ { version } . jar " ) <nl> + } <nl> + <nl> + buildscript { <nl> + ext . kotlin _ version = ' 0 . 12 . 213 ' <nl> + repositories { <nl> + mavenCentral ( ) <nl> + } <nl> + dependencies { <nl> + classpath " org . jetbrains . kotlin : kotlin - gradle - plugin : $ kotlin _ version " <nl> + } <nl> + } <nl> + <nl> + repositories { <nl> + mavenCentral ( ) <nl> + } <nl> diff - - git a / examples / kotlinExample / proguard - rules . pro b / examples / kotlinExample / proguard - rules . pro <nl> new file mode 100644 <nl> index 0000000 . . 200fdff <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / proguard - rules . pro <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + # Add project specific ProGuard rules here . <nl> + # By default , the flags in this file are appended to flags specified <nl> + # in / usr / local / Cellar / android - sdk / 22 . 6 . 2 / tools / proguard / proguard - android . txt <nl> + # You can edit the include path and order by changing the proguardFiles <nl> + # directive in build . gradle . <nl> + # <nl> + # For more details , see <nl> + # http : / / developer . android . com / guide / developing / tools / proguard . html <nl> + <nl> + # Add any project specific keep options here : <nl> + <nl> + # If your project uses WebView with JS , uncomment the following <nl> + # and specify the fully qualified class name to the JavaScript interface <nl> + # class : <nl> + # - keepclassmembers class fqcn . of . javascript . interface . for . webview { <nl> + # public * ; <nl> + # } <nl> diff - - git a / examples / kotlinExample / src / main / AndroidManifest . xml b / examples / kotlinExample / src / main / AndroidManifest . xml <nl> new file mode 100644 <nl> index 0000000 . . 877e978 <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / src / main / AndroidManifest . xml <nl> @ @ - 0 , 0 + 1 , 20 @ @ <nl> + < manifest package = " io . realm . examples . kotlin " <nl> + xmlns : android = " http : / / schemas . android . com / apk / res / android " > <nl> + <nl> + < application <nl> + android : allowBackup = " true " <nl> + android : icon = " @ drawable / ic _ launcher " <nl> + android : label = " @ string / app _ name " <nl> + android : theme = " @ style / AppTheme " > <nl> + < activity <nl> + android : name = " . KotlinExampleActivity " <nl> + android : label = " @ string / app _ name " > <nl> + < intent - filter > <nl> + < action android : name = " android . intent . action . MAIN " / > <nl> + <nl> + < category android : name = " android . intent . category . LAUNCHER " / > <nl> + < / intent - filter > <nl> + < / activity > <nl> + < / application > <nl> + <nl> + < / manifest > <nl> diff - - git a / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / KotlinExampleActivity . kt b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / KotlinExampleActivity . kt <nl> new file mode 100644 <nl> index 0000000 . . ca5d36b <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / KotlinExampleActivity . kt <nl> @ @ - 0 , 0 + 1 , 217 @ @ <nl> + / * <nl> + * Copyright 2014 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . examples . kotlin <nl> + <nl> + import android . app . Activity <nl> + import android . os . AsyncTask <nl> + import android . os . Bundle <nl> + import android . util . Log <nl> + import android . widget . LinearLayout <nl> + import android . widget . TextView <nl> + import io . realm . Realm <nl> + import io . realm . examples . kotlin . model . Cat <nl> + import io . realm . examples . kotlin . model . Dog <nl> + import io . realm . examples . kotlin . model . Person <nl> + import org . jetbrains . anko . async <nl> + import org . jetbrains . anko . uiThread <nl> + import kotlin . properties . Delegates <nl> + <nl> + <nl> + public class KotlinExampleActivity : Activity ( ) { <nl> + <nl> + companion object { <nl> + public val TAG : String = javaClass < KotlinExampleActivity > ( ) . getName ( ) <nl> + } <nl> + <nl> + private var rootLayout : LinearLayout by Delegates . notNull ( ) <nl> + private var realm : Realm by Delegates . notNull ( ) <nl> + <nl> + override fun onCreate ( savedInstanceState : Bundle ? ) { <nl> + super . onCreate ( savedInstanceState ) <nl> + setContentView ( R . layout . activity _ realm _ basic _ example ) <nl> + rootLayout = ( findViewById ( R . id . container ) as LinearLayout ) <nl> + rootLayout . removeAllViews ( ) <nl> + <nl> + / / These operations are small enough that <nl> + / / we can generally safely run them on the UI thread . <nl> + <nl> + / / Open the default realm ones for the UI thread . <nl> + realm = Realm . getInstance ( this ) <nl> + <nl> + basicCRUD ( realm ) <nl> + basicQuery ( realm ) <nl> + basicLinkQuery ( realm ) <nl> + <nl> + / / More complex operations can be executed on another thread , for example using <nl> + / / Anko ' s async extension method . <nl> + async { <nl> + var info : String <nl> + info = complexReadWrite ( ) <nl> + info + = complexQuery ( ) <nl> + <nl> + uiThread { <nl> + showStatus ( info ) <nl> + } <nl> + } <nl> + } <nl> + <nl> + override fun onDestroy ( ) { <nl> + super . onDestroy ( ) <nl> + realm . close ( ) / / Remember to close Realm when done . <nl> + } <nl> + <nl> + private fun showStatus ( txt : String ) { <nl> + Log . i ( TAG , txt ) <nl> + val tv = TextView ( this ) <nl> + tv . setText ( txt ) <nl> + rootLayout . addView ( tv ) <nl> + } <nl> + <nl> + private fun basicCRUD ( realm : Realm ) { <nl> + showStatus ( " Perform basic Create / Read / Update / Delete ( CRUD ) operations . . . " ) <nl> + <nl> + / / All writes must be wrapped in a transaction to facilitate safe multi threading <nl> + realm . beginTransaction ( ) <nl> + <nl> + / / Add a person <nl> + var person = realm . createObject ( javaClass < Person > ( ) ) <nl> + person . id = 1 <nl> + person . name = " Young Person " <nl> + person . age = 14 <nl> + <nl> + / / When the write transaction is committed , all changes a synced to disk . <nl> + realm . commitTransaction ( ) <nl> + <nl> + / / Find the first person ( no query conditions ) and read a field <nl> + person = realm . where ( javaClass < Person > ( ) ) . findFirst ( ) <nl> + showStatus ( person . name + " : " + person . age ) <nl> + <nl> + / / Update person in a write transaction <nl> + realm . beginTransaction ( ) <nl> + person . name = " Senior Person " <nl> + person . age = 99 <nl> + showStatus ( person . name + " got older : " + person . age ) <nl> + realm . commitTransaction ( ) <nl> + <nl> + / / Delete all persons <nl> + / / Using executeTransaction with a lambda reduces code size and makes it impossible <nl> + / / to forget to commit the transaction . <nl> + realm . executeTransaction { <nl> + realm . allObjects ( javaClass < Person > ( ) ) . clear ( ) <nl> + } <nl> + } <nl> + <nl> + private fun basicQuery ( realm : Realm ) { <nl> + showStatus ( " \ nPerforming basic Query operation . . . " ) <nl> + showStatus ( " Number of persons : $ { realm . allObjects ( javaClass < Person > ( ) ) . size ( ) } " ) <nl> + <nl> + val results = realm . where ( javaClass < Person > ( ) ) . equalTo ( " age " , 99 ) . findAll ( ) <nl> + <nl> + showStatus ( " Size of result set : " + results . size ( ) ) <nl> + } <nl> + <nl> + private fun basicLinkQuery ( realm : Realm ) { <nl> + showStatus ( " \ nPerforming basic Link Query operation . . . " ) <nl> + showStatus ( " Number of persons : $ { realm . allObjects ( javaClass < Person > ( ) ) . size ( ) } " ) <nl> + <nl> + val results = realm . where ( javaClass < Person > ( ) ) . equalTo ( " cats . name " , " Tiger " ) . findAll ( ) <nl> + <nl> + showStatus ( " Size of result set : $ { results . size ( ) } " ) <nl> + } <nl> + <nl> + private fun complexReadWrite ( ) : String { <nl> + var status = " \ nPerforming complex Read / Write operation . . . " <nl> + <nl> + / / Open the default realm . All threads must use it ' s own reference to the realm . <nl> + / / Those can not be transferred across threads . <nl> + val realm = Realm . getInstance ( this ) <nl> + <nl> + / / Add ten persons in one write transaction <nl> + realm . beginTransaction ( ) <nl> + val fido = realm . createObject ( javaClass < Dog > ( ) ) <nl> + fido . name = " fido " <nl> + for ( i in 0 . . 9 ) { <nl> + val person = realm . createObject ( javaClass < Person > ( ) ) <nl> + person . id = i . toLong ( ) <nl> + person . name = " Person no . $ i " <nl> + person . age = i <nl> + person . dog = fido <nl> + <nl> + / / The field tempReference is annotated with @ Ignore . <nl> + / / This means setTempReference sets the Person tempReference <nl> + / / field directly . The tempReference is NOT saved as part of <nl> + / / the RealmObject : <nl> + person . tempReference = 42 <nl> + <nl> + for ( j in 0 . . i - 1 ) { <nl> + val cat = realm . createObject ( javaClass < Cat > ( ) ) <nl> + cat . name = " Cat _ $ j " <nl> + person . cats . add ( cat ) <nl> + } <nl> + } <nl> + realm . commitTransaction ( ) <nl> + <nl> + / / Implicit read transactions allow you to access your objects <nl> + status + = " \ nNumber of persons : $ { realm . allObjects ( javaClass < Person > ( ) ) . size ( ) } " <nl> + <nl> + / / Iterate over all objects <nl> + for ( pers in realm . allObjects ( javaClass < Person > ( ) ) ) { <nl> + val dogName : String = pers ? . dog ? . name ? : " None " <nl> + <nl> + status + = " \ n $ { pers . name } : $ { pers . age } : $ dogName : $ { pers . cats . size ( ) } " <nl> + <nl> + / / The field tempReference is annotated with @ Ignore <nl> + / / Though we initially set its value to 42 , it has <nl> + / / not been saved as part of the Person RealmObject : <nl> + check ( pers . tempReference = = 0 ) <nl> + } <nl> + <nl> + / / Sorting <nl> + val sortedPersons = realm . allObjects ( javaClass < Person > ( ) ) <nl> + sortedPersons . sort ( " age " , false ) <nl> + check ( realm . allObjects ( javaClass < Person > ( ) ) . last ( ) . name = = sortedPersons . first ( ) . name ) <nl> + status + = " \ nSorting $ { sortedPersons . last ( ) . name } = = $ { realm . allObjects ( javaClass < Person > ( ) ) . first ( ) . name } " <nl> + <nl> + realm . close ( ) <nl> + return status <nl> + } <nl> + <nl> + private fun complexQuery ( ) : String { <nl> + var status = " \ n \ nPerforming complex Query operation . . . " <nl> + <nl> + / / Realm implements the Closable interface , therefore we can make use of Kotlin ' s built - in <nl> + / / extension method ' use ' ( pun intended ) . <nl> + Realm . getInstance ( this ) . use { <nl> + / / ' it ' is the implicit lambda parameter of type Realm <nl> + status + = " \ nNumber of persons : $ { it . allObjects ( javaClass < Person > ( ) ) . size ( ) } " <nl> + <nl> + / / Find all persons where age between 7 and 9 and name begins with " Person " . <nl> + val results = it <nl> + . where ( javaClass < Person > ( ) ) <nl> + . between ( " age " , 7 , 9 ) / / Notice implicit " and " operation <nl> + . beginsWith ( " name " , " Person " ) <nl> + . findAll ( ) <nl> + <nl> + status + = " \ nSize of result set : $ { results . size ( ) } " <nl> + <nl> + } <nl> + <nl> + return status <nl> + } <nl> + <nl> + <nl> + } <nl> diff - - git a / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Cat . kt b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Cat . kt <nl> new file mode 100644 <nl> index 0000000 . . 0b4bbdc <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Cat . kt <nl> @ @ - 0 , 0 + 1 , 25 @ @ <nl> + / * <nl> + * Copyright 2014 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . examples . kotlin . model <nl> + <nl> + import io . realm . RealmObject <nl> + import io . realm . annotations . RealmClass <nl> + <nl> + @ RealmClass <nl> + public open class Cat : RealmObject ( ) { <nl> + public open var name : String = " " <nl> + } <nl> diff - - git a / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Dog . kt b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Dog . kt <nl> new file mode 100644 <nl> index 0000000 . . 60b5e36 <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Dog . kt <nl> @ @ - 0 , 0 + 1 , 25 @ @ <nl> + / * <nl> + * Copyright 2014 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . examples . kotlin . model <nl> + <nl> + import io . realm . RealmObject <nl> + import io . realm . annotations . RealmClass <nl> + <nl> + @ RealmClass <nl> + public open class Dog : RealmObject ( ) { <nl> + public open var name : String = " " <nl> + } <nl> diff - - git a / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Person . kt b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Person . kt <nl> new file mode 100644 <nl> index 0000000 . . cf83950 <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Person . kt <nl> @ @ - 0 , 0 + 1 , 62 @ @ <nl> + / * <nl> + * Copyright 2014 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm . examples . kotlin . model <nl> + <nl> + import io . realm . RealmList <nl> + import io . realm . RealmObject <nl> + import io . realm . annotations . Ignore <nl> + import io . realm . annotations . PrimaryKey <nl> + import io . realm . annotations . RealmClass <nl> + <nl> + / / Your model has to extend RealmObject and must have the @ RealmClass annotation set . <nl> + <nl> + / / ( Inherited annotations don ' t work for Kotlin 0 . 12 . 213 , check <nl> + / / https : / / youtrack . jetbrains . com / issue / KT - 7890 for progress on this issue . When this is resolved , <nl> + / / the @ RealmClass annotation can be omitted ) <nl> + <nl> + / / Furthermore , the class and all of the properties must be annotated with open <nl> + / / ( Kotlin classes and methods are final by default ) . <nl> + @ RealmClass <nl> + public open class Person ( <nl> + / / You can put properties in the constructor as long as all of them are initialized with <nl> + / / default values . This ensures that an empty constructor is generated . <nl> + <nl> + / / All properties are by default persisted . <nl> + <nl> + / / Properties can be annotated with PrimaryKey or Index <nl> + <nl> + / / If you use non - nullable types , properties must be initialized with non - null values <nl> + <nl> + @ PrimaryKey public open var name : String = " " , <nl> + <nl> + public open var age : Int = 0 , <nl> + <nl> + / / Other objects in a one - to - one relation must also subclass RealmObject <nl> + public open var dog : Dog ? = null , <nl> + <nl> + / / One - to - many relations is simply a RealmList of the objects which also subclass RealmObject <nl> + public open var cats : RealmList < Cat > = RealmList ( ) , <nl> + <nl> + / / You can instruct Realm to ignore a field and not persist it . <nl> + @ Ignore public open var tempReference : Int = 0 , <nl> + <nl> + public open var id : Long = 0 <nl> + ) : RealmObject ( ) { <nl> + / / The Kotlin compiler generates standard getters and setters . <nl> + / / Realm will overload them and code inside them is ignored . <nl> + / / So if you prefer you can also just have empty abstract methods . <nl> + } <nl> diff - - git a / examples / kotlinExample / src / main / res / drawable - xxhdpi / ic _ launcher . png b / examples / kotlinExample / src / main / res / drawable - xxhdpi / ic _ launcher . png <nl> new file mode 100644 <nl> index 0000000 . . 4330211 <nl> Binary files / dev / null and b / examples / kotlinExample / src / main / res / drawable - xxhdpi / ic _ launcher . png differ <nl> diff - - git a / examples / kotlinExample / src / main / res / layout / activity _ realm _ basic _ example . xml b / examples / kotlinExample / src / main / res / layout / activity _ realm _ basic _ example . xml <nl> new file mode 100644 <nl> index 0000000 . . f7891e6 <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / src / main / res / layout / activity _ realm _ basic _ example . xml <nl> @ @ - 0 , 0 + 1 , 29 @ @ <nl> + < ScrollView <nl> + xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> + xmlns : tools = " http : / / schemas . android . com / tools " <nl> + android : paddingLeft = " @ dimen / activity _ horizontal _ margin " <nl> + android : paddingRight = " @ dimen / activity _ horizontal _ margin " <nl> + android : paddingTop = " @ dimen / activity _ vertical _ margin " <nl> + android : paddingBottom = " @ dimen / activity _ vertical _ margin " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " match _ parent " > <nl> + < LinearLayout <nl> + android : orientation = " vertical " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " wrap _ content " > <nl> + < TextView <nl> + android : gravity = " center _ horizontal " <nl> + android : text = " Status Output . . . " <nl> + android : textStyle = " bold " <nl> + android : textSize = " 18sp " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " wrap _ content " / > <nl> + < LinearLayout <nl> + android : id = " @ + id / container " <nl> + android : layout _ width = " match _ parent " <nl> + android : layout _ height = " match _ parent " <nl> + android : paddingTop = " 10sp " <nl> + android : orientation = " vertical " <nl> + tools : context = " . RealmIntroExample " / > <nl> + < / LinearLayout > <nl> + < / ScrollView > <nl> diff - - git a / examples / kotlinExample / src / main / res / values - w820dp / dimens . xml b / examples / kotlinExample / src / main / res / values - w820dp / dimens . xml <nl> new file mode 100644 <nl> index 0000000 . . 63fc816 <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / src / main / res / values - w820dp / dimens . xml <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + < resources > <nl> + < ! - - Example customization of dimensions originally defined in res / values / dimens . xml <nl> + ( such as screen margins ) for screens with more than 820dp of available width . This <nl> + would include 7 " and 10 " devices in landscape ( ~ 960dp and ~ 1280dp respectively ) . - - > <nl> + < dimen name = " activity _ horizontal _ margin " > 64dp < / dimen > <nl> + < / resources > <nl> diff - - git a / examples / kotlinExample / src / main / res / values / dimens . xml b / examples / kotlinExample / src / main / res / values / dimens . xml <nl> new file mode 100644 <nl> index 0000000 . . 47c8224 <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / src / main / res / values / dimens . xml <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + < resources > <nl> + < ! - - Default screen margins , per the Android Design guidelines . - - > <nl> + < dimen name = " activity _ horizontal _ margin " > 16dp < / dimen > <nl> + < dimen name = " activity _ vertical _ margin " > 16dp < / dimen > <nl> + < / resources > <nl> diff - - git a / examples / kotlinExample / src / main / res / values / strings . xml b / examples / kotlinExample / src / main / res / values / strings . xml <nl> new file mode 100644 <nl> index 0000000 . . 963831f <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / src / main / res / values / strings . xml <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> + < resources > <nl> + <nl> + < string name = " app _ name " > Kotlin example < / string > <nl> + < string name = " hello _ world " > Hello world ! < / string > <nl> + < string name = " action _ settings " > Settings < / string > <nl> + <nl> + < / resources > <nl> diff - - git a / examples / kotlinExample / src / main / res / values / styles . xml b / examples / kotlinExample / src / main / res / values / styles . xml <nl> new file mode 100644 <nl> index 0000000 . . ff6c9d2 <nl> - - - / dev / null <nl> + + + b / examples / kotlinExample / src / main / res / values / styles . xml <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + < resources > <nl> + <nl> + < ! - - Base application theme . - - > <nl> + < style name = " AppTheme " parent = " android : Theme . Holo . Light . DarkActionBar " > <nl> + < ! - - Customize your theme here . - - > <nl> + < / style > <nl> + <nl> + < / resources > <nl> diff - - git a / settings . gradle b / settings . gradle <nl> index d0eb928 . . c3be0d4 100644 <nl> - - - a / settings . gradle <nl> + + + b / settings . gradle <nl> @ @ - 8 , 7 + 8 , 8 @ @ include ' : introExample ' , <nl> ' : migrationExample ' , <nl> ' : adapterExample ' , <nl> ' : threadExample ' , <nl> - 	 	 ' : jsonExample ' <nl> + 	 	 ' : jsonExample ' , <nl> + ' : kotlinExample ' <nl> <nl> <nl> project ( ' : introExample ' ) . projectDir = new File ( ' examples / introExample ' ) <nl> @ @ - 18 , 6 + 19 , 7 @ @ project ( ' : migrationExample ' ) . projectDir = new File ( ' examples / migrationExample ' ) <nl> project ( ' : adapterExample ' ) . projectDir = new File ( ' examples / adapterExample ' ) <nl> project ( ' : threadExample ' ) . projectDir = new File ( ' examples / threadExample ' ) <nl> project ( ' : jsonExample ' ) . projectDir = new File ( ' examples / jsonExample ' ) <nl> + project ( ' : kotlinExample ' ) . projectDir = new File ( ' examples / kotlinExample ' ) <nl> <nl> / / Experimental projects <nl> include ' : pathExperiment '

TEST DIFF:
diff - - git a / realm / build . gradle b / realm / build . gradle 
 index e35f258 . . f2eead6 100644 
 - - - a / realm / build . gradle 
 + + + b / realm / build . gradle 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 buildscript { 
 + ext . kotlin _ version = ' 1 . 1 . 2 - 4 ' 
 repositories { 
 mavenLocal ( ) 
 jcenter ( ) 
 @ @ - 17 , 6 + 18 , 7 @ @ buildscript { 
 classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 6 ' 
 classpath " io . realm : realm - transformer : $ { file ( ' . . / version . txt ' ) . text . trim ( ) } " 
 classpath ' net . ltgt . gradle : gradle - errorprone - plugin : 0 . 0 . 10 ' 
 + classpath " org . jetbrains . kotlin : kotlin - gradle - plugin : $ kotlin _ version " 
 } 
 } 
 
 diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index e5626b9 . . d567cbe 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 import java . security . MessageDigest 
 
 apply plugin : ' com . android . library ' 
 + apply plugin : ' kotlin - android ' 
 apply plugin : ' com . github . dcendents . android - maven ' 
 apply plugin : ' maven - publish ' 
 apply plugin : ' com . jfrog . artifactory ' 
 @ @ - 79 , 6 + 80 , 9 @ @ android { 
 } 
 
 sourceSets { 
 + androidTest { 
 + java . srcDirs + = ' src / androidTest / kotlin ' 
 + } 
 androidTestObjectServer { 
 java . srcDirs + = ' src / syncIntegrationTest / java ' 
 assets . srcDirs + = [ ' src / syncIntegrationTest / assets / ' ] 
 @ @ - 137 , 6 + 141 , 7 @ @ android . registerTransform ( new RealmTransformer ( ) ) 
 
 repositories { 
 maven { url " https : / / jitpack . io " } 
 + mavenCentral ( ) 
 } 
 
 dependencies { 
 @ @ - 147 , 10 + 152 , 10 @ @ dependencies { 
 compile " io . realm : realm - annotations : $ { version } " 
 compile ' com . getkeepsafe . relinker : relinker : 1 . 2 . 2 ' 
 
 - objectServerAnnotationProcessor project ( ' : realm - annotations - processor ' ) 
 + kaptObjectServer project ( ' : realm - annotations - processor ' ) 
 objectServerCompile ' com . squareup . okhttp3 : okhttp : 3 . 4 . 1 ' 
 
 - androidTestAnnotationProcessor project ( ' : realm - annotations - processor ' ) 
 + kaptAndroidTest project ( ' : realm - annotations - processor ' ) 
 androidTestCompile fileTree ( dir : ' testLibs ' , include : [ ' * . jar ' ] ) 
 androidTestCompile ' io . reactivex : rxjava : 1 . 1 . 0 ' 
 androidTestCompile ' com . android . support : support - annotations : 25 . 3 . 1 ' 
 @ @ - 159 , 6 + 164 , 8 @ @ dependencies { 
 androidTestCompile ' com . google . dexmaker : dexmaker : 1 . 2 ' 
 androidTestCompile ' com . google . dexmaker : dexmaker - mockito : 1 . 2 ' 
 androidTestCompile ' org . hamcrest : hamcrest - library : 1 . 3 ' 
 + androidTestCompile " org . jetbrains . kotlin : kotlin - stdlib - jre7 : $ kotlin _ version " 
 + androidTestCompile " org . jetbrains . kotlin : kotlin - reflect : $ kotlin _ version " 
 } 
 
 task sourcesJar ( type : Jar ) { 
 diff - - git a / realm / realm - library / src / androidTest / kotlin / io / realm / KotlinSchemaTests . kt b / realm / realm - library / src / androidTest / kotlin / io / realm / KotlinSchemaTests . kt 
 new file mode 100644 
 index 0000000 . . b851ab4 
 - - - / dev / null 
 + + + b / realm / realm - library / src / androidTest / kotlin / io / realm / KotlinSchemaTests . kt 
 @ @ - 0 , 0 + 1 , 71 @ @ 
 + / * 
 + * Copyright 2017 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + package io . realm 
 + 
 + import android . support . test . runner . AndroidJUnit4 
 + import io . realm . entities . AllKotlinTypes 
 + import io . realm . rule . TestRealmConfigurationFactory 
 + import org . junit . After 
 + import org . junit . Assert . assertFalse 
 + import org . junit . Assert . assertTrue 
 + import org . junit . Before 
 + import org . junit . Rule 
 + import org . junit . Test 
 + import org . junit . runner . RunWith 
 + import kotlin . reflect . full . memberProperties 
 + 
 + / * * 
 + * This class tests how Kotlin classes are interpreted by Realm and exposed in the RealmSchema 
 + * / 
 + @ RunWith ( AndroidJUnit4 : : class ) 
 + class KotlinSchemaTests { 
 + 
 + @ get : Rule 
 + val configFactory = TestRealmConfigurationFactory ( ) 
 + 
 + private lateinit var realm : Realm 
 + 
 + @ Before 
 + fun setUp ( ) { 
 + realm = Realm . getInstance ( configFactory . createConfiguration ( ) ) 
 + } 
 + 
 + @ After 
 + fun tearDown ( ) { 
 + realm . close ( ) 
 + } 
 + 
 + @ Test 
 + fun kotlinTypeNonNull ( ) { 
 + val objSchema = realm . getSchema ( ) . get ( AllKotlinTypes : : class . simpleName ) 
 + 
 + / / Document current nullability . Ideally all should be non - nullable . This is currently 
 + / / not the case . 
 + / / TODO We should fix this . Tracked by https : / / github . com / realm / realm - java / issues / 4701 
 + assertTrue ( objSchema . isNullable ( AllKotlinTypes : : nonNullBinary . name ) ) ; 
 + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullBoolean . name ) ) ; 
 + assertTrue ( objSchema . isNullable ( AllKotlinTypes : : nonNullString . name ) ) ; 
 + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullLong . name ) ) ; 
 + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullInt . name ) ) ; 
 + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullShort . name ) ) ; 
 + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullByte . name ) ) ; 
 + assertTrue ( objSchema . isNullable ( AllKotlinTypes : : nonNullDate . name ) ) ; 
 + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullDouble . name ) ) ; 
 + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullFloat . name ) ) ; 
 + assertFalse ( objSchema . isNullable ( AllKotlinTypes : : nonNullList . name ) ) ; 
 + assertTrue ( objSchema . isNullable ( AllKotlinTypes : : nonNullObject . name ) ) ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / realm / realm - library / src / androidTest / kotlin / io / realm / entities / AllKotlinTypes . kt b / realm / realm - library / src / androidTest / kotlin / io / realm / entities / AllKotlinTypes . kt 
 new file mode 100644 
 index 0000000 . . 527f8d9 
 - - - / dev / null 
 + + + b / realm / realm - library / src / androidTest / kotlin / io / realm / entities / AllKotlinTypes . kt 
 @ @ - 0 , 0 + 1 , 80 @ @ 
 + / * 
 + * Copyright 2017 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . entities 
 + 
 + import io . realm . RealmList 
 + import io . realm . RealmObject 
 + import io . realm . RealmResults 
 + import io . realm . annotations . Ignore 
 + import io . realm . annotations . Index 
 + import io . realm . annotations . LinkingObjects 
 + import io . realm . annotations . PrimaryKey 
 + import java . util . * 
 + 
 + open class AllKotlinTypes : RealmObject ( ) { 
 + 
 + @ Ignore 
 + var ignoredString : String = " " 
 + var nullString : String ? = null 
 + var nonNullString : String = " " 
 + @ Index 
 + var indexedString : String = " " 
 + 
 + var nullLong : Long ? = null 
 + @ PrimaryKey 
 + var nonNullLong : Long = 0 
 + 
 + var nullShort : Short ? = null 
 + var nonNullShort : Short = 0 
 + 
 + var nullInt : Int ? = null 
 + var nonNullInt : Int = 0 
 + 
 + var nullByte : Byte ? = null 
 + var nonNullByte : Byte = 0 
 + 
 + var nullFloat : Float ? = null 
 + var nonNullFloat : Float = 0F 
 + 
 + var nullDouble : Double ? = null 
 + var nonNullDouble : Double = 0 . 0 / / Double by default 
 + 
 + var nullBoolean : Boolean ? = null 
 + var nonNullBoolean : Boolean = false 
 + 
 + var nullDate : Date ? = null 
 + var nonNullDate : Date = Date ( ) 
 + 
 + var nullBinary : ByteArray ? = null 
 + var nonNullBinary : ByteArray = ByteArray ( 0 ) 
 + 
 + / / This turns into Byte [ ] which we dont support for some reason ? 
 + / / var nullBoxedBinary : Array < Byte > ? = null 
 + / / var nonNullBoxedBinary : Array < Byte > = emptyArray ( ) 
 + 
 + var nullObject : AllKotlinTypes ? = null 
 + var nonNullObject : AllKotlinTypes = AllKotlinTypes ( ) 
 + 
 + var nullList : RealmList < AllKotlinTypes > ? = null / / This should not be allowed 
 + var nonNullList : RealmList < AllKotlinTypes > = RealmList ( ) 
 + 
 + @ LinkingObjects ( " nonNullObject " ) 
 + val objectParents : RealmResults < AllKotlinTypes > ? = null ; 
 + 
 + @ LinkingObjects ( " nonNullList " ) 
 + val listParents : RealmResults < AllKotlinTypes > ? = null ; 
 + }

NEAREST DIFF:
diff - - git a / examples / kotlinExample / . gitignore b / examples / kotlinExample / . gitignore 
 new file mode 100644 
 index 0000000 . . 796b96d 
 - - - / dev / null 
 + + + b / examples / kotlinExample / . gitignore 
 @ @ - 0 , 0 + 1 @ @ 
 + / build 
 diff - - git a / examples / kotlinExample / build . gradle b / examples / kotlinExample / build . gradle 
 new file mode 100644 
 index 0000000 . . 3aef7cd 
 - - - / dev / null 
 + + + b / examples / kotlinExample / build . gradle 
 @ @ - 0 , 0 + 1 , 47 @ @ 
 + apply plugin : ' com . android . application ' 
 + apply plugin : ' kotlin - android ' 
 + apply plugin : ' android - command ' 
 + 
 + android { 
 + compileSdkVersion 19 
 + buildToolsVersion " 20 . 0 . 0 " 
 + defaultConfig { 
 + applicationId ' io . realm . examples . kotlin ' 
 + minSdkVersion 15 
 + targetSdkVersion 19 
 + versionCode 1 
 + versionName " 1 . 0 " 
 + } 
 + 
 + buildTypes { 
 + release { 
 + minifyEnabled false 
 + } 
 + } 
 + 
 + command { 
 + events 2000 
 + } 
 + } 
 + 
 + dependencies { 
 + compile " org . jetbrains . kotlin : kotlin - stdlib : $ kotlin _ version " 
 + compile ' org . jetbrains . anko : anko : 0 . 6 . 2 - 19s ' 
 + compile files ( " . . / . . / realm / build / libs / realm - $ { version } . jar " ) 
 + 
 + kapt files ( " . . / . . / realm / build / libs / realm - $ { version } . jar " ) 
 + } 
 + 
 + buildscript { 
 + ext . kotlin _ version = ' 0 . 12 . 213 ' 
 + repositories { 
 + mavenCentral ( ) 
 + } 
 + dependencies { 
 + classpath " org . jetbrains . kotlin : kotlin - gradle - plugin : $ kotlin _ version " 
 + } 
 + } 
 + 
 + repositories { 
 + mavenCentral ( ) 
 + } 
 diff - - git a / examples / kotlinExample / proguard - rules . pro b / examples / kotlinExample / proguard - rules . pro 
 new file mode 100644 
 index 0000000 . . 200fdff 
 - - - / dev / null 
 + + + b / examples / kotlinExample / proguard - rules . pro 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + # Add project specific ProGuard rules here . 
 + # By default , the flags in this file are appended to flags specified 
 + # in / usr / local / Cellar / android - sdk / 22 . 6 . 2 / tools / proguard / proguard - android . txt 
 + # You can edit the include path and order by changing the proguardFiles 
 + # directive in build . gradle . 
 + # 
 + # For more details , see 
 + # http : / / developer . android . com / guide / developing / tools / proguard . html 
 + 
 + # Add any project specific keep options here : 
 + 
 + # If your project uses WebView with JS , uncomment the following 
 + # and specify the fully qualified class name to the JavaScript interface 
 + # class : 
 + # - keepclassmembers class fqcn . of . javascript . interface . for . webview { 
 + # public * ; 
 + # } 
 diff - - git a / examples / kotlinExample / src / main / AndroidManifest . xml b / examples / kotlinExample / src / main / AndroidManifest . xml 
 new file mode 100644 
 index 0000000 . . 877e978 
 - - - / dev / null 
 + + + b / examples / kotlinExample / src / main / AndroidManifest . xml 
 @ @ - 0 , 0 + 1 , 20 @ @ 
 + < manifest package = " io . realm . examples . kotlin " 
 + xmlns : android = " http : / / schemas . android . com / apk / res / android " > 
 + 
 + < application 
 + android : allowBackup = " true " 
 + android : icon = " @ drawable / ic _ launcher " 
 + android : label = " @ string / app _ name " 
 + android : theme = " @ style / AppTheme " > 
 + < activity 
 + android : name = " . KotlinExampleActivity " 
 + android : label = " @ string / app _ name " > 
 + < intent - filter > 
 + < action android : name = " android . intent . action . MAIN " / > 
 + 
 + < category android : name = " android . intent . category . LAUNCHER " / > 
 + < / intent - filter > 
 + < / activity > 
 + < / application > 
 + 
 + < / manifest > 
 diff - - git a / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / KotlinExampleActivity . kt b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / KotlinExampleActivity . kt 
 new file mode 100644 
 index 0000000 . . ca5d36b 
 - - - / dev / null 
 + + + b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / KotlinExampleActivity . kt 
 @ @ - 0 , 0 + 1 , 217 @ @ 
 + / * 
 + * Copyright 2014 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . examples . kotlin 
 + 
 + import android . app . Activity 
 + import android . os . AsyncTask 
 + import android . os . Bundle 
 + import android . util . Log 
 + import android . widget . LinearLayout 
 + import android . widget . TextView 
 + import io . realm . Realm 
 + import io . realm . examples . kotlin . model . Cat 
 + import io . realm . examples . kotlin . model . Dog 
 + import io . realm . examples . kotlin . model . Person 
 + import org . jetbrains . anko . async 
 + import org . jetbrains . anko . uiThread 
 + import kotlin . properties . Delegates 
 + 
 + 
 + public class KotlinExampleActivity : Activity ( ) { 
 + 
 + companion object { 
 + public val TAG : String = javaClass < KotlinExampleActivity > ( ) . getName ( ) 
 + } 
 + 
 + private var rootLayout : LinearLayout by Delegates . notNull ( ) 
 + private var realm : Realm by Delegates . notNull ( ) 
 + 
 + override fun onCreate ( savedInstanceState : Bundle ? ) { 
 + super . onCreate ( savedInstanceState ) 
 + setContentView ( R . layout . activity _ realm _ basic _ example ) 
 + rootLayout = ( findViewById ( R . id . container ) as LinearLayout ) 
 + rootLayout . removeAllViews ( ) 
 + 
 + / / These operations are small enough that 
 + / / we can generally safely run them on the UI thread . 
 + 
 + / / Open the default realm ones for the UI thread . 
 + realm = Realm . getInstance ( this ) 
 + 
 + basicCRUD ( realm ) 
 + basicQuery ( realm ) 
 + basicLinkQuery ( realm ) 
 + 
 + / / More complex operations can be executed on another thread , for example using 
 + / / Anko ' s async extension method . 
 + async { 
 + var info : String 
 + info = complexReadWrite ( ) 
 + info + = complexQuery ( ) 
 + 
 + uiThread { 
 + showStatus ( info ) 
 + } 
 + } 
 + } 
 + 
 + override fun onDestroy ( ) { 
 + super . onDestroy ( ) 
 + realm . close ( ) / / Remember to close Realm when done . 
 + } 
 + 
 + private fun showStatus ( txt : String ) { 
 + Log . i ( TAG , txt ) 
 + val tv = TextView ( this ) 
 + tv . setText ( txt ) 
 + rootLayout . addView ( tv ) 
 + } 
 + 
 + private fun basicCRUD ( realm : Realm ) { 
 + showStatus ( " Perform basic Create / Read / Update / Delete ( CRUD ) operations . . . " ) 
 + 
 + / / All writes must be wrapped in a transaction to facilitate safe multi threading 
 + realm . beginTransaction ( ) 
 + 
 + / / Add a person 
 + var person = realm . createObject ( javaClass < Person > ( ) ) 
 + person . id = 1 
 + person . name = " Young Person " 
 + person . age = 14 
 + 
 + / / When the write transaction is committed , all changes a synced to disk . 
 + realm . commitTransaction ( ) 
 + 
 + / / Find the first person ( no query conditions ) and read a field 
 + person = realm . where ( javaClass < Person > ( ) ) . findFirst ( ) 
 + showStatus ( person . name + " : " + person . age ) 
 + 
 + / / Update person in a write transaction 
 + realm . beginTransaction ( ) 
 + person . name = " Senior Person " 
 + person . age = 99 
 + showStatus ( person . name + " got older : " + person . age ) 
 + realm . commitTransaction ( ) 
 + 
 + / / Delete all persons 
 + / / Using executeTransaction with a lambda reduces code size and makes it impossible 
 + / / to forget to commit the transaction . 
 + realm . executeTransaction { 
 + realm . allObjects ( javaClass < Person > ( ) ) . clear ( ) 
 + } 
 + } 
 + 
 + private fun basicQuery ( realm : Realm ) { 
 + showStatus ( " \ nPerforming basic Query operation . . . " ) 
 + showStatus ( " Number of persons : $ { realm . allObjects ( javaClass < Person > ( ) ) . size ( ) } " ) 
 + 
 + val results = realm . where ( javaClass < Person > ( ) ) . equalTo ( " age " , 99 ) . findAll ( ) 
 + 
 + showStatus ( " Size of result set : " + results . size ( ) ) 
 + } 
 + 
 + private fun basicLinkQuery ( realm : Realm ) { 
 + showStatus ( " \ nPerforming basic Link Query operation . . . " ) 
 + showStatus ( " Number of persons : $ { realm . allObjects ( javaClass < Person > ( ) ) . size ( ) } " ) 
 + 
 + val results = realm . where ( javaClass < Person > ( ) ) . equalTo ( " cats . name " , " Tiger " ) . findAll ( ) 
 + 
 + showStatus ( " Size of result set : $ { results . size ( ) } " ) 
 + } 
 + 
 + private fun complexReadWrite ( ) : String { 
 + var status = " \ nPerforming complex Read / Write operation . . . " 
 + 
 + / / Open the default realm . All threads must use it ' s own reference to the realm . 
 + / / Those can not be transferred across threads . 
 + val realm = Realm . getInstance ( this ) 
 + 
 + / / Add ten persons in one write transaction 
 + realm . beginTransaction ( ) 
 + val fido = realm . createObject ( javaClass < Dog > ( ) ) 
 + fido . name = " fido " 
 + for ( i in 0 . . 9 ) { 
 + val person = realm . createObject ( javaClass < Person > ( ) ) 
 + person . id = i . toLong ( ) 
 + person . name = " Person no . $ i " 
 + person . age = i 
 + person . dog = fido 
 + 
 + / / The field tempReference is annotated with @ Ignore . 
 + / / This means setTempReference sets the Person tempReference 
 + / / field directly . The tempReference is NOT saved as part of 
 + / / the RealmObject : 
 + person . tempReference = 42 
 + 
 + for ( j in 0 . . i - 1 ) { 
 + val cat = realm . createObject ( javaClass < Cat > ( ) ) 
 + cat . name = " Cat _ $ j " 
 + person . cats . add ( cat ) 
 + } 
 + } 
 + realm . commitTransaction ( ) 
 + 
 + / / Implicit read transactions allow you to access your objects 
 + status + = " \ nNumber of persons : $ { realm . allObjects ( javaClass < Person > ( ) ) . size ( ) } " 
 + 
 + / / Iterate over all objects 
 + for ( pers in realm . allObjects ( javaClass < Person > ( ) ) ) { 
 + val dogName : String = pers ? . dog ? . name ? : " None " 
 + 
 + status + = " \ n $ { pers . name } : $ { pers . age } : $ dogName : $ { pers . cats . size ( ) } " 
 + 
 + / / The field tempReference is annotated with @ Ignore 
 + / / Though we initially set its value to 42 , it has 
 + / / not been saved as part of the Person RealmObject : 
 + check ( pers . tempReference = = 0 ) 
 + } 
 + 
 + / / Sorting 
 + val sortedPersons = realm . allObjects ( javaClass < Person > ( ) ) 
 + sortedPersons . sort ( " age " , false ) 
 + check ( realm . allObjects ( javaClass < Person > ( ) ) . last ( ) . name = = sortedPersons . first ( ) . name ) 
 + status + = " \ nSorting $ { sortedPersons . last ( ) . name } = = $ { realm . allObjects ( javaClass < Person > ( ) ) . first ( ) . name } " 
 + 
 + realm . close ( ) 
 + return status 
 + } 
 + 
 + private fun complexQuery ( ) : String { 
 + var status = " \ n \ nPerforming complex Query operation . . . " 
 + 
 + / / Realm implements the Closable interface , therefore we can make use of Kotlin ' s built - in 
 + / / extension method ' use ' ( pun intended ) . 
 + Realm . getInstance ( this ) . use { 
 + / / ' it ' is the implicit lambda parameter of type Realm 
 + status + = " \ nNumber of persons : $ { it . allObjects ( javaClass < Person > ( ) ) . size ( ) } " 
 + 
 + / / Find all persons where age between 7 and 9 and name begins with " Person " . 
 + val results = it 
 + . where ( javaClass < Person > ( ) ) 
 + . between ( " age " , 7 , 9 ) / / Notice implicit " and " operation 
 + . beginsWith ( " name " , " Person " ) 
 + . findAll ( ) 
 + 
 + status + = " \ nSize of result set : $ { results . size ( ) } " 
 + 
 + } 
 + 
 + return status 
 + } 
 + 
 + 
 + } 
 diff - - git a / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Cat . kt b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Cat . kt 
 new file mode 100644 
 index 0000000 . . 0b4bbdc 
 - - - / dev / null 
 + + + b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Cat . kt 
 @ @ - 0 , 0 + 1 , 25 @ @ 
 + / * 
 + * Copyright 2014 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . examples . kotlin . model 
 + 
 + import io . realm . RealmObject 
 + import io . realm . annotations . RealmClass 
 + 
 + @ RealmClass 
 + public open class Cat : RealmObject ( ) { 
 + public open var name : String = " " 
 + } 
 diff - - git a / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Dog . kt b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Dog . kt 
 new file mode 100644 
 index 0000000 . . 60b5e36 
 - - - / dev / null 
 + + + b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Dog . kt 
 @ @ - 0 , 0 + 1 , 25 @ @ 
 + / * 
 + * Copyright 2014 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . examples . kotlin . model 
 + 
 + import io . realm . RealmObject 
 + import io . realm . annotations . RealmClass 
 + 
 + @ RealmClass 
 + public open class Dog : RealmObject ( ) { 
 + public open var name : String = " " 
 + } 
 diff - - git a / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Person . kt b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Person . kt 
 new file mode 100644 
 index 0000000 . . cf83950 
 - - - / dev / null 
 + + + b / examples / kotlinExample / src / main / java / io / realm / examples / kotlin / model / Person . kt 
 @ @ - 0 , 0 + 1 , 62 @ @ 
 + / * 
 + * Copyright 2014 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm . examples . kotlin . model 
 + 
 + import io . realm . RealmList 
 + import io . realm . RealmObject 
 + import io . realm . annotations . Ignore 
 + import io . realm . annotations . PrimaryKey 
 + import io . realm . annotations . RealmClass 
 + 
 + / / Your model has to extend RealmObject and must have the @ RealmClass annotation set . 
 + 
 + / / ( Inherited annotations don ' t work for Kotlin 0 . 12 . 213 , check 
 + / / https : / / youtrack . jetbrains . com / issue / KT - 7890 for progress on this issue . When this is resolved , 
 + / / the @ RealmClass annotation can be omitted ) 
 + 
 + / / Furthermore , the class and all of the properties must be annotated with open 
 + / / ( Kotlin classes and methods are final by default ) . 
 + @ RealmClass 
 + public open class Person ( 
 + / / You can put properties in the constructor as long as all of them are initialized with 
 + / / default values . This ensures that an empty constructor is generated . 
 + 
 + / / All properties are by default persisted . 
 + 
 + / / Properties can be annotated with PrimaryKey or Index 
 + 
 + / / If you use non - nullable types , properties must be initialized with non - null values 
 + 
 + @ PrimaryKey public open var name : String = " " , 
 + 
 + public open var age : Int = 0 , 
 + 
 + / / Other objects in a one - to - one relation must also subclass RealmObject 
 + public open var dog : Dog ? = null , 
 + 
 + / / One - to - many relations is simply a RealmList of the objects which also subclass RealmObject 
 + public open var cats : RealmList < Cat > = RealmList ( ) , 
 + 
 + / / You can instruct Realm to ignore a field and not persist it . 
 + @ Ignore public open var tempReference : Int = 0 , 
 + 
 + public open var id : Long = 0 
 + ) : RealmObject ( ) { 
 + / / The Kotlin compiler generates standard getters and setters . 
 + / / Realm will overload them and code inside them is ignored . 
 + / / So if you prefer you can also just have empty abstract methods . 
 + } 
 diff - - git a / examples / kotlinExample / src / main / res / drawable - xxhdpi / ic _ launcher . png b / examples / kotlinExample / src / main / res / drawable - xxhdpi / ic _ launcher . png 
 new file mode 100644 
 index 0000000 . . 4330211 
 Binary files / dev / null and b / examples / kotlinExample / src / main / res / drawable - xxhdpi / ic _ launcher . png differ 
 diff - - git a / examples / kotlinExample / src / main / res / layout / activity _ realm _ basic _ example . xml b / examples / kotlinExample / src / main / res / layout / activity _ realm _ basic _ example . xml 
 new file mode 100644 
 index 0000000 . . f7891e6 
 - - - / dev / null 
 + + + b / examples / kotlinExample / src / main / res / layout / activity _ realm _ basic _ example . xml 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + < ScrollView 
 + xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + xmlns : tools = " http : / / schemas . android . com / tools " 
 + android : paddingLeft = " @ dimen / activity _ horizontal _ margin " 
 + android : paddingRight = " @ dimen / activity _ horizontal _ margin " 
 + android : paddingTop = " @ dimen / activity _ vertical _ margin " 
 + android : paddingBottom = " @ dimen / activity _ vertical _ margin " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " > 
 + < LinearLayout 
 + android : orientation = " vertical " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " wrap _ content " > 
 + < TextView 
 + android : gravity = " center _ horizontal " 
 + android : text = " Status Output . . . " 
 + android : textStyle = " bold " 
 + android : textSize = " 18sp " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " wrap _ content " / > 
 + < LinearLayout 
 + android : id = " @ + id / container " 
 + android : layout _ width = " match _ parent " 
 + android : layout _ height = " match _ parent " 
 + android : paddingTop = " 10sp " 
 + android : orientation = " vertical " 
 + tools : context = " . RealmIntroExample " / > 
 + < / LinearLayout > 
 + < / ScrollView > 
 diff - - git a / examples / kotlinExample / src / main / res / values - w820dp / dimens . xml b / examples / kotlinExample / src / main / res / values - w820dp / dimens . xml 
 new file mode 100644 
 index 0000000 . . 63fc816 
 - - - / dev / null 
 + + + b / examples / kotlinExample / src / main / res / values - w820dp / dimens . xml 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + < resources > 
 + < ! - - Example customization of dimensions originally defined in res / values / dimens . xml 
 + ( such as screen margins ) for screens with more than 820dp of available width . This 
 + would include 7 " and 10 " devices in landscape ( ~ 960dp and ~ 1280dp respectively ) . - - > 
 + < dimen name = " activity _ horizontal _ margin " > 64dp < / dimen > 
 + < / resources > 
 diff - - git a / examples / kotlinExample / src / main / res / values / dimens . xml b / examples / kotlinExample / src / main / res / values / dimens . xml 
 new file mode 100644 
 index 0000000 . . 47c8224 
 - - - / dev / null 
 + + + b / examples / kotlinExample / src / main / res / values / dimens . xml 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + < resources > 
 + < ! - - Default screen margins , per the Android Design guidelines . - - > 
 + < dimen name = " activity _ horizontal _ margin " > 16dp < / dimen > 
 + < dimen name = " activity _ vertical _ margin " > 16dp < / dimen > 
 + < / resources > 
 diff - - git a / examples / kotlinExample / src / main / res / values / strings . xml b / examples / kotlinExample / src / main / res / values / strings . xml 
 new file mode 100644 
 index 0000000 . . 963831f 
 - - - / dev / null 
 + + + b / examples / kotlinExample / src / main / res / values / strings . xml 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 + < resources > 
 + 
 + < string name = " app _ name " > Kotlin example < / string > 
 + < string name = " hello _ world " > Hello world ! < / string > 
 + < string name = " action _ settings " > Settings < / string > 
 + 
 + < / resources > 
 diff - - git a / examples / kotlinExample / src / main / res / values / styles . xml b / examples / kotlinExample / src / main / res / values / styles . xml 
 new file mode 100644 
 index 0000000 . . ff6c9d2 
 - - - / dev / null 
 + + + b / examples / kotlinExample / src / main / res / values / styles . xml 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + < resources > 
 + 
 + < ! - - Base application theme . - - > 
 + < style name = " AppTheme " parent = " android : Theme . Holo . Light . DarkActionBar " > 
 + < ! - - Customize your theme here . - - > 
 + < / style > 
 + 
 + < / resources > 
 diff - - git a / settings . gradle b / settings . gradle 
 index d0eb928 . . c3be0d4 100644 
 - - - a / settings . gradle 
 + + + b / settings . gradle 
 @ @ - 8 , 7 + 8 , 8 @ @ include ' : introExample ' , 
 ' : migrationExample ' , 
 ' : adapterExample ' , 
 ' : threadExample ' , 
 - 	 	 ' : jsonExample ' 
 + 	 	 ' : jsonExample ' , 
 + ' : kotlinExample ' 
 
 
 project ( ' : introExample ' ) . projectDir = new File ( ' examples / introExample ' ) 
 @ @ - 18 , 6 + 19 , 7 @ @ project ( ' : migrationExample ' ) . projectDir = new File ( ' examples / migrationExample ' ) 
 project ( ' : adapterExample ' ) . projectDir = new File ( ' examples / adapterExample ' ) 
 project ( ' : threadExample ' ) . projectDir = new File ( ' examples / threadExample ' ) 
 project ( ' : jsonExample ' ) . projectDir = new File ( ' examples / jsonExample ' ) 
 + project ( ' : kotlinExample ' ) . projectDir = new File ( ' examples / kotlinExample ' ) 
 
 / / Experimental projects 
 include ' : pathExperiment '
