BLEU SCORE: 0.05341087579952926

TEST MSG: Mark @ LinkingObjects as beta
GENERATED MSG: Fixed unit tests .

TEST DIFF (one line): diff - - git a / realm - annotations / src / main / java / io / realm / annotations / LinkingObjects . java b / realm - annotations / src / main / java / io / realm / annotations / LinkingObjects . java <nl> index f9b130d . . d79258c 100644 <nl> - - - a / realm - annotations / src / main / java / io / realm / annotations / LinkingObjects . java <nl> + + + b / realm - annotations / src / main / java / io / realm / annotations / LinkingObjects . java <nl> @ @ - 94 , 6 + 94 , 7 @ @ import java . lang . annotation . Target ; <nl> * / <nl> @ Retention ( RetentionPolicy . SOURCE ) <nl> @ Target ( ElementType . FIELD ) <nl> + @ Beta <nl> public @ interface LinkingObjects { <nl> / * * <nl> * The name of a field that contains a relation to an instance of the
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / java / io / realm / RealmListTest . java b / realm / src / androidTest / java / io / realm / RealmListTest . java <nl> index fad720c . . 4ee1784 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmListTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmListTest . java <nl> @ @ - 95 , 11 + 95 , 9 @ @ public class RealmListTest extends AndroidTestCase { <nl> testRealm . beginTransaction ( ) ; <nl> AllTypes managedAllTypes = testRealm . createObject ( AllTypes . class ) ; <nl> testRealm . commitTransaction ( ) ; <nl> - try { <nl> - list . add ( managedAllTypes ) ; <nl> - fail ( " Adding managed objects to non - managed lists should fail " ) ; <nl> - } catch ( IllegalStateException ignore ) { <nl> - } <nl> + list . add ( managedAllTypes ) ; <nl> + <nl> + assertEquals ( managedAllTypes , list . get ( 0 ) ) ; <nl> } <nl> <nl> public void testAddAtIndex _ nonManagedMode ( ) { <nl> @ @ - 113 , 14 + 111 , 13 @ @ public class RealmListTest extends AndroidTestCase { <nl> <nl> public void testAddManagedObjectAtIndex _ nonManagedMode ( ) { <nl> RealmList list = new RealmList ( ) ; <nl> + list . add ( new AllTypes ( ) ) ; <nl> testRealm . beginTransaction ( ) ; <nl> AllTypes managedAllTypes = testRealm . createObject ( AllTypes . class ) ; <nl> testRealm . commitTransaction ( ) ; <nl> - try { <nl> - list . add ( 5 , managedAllTypes ) ; <nl> - fail ( " Adding managed objects to non - managed lists should fail " ) ; <nl> - } catch ( IllegalStateException ignore ) { <nl> - } <nl> + list . add ( 0 , managedAllTypes ) ; <nl> + <nl> + assertEquals ( managedAllTypes , list . get ( 0 ) ) ; <nl> } <nl> <nl> public void testAddNullAtIndex _ nonManagedMode ( ) { <nl> @ @ - 155 , 11 + 152 , 9 @ @ public class RealmListTest extends AndroidTestCase { <nl> testRealm . beginTransaction ( ) ; <nl> AllTypes managedAllTypes = testRealm . createObject ( AllTypes . class ) ; <nl> testRealm . commitTransaction ( ) ; <nl> - try { <nl> - list . set ( 0 , managedAllTypes ) ; <nl> - fail ( " Setting managed objects to non - managed lists should fail " ) ; <nl> - } catch ( IllegalStateException ignore ) { <nl> - } <nl> + list . set ( 0 , managedAllTypes ) ; <nl> + <nl> + assertEquals ( managedAllTypes , list . get ( 0 ) ) ; <nl> } <nl> <nl> public void testClear _ nonManagedMode ( ) { <nl> diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> index 7a9d1a4 . . 9b5c91e 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import java . io . IOException ; <nl> import java . nio . channels . FileChannel ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> + import java . util . Collection ; <nl> import java . util . Date ; <nl> import java . util . List ; <nl> import java . util . Random ; <nl> @ @ - 1037 , 7 + 1038 , 7 @ @ public class RealmTest extends AndroidTestCase { <nl> list . addAll ( Arrays . asList ( dog1 , dog2 ) ) ; <nl> <nl> testRealm . beginTransaction ( ) ; <nl> - List < Dog > copiedList = testRealm . copyToRealm ( list ) ; <nl> + List < Dog > copiedList = new ArrayList < Dog > ( testRealm . copyToRealm ( list ) ) ; <nl> testRealm . commitTransaction ( ) ; <nl> <nl> assertEquals ( 2 , copiedList . size ( ) ) ;

TEST DIFF:
diff - - git a / realm - annotations / src / main / java / io / realm / annotations / LinkingObjects . java b / realm - annotations / src / main / java / io / realm / annotations / LinkingObjects . java 
 index f9b130d . . d79258c 100644 
 - - - a / realm - annotations / src / main / java / io / realm / annotations / LinkingObjects . java 
 + + + b / realm - annotations / src / main / java / io / realm / annotations / LinkingObjects . java 
 @ @ - 94 , 6 + 94 , 7 @ @ import java . lang . annotation . Target ; 
 * / 
 @ Retention ( RetentionPolicy . SOURCE ) 
 @ Target ( ElementType . FIELD ) 
 + @ Beta 
 public @ interface LinkingObjects { 
 / * * 
 * The name of a field that contains a relation to an instance of the

NEAREST DIFF:
diff - - git a / realm / src / androidTest / java / io / realm / RealmListTest . java b / realm / src / androidTest / java / io / realm / RealmListTest . java 
 index fad720c . . 4ee1784 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmListTest . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmListTest . java 
 @ @ - 95 , 11 + 95 , 9 @ @ public class RealmListTest extends AndroidTestCase { 
 testRealm . beginTransaction ( ) ; 
 AllTypes managedAllTypes = testRealm . createObject ( AllTypes . class ) ; 
 testRealm . commitTransaction ( ) ; 
 - try { 
 - list . add ( managedAllTypes ) ; 
 - fail ( " Adding managed objects to non - managed lists should fail " ) ; 
 - } catch ( IllegalStateException ignore ) { 
 - } 
 + list . add ( managedAllTypes ) ; 
 + 
 + assertEquals ( managedAllTypes , list . get ( 0 ) ) ; 
 } 
 
 public void testAddAtIndex _ nonManagedMode ( ) { 
 @ @ - 113 , 14 + 111 , 13 @ @ public class RealmListTest extends AndroidTestCase { 
 
 public void testAddManagedObjectAtIndex _ nonManagedMode ( ) { 
 RealmList list = new RealmList ( ) ; 
 + list . add ( new AllTypes ( ) ) ; 
 testRealm . beginTransaction ( ) ; 
 AllTypes managedAllTypes = testRealm . createObject ( AllTypes . class ) ; 
 testRealm . commitTransaction ( ) ; 
 - try { 
 - list . add ( 5 , managedAllTypes ) ; 
 - fail ( " Adding managed objects to non - managed lists should fail " ) ; 
 - } catch ( IllegalStateException ignore ) { 
 - } 
 + list . add ( 0 , managedAllTypes ) ; 
 + 
 + assertEquals ( managedAllTypes , list . get ( 0 ) ) ; 
 } 
 
 public void testAddNullAtIndex _ nonManagedMode ( ) { 
 @ @ - 155 , 11 + 152 , 9 @ @ public class RealmListTest extends AndroidTestCase { 
 testRealm . beginTransaction ( ) ; 
 AllTypes managedAllTypes = testRealm . createObject ( AllTypes . class ) ; 
 testRealm . commitTransaction ( ) ; 
 - try { 
 - list . set ( 0 , managedAllTypes ) ; 
 - fail ( " Setting managed objects to non - managed lists should fail " ) ; 
 - } catch ( IllegalStateException ignore ) { 
 - } 
 + list . set ( 0 , managedAllTypes ) ; 
 + 
 + assertEquals ( managedAllTypes , list . get ( 0 ) ) ; 
 } 
 
 public void testClear _ nonManagedMode ( ) { 
 diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java 
 index 7a9d1a4 . . 9b5c91e 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmTest . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmTest . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import java . io . IOException ; 
 import java . nio . channels . FileChannel ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 + import java . util . Collection ; 
 import java . util . Date ; 
 import java . util . List ; 
 import java . util . Random ; 
 @ @ - 1037 , 7 + 1038 , 7 @ @ public class RealmTest extends AndroidTestCase { 
 list . addAll ( Arrays . asList ( dog1 , dog2 ) ) ; 
 
 testRealm . beginTransaction ( ) ; 
 - List < Dog > copiedList = testRealm . copyToRealm ( list ) ; 
 + List < Dog > copiedList = new ArrayList < Dog > ( testRealm . copyToRealm ( list ) ) ; 
 testRealm . commitTransaction ( ) ; 
 
 assertEquals ( 2 , copiedList . size ( ) ) ;
