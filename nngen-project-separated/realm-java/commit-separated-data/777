BLEU SCORE: 0.17747405280050269

TEST MSG: Update README . md for OS X users .
GENERATED MSG: ' Configuration ' section added to README . md

TEST DIFF (one line): diff - - git a / README . md b / README . md <nl> index 6c53be2 . . b870db5 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 74 , 7 + 74 , 7 @ @ Prerequisites : <nl> export NDK _ HOME = / usr / local / Cellar / android - ndk / r10e <nl> ` ` ` <nl> <nl> - * If you are using OS X , you ' d be better to add following lines to ` ~ / . profile ` in order for Android Studio to see those environment variables . <nl> + * If you are using OS X , you ' d be better to add following lines to ` ~ / . profile ` ( or ` ~ / . zprofile ` if the login shell is ` zsh ` ) in order for Android Studio to see those environment variables . <nl> <nl> ` ` ` <nl> launchctl setenv ANDROID _ HOME " $ ANDROID _ HOME " <nl> @ @ - 87 , 6 + 87 , 12 @ @ Prerequisites : <nl> export REALM _ CORE _ DOWNLOAD _ DIR = ~ / . realmCore <nl> ` ` ` <nl> <nl> + OS X users should also add following line to ` ~ / . profile ` ( or ` ~ / . zprofile ` if the login shell is ` zsh ` ) in order for Android Studio to see this environment variable . . <nl> + <nl> + ` ` ` <nl> + launchctl setenv REALM _ CORE _ DOWNLOAD _ DIR " $ REALM _ CORE _ DOWNLOAD _ DIR " <nl> + ` ` ` <nl> + <nl> Once you have completed all the pre - requisites building Realm is done with a simple command <nl> <nl> ` ` `
NEAREST DIFF (one line): diff - - git a / README . md b / README . md <nl> index 8c2a066 . . 9406c44 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 1 , 7 + 1 , 7 @ @ <nl> Java <nl> = = = = <nl> <nl> - This is the Java language binding for TightDB . <nl> + This is the TightDB language binding for Java . <nl> <nl> After you have installed the dependencies listed below , you can <nl> proceed to build and install the language binding . <nl> @ @ - 63 , 6 + 63 , 24 @ @ Building and installing <nl> sh build . sh test - intalled <nl> <nl> <nl> + Configuration <nl> + - - - - - - - - - - - - - <nl> + <nl> + To use a nondefault compiler , or a compiler in a nondefault location , <nl> + set the environment variable ` CC ` before calling ` sh build . sh build ` , <nl> + as in the following example : <nl> + <nl> + CC = clang sh build . sh dist <nl> + <nl> + There are also a number of environment variables that serve to enable <nl> + or disable special features during building : <nl> + <nl> + Set ` TIGHTDB _ DISABLE _ SSE ` to a nonempty value to disable SSE . <nl> + <nl> + Set ` TIGHTDB _ ENABLE _ REPLICATION ` to a nonempty value to enable <nl> + replication . <nl> + <nl> + <nl> Examples <nl> - - - - - - - - <nl>

TEST DIFF:
diff - - git a / README . md b / README . md 
 index 6c53be2 . . b870db5 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 74 , 7 + 74 , 7 @ @ Prerequisites : 
 export NDK _ HOME = / usr / local / Cellar / android - ndk / r10e 
 ` ` ` 
 
 - * If you are using OS X , you ' d be better to add following lines to ` ~ / . profile ` in order for Android Studio to see those environment variables . 
 + * If you are using OS X , you ' d be better to add following lines to ` ~ / . profile ` ( or ` ~ / . zprofile ` if the login shell is ` zsh ` ) in order for Android Studio to see those environment variables . 
 
 ` ` ` 
 launchctl setenv ANDROID _ HOME " $ ANDROID _ HOME " 
 @ @ - 87 , 6 + 87 , 12 @ @ Prerequisites : 
 export REALM _ CORE _ DOWNLOAD _ DIR = ~ / . realmCore 
 ` ` ` 
 
 + OS X users should also add following line to ` ~ / . profile ` ( or ` ~ / . zprofile ` if the login shell is ` zsh ` ) in order for Android Studio to see this environment variable . . 
 + 
 + ` ` ` 
 + launchctl setenv REALM _ CORE _ DOWNLOAD _ DIR " $ REALM _ CORE _ DOWNLOAD _ DIR " 
 + ` ` ` 
 + 
 Once you have completed all the pre - requisites building Realm is done with a simple command 
 
 ` ` `

NEAREST DIFF:
diff - - git a / README . md b / README . md 
 index 8c2a066 . . 9406c44 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 1 , 7 + 1 , 7 @ @ 
 Java 
 = = = = 
 
 - This is the Java language binding for TightDB . 
 + This is the TightDB language binding for Java . 
 
 After you have installed the dependencies listed below , you can 
 proceed to build and install the language binding . 
 @ @ - 63 , 6 + 63 , 24 @ @ Building and installing 
 sh build . sh test - intalled 
 
 
 + Configuration 
 + - - - - - - - - - - - - - 
 + 
 + To use a nondefault compiler , or a compiler in a nondefault location , 
 + set the environment variable ` CC ` before calling ` sh build . sh build ` , 
 + as in the following example : 
 + 
 + CC = clang sh build . sh dist 
 + 
 + There are also a number of environment variables that serve to enable 
 + or disable special features during building : 
 + 
 + Set ` TIGHTDB _ DISABLE _ SSE ` to a nonempty value to disable SSE . 
 + 
 + Set ` TIGHTDB _ ENABLE _ REPLICATION ` to a nonempty value to enable 
 + replication . 
 + 
 + 
 Examples 
 - - - - - - - - 

