BLEU SCORE: 0.07986788803078405

TEST MSG: Fix unit tests .
GENERATED MSG: fix merge mistakes

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> index f183e3a . . 6df974f 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> @ @ - 64 , 7 + 64 , 6 @ @ import io . realm . rule . TestRealmConfigurationFactory ; <nl> <nl> import static junit . framework . Assert . assertEquals ; <nl> import static junit . framework . Assert . fail ; <nl> - import static org . junit . Assert . assertEquals ; <nl> <nl> public class TestHelper { <nl> <nl> @ @ - 848 , 7 + 847 , 7 @ @ public class TestHelper { <nl> } <nl> <nl> public static void awaitOrFail ( CountDownLatch latch ) { <nl> - awaitOrFail ( latch , 7 ) ; <nl> + awaitOrFail ( latch , 1000 ) ; <nl> } <nl> <nl> public static void awaitOrFail ( CountDownLatch latch , int numberOfSeconds ) { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmSchema . java b / realm / realm - library / src / main / java / io / realm / RealmSchema . java <nl> index 177872e . . 2779500 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmSchema . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmSchema . java <nl> @ @ - 144 , 7 + 144 , 7 @ @ public final class RealmSchema { <nl> Set < RealmObjectSchema > schemas = new LinkedHashSet < > ( tableCount ) ; <nl> for ( int i = 0 ; i < tableCount ; i + + ) { <nl> String tableName = realm . sharedRealm . getTableName ( i ) ; <nl> - if ( Table . isModelTable ( tableName ) ) { <nl> + if ( ! Table . isModelTable ( tableName ) ) { <nl> continue ; <nl> } <nl> Table table = realm . sharedRealm . getTable ( tableName ) ;
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> index 3c75cca . . 2683c6e 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / Realm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / Realm . java <nl> @ @ - 289 , 7 + 289 , 7 @ @ public final class Realm extends BaseRealm { <nl> RealmObjectSchema realmObjectSchema = mediator . createRealmObjectSchema ( modelClass , realmSchemaCache ) ; <nl> realmObjectSchemas . add ( realmObjectSchema ) ; <nl> } else { <nl> - columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm ) , false ) ; <nl> + columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm , false ) ) ; <nl> } <nl> } <nl> if ( syncAvailable ) { <nl> @ @ - 297 , 7 + 297 , 7 @ @ public final class Realm extends BaseRealm { <nl> / / Assumption : when SyncConfiguration then additive schema update mode <nl> realm . sharedRealm . updateSchema ( schema , version ) ; <nl> for ( Class < ? extends RealmModel > modelClass : modelClasses ) { <nl> - columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm ) , false ) ; <nl> + columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm , false ) ) ; <nl> } <nl> } <nl> realm . schema . columnIndices = new ColumnIndices ( <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmSchema . java b / realm / realm - library / src / main / java / io / realm / RealmSchema . java <nl> index 94154d5 . . 177872e 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmSchema . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmSchema . java <nl> @ @ - 144 , 7 + 144 , 7 @ @ public final class RealmSchema { <nl> Set < RealmObjectSchema > schemas = new LinkedHashSet < > ( tableCount ) ; <nl> for ( int i = 0 ; i < tableCount ; i + + ) { <nl> String tableName = realm . sharedRealm . getTableName ( i ) ; <nl> - if ( Table . isMetaTable ( tableName ) ) { <nl> + if ( Table . isModelTable ( tableName ) ) { <nl> continue ; <nl> } <nl> Table table = realm . sharedRealm . getTable ( tableName ) ;

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 index f183e3a . . 6df974f 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 @ @ - 64 , 7 + 64 , 6 @ @ import io . realm . rule . TestRealmConfigurationFactory ; 
 
 import static junit . framework . Assert . assertEquals ; 
 import static junit . framework . Assert . fail ; 
 - import static org . junit . Assert . assertEquals ; 
 
 public class TestHelper { 
 
 @ @ - 848 , 7 + 847 , 7 @ @ public class TestHelper { 
 } 
 
 public static void awaitOrFail ( CountDownLatch latch ) { 
 - awaitOrFail ( latch , 7 ) ; 
 + awaitOrFail ( latch , 1000 ) ; 
 } 
 
 public static void awaitOrFail ( CountDownLatch latch , int numberOfSeconds ) { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmSchema . java b / realm / realm - library / src / main / java / io / realm / RealmSchema . java 
 index 177872e . . 2779500 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmSchema . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmSchema . java 
 @ @ - 144 , 7 + 144 , 7 @ @ public final class RealmSchema { 
 Set < RealmObjectSchema > schemas = new LinkedHashSet < > ( tableCount ) ; 
 for ( int i = 0 ; i < tableCount ; i + + ) { 
 String tableName = realm . sharedRealm . getTableName ( i ) ; 
 - if ( Table . isModelTable ( tableName ) ) { 
 + if ( ! Table . isModelTable ( tableName ) ) { 
 continue ; 
 } 
 Table table = realm . sharedRealm . getTable ( tableName ) ;

NEAREST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / Realm . java b / realm / realm - library / src / main / java / io / realm / Realm . java 
 index 3c75cca . . 2683c6e 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / Realm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / Realm . java 
 @ @ - 289 , 7 + 289 , 7 @ @ public final class Realm extends BaseRealm { 
 RealmObjectSchema realmObjectSchema = mediator . createRealmObjectSchema ( modelClass , realmSchemaCache ) ; 
 realmObjectSchemas . add ( realmObjectSchema ) ; 
 } else { 
 - columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm ) , false ) ; 
 + columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm , false ) ) ; 
 } 
 } 
 if ( syncAvailable ) { 
 @ @ - 297 , 7 + 297 , 7 @ @ public final class Realm extends BaseRealm { 
 / / Assumption : when SyncConfiguration then additive schema update mode 
 realm . sharedRealm . updateSchema ( schema , version ) ; 
 for ( Class < ? extends RealmModel > modelClass : modelClasses ) { 
 - columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm ) , false ) ; 
 + columnInfoMap . put ( modelClass , mediator . validateTable ( modelClass , realm . sharedRealm , false ) ) ; 
 } 
 } 
 realm . schema . columnIndices = new ColumnIndices ( 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmSchema . java b / realm / realm - library / src / main / java / io / realm / RealmSchema . java 
 index 94154d5 . . 177872e 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmSchema . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmSchema . java 
 @ @ - 144 , 7 + 144 , 7 @ @ public final class RealmSchema { 
 Set < RealmObjectSchema > schemas = new LinkedHashSet < > ( tableCount ) ; 
 for ( int i = 0 ; i < tableCount ; i + + ) { 
 String tableName = realm . sharedRealm . getTableName ( i ) ; 
 - if ( Table . isMetaTable ( tableName ) ) { 
 + if ( Table . isModelTable ( tableName ) ) { 
 continue ; 
 } 
 Table table = realm . sharedRealm . getTable ( tableName ) ;
