BLEU SCORE: 0.014779632632337215

TEST MSG: Fix a socket timeout issue with test server
GENERATED MSG: Upgrade to ROS - 2 . 0 . 0 - alpha . 35

TEST DIFF (one line): diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java <nl> index fa0406c . . 4c31b68 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java <nl> @ @ - 88 , 7 + 88 , 8 @ @ public abstract class BaseIntegrationTest { <nl> } <nl> <nl> / * * <nl> - * Stops the ROS instance used for the test . <nl> + * Stops the ROS instance used for the test . The { @ link # startSyncServer ( ) } will stop the sync server if needed , so <nl> + * normally there is no need to call this . <nl> * / <nl> protected static void stopSyncServer ( ) { <nl> try { <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / IsolatedIntegrationTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / IsolatedIntegrationTests . java <nl> index e25225f . . 0971500 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / IsolatedIntegrationTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / IsolatedIntegrationTests . java <nl> @ @ - 26 , 14 + 26 , 12 @ @ public class IsolatedIntegrationTests extends BaseIntegrationTest { <nl> if ( ! looperThread . isRuleUsed ( ) | | looperThread . isTestComplete ( ) ) { <nl> / / Non - looper tests can reset here <nl> restoreEnvironmentAfterTest ( ) ; <nl> - stopSyncServer ( ) ; <nl> } else { <nl> / / Otherwise we need to wait for the test to complete <nl> looperThread . runAfterTest ( new Runnable ( ) { <nl> @ Override <nl> public void run ( ) { <nl> restoreEnvironmentAfterTest ( ) ; <nl> - stopSyncServer ( ) ; <nl> } <nl> } ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / StandardIntegrationTest . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / StandardIntegrationTest . java <nl> index e2b7bb9 . . 8588248 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / StandardIntegrationTest . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / StandardIntegrationTest . java <nl> @ @ - 35 , 11 + 35 , 6 @ @ public abstract class StandardIntegrationTest extends BaseIntegrationTest { <nl> startSyncServer ( ) ; <nl> } <nl> <nl> - @ AfterClass <nl> - public static void tearDownTestClass ( ) throws Exception { <nl> - stopSyncServer ( ) ; <nl> - } <nl> - <nl> @ Before <nl> public void setupTest ( ) throws IOException { <nl> prepareEnvironmentForTest ( ) ; <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java <nl> index 9c4d388 . . cc3fcd9 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java <nl> @ @ - 50 , 6 + 50 , 9 @ @ public class HttpUtils { <nl> private static final String STOP _ SERVER = " http : / / 127 . 0 . 0 . 1 : 8888 / stop " ; <nl> public static final String TAG = " IntegrationTestServer " ; <nl> <nl> + / * * <nl> + * Start the sync server . If the server has been started before , stop it first . <nl> + * / <nl> public static void startSyncServer ( ) throws Exception { <nl> Request request = new Request . Builder ( ) <nl> . url ( START _ SERVER ) <nl> @ @ - 63 , 6 + 66 , 10 @ @ public class HttpUtils { <nl> SystemClock . sleep ( 2000 ) ; <nl> } <nl> <nl> + / * * <nl> + * Stop the sync server if it is alive . { @ link # startSyncServer ( ) } will implicitly stop the server if needed , so <nl> + * normally there is no need to call this . <nl> + * / <nl> public static void stopSyncServer ( ) throws Exception { <nl> Request request = new Request . Builder ( ) <nl> . url ( STOP _ SERVER ) <nl> diff - - git a / tools / sync _ test _ server / ros - testing - server . js b / tools / sync _ test _ server / ros - testing - server . js <nl> index d86165a . . 2f841d4 100755 <nl> - - - a / tools / sync _ test _ server / ros - testing - server . js <nl> + + + b / tools / sync _ test _ server / ros - testing - server . js <nl> @ @ - 66 , 6 + 66 , 12 @ @ function waitForRosToInitialize ( attempts , onSuccess , onError ) { <nl> } <nl> <nl> function startRealmObjectServer ( onSuccess , onError ) { <nl> + stopRealmObjectServer ( ( ) = > { <nl> + doStartRealmObjectServer ( onSuccess , onError ) <nl> + } , onError ) <nl> + } <nl> + <nl> + function doStartRealmObjectServer ( onSuccess , onError ) { <nl> temp . mkdir ( ' ros ' , function ( err , path ) { <nl> if ( ! err ) { <nl> winston . info ( " Starting sync server in " , path ) ; <nl> @ @ - 112 , 8 + 118 , 8 @ @ function startRealmObjectServer ( onSuccess , onError ) { <nl> } <nl> <nl> function stopRealmObjectServer ( onSuccess , onError ) { <nl> - if ( syncServerChildProcess = = null ) { <nl> - onError ( " No ROS process found to stop " ) ; <nl> + if ( syncServerChildProcess = = null | | syncServerChildProcess . killed ) { <nl> + onSuccess ( " No ROS process found or the process has been killed before " ) ; <nl> } <nl> <nl> syncServerChildProcess . on ( ' exit ' , function ( code ) {
NEAREST DIFF (one line): diff - - git a / dependencies . list b / dependencies . list <nl> index 91cfac3 . . 0025e7c 100644 <nl> - - - a / dependencies . list <nl> + + + b / dependencies . list <nl> @ @ - 5 , 4 + 5 , 4 @ @ REALM _ SYNC _ SHA256 = 5e09e54e68e78683e006898f5a703f80e0ee49492fb0f9dc2384fcbbb9f02f <nl> <nl> # Object Server Release used by Integration tests . Installed using NPM . <nl> # Use ` npm view realm - object - server versions ` to get a list of available versions . <nl> - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 34 <nl> + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 35 <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java <nl> index 6ca1f3a . . 827ec07 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java <nl> @ @ - 56 , 9 + 56 , 9 @ @ public class ChangePasswordRequest { <nl> public String toJson ( ) { <nl> try { <nl> JSONObject request = new JSONObject ( ) ; <nl> - request . put ( " newPassword " , newPassword ) ; <nl> + request . put ( " new _ password " , newPassword ) ; <nl> if ( userID ! = null ) { <nl> - request . put ( " userId " , userID ) ; <nl> + request . put ( " user _ id " , userID ) ; <nl> } <nl> return request . toString ( ) ; <nl> } catch ( JSONException e ) { <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java <nl> index eb60bd4 . . a9d93d7 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java <nl> @ @ - 34 , 8 + 34 , 8 @ @ import okhttp3 . Response ; <nl> * / <nl> public class LookupUserIdResponse extends AuthServerResponse { <nl> <nl> - private static final String JSON _ FIELD _ USER _ ID = " userId " ; <nl> - private static final String JSON _ FIELD _ USER _ IS _ ADMIN = " isAdmin " ; <nl> + private static final String JSON _ FIELD _ USER _ ID = " user _ id " ; <nl> + private static final String JSON _ FIELD _ USER _ IS _ ADMIN = " is _ admin " ; <nl> private static final String JSON _ FIELD _ METADATA = " metadata " ; <nl> <nl> private final String userId ; <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> index e14a262 . . 256df2f 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> @ @ - 185 , 6 + 185 , 7 @ @ public class AuthTests extends StandardIntegrationTest { <nl> } <nl> <nl> @ Test <nl> + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 335 " ) <nl> public void changePassword ( ) { <nl> String username = UUID . randomUUID ( ) . toString ( ) ; <nl> String originalPassword = " password " ; <nl> @ @ - 204 , 6 + 205 , 7 @ @ public class AuthTests extends StandardIntegrationTest { <nl> } <nl> <nl> @ Test <nl> + @ Ignore ( " See https : / / github . com / realm / ros / issues / 335 " ) <nl> public void changePassword _ using _ admin ( ) { <nl> String username = UUID . randomUUID ( ) . toString ( ) ; <nl> String originalPassword = " password " ; <nl> @ @ - 231 , 6 + 233 , 7 @ @ public class AuthTests extends StandardIntegrationTest { <nl> <nl> @ Test <nl> @ RunTestInLooperThread <nl> + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 335 " ) <nl> public void changePassword _ using _ admin _ async ( ) { <nl> final String username = UUID . randomUUID ( ) . toString ( ) ; <nl> final String originalPassword = " password " ; <nl> @ @ - 595 , 6 + 598 , 7 @ @ public class AuthTests extends StandardIntegrationTest { <nl> } <nl> <nl> @ Test <nl> + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) <nl> public void retrieve ( ) { <nl> final SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; <nl> <nl> @ @ - 618 , 6 + 622 , 7 @ @ public class AuthTests extends StandardIntegrationTest { <nl> / / retrieving a logged out user <nl> @ Test <nl> @ RunTestInLooperThread <nl> + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) <nl> public void retrieve _ logout ( ) { <nl> final SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; <nl> <nl> @ @ - 685 , 6 + 690 , 7 @ @ public class AuthTests extends StandardIntegrationTest { <nl> } <nl> <nl> @ Test <nl> + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) <nl> public void retrieve _ notAdmin ( ) { <nl> final String username1 = UUID . randomUUID ( ) . toString ( ) ; <nl> final String password1 = " password " ; <nl> @ @ - 708 , 6 + 714 , 7 @ @ public class AuthTests extends StandardIntegrationTest { <nl> <nl> @ Test <nl> @ RunTestInLooperThread <nl> + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) <nl> public void retrieve _ async ( ) { <nl> final String username = UUID . randomUUID ( ) . toString ( ) ; <nl> final String password = " password " ; <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java <nl> index beb5c0c . . a669b7d 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java <nl> @ @ - 92 , 23 + 92 , 7 @ @ public class UserFactory { <nl> / / ` admin ` required as user identifier to be granted admin rights . <nl> / / ROS 2 . 0 comes with a default admin user named " realm - admin " with password " " . <nl> SyncCredentials credentials = SyncCredentials . usernamePassword ( " realm - admin " , " " , false ) ; <nl> - int attempts = 3 ; <nl> - while ( attempts > 0 ) { <nl> - attempts - - ; <nl> - try { <nl> - return SyncUser . login ( credentials , authUrl ) ; <nl> - } catch ( ObjectServerError e ) { <nl> - / / ROS default admin user might not be created yet , we need to retry . <nl> - / / Remove this work - around when https : / / github . com / realm / ros / issues / 282 <nl> - / / is fixed . <nl> - if ( e . getErrorCode ( ) ! = ErrorCode . INVALID _ CREDENTIALS ) { <nl> - throw e ; <nl> - } <nl> - SystemClock . sleep ( 1000 ) ; <nl> - } <nl> - } <nl> - <nl> - throw new IllegalStateException ( " Could not login ' realm - admin ' " ) ; <nl> + return SyncUser . login ( credentials , authUrl ) ; <nl> } <nl> <nl> / / Since we don ' t have a reliable way to reset the sync server and client , just use a new user factory for every <nl> @ @ - 165 , 8 + 149 , 10 @ @ public class UserFactory { <nl> for ( SyncUser user : users . values ( ) ) { <nl> user . logout ( ) ; <nl> } <nl> - SystemClock . sleep ( 2000 ) ; / / Remove when https : / / github . com / realm / ros / issues / 304 is fixed <nl> + / / FIXME https : / / github . com / realm / ros / issues / 338 <nl> + SystemClock . sleep ( 2000 ) ; <nl> allUsersLoggedOut . countDown ( ) ; <nl> + <nl> } <nl> } ) ; <nl> TestHelper . awaitOrFail ( allUsersLoggedOut ) ;

TEST DIFF:
diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java 
 index fa0406c . . 4c31b68 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java 
 @ @ - 88 , 7 + 88 , 8 @ @ public abstract class BaseIntegrationTest { 
 } 
 
 / * * 
 - * Stops the ROS instance used for the test . 
 + * Stops the ROS instance used for the test . The { @ link # startSyncServer ( ) } will stop the sync server if needed , so 
 + * normally there is no need to call this . 
 * / 
 protected static void stopSyncServer ( ) { 
 try { 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / IsolatedIntegrationTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / IsolatedIntegrationTests . java 
 index e25225f . . 0971500 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / IsolatedIntegrationTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / IsolatedIntegrationTests . java 
 @ @ - 26 , 14 + 26 , 12 @ @ public class IsolatedIntegrationTests extends BaseIntegrationTest { 
 if ( ! looperThread . isRuleUsed ( ) | | looperThread . isTestComplete ( ) ) { 
 / / Non - looper tests can reset here 
 restoreEnvironmentAfterTest ( ) ; 
 - stopSyncServer ( ) ; 
 } else { 
 / / Otherwise we need to wait for the test to complete 
 looperThread . runAfterTest ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 restoreEnvironmentAfterTest ( ) ; 
 - stopSyncServer ( ) ; 
 } 
 } ) ; 
 } 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / StandardIntegrationTest . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / StandardIntegrationTest . java 
 index e2b7bb9 . . 8588248 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / StandardIntegrationTest . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / StandardIntegrationTest . java 
 @ @ - 35 , 11 + 35 , 6 @ @ public abstract class StandardIntegrationTest extends BaseIntegrationTest { 
 startSyncServer ( ) ; 
 } 
 
 - @ AfterClass 
 - public static void tearDownTestClass ( ) throws Exception { 
 - stopSyncServer ( ) ; 
 - } 
 - 
 @ Before 
 public void setupTest ( ) throws IOException { 
 prepareEnvironmentForTest ( ) ; 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java 
 index 9c4d388 . . cc3fcd9 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / HttpUtils . java 
 @ @ - 50 , 6 + 50 , 9 @ @ public class HttpUtils { 
 private static final String STOP _ SERVER = " http : / / 127 . 0 . 0 . 1 : 8888 / stop " ; 
 public static final String TAG = " IntegrationTestServer " ; 
 
 + / * * 
 + * Start the sync server . If the server has been started before , stop it first . 
 + * / 
 public static void startSyncServer ( ) throws Exception { 
 Request request = new Request . Builder ( ) 
 . url ( START _ SERVER ) 
 @ @ - 63 , 6 + 66 , 10 @ @ public class HttpUtils { 
 SystemClock . sleep ( 2000 ) ; 
 } 
 
 + / * * 
 + * Stop the sync server if it is alive . { @ link # startSyncServer ( ) } will implicitly stop the server if needed , so 
 + * normally there is no need to call this . 
 + * / 
 public static void stopSyncServer ( ) throws Exception { 
 Request request = new Request . Builder ( ) 
 . url ( STOP _ SERVER ) 
 diff - - git a / tools / sync _ test _ server / ros - testing - server . js b / tools / sync _ test _ server / ros - testing - server . js 
 index d86165a . . 2f841d4 100755 
 - - - a / tools / sync _ test _ server / ros - testing - server . js 
 + + + b / tools / sync _ test _ server / ros - testing - server . js 
 @ @ - 66 , 6 + 66 , 12 @ @ function waitForRosToInitialize ( attempts , onSuccess , onError ) { 
 } 
 
 function startRealmObjectServer ( onSuccess , onError ) { 
 + stopRealmObjectServer ( ( ) = > { 
 + doStartRealmObjectServer ( onSuccess , onError ) 
 + } , onError ) 
 + } 
 + 
 + function doStartRealmObjectServer ( onSuccess , onError ) { 
 temp . mkdir ( ' ros ' , function ( err , path ) { 
 if ( ! err ) { 
 winston . info ( " Starting sync server in " , path ) ; 
 @ @ - 112 , 8 + 118 , 8 @ @ function startRealmObjectServer ( onSuccess , onError ) { 
 } 
 
 function stopRealmObjectServer ( onSuccess , onError ) { 
 - if ( syncServerChildProcess = = null ) { 
 - onError ( " No ROS process found to stop " ) ; 
 + if ( syncServerChildProcess = = null | | syncServerChildProcess . killed ) { 
 + onSuccess ( " No ROS process found or the process has been killed before " ) ; 
 } 
 
 syncServerChildProcess . on ( ' exit ' , function ( code ) {

NEAREST DIFF:
diff - - git a / dependencies . list b / dependencies . list 
 index 91cfac3 . . 0025e7c 100644 
 - - - a / dependencies . list 
 + + + b / dependencies . list 
 @ @ - 5 , 4 + 5 , 4 @ @ REALM _ SYNC _ SHA256 = 5e09e54e68e78683e006898f5a703f80e0ee49492fb0f9dc2384fcbbb9f02f 
 
 # Object Server Release used by Integration tests . Installed using NPM . 
 # Use ` npm view realm - object - server versions ` to get a list of available versions . 
 - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 34 
 + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha . 35 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java 
 index 6ca1f3a . . 827ec07 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / ChangePasswordRequest . java 
 @ @ - 56 , 9 + 56 , 9 @ @ public class ChangePasswordRequest { 
 public String toJson ( ) { 
 try { 
 JSONObject request = new JSONObject ( ) ; 
 - request . put ( " newPassword " , newPassword ) ; 
 + request . put ( " new _ password " , newPassword ) ; 
 if ( userID ! = null ) { 
 - request . put ( " userId " , userID ) ; 
 + request . put ( " user _ id " , userID ) ; 
 } 
 return request . toString ( ) ; 
 } catch ( JSONException e ) { 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java 
 index eb60bd4 . . a9d93d7 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / LookupUserIdResponse . java 
 @ @ - 34 , 8 + 34 , 8 @ @ import okhttp3 . Response ; 
 * / 
 public class LookupUserIdResponse extends AuthServerResponse { 
 
 - private static final String JSON _ FIELD _ USER _ ID = " userId " ; 
 - private static final String JSON _ FIELD _ USER _ IS _ ADMIN = " isAdmin " ; 
 + private static final String JSON _ FIELD _ USER _ ID = " user _ id " ; 
 + private static final String JSON _ FIELD _ USER _ IS _ ADMIN = " is _ admin " ; 
 private static final String JSON _ FIELD _ METADATA = " metadata " ; 
 
 private final String userId ; 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 index e14a262 . . 256df2f 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 @ @ - 185 , 6 + 185 , 7 @ @ public class AuthTests extends StandardIntegrationTest { 
 } 
 
 @ Test 
 + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 335 " ) 
 public void changePassword ( ) { 
 String username = UUID . randomUUID ( ) . toString ( ) ; 
 String originalPassword = " password " ; 
 @ @ - 204 , 6 + 205 , 7 @ @ public class AuthTests extends StandardIntegrationTest { 
 } 
 
 @ Test 
 + @ Ignore ( " See https : / / github . com / realm / ros / issues / 335 " ) 
 public void changePassword _ using _ admin ( ) { 
 String username = UUID . randomUUID ( ) . toString ( ) ; 
 String originalPassword = " password " ; 
 @ @ - 231 , 6 + 233 , 7 @ @ public class AuthTests extends StandardIntegrationTest { 
 
 @ Test 
 @ RunTestInLooperThread 
 + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 335 " ) 
 public void changePassword _ using _ admin _ async ( ) { 
 final String username = UUID . randomUUID ( ) . toString ( ) ; 
 final String originalPassword = " password " ; 
 @ @ - 595 , 6 + 598 , 7 @ @ public class AuthTests extends StandardIntegrationTest { 
 } 
 
 @ Test 
 + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) 
 public void retrieve ( ) { 
 final SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; 
 
 @ @ - 618 , 6 + 622 , 7 @ @ public class AuthTests extends StandardIntegrationTest { 
 / / retrieving a logged out user 
 @ Test 
 @ RunTestInLooperThread 
 + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) 
 public void retrieve _ logout ( ) { 
 final SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; 
 
 @ @ - 685 , 6 + 690 , 7 @ @ public class AuthTests extends StandardIntegrationTest { 
 } 
 
 @ Test 
 + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) 
 public void retrieve _ notAdmin ( ) { 
 final String username1 = UUID . randomUUID ( ) . toString ( ) ; 
 final String password1 = " password " ; 
 @ @ - 708 , 6 + 714 , 7 @ @ public class AuthTests extends StandardIntegrationTest { 
 
 @ Test 
 @ RunTestInLooperThread 
 + @ Ignore ( " Wait for https : / / github . com / realm / ros / issues / 333 " ) 
 public void retrieve _ async ( ) { 
 final String username = UUID . randomUUID ( ) . toString ( ) ; 
 final String password = " password " ; 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java 
 index beb5c0c . . a669b7d 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / utils / UserFactory . java 
 @ @ - 92 , 23 + 92 , 7 @ @ public class UserFactory { 
 / / ` admin ` required as user identifier to be granted admin rights . 
 / / ROS 2 . 0 comes with a default admin user named " realm - admin " with password " " . 
 SyncCredentials credentials = SyncCredentials . usernamePassword ( " realm - admin " , " " , false ) ; 
 - int attempts = 3 ; 
 - while ( attempts > 0 ) { 
 - attempts - - ; 
 - try { 
 - return SyncUser . login ( credentials , authUrl ) ; 
 - } catch ( ObjectServerError e ) { 
 - / / ROS default admin user might not be created yet , we need to retry . 
 - / / Remove this work - around when https : / / github . com / realm / ros / issues / 282 
 - / / is fixed . 
 - if ( e . getErrorCode ( ) ! = ErrorCode . INVALID _ CREDENTIALS ) { 
 - throw e ; 
 - } 
 - SystemClock . sleep ( 1000 ) ; 
 - } 
 - } 
 - 
 - throw new IllegalStateException ( " Could not login ' realm - admin ' " ) ; 
 + return SyncUser . login ( credentials , authUrl ) ; 
 } 
 
 / / Since we don ' t have a reliable way to reset the sync server and client , just use a new user factory for every 
 @ @ - 165 , 8 + 149 , 10 @ @ public class UserFactory { 
 for ( SyncUser user : users . values ( ) ) { 
 user . logout ( ) ; 
 } 
 - SystemClock . sleep ( 2000 ) ; / / Remove when https : / / github . com / realm / ros / issues / 304 is fixed 
 + / / FIXME https : / / github . com / realm / ros / issues / 338 
 + SystemClock . sleep ( 2000 ) ; 
 allUsersLoggedOut . countDown ( ) ; 
 + 
 } 
 } ) ; 
 TestHelper . awaitOrFail ( allUsersLoggedOut ) ;
