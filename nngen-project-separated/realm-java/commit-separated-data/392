BLEU SCORE: 0.10014525608798037

TEST MSG: Fix flaky test
GENERATED MSG: Added a unit test for notifications count

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> index d6af71d . . cbeced6 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> @ @ - 754 , 18 + 754 , 6 @ @ public class TypeBasedNotificationsTests { <nl> public void multiple _ callbacks _ should _ be _ invoked _ realmresults _ sync ( ) { <nl> final int NUMBER _ OF _ LISTENERS = 7 ; <nl> final Realm realm = looperThread . realm ; <nl> - realm . addChangeListener ( new RealmChangeListener < Realm > ( ) { <nl> - @ Override <nl> - public void onChange ( Realm object ) { <nl> - looperThread . postRunnable ( new Runnable ( ) { <nl> - @ Override <nl> - public void run ( ) { <nl> - assertEquals ( NUMBER _ OF _ LISTENERS , typebasedCommitInvocations . get ( ) ) ; <nl> - looperThread . testComplete ( ) ; <nl> - } <nl> - } ) ; <nl> - } <nl> - } ) ; <nl> <nl> realm . beginTransaction ( ) ; <nl> Dog akamaru = realm . createObject ( Dog . class ) ; <nl> @ @ - 776 , 8 + 764 , 12 @ @ public class TypeBasedNotificationsTests { <nl> for ( int i = 0 ; i < NUMBER _ OF _ LISTENERS ; i + + ) { <nl> dogs . addChangeListener ( new RealmChangeListener < RealmResults < Dog > > ( ) { <nl> @ Override <nl> - public void onChange ( RealmResults < Dog > object ) { <nl> - typebasedCommitInvocations . incrementAndGet ( ) ; <nl> + public void onChange ( RealmResults < Dog > results ) { <nl> + assertEquals ( 17 , results . first ( ) . getAge ( ) ) ; <nl> + if ( typebasedCommitInvocations . incrementAndGet ( ) = = NUMBER _ OF _ LISTENERS ) { <nl> + looperThread . testComplete ( ) ; <nl> + } <nl> + assertTrue ( typebasedCommitInvocations . get ( ) < = NUMBER _ OF _ LISTENERS ) ; <nl> } <nl> } ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / java / io / realm / NotificationsTest . java b / realm / src / androidTest / java / io / realm / NotificationsTest . java <nl> index 31b6850 . . 66a1518 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / NotificationsTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / NotificationsTest . java <nl> @ @ - 203 , 4 + 203 , 33 @ @ public class NotificationsTest extends AndroidTestCase { <nl> } <nl> assertTrue ( done . get ( ) ) ; <nl> } <nl> + <nl> + public void testNotificationsNumber ( ) throws InterruptedException { <nl> + final AtomicInteger counter = new AtomicInteger ( 0 ) ; <nl> + HandlerThread thread = new HandlerThread ( " Receiver " ) { <nl> + @ Override <nl> + protected void onLooperPrepared ( ) { <nl> + Realm realm = Realm . getInstance ( getContext ( ) ) ; <nl> + realm . addChangeListener ( new RealmChangeListener ( ) { <nl> + @ Override <nl> + public void onChange ( ) { <nl> + counter . incrementAndGet ( ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + } ; <nl> + thread . start ( ) ; <nl> + <nl> + Realm realm = Realm . getInstance ( getContext ( ) , false ) ; <nl> + realm . beginTransaction ( ) ; <nl> + Dog dog = realm . createObject ( Dog . class ) ; <nl> + dog . setName ( " Rex " ) ; <nl> + realm . commitTransaction ( ) ; <nl> + <nl> + Thread . sleep ( 100 ) ; <nl> + <nl> + assertEquals ( 1 , counter . get ( ) ) ; <nl> + <nl> + thread . join ( 1 ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 index d6af71d . . cbeced6 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 @ @ - 754 , 18 + 754 , 6 @ @ public class TypeBasedNotificationsTests { 
 public void multiple _ callbacks _ should _ be _ invoked _ realmresults _ sync ( ) { 
 final int NUMBER _ OF _ LISTENERS = 7 ; 
 final Realm realm = looperThread . realm ; 
 - realm . addChangeListener ( new RealmChangeListener < Realm > ( ) { 
 - @ Override 
 - public void onChange ( Realm object ) { 
 - looperThread . postRunnable ( new Runnable ( ) { 
 - @ Override 
 - public void run ( ) { 
 - assertEquals ( NUMBER _ OF _ LISTENERS , typebasedCommitInvocations . get ( ) ) ; 
 - looperThread . testComplete ( ) ; 
 - } 
 - } ) ; 
 - } 
 - } ) ; 
 
 realm . beginTransaction ( ) ; 
 Dog akamaru = realm . createObject ( Dog . class ) ; 
 @ @ - 776 , 8 + 764 , 12 @ @ public class TypeBasedNotificationsTests { 
 for ( int i = 0 ; i < NUMBER _ OF _ LISTENERS ; i + + ) { 
 dogs . addChangeListener ( new RealmChangeListener < RealmResults < Dog > > ( ) { 
 @ Override 
 - public void onChange ( RealmResults < Dog > object ) { 
 - typebasedCommitInvocations . incrementAndGet ( ) ; 
 + public void onChange ( RealmResults < Dog > results ) { 
 + assertEquals ( 17 , results . first ( ) . getAge ( ) ) ; 
 + if ( typebasedCommitInvocations . incrementAndGet ( ) = = NUMBER _ OF _ LISTENERS ) { 
 + looperThread . testComplete ( ) ; 
 + } 
 + assertTrue ( typebasedCommitInvocations . get ( ) < = NUMBER _ OF _ LISTENERS ) ; 
 } 
 } ) ; 
 }

NEAREST DIFF:
diff - - git a / realm / src / androidTest / java / io / realm / NotificationsTest . java b / realm / src / androidTest / java / io / realm / NotificationsTest . java 
 index 31b6850 . . 66a1518 100644 
 - - - a / realm / src / androidTest / java / io / realm / NotificationsTest . java 
 + + + b / realm / src / androidTest / java / io / realm / NotificationsTest . java 
 @ @ - 203 , 4 + 203 , 33 @ @ public class NotificationsTest extends AndroidTestCase { 
 } 
 assertTrue ( done . get ( ) ) ; 
 } 
 + 
 + public void testNotificationsNumber ( ) throws InterruptedException { 
 + final AtomicInteger counter = new AtomicInteger ( 0 ) ; 
 + HandlerThread thread = new HandlerThread ( " Receiver " ) { 
 + @ Override 
 + protected void onLooperPrepared ( ) { 
 + Realm realm = Realm . getInstance ( getContext ( ) ) ; 
 + realm . addChangeListener ( new RealmChangeListener ( ) { 
 + @ Override 
 + public void onChange ( ) { 
 + counter . incrementAndGet ( ) ; 
 + } 
 + } ) ; 
 + } 
 + } ; 
 + thread . start ( ) ; 
 + 
 + Realm realm = Realm . getInstance ( getContext ( ) , false ) ; 
 + realm . beginTransaction ( ) ; 
 + Dog dog = realm . createObject ( Dog . class ) ; 
 + dog . setName ( " Rex " ) ; 
 + realm . commitTransaction ( ) ; 
 + 
 + Thread . sleep ( 100 ) ; 
 + 
 + assertEquals ( 1 , counter . get ( ) ) ; 
 + 
 + thread . join ( 1 ) ; 
 + } 
 }
