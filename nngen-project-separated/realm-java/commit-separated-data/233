BLEU SCORE: 0.024367494694068095

TEST MSG: Link to debug core lib for debug build
GENERATED MSG: Update sync 2 . 0 . 0 - rc12

TEST DIFF (one line): diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index 9ee2ba5 . . 42d6918 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 35 , 6 + 35 , 8 @ @ ext . coreDir = file ( project . coreSourcePath ? <nl> " $ { project . coreDistributionDir . getAbsolutePath ( ) } / core - $ { project . coreVersion } " ) <nl> ext . ccachePath = project . findProperty ( ' ccachePath ' ) ? : System . getenv ( ' NDK _ CCACHE ' ) <nl> ext . lcachePath = project . findProperty ( ' lcachePath ' ) ? : System . getenv ( ' NDK _ LCACHE ' ) <nl> + / / Set to true to enable linking with debug core . <nl> + ext . enableDebugCore = project . hasProperty ( ' enableDebugCore ' ) ? project . getProperty ( ' enableDebugCore ' ) : false <nl> <nl> android { <nl> compileSdkVersion 25 <nl> @ @ - 54 , 7 + 56 , 8 @ @ android { <nl> / / because of the android . toolchain . cmake shipped with Android SDK CMake 3 . 6 doesn ' t work with our <nl> / / JNI build currently ( lack of lto linking support ) . <nl> / / This file should be removed and use the one from Android SDK cmake package when it supports lto . <nl> - " - DCMAKE _ TOOLCHAIN _ FILE = $ { project . file ( ' src / main / cpp / android . toolchain . cmake ' ) . path } " <nl> + " - DCMAKE _ TOOLCHAIN _ FILE = $ { project . file ( ' src / main / cpp / android . toolchain . cmake ' ) . path } " , <nl> + " - DENABLE _ DEBUG _ CORE = $ project . enableDebugCore " <nl> if ( project . ccachePath ) arguments " - DNDK _ CCACHE = $ project . ccachePath " <nl> if ( project . lcachePath ) arguments " - DNDK _ LCACHE = $ project . lcachePath " <nl> if ( project . hasProperty ( ' buildTargetABIs ' ) & & ! project . getProperty ( ' buildTargetABIs ' ) . trim ( ) . isEmpty ( ) ) { <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> index f30d459 . . 45b4219 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> @ @ - 803 , 10 + 803 , 9 @ @ public class RealmTests { <nl> o . setColumnLong ( i ) ; <nl> o . setColumnString ( codePoint ) ; <nl> <nl> - AllTypes realmType = realm . where ( AllTypes . class ) . equalTo ( " columnLong " , i ) . findFirst ( ) ; <nl> if ( i > 1 ) { <nl> assertEquals ( " Codepoint : " + i + " / " + currentUnicode , codePoint , <nl> - realmType . getColumnString ( ) ) ; / / codepoint 0 is NULL , ignore for now . <nl> + o . getColumnString ( ) ) ; / / codepoint 0 is NULL , ignore for now . <nl> } <nl> i + + ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> index e49a13e . . d88f3f8 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> @ @ - 151 , 8 + 151 , 11 @ @ public class SyncManagerTests { <nl> SyncConfiguration config = new SyncConfiguration . Builder ( user , url ) <nl> . build ( ) ; <nl> / / This will trigger the creation of the session <nl> - Realm . getInstance ( config ) ; <nl> + Realm realm = Realm . getInstance ( config ) ; <nl> SyncSession session = SyncManager . getSession ( config ) ; <nl> assertEquals ( user , session . getUser ( ) ) ; / / see also SessionTests <nl> + <nl> + realm . close ( ) ; <nl> + SyncManager . reset ( ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / main / cpp / CMakeLists . txt b / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> index 3d7e315 . . b2bd687 100644 <nl> - - - a / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> + + + b / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> @ @ - 62 , 23 + 62 , 25 @ @ create _ javah ( TARGET jni _ headers <nl> DEPENDS $ { classes _ PATH } <nl> ) <nl> <nl> - # TODO : Ideally the debug build should link with core ' s debug build . But core dbg lib has <nl> - # some compile options problems with arm , especially with macro REALM _ DEBUG . Link to core <nl> - # dbg for debug build when that gets solved . <nl> - # We always link to the non - dbg version of core libs for now . <nl> - # This means only JNI part has debugging symbols with debug build . <nl> - # Debugging with core source code will also be done though anther approach - - compiling the core <nl> - # with cmake inside android project . <nl> + # Link to core / sync debug lib for debug build if it is debug build and linking with debug core is enabled . <nl> + # FIXME : Ideally we should linking to debug core on CI for testing , but the assertions slow down the CI a lot . <nl> + if ( CMAKE _ BUILD _ TYPE STREQUAL " Debug " AND $ { ENABLE _ DEBUG _ CORE } ) <nl> + set ( debug _ lib _ SUFFIX " - dbg " ) <nl> + set ( CMAKE _ CXX _ FLAGS _ DEBUG " $ { CMAKE _ CXX _ FLAGS _ DEBUG } - DREALM _ DEBUG " ) <nl> + else ( ) <nl> + set ( CMAKE _ CXX _ FLAGS _ DEBUG " $ { CMAKE _ CXX _ FLAGS _ DEBUG } - DNDEBUG " ) <nl> + endif ( ) <nl> + <nl> # Configure import realm core lib <nl> - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - $ { ANDROID _ ABI } . a ) <nl> + set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - $ { ANDROID _ ABI } $ { debug _ lib _ SUFFIX } . a ) <nl> # Workaround for old core ' s funny ABI nicknames <nl> if ( NOT EXISTS $ { core _ lib _ PATH } ) <nl> if ( ARMEABI ) <nl> - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm . a ) <nl> + set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm $ { debug _ lib _ SUFFIX } . a ) <nl> elseif ( ARMEABI _ V7A ) <nl> - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm - v7a . a ) <nl> + set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm - v7a $ { debug _ lib _ SUFFIX } . a ) <nl> elseif ( ARM64 _ V8A ) <nl> - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm64 . a ) <nl> + set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm64 $ { debug _ lib _ SUFFIX } . a ) <nl> else ( ) <nl> message ( FATAL _ ERROR " Cannot find core lib file : $ { core _ lib _ PATH } " ) <nl> endif ( ) <nl> @ @ - 93 , 15 + 95 , 15 @ @ set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ PAT <nl> <nl> if ( build _ SYNC ) <nl> # Sync static library <nl> - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - $ { ANDROID _ ABI } . a ) <nl> + set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - $ { ANDROID _ ABI } $ { debug _ lib _ SUFFIX } . a ) <nl> # Workaround for old core ' s funny ABI nicknames <nl> if ( NOT EXISTS $ { sync _ lib _ PATH } ) <nl> if ( ARMEABI ) <nl> - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm . a ) <nl> + set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm $ { debug _ lib _ SUFFIX } . a ) <nl> elseif ( ARMEABI _ V7A ) <nl> - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm - v7a . a ) <nl> + set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm - v7a $ { debug _ lib _ SUFFIX } . a ) <nl> elseif ( ARM64 _ V8A ) <nl> - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm64 . a ) <nl> + set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm64 $ { debug _ lib _ SUFFIX } . a ) <nl> else ( ) <nl> message ( FATAL _ ERROR " Cannot find sync lib file : $ { sync _ lib _ PATH } " ) <nl> endif ( ) <nl> @ @ - 151 , 7 + 153 , 7 @ @ endif ( ) <nl> # And this issue doesn ' t seem to impact the core compiling . <nl> set ( CMAKE _ CXX _ FLAGS _ RELEASE " - O2 - DNDEBUG " ) <nl> # - ggdb doesn ' t play well with - flto <nl> - set ( CMAKE _ CXX _ FLAGS _ DEBUG " - ggdb - Og - DNDEBUG " ) <nl> + set ( CMAKE _ CXX _ FLAGS _ DEBUG " $ { CMAKE _ CXX _ FLAGS _ DEBUG } - ggdb - Og " ) <nl> set ( CMAKE _ CXX _ FLAGS " $ { CMAKE _ CXX _ FLAGS } $ { REALM _ COMMON _ CXX _ FLAGS } $ { WARNING _ CXX _ FLAGS } $ { ABI _ CXX _ FLAGS } " ) <nl> <nl> # Set link flags
NEAREST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index ddac276 . . 41daf3c 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 14 , 7 + 14 , 8 @ @ <nl> <nl> # # # Internal <nl> <nl> - * Upgraded to Realm Sync 2 . 0 . 0 - rc9 <nl> + * Upgraded to Realm Sync 2 . 0 . 0 - rc12 . <nl> + * Upgraded to Realm Core 3 . 0 . 0 - rc3 . <nl> <nl> # # # Credits <nl> <nl> diff - - git a / dependencies . list b / dependencies . list <nl> index 6de8b3a . . 0087f43 100644 <nl> - - - a / dependencies . list <nl> + + + b / dependencies . list <nl> @ @ - 1 , 7 + 1 , 7 @ @ <nl> # Realm Sync Core release used by Realm Java <nl> # https : / / github . com / realm / realm - sync / releases <nl> - REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc9 <nl> - REALM _ SYNC _ SHA256 = c019adf4c2908b24fd63561579bf7f15691c4ecf0b9deaf74d3fe1f888cdb2eb <nl> + REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc12 <nl> + REALM _ SYNC _ SHA256 = 5f111903159ee2d74c5418560c72977e91a10e291e23e6a7d9999aa856858ca4 <nl> <nl> # Object Server Release used by Integration tests <nl> # Stable releases : https : / / packagecloud . io / realm / realm ? filter = debs <nl> @ @ - 10 , 4 + 10 , 4 @ @ REALM _ SYNC _ SHA256 = c019adf4c2908b24fd63561579bf7f15691c4ecf0b9deaf74d3fe1f888cdb2 <nl> # / tools / sync _ test _ server / Dockerfile specify which repo ( apt ) we should <nl> # install / use between ' realm ' , ' realm - beta ' and ' realm - testing ' , the version below should <nl> # correspond to an existing version on the * specified * repo . <nl> - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha9 - 176 <nl> + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - rc2 - 285 <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> index 0a72ea5 . . 2998dae 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> @ @ - 2935 , 10 + 2935 , 7 @ @ public class RealmQueryTests extends QueryTests { <nl> RealmResults < IndexedFields > results = realm . where ( IndexedFields . class ) <nl> . equalTo ( IndexedFields . FIELD _ INDEXED _ STRING , " rover " , Case . INSENSITIVE ) <nl> . findAll ( ) ; <nl> - / / FIXME : This bug has not been fixed by the core on the master - 4 . 0 right now . <nl> - / / This test will failed when core gets updated . <nl> - / / assertEquals ( 2 , results . size ( ) ) ; <nl> - assertEquals ( 1 , results . size ( ) ) ; <nl> + assertEquals ( 2 , results . size ( ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / realm / realm - library / src / main / cpp / CMakeLists . txt b / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> index 3d7e315 . . 356f583 100644 <nl> - - - a / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> + + + b / realm / realm - library / src / main / cpp / CMakeLists . txt <nl> @ @ - 111 , 6 + 111 , 31 @ @ if ( build _ SYNC ) <nl> IMPORTED _ LINK _ INTERFACE _ LIBRARIES lib _ realm _ core ) <nl> endif ( ) <nl> <nl> + # Download openssl lib <nl> + # FIXME sync packed openssl with librealm - sync - android - xxx . a . <nl> + # Remove this check after https : / / github . com / realm / realm - sync / issues / 1469 fixed . <nl> + if ( NOT build _ SYNC ) <nl> + # string ( TOLOWER " $ { CMAKE _ BUILD _ TYPE } " openssl _ build _ TYPE ) <nl> + set ( openssl _ build _ TYPE " release " ) <nl> + # FIXME Read the openssl version from core when the core / sync release has that information . <nl> + set ( openssl _ VERSION " 1 . 0 . 2k " ) <nl> + set ( openssl _ FILENAME " openssl - $ { openssl _ build _ TYPE } - $ { openssl _ VERSION } - Android - $ { ANDROID _ ABI } " ) <nl> + set ( openssl _ URL " http : / / static . realm . io / downloads / openssl / $ { openssl _ VERSION } / Android / $ { ANDROID _ ABI } / $ { openssl _ FILENAME } . tar . gz " ) <nl> + <nl> + message ( STATUS " Downloading OpenSSL . . . " ) <nl> + file ( DOWNLOAD " $ { openssl _ URL } " " $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } . tar . gz " ) <nl> + <nl> + message ( STATUS " Uncompressing OpenSSL . . . " ) <nl> + execute _ process ( COMMAND $ { CMAKE _ COMMAND } - E tar xfz " $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } . tar . gz " <nl> + WORKING _ DIRECTORY " $ { PROJECT _ BINARY _ DIR } " ) <nl> + <nl> + message ( STATUS " Importing OpenSSL . . . " ) <nl> + include ( $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } / openssl . cmake ) <nl> + get _ target _ property ( openssl _ include _ DIR crypto INTERFACE _ INCLUDE _ DIRECTORIES ) <nl> + get _ target _ property ( crypto _ LIB crypto IMPORTED _ LOCATION ) <nl> + get _ target _ property ( ssl _ LIB ssl IMPORTED _ LOCATION ) <nl> + endif ( ) <nl> + <nl> # build application ' s shared lib <nl> include _ directories ( $ { REALM _ CORE _ DIST _ DIR } / include <nl> $ { CMAKE _ SOURCE _ DIR } <nl> @ @ - 200 , 7 + 225 , 7 @ @ add _ dependencies ( realm - jni jni _ headers ) <nl> if ( build _ SYNC ) <nl> target _ link _ libraries ( realm - jni log android lib _ realm _ sync ) <nl> else ( ) <nl> - target _ link _ libraries ( realm - jni log android lib _ realm _ core ) <nl> + target _ link _ libraries ( realm - jni log android lib _ realm _ core crypto ) <nl> endif ( ) <nl> <nl> # Strip the release so files and backup the unstripped versions <nl> diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp <nl> index ca620e9 . . 7c15806 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp <nl> @ @ - 17 , 6 + 17 , 9 @ @ <nl> # include " io _ realm _ internal _ OsObject . h " <nl> <nl> # include < realm / row . hpp > <nl> + # if REALM _ ENABLE _ SYNC <nl> + # include < realm / sync / object . hpp > <nl> + # endif <nl> # include < object _ schema . hpp > <nl> # include < object . hpp > <nl> # include < shared _ realm . hpp > <nl> @ @ - 382 , 3 + 385 , 14 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ OsObject _ nativeCreateRowWithStrin <nl> <nl> return realm : : npos ; <nl> } <nl> + <nl> + JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ OsObject _ nativeGetObjectIdColumName ( JNIEnv * env , jclass ) <nl> + { <nl> + / / TODO : Remove the macro and get the name from core when core has stable ID support . <nl> + # if REALM _ ENABLE _ SYNC <nl> + const char * object _ id _ column _ name = sync : : object _ id _ column _ name ; <nl> + # else <nl> + const char * object _ id _ column _ name = " ! OID " ; <nl> + # endif <nl> + return to _ jstring ( env , object _ id _ column _ name ) ; <nl> + } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java <nl> index ed08e0b . . 3657d87 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import java . util . Set ; <nl> <nl> import io . realm . annotations . Required ; <nl> import io . realm . internal . ColumnInfo ; <nl> + import io . realm . internal . OsObject ; <nl> import io . realm . internal . Table ; <nl> import io . realm . internal . fields . FieldDescriptor ; <nl> <nl> @ @ - 516 , 7 + 517 , 7 @ @ public class RealmObjectSchema { <nl> Set < String > columnNames = new LinkedHashSet < > ( columnCount ) ; <nl> for ( int i = 0 ; i < columnCount ; i + + ) { <nl> String name = table . getColumnName ( i ) ; <nl> - if ( ! name . equals ( Table . OBJECT _ ID _ COLUMN _ NAME ) ) { / / Filter out stable ID column <nl> + if ( ! OsObject . isObjectIdColumn ( name ) ) { <nl> columnNames . add ( name ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / OsObject . java b / realm / realm - library / src / main / java / io / realm / internal / OsObject . java <nl> index 56a4676 . . 4f8b0b8 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / OsObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / OsObject . java <nl> @ @ - 29 , 6 + 29 , 8 @ @ import io . realm . exceptions . RealmException ; <nl> @ KeepMember <nl> public class OsObject implements NativeObject { <nl> <nl> + private static final String OBJECT _ ID _ COLUMN _ NAME = nativeGetObjectIdColumName ( ) ; <nl> + <nl> private static class OsObjectChangeSet implements ObjectChangeSet { <nl> final String [ ] changedFields ; <nl> final boolean deleted ; <nl> @ @ - 237 , 6 + 239 , 10 @ @ public class OsObject implements NativeObject { <nl> } <nl> } <nl> <nl> + public static boolean isObjectIdColumn ( String columnName ) { <nl> + return OBJECT _ ID _ COLUMN _ NAME . equals ( columnName ) ; <nl> + } <nl> + <nl> / / Called by JNI <nl> @ SuppressWarnings ( " unused " ) <nl> @ KeepMember <nl> @ @ - 276 , 4 + 282 , 7 @ @ public class OsObject implements NativeObject { <nl> private static native long nativeCreateRowWithStringPrimaryKey ( long sharedRealmPtr , <nl> long tablePtr , long pk _ column _ index , <nl> String primaryKeyValue ) ; <nl> + <nl> + / / Return sync : : object _ id _ column _ name <nl> + private static native String nativeGetObjectIdColumName ( ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> index b2e5fd5 . . 8a2bb38 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java <nl> @ @ - 43 , 7 + 43 , 6 @ @ public class Table implements TableSchema , NativeObject { <nl> private static final String PRIMARY _ KEY _ FIELD _ COLUMN _ NAME = " pk _ property " ; <nl> private static final long PRIMARY _ KEY _ FIELD _ COLUMN _ INDEX = 1 ; <nl> public static final long NO _ PRIMARY _ KEY = - 2 ; <nl> - public static final String OBJECT _ ID _ COLUMN _ NAME = " _ _ OID " ; / / Column for stable ID <nl> <nl> private static final long nativeFinalizerPtr = nativeGetFinalizerPtr ( ) ; <nl>

TEST DIFF:
diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index 9ee2ba5 . . 42d6918 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 35 , 6 + 35 , 8 @ @ ext . coreDir = file ( project . coreSourcePath ? 
 " $ { project . coreDistributionDir . getAbsolutePath ( ) } / core - $ { project . coreVersion } " ) 
 ext . ccachePath = project . findProperty ( ' ccachePath ' ) ? : System . getenv ( ' NDK _ CCACHE ' ) 
 ext . lcachePath = project . findProperty ( ' lcachePath ' ) ? : System . getenv ( ' NDK _ LCACHE ' ) 
 + / / Set to true to enable linking with debug core . 
 + ext . enableDebugCore = project . hasProperty ( ' enableDebugCore ' ) ? project . getProperty ( ' enableDebugCore ' ) : false 
 
 android { 
 compileSdkVersion 25 
 @ @ - 54 , 7 + 56 , 8 @ @ android { 
 / / because of the android . toolchain . cmake shipped with Android SDK CMake 3 . 6 doesn ' t work with our 
 / / JNI build currently ( lack of lto linking support ) . 
 / / This file should be removed and use the one from Android SDK cmake package when it supports lto . 
 - " - DCMAKE _ TOOLCHAIN _ FILE = $ { project . file ( ' src / main / cpp / android . toolchain . cmake ' ) . path } " 
 + " - DCMAKE _ TOOLCHAIN _ FILE = $ { project . file ( ' src / main / cpp / android . toolchain . cmake ' ) . path } " , 
 + " - DENABLE _ DEBUG _ CORE = $ project . enableDebugCore " 
 if ( project . ccachePath ) arguments " - DNDK _ CCACHE = $ project . ccachePath " 
 if ( project . lcachePath ) arguments " - DNDK _ LCACHE = $ project . lcachePath " 
 if ( project . hasProperty ( ' buildTargetABIs ' ) & & ! project . getProperty ( ' buildTargetABIs ' ) . trim ( ) . isEmpty ( ) ) { 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 index f30d459 . . 45b4219 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 @ @ - 803 , 10 + 803 , 9 @ @ public class RealmTests { 
 o . setColumnLong ( i ) ; 
 o . setColumnString ( codePoint ) ; 
 
 - AllTypes realmType = realm . where ( AllTypes . class ) . equalTo ( " columnLong " , i ) . findFirst ( ) ; 
 if ( i > 1 ) { 
 assertEquals ( " Codepoint : " + i + " / " + currentUnicode , codePoint , 
 - realmType . getColumnString ( ) ) ; / / codepoint 0 is NULL , ignore for now . 
 + o . getColumnString ( ) ) ; / / codepoint 0 is NULL , ignore for now . 
 } 
 i + + ; 
 } 
 diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 index e49a13e . . d88f3f8 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 @ @ - 151 , 8 + 151 , 11 @ @ public class SyncManagerTests { 
 SyncConfiguration config = new SyncConfiguration . Builder ( user , url ) 
 . build ( ) ; 
 / / This will trigger the creation of the session 
 - Realm . getInstance ( config ) ; 
 + Realm realm = Realm . getInstance ( config ) ; 
 SyncSession session = SyncManager . getSession ( config ) ; 
 assertEquals ( user , session . getUser ( ) ) ; / / see also SessionTests 
 + 
 + realm . close ( ) ; 
 + SyncManager . reset ( ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / main / cpp / CMakeLists . txt b / realm / realm - library / src / main / cpp / CMakeLists . txt 
 index 3d7e315 . . b2bd687 100644 
 - - - a / realm / realm - library / src / main / cpp / CMakeLists . txt 
 + + + b / realm / realm - library / src / main / cpp / CMakeLists . txt 
 @ @ - 62 , 23 + 62 , 25 @ @ create _ javah ( TARGET jni _ headers 
 DEPENDS $ { classes _ PATH } 
 ) 
 
 - # TODO : Ideally the debug build should link with core ' s debug build . But core dbg lib has 
 - # some compile options problems with arm , especially with macro REALM _ DEBUG . Link to core 
 - # dbg for debug build when that gets solved . 
 - # We always link to the non - dbg version of core libs for now . 
 - # This means only JNI part has debugging symbols with debug build . 
 - # Debugging with core source code will also be done though anther approach - - compiling the core 
 - # with cmake inside android project . 
 + # Link to core / sync debug lib for debug build if it is debug build and linking with debug core is enabled . 
 + # FIXME : Ideally we should linking to debug core on CI for testing , but the assertions slow down the CI a lot . 
 + if ( CMAKE _ BUILD _ TYPE STREQUAL " Debug " AND $ { ENABLE _ DEBUG _ CORE } ) 
 + set ( debug _ lib _ SUFFIX " - dbg " ) 
 + set ( CMAKE _ CXX _ FLAGS _ DEBUG " $ { CMAKE _ CXX _ FLAGS _ DEBUG } - DREALM _ DEBUG " ) 
 + else ( ) 
 + set ( CMAKE _ CXX _ FLAGS _ DEBUG " $ { CMAKE _ CXX _ FLAGS _ DEBUG } - DNDEBUG " ) 
 + endif ( ) 
 + 
 # Configure import realm core lib 
 - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - $ { ANDROID _ ABI } . a ) 
 + set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - $ { ANDROID _ ABI } $ { debug _ lib _ SUFFIX } . a ) 
 # Workaround for old core ' s funny ABI nicknames 
 if ( NOT EXISTS $ { core _ lib _ PATH } ) 
 if ( ARMEABI ) 
 - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm . a ) 
 + set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm $ { debug _ lib _ SUFFIX } . a ) 
 elseif ( ARMEABI _ V7A ) 
 - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm - v7a . a ) 
 + set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm - v7a $ { debug _ lib _ SUFFIX } . a ) 
 elseif ( ARM64 _ V8A ) 
 - set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm64 . a ) 
 + set ( core _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - android - arm64 $ { debug _ lib _ SUFFIX } . a ) 
 else ( ) 
 message ( FATAL _ ERROR " Cannot find core lib file : $ { core _ lib _ PATH } " ) 
 endif ( ) 
 @ @ - 93 , 15 + 95 , 15 @ @ set _ target _ properties ( lib _ realm _ core PROPERTIES IMPORTED _ LOCATION $ { core _ lib _ PAT 
 
 if ( build _ SYNC ) 
 # Sync static library 
 - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - $ { ANDROID _ ABI } . a ) 
 + set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - $ { ANDROID _ ABI } $ { debug _ lib _ SUFFIX } . a ) 
 # Workaround for old core ' s funny ABI nicknames 
 if ( NOT EXISTS $ { sync _ lib _ PATH } ) 
 if ( ARMEABI ) 
 - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm . a ) 
 + set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm $ { debug _ lib _ SUFFIX } . a ) 
 elseif ( ARMEABI _ V7A ) 
 - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm - v7a . a ) 
 + set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm - v7a $ { debug _ lib _ SUFFIX } . a ) 
 elseif ( ARM64 _ V8A ) 
 - set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm64 . a ) 
 + set ( sync _ lib _ PATH $ { REALM _ CORE _ DIST _ DIR } / librealm - sync - android - arm64 $ { debug _ lib _ SUFFIX } . a ) 
 else ( ) 
 message ( FATAL _ ERROR " Cannot find sync lib file : $ { sync _ lib _ PATH } " ) 
 endif ( ) 
 @ @ - 151 , 7 + 153 , 7 @ @ endif ( ) 
 # And this issue doesn ' t seem to impact the core compiling . 
 set ( CMAKE _ CXX _ FLAGS _ RELEASE " - O2 - DNDEBUG " ) 
 # - ggdb doesn ' t play well with - flto 
 - set ( CMAKE _ CXX _ FLAGS _ DEBUG " - ggdb - Og - DNDEBUG " ) 
 + set ( CMAKE _ CXX _ FLAGS _ DEBUG " $ { CMAKE _ CXX _ FLAGS _ DEBUG } - ggdb - Og " ) 
 set ( CMAKE _ CXX _ FLAGS " $ { CMAKE _ CXX _ FLAGS } $ { REALM _ COMMON _ CXX _ FLAGS } $ { WARNING _ CXX _ FLAGS } $ { ABI _ CXX _ FLAGS } " ) 
 
 # Set link flags

NEAREST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index ddac276 . . 41daf3c 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 14 , 7 + 14 , 8 @ @ 
 
 # # # Internal 
 
 - * Upgraded to Realm Sync 2 . 0 . 0 - rc9 
 + * Upgraded to Realm Sync 2 . 0 . 0 - rc12 . 
 + * Upgraded to Realm Core 3 . 0 . 0 - rc3 . 
 
 # # # Credits 
 
 diff - - git a / dependencies . list b / dependencies . list 
 index 6de8b3a . . 0087f43 100644 
 - - - a / dependencies . list 
 + + + b / dependencies . list 
 @ @ - 1 , 7 + 1 , 7 @ @ 
 # Realm Sync Core release used by Realm Java 
 # https : / / github . com / realm / realm - sync / releases 
 - REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc9 
 - REALM _ SYNC _ SHA256 = c019adf4c2908b24fd63561579bf7f15691c4ecf0b9deaf74d3fe1f888cdb2eb 
 + REALM _ SYNC _ VERSION = 2 . 0 . 0 - rc12 
 + REALM _ SYNC _ SHA256 = 5f111903159ee2d74c5418560c72977e91a10e291e23e6a7d9999aa856858ca4 
 
 # Object Server Release used by Integration tests 
 # Stable releases : https : / / packagecloud . io / realm / realm ? filter = debs 
 @ @ - 10 , 4 + 10 , 4 @ @ REALM _ SYNC _ SHA256 = c019adf4c2908b24fd63561579bf7f15691c4ecf0b9deaf74d3fe1f888cdb2 
 # / tools / sync _ test _ server / Dockerfile specify which repo ( apt ) we should 
 # install / use between ' realm ' , ' realm - beta ' and ' realm - testing ' , the version below should 
 # correspond to an existing version on the * specified * repo . 
 - REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - alpha9 - 176 
 + REALM _ OBJECT _ SERVER _ DE _ VERSION = 2 . 0 . 0 - rc2 - 285 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 index 0a72ea5 . . 2998dae 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 @ @ - 2935 , 10 + 2935 , 7 @ @ public class RealmQueryTests extends QueryTests { 
 RealmResults < IndexedFields > results = realm . where ( IndexedFields . class ) 
 . equalTo ( IndexedFields . FIELD _ INDEXED _ STRING , " rover " , Case . INSENSITIVE ) 
 . findAll ( ) ; 
 - / / FIXME : This bug has not been fixed by the core on the master - 4 . 0 right now . 
 - / / This test will failed when core gets updated . 
 - / / assertEquals ( 2 , results . size ( ) ) ; 
 - assertEquals ( 1 , results . size ( ) ) ; 
 + assertEquals ( 2 , results . size ( ) ) ; 
 } 
 
 @ Test 
 diff - - git a / realm / realm - library / src / main / cpp / CMakeLists . txt b / realm / realm - library / src / main / cpp / CMakeLists . txt 
 index 3d7e315 . . 356f583 100644 
 - - - a / realm / realm - library / src / main / cpp / CMakeLists . txt 
 + + + b / realm / realm - library / src / main / cpp / CMakeLists . txt 
 @ @ - 111 , 6 + 111 , 31 @ @ if ( build _ SYNC ) 
 IMPORTED _ LINK _ INTERFACE _ LIBRARIES lib _ realm _ core ) 
 endif ( ) 
 
 + # Download openssl lib 
 + # FIXME sync packed openssl with librealm - sync - android - xxx . a . 
 + # Remove this check after https : / / github . com / realm / realm - sync / issues / 1469 fixed . 
 + if ( NOT build _ SYNC ) 
 + # string ( TOLOWER " $ { CMAKE _ BUILD _ TYPE } " openssl _ build _ TYPE ) 
 + set ( openssl _ build _ TYPE " release " ) 
 + # FIXME Read the openssl version from core when the core / sync release has that information . 
 + set ( openssl _ VERSION " 1 . 0 . 2k " ) 
 + set ( openssl _ FILENAME " openssl - $ { openssl _ build _ TYPE } - $ { openssl _ VERSION } - Android - $ { ANDROID _ ABI } " ) 
 + set ( openssl _ URL " http : / / static . realm . io / downloads / openssl / $ { openssl _ VERSION } / Android / $ { ANDROID _ ABI } / $ { openssl _ FILENAME } . tar . gz " ) 
 + 
 + message ( STATUS " Downloading OpenSSL . . . " ) 
 + file ( DOWNLOAD " $ { openssl _ URL } " " $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } . tar . gz " ) 
 + 
 + message ( STATUS " Uncompressing OpenSSL . . . " ) 
 + execute _ process ( COMMAND $ { CMAKE _ COMMAND } - E tar xfz " $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } . tar . gz " 
 + WORKING _ DIRECTORY " $ { PROJECT _ BINARY _ DIR } " ) 
 + 
 + message ( STATUS " Importing OpenSSL . . . " ) 
 + include ( $ { PROJECT _ BINARY _ DIR } / $ { openssl _ FILENAME } / openssl . cmake ) 
 + get _ target _ property ( openssl _ include _ DIR crypto INTERFACE _ INCLUDE _ DIRECTORIES ) 
 + get _ target _ property ( crypto _ LIB crypto IMPORTED _ LOCATION ) 
 + get _ target _ property ( ssl _ LIB ssl IMPORTED _ LOCATION ) 
 + endif ( ) 
 + 
 # build application ' s shared lib 
 include _ directories ( $ { REALM _ CORE _ DIST _ DIR } / include 
 $ { CMAKE _ SOURCE _ DIR } 
 @ @ - 200 , 7 + 225 , 7 @ @ add _ dependencies ( realm - jni jni _ headers ) 
 if ( build _ SYNC ) 
 target _ link _ libraries ( realm - jni log android lib _ realm _ sync ) 
 else ( ) 
 - target _ link _ libraries ( realm - jni log android lib _ realm _ core ) 
 + target _ link _ libraries ( realm - jni log android lib _ realm _ core crypto ) 
 endif ( ) 
 
 # Strip the release so files and backup the unstripped versions 
 diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp 
 index ca620e9 . . 7c15806 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ OsObject . cpp 
 @ @ - 17 , 6 + 17 , 9 @ @ 
 # include " io _ realm _ internal _ OsObject . h " 
 
 # include < realm / row . hpp > 
 + # if REALM _ ENABLE _ SYNC 
 + # include < realm / sync / object . hpp > 
 + # endif 
 # include < object _ schema . hpp > 
 # include < object . hpp > 
 # include < shared _ realm . hpp > 
 @ @ - 382 , 3 + 385 , 14 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ OsObject _ nativeCreateRowWithStrin 
 
 return realm : : npos ; 
 } 
 + 
 + JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ OsObject _ nativeGetObjectIdColumName ( JNIEnv * env , jclass ) 
 + { 
 + / / TODO : Remove the macro and get the name from core when core has stable ID support . 
 + # if REALM _ ENABLE _ SYNC 
 + const char * object _ id _ column _ name = sync : : object _ id _ column _ name ; 
 + # else 
 + const char * object _ id _ column _ name = " ! OID " ; 
 + # endif 
 + return to _ jstring ( env , object _ id _ column _ name ) ; 
 + } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java 
 index ed08e0b . . 3657d87 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmObjectSchema . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import java . util . Set ; 
 
 import io . realm . annotations . Required ; 
 import io . realm . internal . ColumnInfo ; 
 + import io . realm . internal . OsObject ; 
 import io . realm . internal . Table ; 
 import io . realm . internal . fields . FieldDescriptor ; 
 
 @ @ - 516 , 7 + 517 , 7 @ @ public class RealmObjectSchema { 
 Set < String > columnNames = new LinkedHashSet < > ( columnCount ) ; 
 for ( int i = 0 ; i < columnCount ; i + + ) { 
 String name = table . getColumnName ( i ) ; 
 - if ( ! name . equals ( Table . OBJECT _ ID _ COLUMN _ NAME ) ) { / / Filter out stable ID column 
 + if ( ! OsObject . isObjectIdColumn ( name ) ) { 
 columnNames . add ( name ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / OsObject . java b / realm / realm - library / src / main / java / io / realm / internal / OsObject . java 
 index 56a4676 . . 4f8b0b8 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / OsObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / OsObject . java 
 @ @ - 29 , 6 + 29 , 8 @ @ import io . realm . exceptions . RealmException ; 
 @ KeepMember 
 public class OsObject implements NativeObject { 
 
 + private static final String OBJECT _ ID _ COLUMN _ NAME = nativeGetObjectIdColumName ( ) ; 
 + 
 private static class OsObjectChangeSet implements ObjectChangeSet { 
 final String [ ] changedFields ; 
 final boolean deleted ; 
 @ @ - 237 , 6 + 239 , 10 @ @ public class OsObject implements NativeObject { 
 } 
 } 
 
 + public static boolean isObjectIdColumn ( String columnName ) { 
 + return OBJECT _ ID _ COLUMN _ NAME . equals ( columnName ) ; 
 + } 
 + 
 / / Called by JNI 
 @ SuppressWarnings ( " unused " ) 
 @ KeepMember 
 @ @ - 276 , 4 + 282 , 7 @ @ public class OsObject implements NativeObject { 
 private static native long nativeCreateRowWithStringPrimaryKey ( long sharedRealmPtr , 
 long tablePtr , long pk _ column _ index , 
 String primaryKeyValue ) ; 
 + 
 + / / Return sync : : object _ id _ column _ name 
 + private static native String nativeGetObjectIdColumName ( ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Table . java b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 index b2e5fd5 . . 8a2bb38 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Table . java 
 @ @ - 43 , 7 + 43 , 6 @ @ public class Table implements TableSchema , NativeObject { 
 private static final String PRIMARY _ KEY _ FIELD _ COLUMN _ NAME = " pk _ property " ; 
 private static final long PRIMARY _ KEY _ FIELD _ COLUMN _ INDEX = 1 ; 
 public static final long NO _ PRIMARY _ KEY = - 2 ; 
 - public static final String OBJECT _ ID _ COLUMN _ NAME = " _ _ OID " ; / / Column for stable ID 
 
 private static final long nativeFinalizerPtr = nativeGetFinalizerPtr ( ) ; 

