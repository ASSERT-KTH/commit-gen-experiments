BLEU SCORE: 0.05341087579952926

TEST MSG: Updated to work with master
GENERATED MSG: Cleanup the code

TEST DIFF (one line): diff - - git a / examples / newsreaderExample / README . md b / examples / newsreaderExample / README . md <nl> deleted file mode 100644 <nl> index e125097 . . 0000000 <nl> - - - a / examples / newsreaderExample / README . md <nl> + + + / dev / null <nl> @ @ - 1 , 17 + 0 , 0 @ @ <nl> - NewsReader <nl> - - - - - - - - - - - - - - <nl> - <nl> - This app is an example app that shows how Realm can be combined with a Model - View - Presenter ( MVP ) like architecture <nl> - to create apps that work completely offline . <nl> - <nl> - # Usage <nl> - <nl> - This app is currently depending on experimental RxJava features in Realm , so the Realm plugin must be installed <nl> - in mavenLocal ( ) before compiling the app . This is done from the main folder doing <nl> - <nl> - > . / gradlew installRealmJava <nl> - <nl> - Then the app can be installed afterwards <nl> - <nl> - > cd examples <nl> - > . / gradlew newsreaderExample : installDebug <nl> \ No newline at end of file <nl> diff - - git a / examples / newsreaderExample / build . gradle b / examples / newsreaderExample / build . gradle <nl> index c949706 . . c99b594 100644 <nl> - - - a / examples / newsreaderExample / build . gradle <nl> + + + b / examples / newsreaderExample / build . gradle <nl> @ @ - 1 , 7 + 1 , 7 @ @ <nl> apply plugin : ' android - sdk - manager ' <nl> apply plugin : ' com . android . application ' <nl> apply plugin : ' android - command ' <nl> - apply plugin : ' realm ' <nl> + apply plugin : ' realm - android ' <nl> <nl> android { <nl> compileSdkVersion rootProject . sdkVersion <nl> diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java <nl> index 2407c43 . . 9b7380e 100644 <nl> - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java <nl> + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java <nl> @ @ - 80 , 7 + 80 , 7 @ @ public class Repository implements Closeable { <nl> <nl> / / Return the data in Realm . The query result will be automatically updated when the network requests <nl> / / save data in Realm <nl> - return realm . where ( NYTimesStory . class ) . findAllSorted ( NYTimesStory . PUBLISHED _ DATE , Sort . DESCENDING ) . asObservable ( ) <nl> + return realm . where ( NYTimesStory . class ) . findAllSortedAsync ( NYTimesStory . PUBLISHED _ DATE , Sort . DESCENDING ) . asObservable ( ) <nl> . filter ( new Func1 < RealmResults < NYTimesStory > , Boolean > ( ) { <nl> @ Override <nl> public Boolean call ( RealmResults < NYTimesStory > stories ) { <nl> @ @ - 118 , 7 + 118 , 7 @ @ public class Repository implements Closeable { <nl> * / <nl> public Observable < NYTimesStory > loadStory ( final String storyId ) { <nl> return realm . where ( NYTimesStory . class ) . equalTo ( NYTimesStory . URL , storyId ) . findFirstAsync ( ) <nl> - . asObservable ( ) <nl> + . < NYTimesStory > asObservable ( ) <nl> . filter ( new Func1 < NYTimesStory , Boolean > ( ) { <nl> @ Override <nl> public Boolean call ( NYTimesStory story ) { <nl> diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / entity / NYTimesStory . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / entity / NYTimesStory . java <nl> index 8e2a1e4 . . bf7f7ed 100644 <nl> - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / entity / NYTimesStory . java <nl> + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / entity / NYTimesStory . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ import io . realm . annotations . PrimaryKey ; <nl> import io . realm . examples . newsreader . model . network . RealmListNYTimesMultimediumDeserializer ; <nl> <nl> @ JsonIgnoreProperties ( ignoreUnknown = true ) <nl> - public class NYTimesStory extends RealmObject < NYTimesStory > { <nl> + public class NYTimesStory extends RealmObject { <nl> <nl> public static final String PUBLISHED _ DATE = " publishedDate " ; <nl> public static final String URL = " url " ;
NEAREST DIFF (one line): diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java <nl> index ff3c373 . . ab163af 100644 <nl> - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java <nl> + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java <nl> @ @ - 33 , 6 + 33 , 7 @ @ import io . realm . examples . concurrency . services . TransactionService ; <nl> <nl> public class RealmExampleActivity extends Activity implements View . OnClickListener { <nl> <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> public static final String TAG = RealmExampleActivity . class . getName ( ) ; <nl> <nl> private Realm realm = null ; <nl> @ @ - 82 , 7 + 83 , 7 @ @ public class RealmExampleActivity extends Activity implements View . OnClickListen <nl> Integer parseAge = 0 ; <nl> try { <nl> parseAge = Integer . parseInt ( personAge ) ; <nl> - } catch ( NumberFormatException e ) { <nl> + } catch ( NumberFormatException ignored ) { <nl> <nl> } <nl> <nl> @ @ - 136 , 6 + 137 , 7 @ @ public class RealmExampleActivity extends Activity implements View . OnClickListen <nl> this . stopService ( serviceIntent ) ; <nl> } <nl> <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> private void restartTests ( ) { <nl> stopTransactionTests ( ) ; <nl> startTransactionTests ( ) ; <nl> diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java <nl> index f73f826 . . 8d502ce 100644 <nl> - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java <nl> + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java <nl> @ @ - 34 , 8 + 34 , 6 @ @ public class SpawningService extends Service { <nl> public static final String REALM _ INSERTCOUNT _ EXTRA = " RealmInsertCountExtra " ; <nl> public static final String REALM _ READCOUNT _ EXTRA = " RealmReadCountExtra " ; <nl> <nl> - private Boolean mQuitting = false ; <nl> - <nl> private List < KillableThread > allThreads = null ; <nl> <nl> public void onCreate ( ) { <nl> @ @ - 78 , 7 + 76 , 6 @ @ public class SpawningService extends Service { <nl> } <nl> <nl> private void quit ( ) { <nl> - this . mQuitting = true ; <nl> for ( KillableThread t : allThreads ) { <nl> t . terminate ( ) ; <nl> } <nl> diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java <nl> index d353119 . . bca153d 100644 <nl> - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java <nl> + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java <nl> @ @ - 36 , 15 + 36 , 9 @ @ public class TransactionService extends IntentService { <nl> public static final String ITERATION _ COUNT = " TestIterationCount " ; <nl> <nl> public enum TestType { <nl> - MANY _ INSERTS _ ONE _ TRANSACTION ( 1 ) , <nl> - MANY _ TRANSACTIONS ( 2 ) ; <nl> - <nl> - private int value = 1 ; <nl> - <nl> - TestType ( int value ) { <nl> - this . value = value ; <nl> - } <nl> - } ; <nl> + MANY _ INSERTS _ ONE _ TRANSACTION , <nl> + MANY _ TRANSACTIONS <nl> + } <nl> <nl> private Realm realm = null ; <nl> <nl> diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java <nl> index 34155e9 . . 24530cd 100644 <nl> - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java <nl> + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java <nl> @ @ - 26 , 7 + 26 , 6 @ @ public class RealmReader extends Thread implements KillableThread { <nl> <nl> public static final String TAG = RealmReader . class . getName ( ) ; <nl> <nl> - private Realm realm = null ; <nl> private Context context = null ; <nl> <nl> private boolean mRunning = true ; <nl> @ @ - 38 , 7 + 37 , 7 @ @ public class RealmReader extends Thread implements KillableThread { <nl> } <nl> <nl> public void run ( ) { <nl> - realm = Realm . getInstance ( context ) ; <nl> + Realm realm = Realm . getInstance ( context ) ; <nl> <nl> int loopCount = 0 ; <nl> <nl> @ @ - 59 , 6 + 58 , 7 @ @ public class RealmReader extends Thread implements KillableThread { <nl> mRunning = false ; <nl> } <nl> <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> public int getReadCount ( ) { <nl> return mReadCount ; <nl> } <nl> diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java <nl> index 6f82e7d . . c140209 100644 <nl> - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java <nl> + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java <nl> @ @ - 27 , 7 + 27 , 6 @ @ public class RealmWriter extends Thread implements KillableThread { <nl> <nl> public static final String TAG = RealmWriter . class . getName ( ) ; <nl> <nl> - private Realm realm = null ; <nl> private Context context = null ; <nl> <nl> private boolean mRunning = true ; <nl> @ @ - 39 , 11 + 38 , 11 @ @ public class RealmWriter extends Thread implements KillableThread { <nl> } <nl> <nl> public void run ( ) { <nl> - realm = Realm . getInstance ( context ) ; <nl> + Realm realm = Realm . getInstance ( context ) ; <nl> <nl> int iterCount = 0 ; <nl> <nl> - while ( iterCount < mInsertCount & & mRunning = = true ) { <nl> + while ( iterCount < mInsertCount & & mRunning ) { <nl> realm . beginTransaction ( ) ; <nl> <nl> Person person = realm . createObject ( Person . class ) ; <nl> @ @ - 71 , 6 + 70 , 7 @ @ public class RealmWriter extends Thread implements KillableThread { <nl> mRunning = false ; <nl> } <nl> <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> public int getInsertCount ( ) { <nl> return mInsertCount ; <nl> }

TEST DIFF:
diff - - git a / examples / newsreaderExample / README . md b / examples / newsreaderExample / README . md 
 deleted file mode 100644 
 index e125097 . . 0000000 
 - - - a / examples / newsreaderExample / README . md 
 + + + / dev / null 
 @ @ - 1 , 17 + 0 , 0 @ @ 
 - NewsReader 
 - - - - - - - - - - - - - - 
 - 
 - This app is an example app that shows how Realm can be combined with a Model - View - Presenter ( MVP ) like architecture 
 - to create apps that work completely offline . 
 - 
 - # Usage 
 - 
 - This app is currently depending on experimental RxJava features in Realm , so the Realm plugin must be installed 
 - in mavenLocal ( ) before compiling the app . This is done from the main folder doing 
 - 
 - > . / gradlew installRealmJava 
 - 
 - Then the app can be installed afterwards 
 - 
 - > cd examples 
 - > . / gradlew newsreaderExample : installDebug 
 \ No newline at end of file 
 diff - - git a / examples / newsreaderExample / build . gradle b / examples / newsreaderExample / build . gradle 
 index c949706 . . c99b594 100644 
 - - - a / examples / newsreaderExample / build . gradle 
 + + + b / examples / newsreaderExample / build . gradle 
 @ @ - 1 , 7 + 1 , 7 @ @ 
 apply plugin : ' android - sdk - manager ' 
 apply plugin : ' com . android . application ' 
 apply plugin : ' android - command ' 
 - apply plugin : ' realm ' 
 + apply plugin : ' realm - android ' 
 
 android { 
 compileSdkVersion rootProject . sdkVersion 
 diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java 
 index 2407c43 . . 9b7380e 100644 
 - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java 
 + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java 
 @ @ - 80 , 7 + 80 , 7 @ @ public class Repository implements Closeable { 
 
 / / Return the data in Realm . The query result will be automatically updated when the network requests 
 / / save data in Realm 
 - return realm . where ( NYTimesStory . class ) . findAllSorted ( NYTimesStory . PUBLISHED _ DATE , Sort . DESCENDING ) . asObservable ( ) 
 + return realm . where ( NYTimesStory . class ) . findAllSortedAsync ( NYTimesStory . PUBLISHED _ DATE , Sort . DESCENDING ) . asObservable ( ) 
 . filter ( new Func1 < RealmResults < NYTimesStory > , Boolean > ( ) { 
 @ Override 
 public Boolean call ( RealmResults < NYTimesStory > stories ) { 
 @ @ - 118 , 7 + 118 , 7 @ @ public class Repository implements Closeable { 
 * / 
 public Observable < NYTimesStory > loadStory ( final String storyId ) { 
 return realm . where ( NYTimesStory . class ) . equalTo ( NYTimesStory . URL , storyId ) . findFirstAsync ( ) 
 - . asObservable ( ) 
 + . < NYTimesStory > asObservable ( ) 
 . filter ( new Func1 < NYTimesStory , Boolean > ( ) { 
 @ Override 
 public Boolean call ( NYTimesStory story ) { 
 diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / entity / NYTimesStory . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / entity / NYTimesStory . java 
 index 8e2a1e4 . . bf7f7ed 100644 
 - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / entity / NYTimesStory . java 
 + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / entity / NYTimesStory . java 
 @ @ - 26 , 7 + 26 , 7 @ @ import io . realm . annotations . PrimaryKey ; 
 import io . realm . examples . newsreader . model . network . RealmListNYTimesMultimediumDeserializer ; 
 
 @ JsonIgnoreProperties ( ignoreUnknown = true ) 
 - public class NYTimesStory extends RealmObject < NYTimesStory > { 
 + public class NYTimesStory extends RealmObject { 
 
 public static final String PUBLISHED _ DATE = " publishedDate " ; 
 public static final String URL = " url " ;

NEAREST DIFF:
diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java 
 index ff3c373 . . ab163af 100644 
 - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java 
 + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / RealmExampleActivity . java 
 @ @ - 33 , 6 + 33 , 7 @ @ import io . realm . examples . concurrency . services . TransactionService ; 
 
 public class RealmExampleActivity extends Activity implements View . OnClickListener { 
 
 + @ SuppressWarnings ( " UnusedDeclaration " ) 
 public static final String TAG = RealmExampleActivity . class . getName ( ) ; 
 
 private Realm realm = null ; 
 @ @ - 82 , 7 + 83 , 7 @ @ public class RealmExampleActivity extends Activity implements View . OnClickListen 
 Integer parseAge = 0 ; 
 try { 
 parseAge = Integer . parseInt ( personAge ) ; 
 - } catch ( NumberFormatException e ) { 
 + } catch ( NumberFormatException ignored ) { 
 
 } 
 
 @ @ - 136 , 6 + 137 , 7 @ @ public class RealmExampleActivity extends Activity implements View . OnClickListen 
 this . stopService ( serviceIntent ) ; 
 } 
 
 + @ SuppressWarnings ( " UnusedDeclaration " ) 
 private void restartTests ( ) { 
 stopTransactionTests ( ) ; 
 startTransactionTests ( ) ; 
 diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java 
 index f73f826 . . 8d502ce 100644 
 - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java 
 + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / SpawningService . java 
 @ @ - 34 , 8 + 34 , 6 @ @ public class SpawningService extends Service { 
 public static final String REALM _ INSERTCOUNT _ EXTRA = " RealmInsertCountExtra " ; 
 public static final String REALM _ READCOUNT _ EXTRA = " RealmReadCountExtra " ; 
 
 - private Boolean mQuitting = false ; 
 - 
 private List < KillableThread > allThreads = null ; 
 
 public void onCreate ( ) { 
 @ @ - 78 , 7 + 76 , 6 @ @ public class SpawningService extends Service { 
 } 
 
 private void quit ( ) { 
 - this . mQuitting = true ; 
 for ( KillableThread t : allThreads ) { 
 t . terminate ( ) ; 
 } 
 diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java 
 index d353119 . . bca153d 100644 
 - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java 
 + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / services / TransactionService . java 
 @ @ - 36 , 15 + 36 , 9 @ @ public class TransactionService extends IntentService { 
 public static final String ITERATION _ COUNT = " TestIterationCount " ; 
 
 public enum TestType { 
 - MANY _ INSERTS _ ONE _ TRANSACTION ( 1 ) , 
 - MANY _ TRANSACTIONS ( 2 ) ; 
 - 
 - private int value = 1 ; 
 - 
 - TestType ( int value ) { 
 - this . value = value ; 
 - } 
 - } ; 
 + MANY _ INSERTS _ ONE _ TRANSACTION , 
 + MANY _ TRANSACTIONS 
 + } 
 
 private Realm realm = null ; 
 
 diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java 
 index 34155e9 . . 24530cd 100644 
 - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java 
 + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmReader . java 
 @ @ - 26 , 7 + 26 , 6 @ @ public class RealmReader extends Thread implements KillableThread { 
 
 public static final String TAG = RealmReader . class . getName ( ) ; 
 
 - private Realm realm = null ; 
 private Context context = null ; 
 
 private boolean mRunning = true ; 
 @ @ - 38 , 7 + 37 , 7 @ @ public class RealmReader extends Thread implements KillableThread { 
 } 
 
 public void run ( ) { 
 - realm = Realm . getInstance ( context ) ; 
 + Realm realm = Realm . getInstance ( context ) ; 
 
 int loopCount = 0 ; 
 
 @ @ - 59 , 6 + 58 , 7 @ @ public class RealmReader extends Thread implements KillableThread { 
 mRunning = false ; 
 } 
 
 + @ SuppressWarnings ( " UnusedDeclaration " ) 
 public int getReadCount ( ) { 
 return mReadCount ; 
 } 
 diff - - git a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java 
 index 6f82e7d . . c140209 100644 
 - - - a / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java 
 + + + b / examples / concurrencyExample / src / main / java / io / realm / examples / concurrency / threads / RealmWriter . java 
 @ @ - 27 , 7 + 27 , 6 @ @ public class RealmWriter extends Thread implements KillableThread { 
 
 public static final String TAG = RealmWriter . class . getName ( ) ; 
 
 - private Realm realm = null ; 
 private Context context = null ; 
 
 private boolean mRunning = true ; 
 @ @ - 39 , 11 + 38 , 11 @ @ public class RealmWriter extends Thread implements KillableThread { 
 } 
 
 public void run ( ) { 
 - realm = Realm . getInstance ( context ) ; 
 + Realm realm = Realm . getInstance ( context ) ; 
 
 int iterCount = 0 ; 
 
 - while ( iterCount < mInsertCount & & mRunning = = true ) { 
 + while ( iterCount < mInsertCount & & mRunning ) { 
 realm . beginTransaction ( ) ; 
 
 Person person = realm . createObject ( Person . class ) ; 
 @ @ - 71 , 6 + 70 , 7 @ @ public class RealmWriter extends Thread implements KillableThread { 
 mRunning = false ; 
 } 
 
 + @ SuppressWarnings ( " UnusedDeclaration " ) 
 public int getInsertCount ( ) { 
 return mInsertCount ; 
 }
