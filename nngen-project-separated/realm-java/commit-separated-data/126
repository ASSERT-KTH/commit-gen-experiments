BLEU SCORE: 0.05693025330278466

TEST MSG: Repositioned the code to make it cleaner
GENERATED MSG: Added the and ( ) function in RealmQuery

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> index b274bbb . . aeaaccf 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> @ @ - 1519 , 6 + 1519 , 11 @ @ public class RealmQuery < E > { <nl> <nl> return orWithoutThreadValidation ( ) ; <nl> } <nl> + <nl> + private RealmQuery < E > orWithoutThreadValidation ( ) { <nl> + this . query . or ( ) ; <nl> + return this ; <nl> + } <nl> <nl> / * * <nl> * Logical - and two conditions <nl> @ @ - 1532 , 11 + 1537 , 6 @ @ public class RealmQuery < E > { <nl> 	 return this ; <nl> } <nl> <nl> - private RealmQuery < E > orWithoutThreadValidation ( ) { <nl> - this . query . or ( ) ; <nl> - return this ; <nl> - } <nl> - <nl> / * * <nl> * Negate condition . <nl> *
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> index 89fafb6 . . b274bbb 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> @ @ - 1519 , 6 + 1519 , 18 @ @ public class RealmQuery < E > { <nl> <nl> return orWithoutThreadValidation ( ) ; <nl> } <nl> + <nl> + / * * <nl> + * Logical - and two conditions <nl> + * Technically , does nothing . Intended purely for syntactic sugar <nl> + * <nl> + * @ return the query object <nl> + * / <nl> + public RealmQuery < E > and ( ) { <nl> + 	 realm . checkIfValid ( ) ; <nl> + 	 <nl> + 	 return this ; <nl> + } <nl> <nl> private RealmQuery < E > orWithoutThreadValidation ( ) { <nl> this . query . or ( ) ;

TEST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 index b274bbb . . aeaaccf 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 @ @ - 1519 , 6 + 1519 , 11 @ @ public class RealmQuery < E > { 
 
 return orWithoutThreadValidation ( ) ; 
 } 
 + 
 + private RealmQuery < E > orWithoutThreadValidation ( ) { 
 + this . query . or ( ) ; 
 + return this ; 
 + } 
 
 / * * 
 * Logical - and two conditions 
 @ @ - 1532 , 11 + 1537 , 6 @ @ public class RealmQuery < E > { 
 	 return this ; 
 } 
 
 - private RealmQuery < E > orWithoutThreadValidation ( ) { 
 - this . query . or ( ) ; 
 - return this ; 
 - } 
 - 
 / * * 
 * Negate condition . 
 *

NEAREST DIFF:
diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 index 89fafb6 . . b274bbb 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 @ @ - 1519 , 6 + 1519 , 18 @ @ public class RealmQuery < E > { 
 
 return orWithoutThreadValidation ( ) ; 
 } 
 + 
 + / * * 
 + * Logical - and two conditions 
 + * Technically , does nothing . Intended purely for syntactic sugar 
 + * 
 + * @ return the query object 
 + * / 
 + public RealmQuery < E > and ( ) { 
 + 	 realm . checkIfValid ( ) ; 
 + 	 
 + 	 return this ; 
 + } 
 
 private RealmQuery < E > orWithoutThreadValidation ( ) { 
 this . query . or ( ) ;
