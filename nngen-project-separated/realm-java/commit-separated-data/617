BLEU SCORE: 0.04372912656590315

TEST MSG: Build with OS sync support
GENERATED MSG: Adding writeCopy ( ) to Realm

TEST DIFF (one line): diff - - git a / . gitmodules b / . gitmodules <nl> index 35b419c . . 4e9399a 100644 <nl> - - - a / . gitmodules <nl> + + + b / . gitmodules <nl> @ @ - 1 , 3 + 1 , 3 @ @ <nl> [ submodule " realm / realm - library / src / main / cpp / object - store " ] <nl> 	 path = realm / realm - library / src / main / cpp / object - store <nl> - 	 url = https : / / github . com / realm / realm - object - store . git <nl> + url = git @ github . com : realm / realm - object - store - private . git <nl> diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index e00abd5 . . 8adcc47 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 8 , 11 + 8 , 19 @ @ try { <nl> / / Allocate a custom workspace to avoid having % in the path ( it breaks ld ) <nl> ws ( ' / tmp / realm - java ' ) { <nl> stage ' SCM ' <nl> - checkout scm <nl> + checkout ( [ <nl> + $ class : ' GitSCM ' , <nl> + branches : scm . branches , <nl> + gitTool : ' native git ' , <nl> + extensions : scm . extensions + [ [ $ class : ' CleanCheckout ' ] ] , <nl> + userRemoteConfigs : scm . userRemoteConfigs <nl> + ] ) <nl> + sshagent ( [ ' realm - ci - ssh ' ] ) { <nl> + sh ' git submodule sync ' <nl> + sh ' git submodule update - - init - - recursive ' <nl> + } <nl> / / Make sure not to delete the folder that Jenkins allocates to store scripts <nl> sh ' git clean - ffdx - e . ? ? ? ? ? ? ? ? ' <nl> - / / Update submodule for object - store <nl> - sh ' git submodule update - - init - - force ' <nl> <nl> stage ' Docker build ' <nl> def buildEnv = docker . build ' realm - java : snapshot ' <nl> diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> index 9136dec . . 6915552 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> @ @ - 3 , 6 + 3 , 7 @ @ <nl> <nl> # include " shared _ realm . hpp " <nl> # include " util . hpp " <nl> + # include " sync _ config . hpp " <nl> <nl> using namespace realm ; <nl> <nl> @ @ - 20 , 7 + 21 , 7 @ @ static _ assert ( SchemaMode : : Manual = = <nl> JNIEXPORT jlong JNICALL <nl> Java _ io _ realm _ internal _ SharedRealm _ nativeCreateConfig ( JNIEnv * env , jclass , jstring realm _ path , jbyteArray key , <nl> jbyte schema _ mode , jboolean in _ memory , jboolean cache , jboolean disable _ format _ upgrade , <nl> - jboolean auto _ change _ notification ) <nl> + jboolean auto _ change _ notification , jstring sync _ server _ url , jstring sync _ user _ token ) <nl> { <nl> TR _ ENTER ( ) <nl> <nl> @ @ - 35 , 6 + 36 , 13 @ @ Java _ io _ realm _ internal _ SharedRealm _ nativeCreateConfig ( JNIEnv * env , jclass , jstri <nl> config - > cache = cache ; <nl> config - > disable _ format _ upgrade = disable _ format _ upgrade ; <nl> config - > automatic _ change _ notifications = auto _ change _ notification ; <nl> + if ( sync _ server _ url ) { <nl> + JStringAccessor url ( env , sync _ server _ url ) ; <nl> + JStringAccessor token ( env , sync _ user _ token ) ; <nl> + config - > sync _ config = std : : make _ shared < SyncConfig > ( ) ; <nl> + config - > sync _ config - > user _ tag = token ; <nl> + config - > sync _ config - > realm _ url = url ; <nl> + } <nl> return reinterpret _ cast < jlong > ( config ) ; <nl> } CATCH _ STD ( ) <nl> <nl> diff - - git a / realm / realm - library / src / main / cpp / object - store b / realm / realm - library / src / main / cpp / object - store <nl> index 4663837 . . decd4a0 160000 <nl> - - - a / realm / realm - library / src / main / cpp / object - store <nl> + + + b / realm / realm - library / src / main / cpp / object - store <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit 4663837974a46fa2b34f85362b5c86b5a1d3437a <nl> + Subproject commit decd4a0693cda3b4e07e13982e74a0e7e7c4d21b <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> index 4f0c975 . . 895b225 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java <nl> @ @ - 139 , 7 + 139 , 9 @ @ public final class SharedRealm implements Closeable { <nl> config . getDurability ( ) = = Durability . MEM _ ONLY , <nl> false , <nl> false , <nl> - false ) ; <nl> + false , <nl> + null , <nl> + null ) ; <nl> try { <nl> return new SharedRealm ( nativeGetSharedRealm ( nativeConfigPtr ) , config ) ; <nl> } finally { <nl> @ @ - 274 , 7 + 276 , 8 @ @ public final class SharedRealm implements Closeable { <nl> <nl> private static native long nativeCreateConfig ( String realmPath , byte [ ] key , byte schemaMode , boolean inMemory , <nl> boolean cache , boolean disableFormatUpgrade , <nl> - boolean autoChangeNotification ) ; <nl> + boolean autoChangeNotification , <nl> + String syncServerURL , String syncUserToken ) ; <nl> private static native void nativeCloseConfig ( long nativeConfigPtr ) ; <nl> private static native long nativeGetSharedRealm ( long nativeConfigPtr ) ; <nl> private static native void nativeCloseSharedRealm ( long nativeSharedRealmPtr ) ;
NEAREST DIFF (one line): diff - - git a / changelog . txt b / changelog . txt <nl> index b56f1f3 . . 97f5b94 100644 <nl> - - - a / changelog . txt <nl> + + + b / changelog . txt <nl> @ @ - 4 , 6 + 4 , 7 @ @ <nl> and dates after 2038 - 01 - 19 are not supported on 32 bit systems <nl> * Fixed bug so Realm no longer throws an Exception when removing the last object <nl> * Bug fixed in RealmResults which prevented subquerying <nl> + * Adding writeCopy ( ) to Realm <nl> <nl> 0 . 74 . 0 ( 19 Nov 2014 ) <nl> * Added support for more field / accessors naming conventions <nl> diff - - git a / realm - jni / src / io _ realm _ internal _ SharedGroup . cpp b / realm - jni / src / io _ realm _ internal _ SharedGroup . cpp <nl> index 5627de4 . . 6e59232 100644 <nl> - - - a / realm - jni / src / io _ realm _ internal _ SharedGroup . cpp <nl> + + + b / realm - jni / src / io _ realm _ internal _ SharedGroup . cpp <nl> @ @ - 276 , 3 + 276 , 18 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ SharedGroup _ nativeGetDefaultRep <nl> return 0 ; <nl> # endif <nl> } <nl> + <nl> + JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedGroup _ nativeWriteCopy <nl> + ( JNIEnv * env , jobject , jlong native _ ptr , jstring jfile _ name ) <nl> + { <nl> + <nl> + StringData file _ name ; <nl> + try { <nl> + JStringAccessor file _ name _ tmp ( env , jfile _ name ) ; / / throws <nl> + file _ name = StringData ( file _ name _ tmp ) ; <nl> + Group * group = & const _ cast < Group & > ( SG ( native _ ptr ) - > begin _ read ( ) ) ; <nl> + group - > write ( file _ name ) ; / / throws <nl> + } <nl> + CATCH _ FILE ( file _ name ) <nl> + CATCH _ STD ( ) <nl> + } <nl> diff - - git a / realm - jni / src / io _ realm _ internal _ SharedGroup . h b / realm - jni / src / io _ realm _ internal _ SharedGroup . h <nl> index ef18102 . . 371968f 100644 <nl> - - - a / realm - jni / src / io _ realm _ internal _ SharedGroup . h <nl> + + + b / realm - jni / src / io _ realm _ internal _ SharedGroup . h <nl> @ @ - 167 , 6 + 167 , 14 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedGroup _ nativeCloseTransactReg <nl> JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedGroup _ nativeCloseReplication <nl> ( JNIEnv * , jobject , jlong ) ; <nl> <nl> + / * <nl> + * Class : io _ realm _ internal _ SharedGroup <nl> + * Method : nativeWriteCopy <nl> + * Signature : ( JLjava / lang / String ; ) V <nl> + * / <nl> + JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedGroup _ nativeWriteCopy <nl> + ( JNIEnv * , jobject , jlong , jstring ) ; <nl> + <nl> # ifdef _ _ cplusplus <nl> } <nl> # endif <nl> diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> index d971dde . . eb04e2a 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> @ @ - 646 , 4 + 646 , 27 @ @ public class RealmTest extends AndroidTestCase { <nl> createAndTestFilename ( " India " , " न ई द ि ल ् ल ी " ) ; <nl> createAndTestFilename ( " Japanese " , " 東 京 都 " ) ; <nl> } <nl> + <nl> + public void testWriteCopy ( ) { <nl> + Realm . deleteRealmFile ( getContext ( ) , " file1 . realm " ) ; <nl> + Realm . deleteRealmFile ( getContext ( ) , " file2 . realm " ) ; <nl> + Realm realm1 = Realm . getInstance ( getContext ( ) , " file1 . realm " ) ; <nl> + realm1 . beginTransaction ( ) ; <nl> + AllTypes allTypes = realm1 . createObject ( AllTypes . class ) ; <nl> + allTypes . setColumnString ( " Hello World " ) ; <nl> + realm1 . commitTransaction ( ) ; <nl> + <nl> + realm1 . writeCopy ( getContext ( ) . getFilesDir ( ) + " / file2 . realm " ) ; <nl> + <nl> + / / Copy is compacted i . e . smaller than original <nl> + File file1 = new File ( getContext ( ) . getFilesDir ( ) + " / file1 . realm " ) ; <nl> + File file2 = new File ( getContext ( ) . getFilesDir ( ) + " / file2 . realm " ) ; <nl> + assertTrue ( file1 . length ( ) > file2 . length ( ) ) ; <nl> + <nl> + / / Contents is copyied too <nl> + Realm realm2 = Realm . getInstance ( getContext ( ) , " file2 . realm " ) ; <nl> + RealmResults < AllTypes > results = realm2 . allObjects ( AllTypes . class ) ; <nl> + assertEquals ( 1 , results . size ( ) ) ; <nl> + assertEquals ( " Hello World " , results . first ( ) . getColumnString ( ) ) ; <nl> + } <nl> } <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index 83d7439 . . 4e24563 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 488 , 6 + 488 , 22 @ @ public class Realm { <nl> } <nl> <nl> / * * <nl> + * Write a compacted copy of the Realm to the given path . <nl> + * <nl> + * The destination file cannot already exist . <nl> + * <nl> + * Note that if this is called from within a write transaction it writes the <nl> + * current data , and not data when the last write transaction was committed . <nl> + * <nl> + * @ param path Path to save the Realm to <nl> + * @ throws <nl> + * / <nl> + public void writeCopy ( String path ) { <nl> + sharedGroup . writeCopy ( path ) ; <nl> + } <nl> + <nl> + <nl> + / * * <nl> * Instantiates and adds a new object to the realm <nl> * <nl> * @ param clazz The Class of the object to create <nl> diff - - git a / realm / src / main / java / io / realm / internal / SharedGroup . java b / realm / src / main / java / io / realm / internal / SharedGroup . java <nl> index e8b2f0b . . fad232f 100644 <nl> - - - a / realm / src / main / java / io / realm / internal / SharedGroup . java <nl> + + + b / realm / src / main / java / io / realm / internal / SharedGroup . java <nl> @ @ - 268 , 4 + 268 , 9 @ @ public class SharedGroup implements Closeable { <nl> private native void nativeCloseTransactRegistryLog ( long nativeTransactLogRegistryPtr ) ; <nl> private native void nativeCloseReplication ( long nativeReplicationPtr ) ; <nl> <nl> + public void writeCopy ( String path ) { <nl> + nativeWriteCopy ( nativePtr , path ) ; <nl> + } <nl> + <nl> + private native void nativeWriteCopy ( long nativePtr , String path ) ; <nl> }

TEST DIFF:
diff - - git a / . gitmodules b / . gitmodules 
 index 35b419c . . 4e9399a 100644 
 - - - a / . gitmodules 
 + + + b / . gitmodules 
 @ @ - 1 , 3 + 1 , 3 @ @ 
 [ submodule " realm / realm - library / src / main / cpp / object - store " ] 
 	 path = realm / realm - library / src / main / cpp / object - store 
 - 	 url = https : / / github . com / realm / realm - object - store . git 
 + url = git @ github . com : realm / realm - object - store - private . git 
 diff - - git a / Jenkinsfile b / Jenkinsfile 
 index e00abd5 . . 8adcc47 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 8 , 11 + 8 , 19 @ @ try { 
 / / Allocate a custom workspace to avoid having % in the path ( it breaks ld ) 
 ws ( ' / tmp / realm - java ' ) { 
 stage ' SCM ' 
 - checkout scm 
 + checkout ( [ 
 + $ class : ' GitSCM ' , 
 + branches : scm . branches , 
 + gitTool : ' native git ' , 
 + extensions : scm . extensions + [ [ $ class : ' CleanCheckout ' ] ] , 
 + userRemoteConfigs : scm . userRemoteConfigs 
 + ] ) 
 + sshagent ( [ ' realm - ci - ssh ' ] ) { 
 + sh ' git submodule sync ' 
 + sh ' git submodule update - - init - - recursive ' 
 + } 
 / / Make sure not to delete the folder that Jenkins allocates to store scripts 
 sh ' git clean - ffdx - e . ? ? ? ? ? ? ? ? ' 
 - / / Update submodule for object - store 
 - sh ' git submodule update - - init - - force ' 
 
 stage ' Docker build ' 
 def buildEnv = docker . build ' realm - java : snapshot ' 
 diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 index 9136dec . . 6915552 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 @ @ - 3 , 6 + 3 , 7 @ @ 
 
 # include " shared _ realm . hpp " 
 # include " util . hpp " 
 + # include " sync _ config . hpp " 
 
 using namespace realm ; 
 
 @ @ - 20 , 7 + 21 , 7 @ @ static _ assert ( SchemaMode : : Manual = = 
 JNIEXPORT jlong JNICALL 
 Java _ io _ realm _ internal _ SharedRealm _ nativeCreateConfig ( JNIEnv * env , jclass , jstring realm _ path , jbyteArray key , 
 jbyte schema _ mode , jboolean in _ memory , jboolean cache , jboolean disable _ format _ upgrade , 
 - jboolean auto _ change _ notification ) 
 + jboolean auto _ change _ notification , jstring sync _ server _ url , jstring sync _ user _ token ) 
 { 
 TR _ ENTER ( ) 
 
 @ @ - 35 , 6 + 36 , 13 @ @ Java _ io _ realm _ internal _ SharedRealm _ nativeCreateConfig ( JNIEnv * env , jclass , jstri 
 config - > cache = cache ; 
 config - > disable _ format _ upgrade = disable _ format _ upgrade ; 
 config - > automatic _ change _ notifications = auto _ change _ notification ; 
 + if ( sync _ server _ url ) { 
 + JStringAccessor url ( env , sync _ server _ url ) ; 
 + JStringAccessor token ( env , sync _ user _ token ) ; 
 + config - > sync _ config = std : : make _ shared < SyncConfig > ( ) ; 
 + config - > sync _ config - > user _ tag = token ; 
 + config - > sync _ config - > realm _ url = url ; 
 + } 
 return reinterpret _ cast < jlong > ( config ) ; 
 } CATCH _ STD ( ) 
 
 diff - - git a / realm / realm - library / src / main / cpp / object - store b / realm / realm - library / src / main / cpp / object - store 
 index 4663837 . . decd4a0 160000 
 - - - a / realm / realm - library / src / main / cpp / object - store 
 + + + b / realm / realm - library / src / main / cpp / object - store 
 @ @ - 1 + 1 @ @ 
 - Subproject commit 4663837974a46fa2b34f85362b5c86b5a1d3437a 
 + Subproject commit decd4a0693cda3b4e07e13982e74a0e7e7c4d21b 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 index 4f0c975 . . 895b225 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / SharedRealm . java 
 @ @ - 139 , 7 + 139 , 9 @ @ public final class SharedRealm implements Closeable { 
 config . getDurability ( ) = = Durability . MEM _ ONLY , 
 false , 
 false , 
 - false ) ; 
 + false , 
 + null , 
 + null ) ; 
 try { 
 return new SharedRealm ( nativeGetSharedRealm ( nativeConfigPtr ) , config ) ; 
 } finally { 
 @ @ - 274 , 7 + 276 , 8 @ @ public final class SharedRealm implements Closeable { 
 
 private static native long nativeCreateConfig ( String realmPath , byte [ ] key , byte schemaMode , boolean inMemory , 
 boolean cache , boolean disableFormatUpgrade , 
 - boolean autoChangeNotification ) ; 
 + boolean autoChangeNotification , 
 + String syncServerURL , String syncUserToken ) ; 
 private static native void nativeCloseConfig ( long nativeConfigPtr ) ; 
 private static native long nativeGetSharedRealm ( long nativeConfigPtr ) ; 
 private static native void nativeCloseSharedRealm ( long nativeSharedRealmPtr ) ;

NEAREST DIFF:
diff - - git a / changelog . txt b / changelog . txt 
 index b56f1f3 . . 97f5b94 100644 
 - - - a / changelog . txt 
 + + + b / changelog . txt 
 @ @ - 4 , 6 + 4 , 7 @ @ 
 and dates after 2038 - 01 - 19 are not supported on 32 bit systems 
 * Fixed bug so Realm no longer throws an Exception when removing the last object 
 * Bug fixed in RealmResults which prevented subquerying 
 + * Adding writeCopy ( ) to Realm 
 
 0 . 74 . 0 ( 19 Nov 2014 ) 
 * Added support for more field / accessors naming conventions 
 diff - - git a / realm - jni / src / io _ realm _ internal _ SharedGroup . cpp b / realm - jni / src / io _ realm _ internal _ SharedGroup . cpp 
 index 5627de4 . . 6e59232 100644 
 - - - a / realm - jni / src / io _ realm _ internal _ SharedGroup . cpp 
 + + + b / realm - jni / src / io _ realm _ internal _ SharedGroup . cpp 
 @ @ - 276 , 3 + 276 , 18 @ @ JNIEXPORT jstring JNICALL Java _ io _ realm _ internal _ SharedGroup _ nativeGetDefaultRep 
 return 0 ; 
 # endif 
 } 
 + 
 + JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedGroup _ nativeWriteCopy 
 + ( JNIEnv * env , jobject , jlong native _ ptr , jstring jfile _ name ) 
 + { 
 + 
 + StringData file _ name ; 
 + try { 
 + JStringAccessor file _ name _ tmp ( env , jfile _ name ) ; / / throws 
 + file _ name = StringData ( file _ name _ tmp ) ; 
 + Group * group = & const _ cast < Group & > ( SG ( native _ ptr ) - > begin _ read ( ) ) ; 
 + group - > write ( file _ name ) ; / / throws 
 + } 
 + CATCH _ FILE ( file _ name ) 
 + CATCH _ STD ( ) 
 + } 
 diff - - git a / realm - jni / src / io _ realm _ internal _ SharedGroup . h b / realm - jni / src / io _ realm _ internal _ SharedGroup . h 
 index ef18102 . . 371968f 100644 
 - - - a / realm - jni / src / io _ realm _ internal _ SharedGroup . h 
 + + + b / realm - jni / src / io _ realm _ internal _ SharedGroup . h 
 @ @ - 167 , 6 + 167 , 14 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedGroup _ nativeCloseTransactReg 
 JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedGroup _ nativeCloseReplication 
 ( JNIEnv * , jobject , jlong ) ; 
 
 + / * 
 + * Class : io _ realm _ internal _ SharedGroup 
 + * Method : nativeWriteCopy 
 + * Signature : ( JLjava / lang / String ; ) V 
 + * / 
 + JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedGroup _ nativeWriteCopy 
 + ( JNIEnv * , jobject , jlong , jstring ) ; 
 + 
 # ifdef _ _ cplusplus 
 } 
 # endif 
 diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java 
 index d971dde . . eb04e2a 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmTest . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmTest . java 
 @ @ - 646 , 4 + 646 , 27 @ @ public class RealmTest extends AndroidTestCase { 
 createAndTestFilename ( " India " , " न ई द ि ल ् ल ी " ) ; 
 createAndTestFilename ( " Japanese " , " 東 京 都 " ) ; 
 } 
 + 
 + public void testWriteCopy ( ) { 
 + Realm . deleteRealmFile ( getContext ( ) , " file1 . realm " ) ; 
 + Realm . deleteRealmFile ( getContext ( ) , " file2 . realm " ) ; 
 + Realm realm1 = Realm . getInstance ( getContext ( ) , " file1 . realm " ) ; 
 + realm1 . beginTransaction ( ) ; 
 + AllTypes allTypes = realm1 . createObject ( AllTypes . class ) ; 
 + allTypes . setColumnString ( " Hello World " ) ; 
 + realm1 . commitTransaction ( ) ; 
 + 
 + realm1 . writeCopy ( getContext ( ) . getFilesDir ( ) + " / file2 . realm " ) ; 
 + 
 + / / Copy is compacted i . e . smaller than original 
 + File file1 = new File ( getContext ( ) . getFilesDir ( ) + " / file1 . realm " ) ; 
 + File file2 = new File ( getContext ( ) . getFilesDir ( ) + " / file2 . realm " ) ; 
 + assertTrue ( file1 . length ( ) > file2 . length ( ) ) ; 
 + 
 + / / Contents is copyied too 
 + Realm realm2 = Realm . getInstance ( getContext ( ) , " file2 . realm " ) ; 
 + RealmResults < AllTypes > results = realm2 . allObjects ( AllTypes . class ) ; 
 + assertEquals ( 1 , results . size ( ) ) ; 
 + assertEquals ( " Hello World " , results . first ( ) . getColumnString ( ) ) ; 
 + } 
 } 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index 83d7439 . . 4e24563 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 488 , 6 + 488 , 22 @ @ public class Realm { 
 } 
 
 / * * 
 + * Write a compacted copy of the Realm to the given path . 
 + * 
 + * The destination file cannot already exist . 
 + * 
 + * Note that if this is called from within a write transaction it writes the 
 + * current data , and not data when the last write transaction was committed . 
 + * 
 + * @ param path Path to save the Realm to 
 + * @ throws 
 + * / 
 + public void writeCopy ( String path ) { 
 + sharedGroup . writeCopy ( path ) ; 
 + } 
 + 
 + 
 + / * * 
 * Instantiates and adds a new object to the realm 
 * 
 * @ param clazz The Class of the object to create 
 diff - - git a / realm / src / main / java / io / realm / internal / SharedGroup . java b / realm / src / main / java / io / realm / internal / SharedGroup . java 
 index e8b2f0b . . fad232f 100644 
 - - - a / realm / src / main / java / io / realm / internal / SharedGroup . java 
 + + + b / realm / src / main / java / io / realm / internal / SharedGroup . java 
 @ @ - 268 , 4 + 268 , 9 @ @ public class SharedGroup implements Closeable { 
 private native void nativeCloseTransactRegistryLog ( long nativeTransactLogRegistryPtr ) ; 
 private native void nativeCloseReplication ( long nativeReplicationPtr ) ; 
 
 + public void writeCopy ( String path ) { 
 + nativeWriteCopy ( nativePtr , path ) ; 
 + } 
 + 
 + private native void nativeWriteCopy ( long nativePtr , String path ) ; 
 }
