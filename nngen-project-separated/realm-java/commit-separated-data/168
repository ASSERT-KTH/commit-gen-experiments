BLEU SCORE: 0.1270331870386537

TEST MSG: Remove unsupported types from RealmFieldType
GENERATED MSG: Remove generic parameter from RealmObject

TEST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index c09db3b . . 771001e 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 9 , 6 + 9 , 7 @ @ <nl> * Removed deprecated API ` RealmObject . removeChangeListeners ( ) ` . Use ` RealmObject . removeAllChangeListeners ( ) ` instead . <nl> * ` SyncUser . Callback ` to becomes generic . <nl> * Removed ` SyncUser . getAccessToken ` method from public API , and rename it to ` getRefreshToken ` . <nl> + * Removed ` UNSUPPORTED _ TABLE ` , ` UNSUPPORTED _ MIXED ` and ` UNSUPPORTED _ DATE ` from ` RealmFieldType ` . <nl> * Relaxed upper bound of type parameter of ` RealmList ` , ` RealmQuery ` , ` RealmResults ` , ` RealmCollection ` , ` OrderedRealmCollection ` and ` OrderedRealmCollectionSnapshot ` . <nl> <nl> # # Deprecated <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / LinkingObjectsDynamicTests . java b / realm / realm - library / src / androidTest / java / io / realm / LinkingObjectsDynamicTests . java <nl> index b94b6b4 . . 9d881dd 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / LinkingObjectsDynamicTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / LinkingObjectsDynamicTests . java <nl> @ @ - 174 , 11 + 174 , 6 @ @ public class LinkingObjectsDynamicTests { <nl> for ( RealmFieldType fieldType : RealmFieldType . values ( ) ) { <nl> try { <nl> switch ( fieldType ) { <nl> - / / skip unsupported types <nl> - case UNSUPPORTED _ TABLE : / / fall - through <nl> - case UNSUPPORTED _ MIXED : / / fall - through <nl> - case UNSUPPORTED _ DATE : <nl> - continue ; <nl> / / skip valid types <nl> case OBJECT : / / fall - through <nl> case LIST : <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / QueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / QueryTests . java <nl> index a2d025d . . 5ef1233 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / QueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / QueryTests . java <nl> @ @ - 62 , 9 + 62 , 6 @ @ public abstract class QueryTests { <nl> <nl> list = new ArrayList < > ( Arrays . asList ( RealmFieldType . values ( ) ) ) ; <nl> list . removeAll ( SUPPORTED _ IS _ EMPTY _ TYPES ) ; <nl> - list . remove ( RealmFieldType . UNSUPPORTED _ MIXED ) ; <nl> - list . remove ( RealmFieldType . UNSUPPORTED _ TABLE ) ; <nl> - list . remove ( RealmFieldType . UNSUPPORTED _ DATE ) ; <nl> <nl> / / FIXME zaki50 revisit once we implement query for Primitive List <nl> list . remove ( RealmFieldType . STRING _ LIST ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> index d253569 . . 530ca47 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> @ @ - 92 , 21 + 92 , 29 @ @ public class TestHelper { <nl> } <nl> <nl> public static RealmFieldType getColumnType ( Object o ) { <nl> - if ( o instanceof Boolean ) <nl> + if ( o instanceof Boolean ) { <nl> return RealmFieldType . BOOLEAN ; <nl> - if ( o instanceof String ) <nl> + } <nl> + if ( o instanceof String ) { <nl> return RealmFieldType . STRING ; <nl> - if ( o instanceof Long ) <nl> + } <nl> + if ( o instanceof Long ) { <nl> return RealmFieldType . INTEGER ; <nl> - if ( o instanceof Float ) <nl> + } <nl> + if ( o instanceof Float ) { <nl> return RealmFieldType . FLOAT ; <nl> - if ( o instanceof Double ) <nl> + } <nl> + if ( o instanceof Double ) { <nl> return RealmFieldType . DOUBLE ; <nl> - if ( o instanceof Date ) <nl> + } <nl> + if ( o instanceof Date ) { <nl> return RealmFieldType . DATE ; <nl> - if ( o instanceof byte [ ] ) <nl> + } <nl> + if ( o instanceof byte [ ] ) { <nl> return RealmFieldType . BINARY ; <nl> - return RealmFieldType . UNSUPPORTED _ MIXED ; <nl> + } <nl> + <nl> + throw new IllegalArgumentException ( " Unsupported type " ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 203 , 8 + 211 , 6 @ @ public class TestHelper { <nl> table . setBinaryByteArray ( columnIndex , rowIndex , ( byte [ ] ) value , false ) ; <nl> } <nl> break ; <nl> - case UNSUPPORTED _ MIXED : <nl> - case UNSUPPORTED _ TABLE : <nl> default : <nl> throw new RuntimeException ( " Unexpected columnType : " + String . valueOf ( colTypes [ ( int ) columnIndex ] ) ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / SortDescriptorTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / SortDescriptorTests . java <nl> index 381b408 . . a8c4bd2 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / SortDescriptorTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / SortDescriptorTests . java <nl> @ @ - 240 , 9 + 240 , 6 @ @ public class SortDescriptorTests { <nl> for ( RealmFieldType type : RealmFieldType . values ( ) ) { <nl> if ( ! filter . contains ( type ) ) { <nl> switch ( type ) { <nl> - case UNSUPPORTED _ DATE : <nl> - case UNSUPPORTED _ TABLE : <nl> - case UNSUPPORTED _ MIXED : <nl> case LINKING _ OBJECTS : / / TODO : should be supported ? s <nl> case INTEGER _ LIST : / / FIXME zaki50 revisit this once Primitive List query is implemented <nl> case BOOLEAN _ LIST : <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> index 20b9a54 . . 012085f 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> @ @ - 113 , 8 + 113 , 6 @ @ public class DynamicRealmObject extends RealmObject implements RealmObjectProxy <nl> return ( E ) getObject ( fieldName ) ; <nl> case LIST : <nl> return ( E ) getList ( fieldName ) ; <nl> - case UNSUPPORTED _ TABLE : <nl> - case UNSUPPORTED _ MIXED : <nl> default : <nl> throw new IllegalStateException ( " Field type not supported : " + type ) ; <nl> } <nl> @ @ - 395 , 8 + 393 , 6 @ @ public class DynamicRealmObject extends RealmObject implements RealmObjectProxy <nl> case DATE : <nl> return proxyState . getRow $ realm ( ) . isNull ( columnIndex ) ; <nl> case LIST : <nl> - case UNSUPPORTED _ TABLE : <nl> - case UNSUPPORTED _ MIXED : <nl> default : <nl> return false ; <nl> } <nl> @ @ - 970 , 8 + 966 , 6 @ @ public class DynamicRealmObject extends RealmObject implements RealmObjectProxy <nl> String targetClassName = proxyState . getRow $ realm ( ) . getTable ( ) . getLinkTarget ( columnIndex ) . getClassName ( ) ; <nl> sb . append ( String . format ( Locale . US , " RealmList < % s > [ % s ] " , targetClassName , proxyState . getRow $ realm ( ) . getList ( columnIndex ) . size ( ) ) ) ; <nl> break ; <nl> - case UNSUPPORTED _ TABLE : <nl> - case UNSUPPORTED _ MIXED : <nl> default : <nl> sb . append ( " ? " ) ; <nl> break ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmFieldType . java b / realm / realm - library / src / main / java / io / realm / RealmFieldType . java <nl> index f28c4b5 . . 2514255 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmFieldType . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmFieldType . java <nl> @ @ - 72 , 9 + 72 , 6 @ @ public enum RealmFieldType { <nl> BOOLEAN ( CORE _ TYPE _ VALUE _ BOOLEAN ) , <nl> STRING ( CORE _ TYPE _ VALUE _ STRING ) , <nl> BINARY ( CORE _ TYPE _ VALUE _ BINARY ) , <nl> - UNSUPPORTED _ TABLE ( CORE _ TYPE _ VALUE _ UNSUPPORTED _ TABLE ) , <nl> - UNSUPPORTED _ MIXED ( CORE _ TYPE _ VALUE _ UNSUPPORTED _ MIXED ) , <nl> - UNSUPPORTED _ DATE ( CORE _ TYPE _ VALUE _ UNSUPPORTED _ DATE ) , <nl> DATE ( CORE _ TYPE _ VALUE _ DATE ) , <nl> FLOAT ( CORE _ TYPE _ VALUE _ FLOAT ) , <nl> DOUBLE ( CORE _ TYPE _ VALUE _ DOUBLE ) , <nl> @ @ - 137 , 11 + 134 , 6 @ @ public enum RealmFieldType { <nl> return ( obj instanceof String ) ; <nl> case CORE _ TYPE _ VALUE _ BINARY : <nl> return ( obj instanceof byte [ ] | | obj instanceof ByteBuffer ) ; <nl> - case CORE _ TYPE _ VALUE _ UNSUPPORTED _ TABLE : <nl> - / / noinspection ConstantConditions <nl> - return ( obj = = null | | obj instanceof Object [ ] [ ] ) ; <nl> - case CORE _ TYPE _ VALUE _ UNSUPPORTED _ DATE : <nl> - return ( obj instanceof java . util . Date ) ; / / The unused DateTime . <nl> case CORE _ TYPE _ VALUE _ DATE : <nl> return ( obj instanceof java . util . Date ) ; <nl> case CORE _ TYPE _ VALUE _ FLOAT :
NEAREST DIFF (one line): diff - - git a / examples / rxJavaExample / README . md b / examples / rxJavaExample / README . md <nl> index 3f33bfa . . ea203c2 100644 <nl> - - - a / examples / rxJavaExample / README . md <nl> + + + b / examples / rxJavaExample / README . md <nl> @ @ - 5 , 13 + 5 , 17 @ @ <nl> - Observables might have a default Scheduler they operate on that is <nl> different than the one the RealmObject was created on . <nl> <nl> - - RealmObjects auto - update . Observables that operate on multiple " versions " <nl> + - RealmObjects are live objects that automatically staty up to date . Observables that operate on multiple " versions " <nl> will most likely not work as expected . <nl> <nl> - Retrofit automatically offload to a worker thread . <nl> <nl> - Use Realm async API instead of subscribeOn to offload Realm work . <nl> <nl> + - You can use Realm . copyFromRealm to make a copy of Realm data <nl> + <nl> + <nl> + <nl> <nl> # # Resources ( TODO ) <nl> - http : / / www . grahamlea . com / 2014 / 07 / rxjava - threading - examples / <nl> \ No newline at end of file <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> index 12a0c4a . . ff099ad 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ public class RxJavaTests extends AndroidTestCase { <nl> realm . commitTransaction ( ) ; <nl> <nl> final AtomicBoolean subscribedNotified = new AtomicBoolean ( false ) ; <nl> - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> @ Override <nl> public void call ( AllTypes rxObject ) { <nl> assertTrue ( rxObject = = obj ) ; <nl> @ @ - 74 , 7 + 74 , 7 @ @ public class RxJavaTests extends AndroidTestCase { <nl> final AllTypes obj = realm . createObject ( AllTypes . class ) ; <nl> realm . commitTransaction ( ) ; <nl> <nl> - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { <nl> @ Override <nl> public void call ( AllTypes rxObject ) { <nl> subscriberCalled . addAndGet ( 1 ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index a3e5103 . . 4e420ec 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 25 , 15 + 25 , 12 @ @ import java . lang . ref . ReferenceQueue ; <nl> import java . lang . ref . WeakReference ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> - import java . util . HashMap ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> - import java . util . Set ; <nl> import java . util . concurrent . ConcurrentHashMap ; <nl> import java . util . concurrent . CopyOnWriteArrayList ; <nl> import java . util . concurrent . atomic . AtomicBoolean ; <nl> - import java . util . concurrent . CopyOnWriteArraySet ; <nl> <nl> import io . realm . exceptions . RealmMigrationNeededException ; <nl> import io . realm . internal . SharedGroupManager ; <nl> @ @ - 44 , 7 + 41 , 6 @ @ import io . realm . internal . android . DebugAndroidLogger ; <nl> import io . realm . internal . android . ReleaseAndroidLogger ; <nl> import io . realm . internal . async . RealmThreadPoolExecutor ; <nl> import io . realm . internal . log . RealmLog ; <nl> - import io . realm . rx . RxObservableFactory ; <nl> import rx . Observable ; <nl> <nl> / * * <nl> @ @ - 53 , 7 + 49 , 7 @ @ import rx . Observable ; <nl> * @ see io . realm . Realm <nl> * @ see io . realm . DynamicRealm <nl> * / <nl> - public abstract class BaseRealm < E extends BaseRealm > implements Closeable { <nl> + public abstract class BaseRealm < T extends BaseRealm < T > > implements Closeable { <nl> protected static final long UNVERSIONED = - 1 ; <nl> private static final String INCORRECT _ THREAD _ CLOSE _ MESSAGE = " Realm access from incorrect thread . Realm instance can only be closed on the thread it was created . " ; <nl> private static final String INCORRECT _ THREAD _ MESSAGE = " Realm access from incorrect thread . Realm objects can only be accessed on the thread they were created . " ; <nl> @ @ - 203 , 8 + 199 , 8 @ @ public abstract class BaseRealm < E extends BaseRealm > implements Closeable { <nl> * @ see < a href = " " > RxJava and Realm < / a > <nl> * / <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public Observable < E > observable ( ) { <nl> - return ( Observable < E > ) configuration . getRxFactory ( ) . from ( this ) ; <nl> + public Observable < T > observable ( ) { <nl> + return ( Observable < T > ) configuration . getRxFactory ( ) . from ( this ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> index f979667 . . 627ac4a 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ import io . realm . internal . TableView ; <nl> * @ see Realm <nl> * @ see RealmSchema <nl> * / <nl> - public final class DynamicRealm extends BaseRealm { <nl> + public final class DynamicRealm extends BaseRealm < DynamicRealm > { <nl> <nl> private DynamicRealm ( RealmConfiguration configuration , boolean autoRefresh ) { <nl> super ( configuration , autoRefresh ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> index 40ad05a . . 318e9e9 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> @ @ - 29 , 7 + 29 , 7 @ @ import io . realm . internal . android . JsonUtils ; <nl> * Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface . <nl> * Using a DynamicRealmObject is slower than using the regular RealmObject class . <nl> * / <nl> - public final class DynamicRealmObject extends RealmObject < DynamicRealmObject > { <nl> + public final class DynamicRealmObject extends RealmObject { <nl> <nl> / * * <nl> * Creates a dynamic Realm object based on an existing object . <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCache . java b / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> index 5283cb5 . . 24824b6 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmCache . java <nl> @ @ - 89 , 7 + 89 , 7 @ @ class RealmCache { <nl> * @ param realmClass class of { @ link Realm } or { @ link DynamicRealm } to be created in or gotten from the cache . <nl> * @ return the { @ link Realm } or { @ link DynamicRealm } instance . <nl> * / <nl> - static synchronized < E extends BaseRealm > E createRealmOrGetFromCache ( RealmConfiguration configuration , <nl> + static synchronized < E extends BaseRealm < E > > E createRealmOrGetFromCache ( RealmConfiguration configuration , <nl> Class < E > realmClass ) { <nl> boolean isCacheInMap = true ; <nl> RealmCache cache = cachesMap . get ( configuration . getPath ( ) ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> index 3978bfc . . 34960d0 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ import rx . Observable ; <nl> * / <nl> <nl> @ RealmClass <nl> - public abstract class RealmObject < E extends RealmObject > { <nl> + public abstract class RealmObject { <nl> <nl> protected Row row ; <nl> protected BaseRealm realm ; <nl> @ @ - 255 , 7 + 255 , 10 @ @ public abstract class RealmObject < E extends RealmObject > { <nl> * @ see < a href = " " > RxJava and Realm < / a > <nl> * / <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public Observable < E > observable ( ) { <nl> + public < E extends RealmObject > Observable < E > observable ( Class < E > type ) { <nl> + if ( ! this . getClass ( ) . isInstance ( type ) ) { <nl> + throw new IllegalArgumentException ( " This RealmObject cannot be cast to the desired type : " + type ) ; <nl> + } <nl> return realm . configuration . getRxFactory ( ) . from ( ( E ) this ) ; <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> index 89274ba . . fde3390 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> @ @ - 1719 , 86 + 1719 , 16 @ @ public class RealmQuery < E extends RealmObject > { <nl> * @ return the object found or { @ code null } if no object matches the query conditions . <nl> * @ see io . realm . RealmObject <nl> * / <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public E findFirst ( ) { <nl> checkQueryIsNotReused ( ) ; <nl> long rowIndex = this . query . find ( ) ; <nl> if ( rowIndex > = 0 ) { <nl> - return ( E ) realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; <nl> + return realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; <nl> } else { <nl> return null ; <nl> } <nl> } <nl> <nl> - / / FIXME Replace with Schema when it is available <nl> - private static class DynamicColumnMap implements Map < String , Long > { <nl> - private final Table table ; <nl> - <nl> - public DynamicColumnMap ( Table table ) { <nl> - this . table = table ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long get ( Object key ) { <nl> - return table . getColumnIndex ( ( String ) key ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void clear ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean containsKey ( Object key ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean containsValue ( Object value ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Set < Entry < String , Long > > entrySet ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean isEmpty ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Set < String > keySet ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long put ( String key , Long value ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void putAll ( Map < ? extends String , ? extends Long > map ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Long remove ( Object key ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public int size ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Collection < Long > values ( ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - } <nl> - <nl> / * * <nl> * Similar to { @ link # findFirst ( ) } but runs asynchronously on a worker thread <nl> * This method is only available from a Looper thread . <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index db09759 . . 3629486 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 157 , 15 + 157 , 14 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { <nl> * @ throws IndexOutOfBoundsException if { @ code location < 0 | | location > = size ( ) } . <nl> * / <nl> @ Override <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public E get ( int location ) { <nl> E obj ; <nl> realm . checkIfValid ( ) ; <nl> TableOrView table = getTable ( ) ; <nl> if ( table instanceof TableView ) { <nl> - obj = ( E ) realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; <nl> + obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; <nl> } else { <nl> - obj = ( E ) realm . get ( classSpec , className , location ) ; <nl> + obj = realm . get ( classSpec , className , location ) ; <nl> } <nl> <nl> return obj ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> index 718e705 . . 940f217 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ public final class RealmObservableFactory implements RxObservableFactory { <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { <nl> + public < E extends RealmObject > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { <nl> checkRxJavaAvailable ( ) ; <nl> return Observable . create ( new Observable . OnSubscribe < RealmResults < E > > ( ) { <nl> @ Override <nl> @ @ - 106 , 13 + 106 , 13 @ @ public final class RealmObservableFactory implements RxObservableFactory { <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) { <nl> + public < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) { <nl> checkRxJavaAvailable ( ) ; <nl> throw new RuntimeException ( " RealmList does not support change listeners yet , so cannot create an Observable " ) ; <nl> } <nl> <nl> @ Override <nl> - public < E extends RealmObject < E > > Observable < E > from ( final E object ) { <nl> + public < E extends RealmObject > Observable < E > from ( final E object ) { <nl> checkRxJavaAvailable ( ) ; <nl> return Observable . create ( new Observable . OnSubscribe < E > ( ) { <nl> @ Override <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> index 0984f85 . . 14fd548 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ public interface RxObservableFactory { <nl> * @ param results RealmResults to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; <nl> + < E extends RealmObject > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; <nl> <nl> / * * <nl> * Creates an Observable for a RealmList . It should emit the initial list when subscribed to and on each <nl> @ @ - 41 , 7 + 41 , 7 @ @ public interface RxObservableFactory { <nl> * @ param list RealmObject to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) ; <nl> + < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) ; <nl> <nl> <nl> / * * <nl> @ @ - 53 , 5 + 53 , 5 @ @ public interface RxObservableFactory { <nl> * @ param object RealmObject to listen to changes for . <nl> * @ param < E > Type of RealmObject <nl> * / <nl> - < E extends RealmObject < E > > Observable < E > from ( E object ) ; <nl> + < E extends RealmObject > Observable < E > from ( E object ) ; <nl> }

TEST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index c09db3b . . 771001e 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 9 , 6 + 9 , 7 @ @ 
 * Removed deprecated API ` RealmObject . removeChangeListeners ( ) ` . Use ` RealmObject . removeAllChangeListeners ( ) ` instead . 
 * ` SyncUser . Callback ` to becomes generic . 
 * Removed ` SyncUser . getAccessToken ` method from public API , and rename it to ` getRefreshToken ` . 
 + * Removed ` UNSUPPORTED _ TABLE ` , ` UNSUPPORTED _ MIXED ` and ` UNSUPPORTED _ DATE ` from ` RealmFieldType ` . 
 * Relaxed upper bound of type parameter of ` RealmList ` , ` RealmQuery ` , ` RealmResults ` , ` RealmCollection ` , ` OrderedRealmCollection ` and ` OrderedRealmCollectionSnapshot ` . 
 
 # # Deprecated 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / LinkingObjectsDynamicTests . java b / realm / realm - library / src / androidTest / java / io / realm / LinkingObjectsDynamicTests . java 
 index b94b6b4 . . 9d881dd 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / LinkingObjectsDynamicTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / LinkingObjectsDynamicTests . java 
 @ @ - 174 , 11 + 174 , 6 @ @ public class LinkingObjectsDynamicTests { 
 for ( RealmFieldType fieldType : RealmFieldType . values ( ) ) { 
 try { 
 switch ( fieldType ) { 
 - / / skip unsupported types 
 - case UNSUPPORTED _ TABLE : / / fall - through 
 - case UNSUPPORTED _ MIXED : / / fall - through 
 - case UNSUPPORTED _ DATE : 
 - continue ; 
 / / skip valid types 
 case OBJECT : / / fall - through 
 case LIST : 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / QueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / QueryTests . java 
 index a2d025d . . 5ef1233 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / QueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / QueryTests . java 
 @ @ - 62 , 9 + 62 , 6 @ @ public abstract class QueryTests { 
 
 list = new ArrayList < > ( Arrays . asList ( RealmFieldType . values ( ) ) ) ; 
 list . removeAll ( SUPPORTED _ IS _ EMPTY _ TYPES ) ; 
 - list . remove ( RealmFieldType . UNSUPPORTED _ MIXED ) ; 
 - list . remove ( RealmFieldType . UNSUPPORTED _ TABLE ) ; 
 - list . remove ( RealmFieldType . UNSUPPORTED _ DATE ) ; 
 
 / / FIXME zaki50 revisit once we implement query for Primitive List 
 list . remove ( RealmFieldType . STRING _ LIST ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 index d253569 . . 530ca47 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 @ @ - 92 , 21 + 92 , 29 @ @ public class TestHelper { 
 } 
 
 public static RealmFieldType getColumnType ( Object o ) { 
 - if ( o instanceof Boolean ) 
 + if ( o instanceof Boolean ) { 
 return RealmFieldType . BOOLEAN ; 
 - if ( o instanceof String ) 
 + } 
 + if ( o instanceof String ) { 
 return RealmFieldType . STRING ; 
 - if ( o instanceof Long ) 
 + } 
 + if ( o instanceof Long ) { 
 return RealmFieldType . INTEGER ; 
 - if ( o instanceof Float ) 
 + } 
 + if ( o instanceof Float ) { 
 return RealmFieldType . FLOAT ; 
 - if ( o instanceof Double ) 
 + } 
 + if ( o instanceof Double ) { 
 return RealmFieldType . DOUBLE ; 
 - if ( o instanceof Date ) 
 + } 
 + if ( o instanceof Date ) { 
 return RealmFieldType . DATE ; 
 - if ( o instanceof byte [ ] ) 
 + } 
 + if ( o instanceof byte [ ] ) { 
 return RealmFieldType . BINARY ; 
 - return RealmFieldType . UNSUPPORTED _ MIXED ; 
 + } 
 + 
 + throw new IllegalArgumentException ( " Unsupported type " ) ; 
 } 
 
 / * * 
 @ @ - 203 , 8 + 211 , 6 @ @ public class TestHelper { 
 table . setBinaryByteArray ( columnIndex , rowIndex , ( byte [ ] ) value , false ) ; 
 } 
 break ; 
 - case UNSUPPORTED _ MIXED : 
 - case UNSUPPORTED _ TABLE : 
 default : 
 throw new RuntimeException ( " Unexpected columnType : " + String . valueOf ( colTypes [ ( int ) columnIndex ] ) ) ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / SortDescriptorTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / SortDescriptorTests . java 
 index 381b408 . . a8c4bd2 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / SortDescriptorTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / SortDescriptorTests . java 
 @ @ - 240 , 9 + 240 , 6 @ @ public class SortDescriptorTests { 
 for ( RealmFieldType type : RealmFieldType . values ( ) ) { 
 if ( ! filter . contains ( type ) ) { 
 switch ( type ) { 
 - case UNSUPPORTED _ DATE : 
 - case UNSUPPORTED _ TABLE : 
 - case UNSUPPORTED _ MIXED : 
 case LINKING _ OBJECTS : / / TODO : should be supported ? s 
 case INTEGER _ LIST : / / FIXME zaki50 revisit this once Primitive List query is implemented 
 case BOOLEAN _ LIST : 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 index 20b9a54 . . 012085f 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 @ @ - 113 , 8 + 113 , 6 @ @ public class DynamicRealmObject extends RealmObject implements RealmObjectProxy 
 return ( E ) getObject ( fieldName ) ; 
 case LIST : 
 return ( E ) getList ( fieldName ) ; 
 - case UNSUPPORTED _ TABLE : 
 - case UNSUPPORTED _ MIXED : 
 default : 
 throw new IllegalStateException ( " Field type not supported : " + type ) ; 
 } 
 @ @ - 395 , 8 + 393 , 6 @ @ public class DynamicRealmObject extends RealmObject implements RealmObjectProxy 
 case DATE : 
 return proxyState . getRow $ realm ( ) . isNull ( columnIndex ) ; 
 case LIST : 
 - case UNSUPPORTED _ TABLE : 
 - case UNSUPPORTED _ MIXED : 
 default : 
 return false ; 
 } 
 @ @ - 970 , 8 + 966 , 6 @ @ public class DynamicRealmObject extends RealmObject implements RealmObjectProxy 
 String targetClassName = proxyState . getRow $ realm ( ) . getTable ( ) . getLinkTarget ( columnIndex ) . getClassName ( ) ; 
 sb . append ( String . format ( Locale . US , " RealmList < % s > [ % s ] " , targetClassName , proxyState . getRow $ realm ( ) . getList ( columnIndex ) . size ( ) ) ) ; 
 break ; 
 - case UNSUPPORTED _ TABLE : 
 - case UNSUPPORTED _ MIXED : 
 default : 
 sb . append ( " ? " ) ; 
 break ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmFieldType . java b / realm / realm - library / src / main / java / io / realm / RealmFieldType . java 
 index f28c4b5 . . 2514255 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmFieldType . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmFieldType . java 
 @ @ - 72 , 9 + 72 , 6 @ @ public enum RealmFieldType { 
 BOOLEAN ( CORE _ TYPE _ VALUE _ BOOLEAN ) , 
 STRING ( CORE _ TYPE _ VALUE _ STRING ) , 
 BINARY ( CORE _ TYPE _ VALUE _ BINARY ) , 
 - UNSUPPORTED _ TABLE ( CORE _ TYPE _ VALUE _ UNSUPPORTED _ TABLE ) , 
 - UNSUPPORTED _ MIXED ( CORE _ TYPE _ VALUE _ UNSUPPORTED _ MIXED ) , 
 - UNSUPPORTED _ DATE ( CORE _ TYPE _ VALUE _ UNSUPPORTED _ DATE ) , 
 DATE ( CORE _ TYPE _ VALUE _ DATE ) , 
 FLOAT ( CORE _ TYPE _ VALUE _ FLOAT ) , 
 DOUBLE ( CORE _ TYPE _ VALUE _ DOUBLE ) , 
 @ @ - 137 , 11 + 134 , 6 @ @ public enum RealmFieldType { 
 return ( obj instanceof String ) ; 
 case CORE _ TYPE _ VALUE _ BINARY : 
 return ( obj instanceof byte [ ] | | obj instanceof ByteBuffer ) ; 
 - case CORE _ TYPE _ VALUE _ UNSUPPORTED _ TABLE : 
 - / / noinspection ConstantConditions 
 - return ( obj = = null | | obj instanceof Object [ ] [ ] ) ; 
 - case CORE _ TYPE _ VALUE _ UNSUPPORTED _ DATE : 
 - return ( obj instanceof java . util . Date ) ; / / The unused DateTime . 
 case CORE _ TYPE _ VALUE _ DATE : 
 return ( obj instanceof java . util . Date ) ; 
 case CORE _ TYPE _ VALUE _ FLOAT :

NEAREST DIFF:
diff - - git a / examples / rxJavaExample / README . md b / examples / rxJavaExample / README . md 
 index 3f33bfa . . ea203c2 100644 
 - - - a / examples / rxJavaExample / README . md 
 + + + b / examples / rxJavaExample / README . md 
 @ @ - 5 , 13 + 5 , 17 @ @ 
 - Observables might have a default Scheduler they operate on that is 
 different than the one the RealmObject was created on . 
 
 - - RealmObjects auto - update . Observables that operate on multiple " versions " 
 + - RealmObjects are live objects that automatically staty up to date . Observables that operate on multiple " versions " 
 will most likely not work as expected . 
 
 - Retrofit automatically offload to a worker thread . 
 
 - Use Realm async API instead of subscribeOn to offload Realm work . 
 
 + - You can use Realm . copyFromRealm to make a copy of Realm data 
 + 
 + 
 + 
 
 # # Resources ( TODO ) 
 - http : / / www . grahamlea . com / 2014 / 07 / rxjava - threading - examples / 
 \ No newline at end of file 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 index 12a0c4a . . ff099ad 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 @ @ - 31 , 7 + 31 , 7 @ @ public class RxJavaTests extends AndroidTestCase { 
 realm . commitTransaction ( ) ; 
 
 final AtomicBoolean subscribedNotified = new AtomicBoolean ( false ) ; 
 - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { 
 + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { 
 @ Override 
 public void call ( AllTypes rxObject ) { 
 assertTrue ( rxObject = = obj ) ; 
 @ @ - 74 , 7 + 74 , 7 @ @ public class RxJavaTests extends AndroidTestCase { 
 final AllTypes obj = realm . createObject ( AllTypes . class ) ; 
 realm . commitTransaction ( ) ; 
 
 - obj . observable ( ) . subscribe ( new Action1 < AllTypes > ( ) { 
 + obj . observable ( AllTypes . class ) . subscribe ( new Action1 < AllTypes > ( ) { 
 @ Override 
 public void call ( AllTypes rxObject ) { 
 subscriberCalled . addAndGet ( 1 ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index a3e5103 . . 4e420ec 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 25 , 15 + 25 , 12 @ @ import java . lang . ref . ReferenceQueue ; 
 import java . lang . ref . WeakReference ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 - import java . util . HashMap ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Map ; 
 - import java . util . Set ; 
 import java . util . concurrent . ConcurrentHashMap ; 
 import java . util . concurrent . CopyOnWriteArrayList ; 
 import java . util . concurrent . atomic . AtomicBoolean ; 
 - import java . util . concurrent . CopyOnWriteArraySet ; 
 
 import io . realm . exceptions . RealmMigrationNeededException ; 
 import io . realm . internal . SharedGroupManager ; 
 @ @ - 44 , 7 + 41 , 6 @ @ import io . realm . internal . android . DebugAndroidLogger ; 
 import io . realm . internal . android . ReleaseAndroidLogger ; 
 import io . realm . internal . async . RealmThreadPoolExecutor ; 
 import io . realm . internal . log . RealmLog ; 
 - import io . realm . rx . RxObservableFactory ; 
 import rx . Observable ; 
 
 / * * 
 @ @ - 53 , 7 + 49 , 7 @ @ import rx . Observable ; 
 * @ see io . realm . Realm 
 * @ see io . realm . DynamicRealm 
 * / 
 - public abstract class BaseRealm < E extends BaseRealm > implements Closeable { 
 + public abstract class BaseRealm < T extends BaseRealm < T > > implements Closeable { 
 protected static final long UNVERSIONED = - 1 ; 
 private static final String INCORRECT _ THREAD _ CLOSE _ MESSAGE = " Realm access from incorrect thread . Realm instance can only be closed on the thread it was created . " ; 
 private static final String INCORRECT _ THREAD _ MESSAGE = " Realm access from incorrect thread . Realm objects can only be accessed on the thread they were created . " ; 
 @ @ - 203 , 8 + 199 , 8 @ @ public abstract class BaseRealm < E extends BaseRealm > implements Closeable { 
 * @ see < a href = " " > RxJava and Realm < / a > 
 * / 
 @ SuppressWarnings ( " unchecked " ) 
 - public Observable < E > observable ( ) { 
 - return ( Observable < E > ) configuration . getRxFactory ( ) . from ( this ) ; 
 + public Observable < T > observable ( ) { 
 + return ( Observable < T > ) configuration . getRxFactory ( ) . from ( this ) ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 index f979667 . . 627ac4a 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealm . java 
 @ @ - 42 , 7 + 42 , 7 @ @ import io . realm . internal . TableView ; 
 * @ see Realm 
 * @ see RealmSchema 
 * / 
 - public final class DynamicRealm extends BaseRealm { 
 + public final class DynamicRealm extends BaseRealm < DynamicRealm > { 
 
 private DynamicRealm ( RealmConfiguration configuration , boolean autoRefresh ) { 
 super ( configuration , autoRefresh ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 index 40ad05a . . 318e9e9 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 @ @ - 29 , 7 + 29 , 7 @ @ import io . realm . internal . android . JsonUtils ; 
 * Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface . 
 * Using a DynamicRealmObject is slower than using the regular RealmObject class . 
 * / 
 - public final class DynamicRealmObject extends RealmObject < DynamicRealmObject > { 
 + public final class DynamicRealmObject extends RealmObject { 
 
 / * * 
 * Creates a dynamic Realm object based on an existing object . 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmCache . java b / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 index 5283cb5 . . 24824b6 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmCache . java 
 @ @ - 89 , 7 + 89 , 7 @ @ class RealmCache { 
 * @ param realmClass class of { @ link Realm } or { @ link DynamicRealm } to be created in or gotten from the cache . 
 * @ return the { @ link Realm } or { @ link DynamicRealm } instance . 
 * / 
 - static synchronized < E extends BaseRealm > E createRealmOrGetFromCache ( RealmConfiguration configuration , 
 + static synchronized < E extends BaseRealm < E > > E createRealmOrGetFromCache ( RealmConfiguration configuration , 
 Class < E > realmClass ) { 
 boolean isCacheInMap = true ; 
 RealmCache cache = cachesMap . get ( configuration . getPath ( ) ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmObject . java b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 index 3978bfc . . 34960d0 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmObject . java 
 @ @ - 79 , 7 + 79 , 7 @ @ import rx . Observable ; 
 * / 
 
 @ RealmClass 
 - public abstract class RealmObject < E extends RealmObject > { 
 + public abstract class RealmObject { 
 
 protected Row row ; 
 protected BaseRealm realm ; 
 @ @ - 255 , 7 + 255 , 10 @ @ public abstract class RealmObject < E extends RealmObject > { 
 * @ see < a href = " " > RxJava and Realm < / a > 
 * / 
 @ SuppressWarnings ( " unchecked " ) 
 - public Observable < E > observable ( ) { 
 + public < E extends RealmObject > Observable < E > observable ( Class < E > type ) { 
 + if ( ! this . getClass ( ) . isInstance ( type ) ) { 
 + throw new IllegalArgumentException ( " This RealmObject cannot be cast to the desired type : " + type ) ; 
 + } 
 return realm . configuration . getRxFactory ( ) . from ( ( E ) this ) ; 
 } 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 index 89274ba . . fde3390 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 @ @ - 1719 , 86 + 1719 , 16 @ @ public class RealmQuery < E extends RealmObject > { 
 * @ return the object found or { @ code null } if no object matches the query conditions . 
 * @ see io . realm . RealmObject 
 * / 
 - @ SuppressWarnings ( " unchecked " ) 
 public E findFirst ( ) { 
 checkQueryIsNotReused ( ) ; 
 long rowIndex = this . query . find ( ) ; 
 if ( rowIndex > = 0 ) { 
 - return ( E ) realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; 
 + return realm . get ( clazz , className , ( view ! = null ) ? view . getTargetRowIndex ( rowIndex ) : rowIndex ) ; 
 } else { 
 return null ; 
 } 
 } 
 
 - / / FIXME Replace with Schema when it is available 
 - private static class DynamicColumnMap implements Map < String , Long > { 
 - private final Table table ; 
 - 
 - public DynamicColumnMap ( Table table ) { 
 - this . table = table ; 
 - } 
 - 
 - @ Override 
 - public Long get ( Object key ) { 
 - return table . getColumnIndex ( ( String ) key ) ; 
 - } 
 - 
 - @ Override 
 - public void clear ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean containsKey ( Object key ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean containsValue ( Object value ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Set < Entry < String , Long > > entrySet ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public boolean isEmpty ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Set < String > keySet ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Long put ( String key , Long value ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public void putAll ( Map < ? extends String , ? extends Long > map ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Long remove ( Object key ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public int size ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - @ Override 
 - public Collection < Long > values ( ) { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - } 
 - 
 / * * 
 * Similar to { @ link # findFirst ( ) } but runs asynchronously on a worker thread 
 * This method is only available from a Looper thread . 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index db09759 . . 3629486 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 157 , 15 + 157 , 14 @ @ public final class RealmResults < E extends RealmObject > extends AbstractList < E > { 
 * @ throws IndexOutOfBoundsException if { @ code location < 0 | | location > = size ( ) } . 
 * / 
 @ Override 
 - @ SuppressWarnings ( " unchecked " ) 
 public E get ( int location ) { 
 E obj ; 
 realm . checkIfValid ( ) ; 
 TableOrView table = getTable ( ) ; 
 if ( table instanceof TableView ) { 
 - obj = ( E ) realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; 
 + obj = realm . get ( classSpec , className , ( ( TableView ) table ) . getSourceRowIndex ( location ) ) ; 
 } else { 
 - obj = ( E ) realm . get ( classSpec , className , location ) ; 
 + obj = realm . get ( classSpec , className , location ) ; 
 } 
 
 return obj ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 index 718e705 . . 940f217 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 + + + b / realm / realm - library / src / main / java / io / realm / rx / RealmObservableFactory . java 
 @ @ - 79 , 7 + 79 , 7 @ @ public final class RealmObservableFactory implements RxObservableFactory { 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { 
 + public < E extends RealmObject > Observable < RealmResults < E > > from ( final RealmResults < E > results ) { 
 checkRxJavaAvailable ( ) ; 
 return Observable . create ( new Observable . OnSubscribe < RealmResults < E > > ( ) { 
 @ Override 
 @ @ - 106 , 13 + 106 , 13 @ @ public final class RealmObservableFactory implements RxObservableFactory { 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) { 
 + public < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) { 
 checkRxJavaAvailable ( ) ; 
 throw new RuntimeException ( " RealmList does not support change listeners yet , so cannot create an Observable " ) ; 
 } 
 
 @ Override 
 - public < E extends RealmObject < E > > Observable < E > from ( final E object ) { 
 + public < E extends RealmObject > Observable < E > from ( final E object ) { 
 checkRxJavaAvailable ( ) ; 
 return Observable . create ( new Observable . OnSubscribe < E > ( ) { 
 @ Override 
 diff - - git a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 index 0984f85 . . 14fd548 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 + + + b / realm / realm - library / src / main / java / io / realm / rx / RxObservableFactory . java 
 @ @ - 30 , 7 + 30 , 7 @ @ public interface RxObservableFactory { 
 * @ param results RealmResults to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; 
 + < E extends RealmObject > Observable < RealmResults < E > > from ( RealmResults < E > results ) ; 
 
 / * * 
 * Creates an Observable for a RealmList . It should emit the initial list when subscribed to and on each 
 @ @ - 41 , 7 + 41 , 7 @ @ public interface RxObservableFactory { 
 * @ param list RealmObject to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < RealmList < E > > from ( RealmList < E > list ) ; 
 + < E extends RealmObject > Observable < RealmList < E > > from ( RealmList < E > list ) ; 
 
 
 / * * 
 @ @ - 53 , 5 + 53 , 5 @ @ public interface RxObservableFactory { 
 * @ param object RealmObject to listen to changes for . 
 * @ param < E > Type of RealmObject 
 * / 
 - < E extends RealmObject < E > > Observable < E > from ( E object ) ; 
 + < E extends RealmObject > Observable < E > from ( E object ) ; 
 }
