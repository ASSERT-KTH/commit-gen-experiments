BLEU SCORE: 0.020315766105349124

TEST MSG: Prevent people from migrating a open Realm .
GENERATED MSG: Fix BaseRealm # checkIfValid ( ) which does not throw Exception after close ( ) .

TEST DIFF (one line): diff - - git a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> index 3e57d6e . . 54e600c 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java <nl> @ @ - 515 , 4 + 515 , 23 @ @ public class RealmMigrationTests extends AndroidTestCase { <nl> } <nl> } <nl> } <nl> + <nl> + public void testRealmOpenBeforeMigrationThrows ( ) { <nl> + RealmConfiguration config = TestHelper . createConfiguration ( getContext ( ) ) ; <nl> + Realm . deleteRealm ( config ) ; <nl> + realm = Realm . getInstance ( config ) ; <nl> + <nl> + try { <nl> + / / Trigger manual migration . This can potentially change the schema , so should only be allowed when <nl> + / / no - one else is working on the Realm . <nl> + Realm . migrateRealm ( config , new RealmMigration ( ) { <nl> + @ Override <nl> + public long execute ( Realm realm , long version ) { <nl> + return 0 ; <nl> + } <nl> + } ) ; <nl> + fail ( ) ; <nl> + } catch ( IllegalStateException ignored ) { <nl> + } <nl> + } <nl> } <nl> diff - - git a / realm / src / main / java / io / realm / BaseRealm . java b / realm / src / main / java / io / realm / BaseRealm . java <nl> index 46ce889 . . 694b0ed 100644 <nl> - - - a / realm / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 610 , 6 + 610 , 9 @ @ abstract class BaseRealm implements Closeable { <nl> if ( migration = = null & & configuration . getMigration ( ) = = null ) { <nl> throw new RealmMigrationNeededException ( configuration . getPath ( ) , " RealmMigration must be provided " ) ; <nl> } <nl> + if ( isFileOpen ( configuration ) ) { <nl> + throw new IllegalStateException ( " Cannot migrate a Realm file that is already open : " + configuration . getPath ( ) ) ; <nl> + } <nl> <nl> RealmMigration realmMigration = ( migration = = null ) ? configuration . getMigration ( ) : migration ; <nl> BaseRealm realm = null ;
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> index 8cac915 . . 3b8926e 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> @ @ - 186 , 6 + 186 , 18 @ @ public class RealmTest extends AndroidTestCase { <nl> } <nl> } <nl> <nl> + public void testCheckValid ( ) { <nl> + / / checkIfValid ( ) must not throw any Exception against valid Realm instance . <nl> + testRealm . checkIfValid ( ) ; <nl> + <nl> + testRealm . close ( ) ; <nl> + try { <nl> + testRealm . checkIfValid ( ) ; <nl> + fail ( " closed Realm instance must throw IllegalStateException . " ) ; <nl> + } catch ( IllegalStateException ignored ) { <nl> + } <nl> + } <nl> + <nl> public void testRealmCache ( ) { <nl> Realm newRealm = Realm . getInstance ( getContext ( ) ) ; <nl> assertEquals ( testRealm , newRealm ) ; <nl> diff - - git a / realm / src / main / java / io / realm / BaseRealm . java b / realm / src / main / java / io / realm / BaseRealm . java <nl> index 754916e . . bfef66c 100644 <nl> - - - a / realm / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 335 , 7 + 335 , 7 @ @ abstract class BaseRealm implements Closeable { <nl> * / <nl> protected void checkIfValid ( ) { <nl> / / Check if the Realm instance has been closed <nl> - if ( sharedGroupManager ! = null & & ! sharedGroupManager . isOpen ( ) ) { <nl> + if ( sharedGroupManager = = null | | ! sharedGroupManager . isOpen ( ) ) { <nl> throw new IllegalStateException ( BaseRealm . CLOSED _ REALM _ MESSAGE ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java 
 index 3e57d6e . . 54e600c 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmMigrationTests . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmMigrationTests . java 
 @ @ - 515 , 4 + 515 , 23 @ @ public class RealmMigrationTests extends AndroidTestCase { 
 } 
 } 
 } 
 + 
 + public void testRealmOpenBeforeMigrationThrows ( ) { 
 + RealmConfiguration config = TestHelper . createConfiguration ( getContext ( ) ) ; 
 + Realm . deleteRealm ( config ) ; 
 + realm = Realm . getInstance ( config ) ; 
 + 
 + try { 
 + / / Trigger manual migration . This can potentially change the schema , so should only be allowed when 
 + / / no - one else is working on the Realm . 
 + Realm . migrateRealm ( config , new RealmMigration ( ) { 
 + @ Override 
 + public long execute ( Realm realm , long version ) { 
 + return 0 ; 
 + } 
 + } ) ; 
 + fail ( ) ; 
 + } catch ( IllegalStateException ignored ) { 
 + } 
 + } 
 } 
 diff - - git a / realm / src / main / java / io / realm / BaseRealm . java b / realm / src / main / java / io / realm / BaseRealm . java 
 index 46ce889 . . 694b0ed 100644 
 - - - a / realm / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / src / main / java / io / realm / BaseRealm . java 
 @ @ - 610 , 6 + 610 , 9 @ @ abstract class BaseRealm implements Closeable { 
 if ( migration = = null & & configuration . getMigration ( ) = = null ) { 
 throw new RealmMigrationNeededException ( configuration . getPath ( ) , " RealmMigration must be provided " ) ; 
 } 
 + if ( isFileOpen ( configuration ) ) { 
 + throw new IllegalStateException ( " Cannot migrate a Realm file that is already open : " + configuration . getPath ( ) ) ; 
 + } 
 
 RealmMigration realmMigration = ( migration = = null ) ? configuration . getMigration ( ) : migration ; 
 BaseRealm realm = null ;

NEAREST DIFF:
diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java 
 index 8cac915 . . 3b8926e 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmTest . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmTest . java 
 @ @ - 186 , 6 + 186 , 18 @ @ public class RealmTest extends AndroidTestCase { 
 } 
 } 
 
 + public void testCheckValid ( ) { 
 + / / checkIfValid ( ) must not throw any Exception against valid Realm instance . 
 + testRealm . checkIfValid ( ) ; 
 + 
 + testRealm . close ( ) ; 
 + try { 
 + testRealm . checkIfValid ( ) ; 
 + fail ( " closed Realm instance must throw IllegalStateException . " ) ; 
 + } catch ( IllegalStateException ignored ) { 
 + } 
 + } 
 + 
 public void testRealmCache ( ) { 
 Realm newRealm = Realm . getInstance ( getContext ( ) ) ; 
 assertEquals ( testRealm , newRealm ) ; 
 diff - - git a / realm / src / main / java / io / realm / BaseRealm . java b / realm / src / main / java / io / realm / BaseRealm . java 
 index 754916e . . bfef66c 100644 
 - - - a / realm / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / src / main / java / io / realm / BaseRealm . java 
 @ @ - 335 , 7 + 335 , 7 @ @ abstract class BaseRealm implements Closeable { 
 * / 
 protected void checkIfValid ( ) { 
 / / Check if the Realm instance has been closed 
 - if ( sharedGroupManager ! = null & & ! sharedGroupManager . isOpen ( ) ) { 
 + if ( sharedGroupManager = = null | | ! sharedGroupManager . isOpen ( ) ) { 
 throw new IllegalStateException ( BaseRealm . CLOSED _ REALM _ MESSAGE ) ; 
 } 

