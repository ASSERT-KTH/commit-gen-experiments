BLEU SCORE: 0.06567274736060397

TEST MSG: Fix logging for RunTestInLooperThreadTests integration tests .
GENERATED MSG: Adds User . all ( )

TEST DIFF (one line): diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java <nl> index f535ba3 . . 3a46d16 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java <nl> @ @ - 17 , 26 + 17 , 43 @ @ <nl> package io . realm ; <nl> <nl> import android . support . test . InstrumentationRegistry ; <nl> + import android . support . test . rule . UiThreadTestRule ; <nl> import android . util . Log ; <nl> <nl> import org . junit . After ; <nl> import org . junit . AfterClass ; <nl> import org . junit . Before ; <nl> import org . junit . BeforeClass ; <nl> + import org . junit . Rule ; <nl> + import org . junit . rules . ExpectedException ; <nl> <nl> import java . io . File ; <nl> - import java . io . FileNotFoundException ; <nl> import java . io . IOException ; <nl> <nl> import io . realm . internal . Util ; <nl> import io . realm . log . LogLevel ; <nl> import io . realm . log . RealmLog ; <nl> import io . realm . objectserver . utils . HttpUtils ; <nl> + import io . realm . rule . RunInLooperThread ; <nl> + import io . realm . rule . TestSyncConfigurationFactory ; <nl> + <nl> <nl> public class BaseIntegrationTest { <nl> <nl> private static int originalLogLevel ; <nl> <nl> + @ Rule <nl> + public final TestSyncConfigurationFactory configurationFactory = new TestSyncConfigurationFactory ( ) ; <nl> + <nl> + @ Rule <nl> + public RunInLooperThread looperThread = new RunInLooperThread ( ) ; <nl> + <nl> + @ Rule <nl> + public final UiThreadTestRule uiThreadTestRule = new UiThreadTestRule ( ) ; <nl> + <nl> + @ Rule <nl> + public final ExpectedException thrown = ExpectedException . none ( ) ; <nl> + <nl> @ BeforeClass <nl> public static void setUp ( ) throws Exception { <nl> SyncManager . Debug . skipOnlineChecking = true ; <nl> @ @ - 82 , 7 + 99 , 18 @ @ public class BaseIntegrationTest { <nl> <nl> @ After <nl> public void tearDownTest ( ) throws IOException { <nl> - RealmLog . setLevel ( originalLogLevel ) ; <nl> + if ( looperThread . isTestComplete ( ) ) { <nl> + / / Non - looper tests can reset here <nl> + RealmLog . setLevel ( originalLogLevel ) ; <nl> + } else { <nl> + / / Otherwise we need to wait for the test to complete <nl> + looperThread . runAfterTest ( new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) { <nl> + RealmLog . setLevel ( originalLogLevel ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> } <nl> <nl> <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java <nl> index 46fc2d8 . . ebe2663 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java <nl> @ @ - 44 , 9 + 44 , 6 @ @ public class SSLConfigurationTests extends BaseIntegrationTest { <nl> @ Rule <nl> public Timeout globalTimeout = Timeout . seconds ( 10 ) ; <nl> <nl> - @ Rule <nl> - public final TestSyncConfigurationFactory configurationFactory = new TestSyncConfigurationFactory ( ) ; <nl> - <nl> @ Test <nl> public void trustedRootCA ( ) throws InterruptedException { <nl> String username = UUID . randomUUID ( ) . toString ( ) ; <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> index 277aa40 . . d105b65 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> @ @ - 19 , 10 + 19 , 8 @ @ package io . realm ; <nl> import android . os . SystemClock ; <nl> import android . support . annotation . NonNull ; <nl> import android . support . test . annotation . UiThreadTest ; <nl> - import android . support . test . rule . UiThreadTestRule ; <nl> import android . support . test . runner . AndroidJUnit4 ; <nl> <nl> - import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> <nl> @ @ - 37 , 9 + 35 , 7 @ @ import io . realm . entities . StringOnly ; <nl> import io . realm . exceptions . DownloadingRealmInterruptedException ; <nl> import io . realm . exceptions . RealmMigrationNeededException ; <nl> import io . realm . objectserver . utils . Constants ; <nl> - import io . realm . rule . RunInLooperThread ; <nl> import io . realm . rule . RunTestInLooperThread ; <nl> - import io . realm . rule . TestSyncConfigurationFactory ; <nl> <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> @ @ - 52 , 15 + 48 , 6 @ @ import static org . junit . Assert . fail ; <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class SyncedRealmTests extends BaseIntegrationTest { <nl> <nl> - @ Rule <nl> - public RunInLooperThread looperThread = new RunInLooperThread ( ) ; <nl> - <nl> - @ Rule <nl> - public final UiThreadTestRule uiThreadTestRule = new UiThreadTestRule ( ) ; <nl> - <nl> - @ Rule <nl> - public final TestSyncConfigurationFactory configurationFactory = new TestSyncConfigurationFactory ( ) ; <nl> - <nl> @ Test <nl> @ UiThreadTest <nl> public void waitForInitialRemoteData _ mainThreadThrows ( ) { <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> index 2555da8 . . a2ed007 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java <nl> @ @ - 5 , 9 + 5 , 7 @ @ import android . os . Looper ; <nl> import android . support . test . runner . AndroidJUnit4 ; <nl> <nl> import org . junit . Ignore ; <nl> - import org . junit . Rule ; <nl> import org . junit . Test ; <nl> - import org . junit . rules . ExpectedException ; <nl> import org . junit . runner . RunWith ; <nl> <nl> import java . net . MalformedURLException ; <nl> @ @ - 27 , 7 + 25 , 6 @ @ import io . realm . SyncSession ; <nl> import io . realm . SyncUser ; <nl> import io . realm . objectserver . utils . Constants ; <nl> import io . realm . objectserver . utils . UserFactory ; <nl> - import io . realm . rule . RunInLooperThread ; <nl> import io . realm . rule . RunTestInLooperThread ; <nl> <nl> import static junit . framework . Assert . assertEquals ; <nl> @ @ - 38 , 11 + 35 , 6 @ @ import static org . junit . Assert . assertFalse ; <nl> <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class AuthTests extends BaseIntegrationTest { <nl> - @ Rule <nl> - public RunInLooperThread looperThread = new RunInLooperThread ( ) ; <nl> - <nl> - @ Rule <nl> - public final ExpectedException thrown = ExpectedException . none ( ) ; <nl> <nl> @ Test <nl> public void login _ userNotExist ( ) { <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java <nl> index b3880a1 . . dc83c2f 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java <nl> @ @ - 2 , 7 + 2 , 6 @ @ package io . realm . objectserver ; <nl> <nl> import android . os . SystemClock ; <nl> <nl> - import org . junit . Before ; <nl> import org . junit . Ignore ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> @ @ - 26 , 19 + 25 , 15 @ @ import io . realm . exceptions . RealmFileException ; <nl> import io . realm . objectserver . utils . Constants ; <nl> import io . realm . objectserver . utils . StringOnlyModule ; <nl> import io . realm . objectserver . utils . UserFactory ; <nl> - import io . realm . rule . TestSyncConfigurationFactory ; <nl> - import io . realm . util . SyncTestUtils ; <nl> <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> import static org . junit . Assert . fail ; <nl> <nl> public class EncryptedSynchronizedRealmTests extends BaseIntegrationTest { <nl> - @ Rule <nl> - public Timeout globalTimeout = Timeout . seconds ( 10 ) ; <nl> <nl> @ Rule <nl> - public final TestSyncConfigurationFactory configurationFactory = new TestSyncConfigurationFactory ( ) ; <nl> + public Timeout globalTimeout = Timeout . seconds ( 10 ) ; <nl> <nl> / / Make sure the encryption is local , i . e after deleting a synced Realm <nl> / / re - open it again with no ( or different ) key , should be possible . <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ManagementRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ManagementRealmTests . java <nl> index bf31f5b . . ea68292 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ManagementRealmTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ManagementRealmTests . java <nl> @ @ - 51 , 9 + 51 , 6 @ @ import static org . junit . Assert . fail ; <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class ManagementRealmTests extends BaseIntegrationTest { <nl> <nl> - @ Rule <nl> - public RunInLooperThread looperThread = new RunInLooperThread ( ) ; <nl> - <nl> / / This is primarily a test making sure that an admin user actually connects correctly to ROS . <nl> / / See https : / / github . com / realm / realm - java / issues / 4750 <nl> @ Test <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> index 836d3a4 . . 1a086c3 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> @ @ - 55 , 8 + 55 , 6 @ @ public class ProcessCommitTests extends BaseIntegrationTest { <nl> public RunInLooperThread looperThread = new RunInLooperThread ( ) ; <nl> @ Rule <nl> public RunWithRemoteService remoteService = new RunWithRemoteService ( ) ; <nl> - @ Rule <nl> - public TestSyncConfigurationFactory configFactory = new TestSyncConfigurationFactory ( ) ; <nl> <nl> @ Before <nl> public void before ( ) throws Exception { <nl> @ @ - 114 , 7 + 112 , 7 @ @ public class ProcessCommitTests extends BaseIntegrationTest { <nl> <nl> final SyncUser user = UserFactory . getInstance ( ) . createDefaultUser ( Constants . AUTH _ URL ) ; <nl> String realmUrl = Constants . SYNC _ SERVER _ URL ; <nl> - final SyncConfiguration syncConfig = configFactory . createSyncConfigurationBuilder ( user , realmUrl ) . build ( ) ; <nl> + final SyncConfiguration syncConfig = configurationFactory . createSyncConfigurationBuilder ( user , realmUrl ) . build ( ) ; <nl> final Realm realm = Realm . getInstance ( syncConfig ) ; <nl> final RealmResults < ProcessInfo > all = realm . where ( ProcessInfo . class ) . findAll ( ) ; <nl> looperThread . keepStrongReference ( all ) ; <nl> @ @ - 189 , 7 + 187 , 7 @ @ public class ProcessCommitTests extends BaseIntegrationTest { <nl> <nl> final SyncUser user = UserFactory . getInstance ( ) . createDefaultUser ( Constants . AUTH _ URL ) ; <nl> String realmUrl = Constants . SYNC _ SERVER _ URL ; <nl> - final SyncConfiguration syncConfig = configFactory . createSyncConfigurationBuilder ( user , realmUrl ) . build ( ) ; <nl> + final SyncConfiguration syncConfig = configurationFactory . createSyncConfigurationBuilder ( user , realmUrl ) . build ( ) ; <nl> final Realm realm = Realm . getInstance ( syncConfig ) ; <nl> final RealmResults < TestObject > all = realm . where ( TestObject . class ) . findAllSorted ( " intProp " ) ; <nl> looperThread . keepStrongReference ( all ) ;
NEAREST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index af4b613 . . 69e7bb1 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 3 , 6 + 3 , 7 @ @ <nl> # # # Enhancement <nl> <nl> * ` Realm . compactRealm ( ) ` works for encrypted Realms . <nl> + * Added ` User . all ( ) ` that returns all known Realm Object Server users . <nl> <nl> # # 2 . 0 . 3 <nl> <nl> diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> index 1deaf9b . . 566228e 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java <nl> @ @ - 71 , 6 + 71 , 10 @ @ public class SyncManagerTests { <nl> public Collection < User > allUsers ( ) { <nl> return null ; <nl> } <nl> + <nl> + @ Override <nl> + public void clear ( ) { <nl> + } <nl> } ; <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java <nl> index 4cf3601 . . 0f90fe6 100644 <nl> - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java <nl> + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java <nl> @ @ - 19 , 29 + 19 , 21 @ @ package io . realm ; <nl> import android . support . test . InstrumentationRegistry ; <nl> import android . support . test . runner . AndroidJUnit4 ; <nl> <nl> + import org . junit . Before ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> - import org . mockito . Mockito ; <nl> - import org . mockito . invocation . InvocationOnMock ; <nl> - import org . mockito . stubbing . Answer ; <nl> <nl> - import java . net . URL ; <nl> - import java . util . concurrent . TimeUnit ; <nl> + import java . util . Collection ; <nl> <nl> import io . realm . android . SharedPrefsUserStore ; <nl> - import io . realm . internal . network . AuthenticateResponse ; <nl> - import io . realm . internal . network . AuthenticationServer ; <nl> - import io . realm . internal . objectserver . Token ; <nl> import io . realm . rule . RunInLooperThread ; <nl> - import io . realm . rule . RunTestInLooperThread ; <nl> import io . realm . util . SyncTestUtils ; <nl> <nl> import static io . realm . util . SyncTestUtils . createTestUser ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertNull ; <nl> - import static org . mockito . Matchers . any ; <nl> - import static org . mockito . Mockito . when ; <nl> + import static org . junit . Assert . assertTrue ; <nl> <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class UserTests { <nl> @ @ - 49 , 6 + 41 , 12 @ @ public class UserTests { <nl> @ Rule <nl> public final RunInLooperThread looperThread = new RunInLooperThread ( ) ; <nl> <nl> + @ Before <nl> + public void setUp ( ) { <nl> + Realm . init ( InstrumentationRegistry . getTargetContext ( ) ) ; <nl> + SyncManager . getUserStore ( ) . clear ( ) ; <nl> + } <nl> + <nl> @ Test <nl> public void toAndFromJson ( ) { <nl> User user1 = createTestUser ( ) ; <nl> @ @ - 68 , 6 + 66 , 27 @ @ public class UserTests { <nl> assertNull ( User . currentUser ( ) ) ; <nl> } <nl> <nl> + / / ` all ( ) ` returns an empty list if no users are logged in <nl> + @ Test <nl> + public void all _ empty ( ) { <nl> + Collection < User > users = User . all ( ) ; <nl> + assertTrue ( users . isEmpty ( ) ) ; <nl> + } <nl> + <nl> + / / ` all ( ) ` returns only valid users . Invalid users are filtered . <nl> + @ Test <nl> + public void all _ validUsers ( ) { <nl> + / / Add 1 expired user and 1 valid user to the user store <nl> + UserStore userStore = new SharedPrefsUserStore ( InstrumentationRegistry . getContext ( ) ) ; <nl> + SyncManager . setUserStore ( userStore ) ; <nl> + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MIN _ VALUE ) ) ; <nl> + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MAX _ VALUE ) ) ; <nl> + <nl> + Collection < User > users = User . all ( ) ; <nl> + assertEquals ( 1 , users . size ( ) ) ; <nl> + assertTrue ( users . iterator ( ) . next ( ) . isValid ( ) ) ; <nl> + } <nl> + <nl> / / Tests that the user store returns the last user to login <nl> / * FIXME : This test fails because of wrong JSON string . <nl> @ Test <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / User . java b / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> index cab8285 . . 1798b42 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> @ @ - 28 , 7 + 28 , 9 @ @ import java . net . MalformedURLException ; <nl> import java . net . URI ; <nl> import java . net . URISyntaxException ; <nl> import java . net . URL ; <nl> + import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> + import java . util . List ; <nl> import java . util . concurrent . Future ; <nl> import java . util . concurrent . ThreadPoolExecutor ; <nl> <nl> @ @ - 80 , 6 + 82 , 24 @ @ public class User { <nl> } <nl> <nl> / * * <nl> + * Returns all valid users known by this device . <nl> + * A user is invalidated when he / she logs out or the user ' s access token expires . <nl> + * <nl> + * @ return a list of all known valid users . <nl> + * / <nl> + public static Collection < User > all ( ) { <nl> + UserStore userStore = SyncManager . getUserStore ( ) ; <nl> + Collection < User > storedUsers = userStore . allUsers ( ) ; <nl> + List < User > result = new ArrayList < User > ( storedUsers . size ( ) ) ; <nl> + for ( User user : storedUsers ) { <nl> + if ( user . isValid ( ) ) { <nl> + result . add ( user ) ; <nl> + } <nl> + } <nl> + return result ; <nl> + } <nl> + <nl> + / * * <nl> * Loads a user that has previously been serialized using { @ link # toJson ( ) } . <nl> * <nl> * @ param user JSON string representing the user . <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> index 140d013 . . 4ec9f35 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java <nl> @ @ - 67 , 4 + 67 , 10 @ @ public interface UserStore { <nl> * @ return Collection of all users . If no users exist , an empty collection is returned . <nl> * / <nl> Collection < User > allUsers ( ) ; <nl> + <nl> + <nl> + / * * <nl> + * Removes all saved users . <nl> + * / <nl> + void clear ( ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> index 7aedf01 . . 5a73075 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ import java . security . KeyStoreException ; <nl> import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> import java . util . Map ; <nl> + import java . util . Set ; <nl> <nl> import io . realm . User ; <nl> import io . realm . UserStore ; <nl> @ @ - 159 , 4 + 160 , 14 @ @ public class SecureUserStore implements UserStore { <nl> } <nl> return users ; <nl> } <nl> + <nl> + @ Override <nl> + public void clear ( ) { <nl> + Set < String > all = sp . getAll ( ) . keySet ( ) ; <nl> + SharedPreferences . Editor editor = sp . edit ( ) ; <nl> + for ( String key : all ) { <nl> + editor . remove ( key ) ; <nl> + } <nl> + editor . apply ( ) ; <nl> + } <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java <nl> index eab709c . . 4773cb6 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import android . content . SharedPreferences ; <nl> import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> import java . util . Map ; <nl> + import java . util . Set ; <nl> <nl> import io . realm . User ; <nl> import io . realm . UserStore ; <nl> @ @ - 114 , 4 + 115 , 17 @ @ public class SharedPrefsUserStore implements UserStore { <nl> } <nl> return users ; <nl> } <nl> + <nl> + / * * <nl> + * { @ inheritDoc } <nl> + * / <nl> + @ Override <nl> + public void clear ( ) { <nl> + Set < String > all = sp . getAll ( ) . keySet ( ) ; <nl> + SharedPreferences . Editor editor = sp . edit ( ) ; <nl> + for ( String key : all ) { <nl> + editor . remove ( key ) ; <nl> + } <nl> + editor . apply ( ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java 
 index f535ba3 . . 3a46d16 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / BaseIntegrationTest . java 
 @ @ - 17 , 26 + 17 , 43 @ @ 
 package io . realm ; 
 
 import android . support . test . InstrumentationRegistry ; 
 + import android . support . test . rule . UiThreadTestRule ; 
 import android . util . Log ; 
 
 import org . junit . After ; 
 import org . junit . AfterClass ; 
 import org . junit . Before ; 
 import org . junit . BeforeClass ; 
 + import org . junit . Rule ; 
 + import org . junit . rules . ExpectedException ; 
 
 import java . io . File ; 
 - import java . io . FileNotFoundException ; 
 import java . io . IOException ; 
 
 import io . realm . internal . Util ; 
 import io . realm . log . LogLevel ; 
 import io . realm . log . RealmLog ; 
 import io . realm . objectserver . utils . HttpUtils ; 
 + import io . realm . rule . RunInLooperThread ; 
 + import io . realm . rule . TestSyncConfigurationFactory ; 
 + 
 
 public class BaseIntegrationTest { 
 
 private static int originalLogLevel ; 
 
 + @ Rule 
 + public final TestSyncConfigurationFactory configurationFactory = new TestSyncConfigurationFactory ( ) ; 
 + 
 + @ Rule 
 + public RunInLooperThread looperThread = new RunInLooperThread ( ) ; 
 + 
 + @ Rule 
 + public final UiThreadTestRule uiThreadTestRule = new UiThreadTestRule ( ) ; 
 + 
 + @ Rule 
 + public final ExpectedException thrown = ExpectedException . none ( ) ; 
 + 
 @ BeforeClass 
 public static void setUp ( ) throws Exception { 
 SyncManager . Debug . skipOnlineChecking = true ; 
 @ @ - 82 , 7 + 99 , 18 @ @ public class BaseIntegrationTest { 
 
 @ After 
 public void tearDownTest ( ) throws IOException { 
 - RealmLog . setLevel ( originalLogLevel ) ; 
 + if ( looperThread . isTestComplete ( ) ) { 
 + / / Non - looper tests can reset here 
 + RealmLog . setLevel ( originalLogLevel ) ; 
 + } else { 
 + / / Otherwise we need to wait for the test to complete 
 + looperThread . runAfterTest ( new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + RealmLog . setLevel ( originalLogLevel ) ; 
 + } 
 + } ) ; 
 + } 
 } 
 
 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java 
 index 46fc2d8 . . ebe2663 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SSLConfigurationTests . java 
 @ @ - 44 , 9 + 44 , 6 @ @ public class SSLConfigurationTests extends BaseIntegrationTest { 
 @ Rule 
 public Timeout globalTimeout = Timeout . seconds ( 10 ) ; 
 
 - @ Rule 
 - public final TestSyncConfigurationFactory configurationFactory = new TestSyncConfigurationFactory ( ) ; 
 - 
 @ Test 
 public void trustedRootCA ( ) throws InterruptedException { 
 String username = UUID . randomUUID ( ) . toString ( ) ; 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 index 277aa40 . . d105b65 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 @ @ - 19 , 10 + 19 , 8 @ @ package io . realm ; 
 import android . os . SystemClock ; 
 import android . support . annotation . NonNull ; 
 import android . support . test . annotation . UiThreadTest ; 
 - import android . support . test . rule . UiThreadTestRule ; 
 import android . support . test . runner . AndroidJUnit4 ; 
 
 - import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 
 @ @ - 37 , 9 + 35 , 7 @ @ import io . realm . entities . StringOnly ; 
 import io . realm . exceptions . DownloadingRealmInterruptedException ; 
 import io . realm . exceptions . RealmMigrationNeededException ; 
 import io . realm . objectserver . utils . Constants ; 
 - import io . realm . rule . RunInLooperThread ; 
 import io . realm . rule . RunTestInLooperThread ; 
 - import io . realm . rule . TestSyncConfigurationFactory ; 
 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 @ @ - 52 , 15 + 48 , 6 @ @ import static org . junit . Assert . fail ; 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class SyncedRealmTests extends BaseIntegrationTest { 
 
 - @ Rule 
 - public RunInLooperThread looperThread = new RunInLooperThread ( ) ; 
 - 
 - @ Rule 
 - public final UiThreadTestRule uiThreadTestRule = new UiThreadTestRule ( ) ; 
 - 
 - @ Rule 
 - public final TestSyncConfigurationFactory configurationFactory = new TestSyncConfigurationFactory ( ) ; 
 - 
 @ Test 
 @ UiThreadTest 
 public void waitForInitialRemoteData _ mainThreadThrows ( ) { 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 index 2555da8 . . a2ed007 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / AuthTests . java 
 @ @ - 5 , 9 + 5 , 7 @ @ import android . os . Looper ; 
 import android . support . test . runner . AndroidJUnit4 ; 
 
 import org . junit . Ignore ; 
 - import org . junit . Rule ; 
 import org . junit . Test ; 
 - import org . junit . rules . ExpectedException ; 
 import org . junit . runner . RunWith ; 
 
 import java . net . MalformedURLException ; 
 @ @ - 27 , 7 + 25 , 6 @ @ import io . realm . SyncSession ; 
 import io . realm . SyncUser ; 
 import io . realm . objectserver . utils . Constants ; 
 import io . realm . objectserver . utils . UserFactory ; 
 - import io . realm . rule . RunInLooperThread ; 
 import io . realm . rule . RunTestInLooperThread ; 
 
 import static junit . framework . Assert . assertEquals ; 
 @ @ - 38 , 11 + 35 , 6 @ @ import static org . junit . Assert . assertFalse ; 
 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class AuthTests extends BaseIntegrationTest { 
 - @ Rule 
 - public RunInLooperThread looperThread = new RunInLooperThread ( ) ; 
 - 
 - @ Rule 
 - public final ExpectedException thrown = ExpectedException . none ( ) ; 
 
 @ Test 
 public void login _ userNotExist ( ) { 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java 
 index b3880a1 . . dc83c2f 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / EncryptedSynchronizedRealmTests . java 
 @ @ - 2 , 7 + 2 , 6 @ @ package io . realm . objectserver ; 
 
 import android . os . SystemClock ; 
 
 - import org . junit . Before ; 
 import org . junit . Ignore ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 @ @ - 26 , 19 + 25 , 15 @ @ import io . realm . exceptions . RealmFileException ; 
 import io . realm . objectserver . utils . Constants ; 
 import io . realm . objectserver . utils . StringOnlyModule ; 
 import io . realm . objectserver . utils . UserFactory ; 
 - import io . realm . rule . TestSyncConfigurationFactory ; 
 - import io . realm . util . SyncTestUtils ; 
 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertTrue ; 
 import static org . junit . Assert . fail ; 
 
 public class EncryptedSynchronizedRealmTests extends BaseIntegrationTest { 
 - @ Rule 
 - public Timeout globalTimeout = Timeout . seconds ( 10 ) ; 
 
 @ Rule 
 - public final TestSyncConfigurationFactory configurationFactory = new TestSyncConfigurationFactory ( ) ; 
 + public Timeout globalTimeout = Timeout . seconds ( 10 ) ; 
 
 / / Make sure the encryption is local , i . e after deleting a synced Realm 
 / / re - open it again with no ( or different ) key , should be possible . 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ManagementRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ManagementRealmTests . java 
 index bf31f5b . . ea68292 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ManagementRealmTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ManagementRealmTests . java 
 @ @ - 51 , 9 + 51 , 6 @ @ import static org . junit . Assert . fail ; 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class ManagementRealmTests extends BaseIntegrationTest { 
 
 - @ Rule 
 - public RunInLooperThread looperThread = new RunInLooperThread ( ) ; 
 - 
 / / This is primarily a test making sure that an admin user actually connects correctly to ROS . 
 / / See https : / / github . com / realm / realm - java / issues / 4750 
 @ Test 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 index 836d3a4 . . 1a086c3 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 @ @ - 55 , 8 + 55 , 6 @ @ public class ProcessCommitTests extends BaseIntegrationTest { 
 public RunInLooperThread looperThread = new RunInLooperThread ( ) ; 
 @ Rule 
 public RunWithRemoteService remoteService = new RunWithRemoteService ( ) ; 
 - @ Rule 
 - public TestSyncConfigurationFactory configFactory = new TestSyncConfigurationFactory ( ) ; 
 
 @ Before 
 public void before ( ) throws Exception { 
 @ @ - 114 , 7 + 112 , 7 @ @ public class ProcessCommitTests extends BaseIntegrationTest { 
 
 final SyncUser user = UserFactory . getInstance ( ) . createDefaultUser ( Constants . AUTH _ URL ) ; 
 String realmUrl = Constants . SYNC _ SERVER _ URL ; 
 - final SyncConfiguration syncConfig = configFactory . createSyncConfigurationBuilder ( user , realmUrl ) . build ( ) ; 
 + final SyncConfiguration syncConfig = configurationFactory . createSyncConfigurationBuilder ( user , realmUrl ) . build ( ) ; 
 final Realm realm = Realm . getInstance ( syncConfig ) ; 
 final RealmResults < ProcessInfo > all = realm . where ( ProcessInfo . class ) . findAll ( ) ; 
 looperThread . keepStrongReference ( all ) ; 
 @ @ - 189 , 7 + 187 , 7 @ @ public class ProcessCommitTests extends BaseIntegrationTest { 
 
 final SyncUser user = UserFactory . getInstance ( ) . createDefaultUser ( Constants . AUTH _ URL ) ; 
 String realmUrl = Constants . SYNC _ SERVER _ URL ; 
 - final SyncConfiguration syncConfig = configFactory . createSyncConfigurationBuilder ( user , realmUrl ) . build ( ) ; 
 + final SyncConfiguration syncConfig = configurationFactory . createSyncConfigurationBuilder ( user , realmUrl ) . build ( ) ; 
 final Realm realm = Realm . getInstance ( syncConfig ) ; 
 final RealmResults < TestObject > all = realm . where ( TestObject . class ) . findAllSorted ( " intProp " ) ; 
 looperThread . keepStrongReference ( all ) ;

NEAREST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index af4b613 . . 69e7bb1 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 3 , 6 + 3 , 7 @ @ 
 # # # Enhancement 
 
 * ` Realm . compactRealm ( ) ` works for encrypted Realms . 
 + * Added ` User . all ( ) ` that returns all known Realm Object Server users . 
 
 # # 2 . 0 . 3 
 
 diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 index 1deaf9b . . 566228e 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / SyncManagerTests . java 
 @ @ - 71 , 6 + 71 , 10 @ @ public class SyncManagerTests { 
 public Collection < User > allUsers ( ) { 
 return null ; 
 } 
 + 
 + @ Override 
 + public void clear ( ) { 
 + } 
 } ; 
 } 
 
 diff - - git a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java 
 index 4cf3601 . . 0f90fe6 100644 
 - - - a / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java 
 + + + b / realm / realm - library / src / androidTestObjectServer / java / io / realm / UserTests . java 
 @ @ - 19 , 29 + 19 , 21 @ @ package io . realm ; 
 import android . support . test . InstrumentationRegistry ; 
 import android . support . test . runner . AndroidJUnit4 ; 
 
 + import org . junit . Before ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 - import org . mockito . Mockito ; 
 - import org . mockito . invocation . InvocationOnMock ; 
 - import org . mockito . stubbing . Answer ; 
 
 - import java . net . URL ; 
 - import java . util . concurrent . TimeUnit ; 
 + import java . util . Collection ; 
 
 import io . realm . android . SharedPrefsUserStore ; 
 - import io . realm . internal . network . AuthenticateResponse ; 
 - import io . realm . internal . network . AuthenticationServer ; 
 - import io . realm . internal . objectserver . Token ; 
 import io . realm . rule . RunInLooperThread ; 
 - import io . realm . rule . RunTestInLooperThread ; 
 import io . realm . util . SyncTestUtils ; 
 
 import static io . realm . util . SyncTestUtils . createTestUser ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertNull ; 
 - import static org . mockito . Matchers . any ; 
 - import static org . mockito . Mockito . when ; 
 + import static org . junit . Assert . assertTrue ; 
 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class UserTests { 
 @ @ - 49 , 6 + 41 , 12 @ @ public class UserTests { 
 @ Rule 
 public final RunInLooperThread looperThread = new RunInLooperThread ( ) ; 
 
 + @ Before 
 + public void setUp ( ) { 
 + Realm . init ( InstrumentationRegistry . getTargetContext ( ) ) ; 
 + SyncManager . getUserStore ( ) . clear ( ) ; 
 + } 
 + 
 @ Test 
 public void toAndFromJson ( ) { 
 User user1 = createTestUser ( ) ; 
 @ @ - 68 , 6 + 66 , 27 @ @ public class UserTests { 
 assertNull ( User . currentUser ( ) ) ; 
 } 
 
 + / / ` all ( ) ` returns an empty list if no users are logged in 
 + @ Test 
 + public void all _ empty ( ) { 
 + Collection < User > users = User . all ( ) ; 
 + assertTrue ( users . isEmpty ( ) ) ; 
 + } 
 + 
 + / / ` all ( ) ` returns only valid users . Invalid users are filtered . 
 + @ Test 
 + public void all _ validUsers ( ) { 
 + / / Add 1 expired user and 1 valid user to the user store 
 + UserStore userStore = new SharedPrefsUserStore ( InstrumentationRegistry . getContext ( ) ) ; 
 + SyncManager . setUserStore ( userStore ) ; 
 + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MIN _ VALUE ) ) ; 
 + userStore . put ( UserStore . CURRENT _ USER _ KEY , SyncTestUtils . createTestUser ( Long . MAX _ VALUE ) ) ; 
 + 
 + Collection < User > users = User . all ( ) ; 
 + assertEquals ( 1 , users . size ( ) ) ; 
 + assertTrue ( users . iterator ( ) . next ( ) . isValid ( ) ) ; 
 + } 
 + 
 / / Tests that the user store returns the last user to login 
 / * FIXME : This test fails because of wrong JSON string . 
 @ Test 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / User . java b / realm / realm - library / src / objectServer / java / io / realm / User . java 
 index cab8285 . . 1798b42 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / User . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / User . java 
 @ @ - 28 , 7 + 28 , 9 @ @ import java . net . MalformedURLException ; 
 import java . net . URI ; 
 import java . net . URISyntaxException ; 
 import java . net . URL ; 
 + import java . util . ArrayList ; 
 import java . util . Collection ; 
 + import java . util . List ; 
 import java . util . concurrent . Future ; 
 import java . util . concurrent . ThreadPoolExecutor ; 
 
 @ @ - 80 , 6 + 82 , 24 @ @ public class User { 
 } 
 
 / * * 
 + * Returns all valid users known by this device . 
 + * A user is invalidated when he / she logs out or the user ' s access token expires . 
 + * 
 + * @ return a list of all known valid users . 
 + * / 
 + public static Collection < User > all ( ) { 
 + UserStore userStore = SyncManager . getUserStore ( ) ; 
 + Collection < User > storedUsers = userStore . allUsers ( ) ; 
 + List < User > result = new ArrayList < User > ( storedUsers . size ( ) ) ; 
 + for ( User user : storedUsers ) { 
 + if ( user . isValid ( ) ) { 
 + result . add ( user ) ; 
 + } 
 + } 
 + return result ; 
 + } 
 + 
 + / * * 
 * Loads a user that has previously been serialized using { @ link # toJson ( ) } . 
 * 
 * @ param user JSON string representing the user . 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 index 140d013 . . 4ec9f35 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / UserStore . java 
 @ @ - 67 , 4 + 67 , 10 @ @ public interface UserStore { 
 * @ return Collection of all users . If no users exist , an empty collection is returned . 
 * / 
 Collection < User > allUsers ( ) ; 
 + 
 + 
 + / * * 
 + * Removes all saved users . 
 + * / 
 + void clear ( ) ; 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 index 7aedf01 . . 5a73075 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SecureUserStore . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import java . security . KeyStoreException ; 
 import java . util . ArrayList ; 
 import java . util . Collection ; 
 import java . util . Map ; 
 + import java . util . Set ; 
 
 import io . realm . User ; 
 import io . realm . UserStore ; 
 @ @ - 159 , 4 + 160 , 14 @ @ public class SecureUserStore implements UserStore { 
 } 
 return users ; 
 } 
 + 
 + @ Override 
 + public void clear ( ) { 
 + Set < String > all = sp . getAll ( ) . keySet ( ) ; 
 + SharedPreferences . Editor editor = sp . edit ( ) ; 
 + for ( String key : all ) { 
 + editor . remove ( key ) ; 
 + } 
 + editor . apply ( ) ; 
 + } 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java 
 index eab709c . . 4773cb6 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / android / SharedPrefsUserStore . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import android . content . SharedPreferences ; 
 import java . util . ArrayList ; 
 import java . util . Collection ; 
 import java . util . Map ; 
 + import java . util . Set ; 
 
 import io . realm . User ; 
 import io . realm . UserStore ; 
 @ @ - 114 , 4 + 115 , 17 @ @ public class SharedPrefsUserStore implements UserStore { 
 } 
 return users ; 
 } 
 + 
 + / * * 
 + * { @ inheritDoc } 
 + * / 
 + @ Override 
 + public void clear ( ) { 
 + Set < String > all = sp . getAll ( ) . keySet ( ) ; 
 + SharedPreferences . Editor editor = sp . edit ( ) ; 
 + for ( String key : all ) { 
 + editor . remove ( key ) ; 
 + } 
 + editor . apply ( ) ; 
 + } 
 }
