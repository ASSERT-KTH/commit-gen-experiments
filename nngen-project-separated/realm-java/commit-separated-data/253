BLEU SCORE: 0.024893534183931972

TEST MSG: Exception def
GENERATED MSG: reattach when BindingContext : : before _ notify

TEST DIFF (one line): diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> index b444027 . . 8217e2a 100644 <nl> - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp <nl> @ @ - 611 , 6 + 611 , 9 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeUpdateSchema ( JNI <nl> " ( Lio / realm / internal / SharedRealm $ MigrationCallback ; JJ ) V " ) ; <nl> migration _ function = [ & env , & j _ shared _ realm , & j _ migration _ callback , & shared _ realm , <nl> & version ] ( SharedRealm old _ realm , SharedRealm realm , Schema & ) { <nl> + / / We rely on the behaviour that Object Store will share _ from _ this from the original Realm and <nl> + / / begin _ transaction on it . So the realm passed from OS here will be the same realm instance which <nl> + / / j _ shared _ realm is holding . <nl> REALM _ ASSERT _ RELEASE ( shared _ realm = = realm ) ; <nl> env - > CallVoidMethod ( j _ shared _ realm , run _ migration _ callback _ method , j _ migration _ callback , <nl> old _ realm - > schema _ version ( ) , version ) ; <nl> @ @ - 623 , 7 + 626 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeUpdateSchema ( JNI <nl> if ( env - > ExceptionCheck ( ) ) { <nl> return ; <nl> } <nl> - static JavaClass migration _ needed _ class ( env , " io / realm / exceptions / RealmMigrationNeededException " ) ; <nl> + static JavaClass migration _ needed _ class ( env , JavaExceptionDef : : RealmMigrationNeeded ) ; <nl> static JavaMethod constructor ( env , migration _ needed _ class , " < init > " , <nl> " ( Ljava / lang / String ; Ljava / lang / String ; ) V " ) ; <nl> <nl> @ @ - 633 , 6 + 636 , 10 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeUpdateSchema ( JNI <nl> env - > Throw ( reinterpret _ cast < jthrowable > ( migration _ needed _ exception ) ) ; <nl> } <nl> catch ( InvalidSchemaVersionException & e ) { <nl> + / / An exception has been thrown in the migration block . <nl> + if ( env - > ExceptionCheck ( ) ) { <nl> + return ; <nl> + } <nl> / / To match the old behaviour . Otherwise it will be converted to ISE in the CATCH _ STD . <nl> ThrowException ( env , IllegalArgument , e . what ( ) ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / cpp / java _ exception _ def . cpp b / realm / realm - library / src / main / cpp / java _ exception _ def . cpp <nl> index 81246e4 . . aea9dbf 100644 <nl> - - - a / realm / realm - library / src / main / cpp / java _ exception _ def . cpp <nl> + + + b / realm / realm - library / src / main / cpp / java _ exception _ def . cpp <nl> @ @ - 20 , 3 + 20 , 4 @ @ using namespace realm : : _ impl ; <nl> <nl> const char * JavaExceptionDef : : IllegalState = " java / lang / IllegalStateException " ; <nl> const char * JavaExceptionDef : : IllegalArgument = " java / lang / IllegalArgumentException " ; <nl> + const char * JavaExceptionDef : : RealmMigrationNeeded = " io / realm / exceptions / RealmMigrationNeededException " ; <nl> diff - - git a / realm / realm - library / src / main / cpp / java _ exception _ def . hpp b / realm / realm - library / src / main / cpp / java _ exception _ def . hpp <nl> index 9842d18 . . 0db02f9 100644 <nl> - - - a / realm / realm - library / src / main / cpp / java _ exception _ def . hpp <nl> + + + b / realm / realm - library / src / main / cpp / java _ exception _ def . hpp <nl> @ @ - 26 , 6 + 26 , 7 @ @ public : <nl> / / Class names <nl> static const char * IllegalState ; <nl> static const char * IllegalArgument ; <nl> + static const char * RealmMigrationNeeded ; <nl> } ; <nl> <nl> } / / namespace realm
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java <nl> index 14d10c0 . . 48b9bae 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java <nl> @ @ - 31 , 7 + 31 , 6 @ @ import io . realm . rule . RunInLooperThread ; <nl> import io . realm . rule . RunTestInLooperThread ; <nl> import io . realm . rule . TestRealmConfigurationFactory ; <nl> <nl> - import static junit . framework . Assert . assertTrue ; <nl> import static junit . framework . Assert . fail ; <nl> <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> @ @ - 107 , 6 + 106 , 7 @ @ public class RealmNotifierTests { <nl> / / Need a flag in java . <nl> / / assertTrue ( sharedRealm . isInTransaction ( ) ) ; <nl> looperThread . testComplete ( ) ; <nl> + sharedRealm . close ( ) ; <nl> } <nl> } ) ; <nl> sharedRealm . beginTransaction ( ) ; <nl> @ @ - 121 , 6 + 121 , 7 @ @ public class RealmNotifierTests { <nl> @ Override <nl> public void onChange ( SharedRealm sharedRealm ) { <nl> looperThread . testComplete ( ) ; <nl> + sharedRealm . close ( ) ; <nl> } <nl> } ) ; <nl> new Thread ( new Runnable ( ) { <nl> diff - - git a / realm / realm - library / src / main / cpp / java _ binding _ context . cpp b / realm / realm - library / src / main / cpp / java _ binding _ context . cpp <nl> index 7e7d387 . . b68db66 100644 <nl> - - - a / realm / realm - library / src / main / cpp / java _ binding _ context . cpp <nl> + + + b / realm / realm - library / src / main / cpp / java _ binding _ context . cpp <nl> @ @ - 56 , 7 + 56 , 7 @ @ std : : vector < BindingContext : : ObserverState > JavaBindingContext : : get _ observed _ rows <nl> return state _ list ; <nl> } <nl> <nl> - void JavaBindingContext : : changes _ available ( ) <nl> + void JavaBindingContext : : before _ notify ( ) <nl> { <nl> if ( m _ java _ notifier ) { <nl> m _ java _ notifier . call _ with _ local _ ref ( [ & ] ( JNIEnv * env , jobject notifier _ obj ) { <nl> diff - - git a / realm / realm - library / src / main / cpp / java _ binding _ context . hpp b / realm / realm - library / src / main / cpp / java _ binding _ context . hpp <nl> index aaed72b . . 18535fc 100644 <nl> - - - a / realm / realm - library / src / main / cpp / java _ binding _ context . hpp <nl> + + + b / realm / realm - library / src / main / cpp / java _ binding _ context . hpp <nl> @ @ - 46 , 7 + 46 , 7 @ @ private : <nl> public : <nl> virtual ~ JavaBindingContext ( ) { } ; <nl> virtual std : : vector < ObserverState > get _ observed _ rows ( ) ; <nl> - virtual void changes _ available ( ) ; <nl> + virtual void before _ notify ( ) ; <nl> virtual void did _ change ( std : : vector < ObserverState > const & observers , <nl> std : : vector < void * > const & invalidated , <nl> bool version _ changed = true ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> index 8cbc460 . . fee2390 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java <nl> @ @ - 223 , 13 + 223 , 6 @ @ public class Collection implements NativeObject { <nl> @ KeepMember <nl> @ SuppressWarnings ( " unused " ) <nl> private void notifyChangeListeners ( boolean emptyChanges ) { <nl> - / / For the stable iteration . <nl> - / / It is needed when the local commit triggered async query updates . And this is called in the next event loop <nl> - / / by OS Realm : : notify ( ) . <nl> - if ( ! emptyChanges ) { <nl> - this . disableSnapshot ( ) ; <nl> - } <nl> - <nl> if ( emptyChanges & & isDetached ( ) ) return ; <nl> observerPairs . foreach ( onChangeCallback ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> index 5a7703e . . 93c9d57 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java <nl> @ @ - 91 , 6 + 91 , 7 @ @ public abstract class RealmNotifier implements Closeable { <nl> @ SuppressWarnings ( " unused " ) / / called from java _ binding _ context . cpp <nl> / / Package protected to avoid finding class by name in JNI . <nl> void changesAvailable ( ) { <nl> + / / For the stable iteration . <nl> sharedRealm . disableCollectionSnapshot ( ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 index b444027 . . 8217e2a 100644 
 - - - a / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 + + + b / realm / realm - library / src / main / cpp / io _ realm _ internal _ SharedRealm . cpp 
 @ @ - 611 , 6 + 611 , 9 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeUpdateSchema ( JNI 
 " ( Lio / realm / internal / SharedRealm $ MigrationCallback ; JJ ) V " ) ; 
 migration _ function = [ & env , & j _ shared _ realm , & j _ migration _ callback , & shared _ realm , 
 & version ] ( SharedRealm old _ realm , SharedRealm realm , Schema & ) { 
 + / / We rely on the behaviour that Object Store will share _ from _ this from the original Realm and 
 + / / begin _ transaction on it . So the realm passed from OS here will be the same realm instance which 
 + / / j _ shared _ realm is holding . 
 REALM _ ASSERT _ RELEASE ( shared _ realm = = realm ) ; 
 env - > CallVoidMethod ( j _ shared _ realm , run _ migration _ callback _ method , j _ migration _ callback , 
 old _ realm - > schema _ version ( ) , version ) ; 
 @ @ - 623 , 7 + 626 , 7 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeUpdateSchema ( JNI 
 if ( env - > ExceptionCheck ( ) ) { 
 return ; 
 } 
 - static JavaClass migration _ needed _ class ( env , " io / realm / exceptions / RealmMigrationNeededException " ) ; 
 + static JavaClass migration _ needed _ class ( env , JavaExceptionDef : : RealmMigrationNeeded ) ; 
 static JavaMethod constructor ( env , migration _ needed _ class , " < init > " , 
 " ( Ljava / lang / String ; Ljava / lang / String ; ) V " ) ; 
 
 @ @ - 633 , 6 + 636 , 10 @ @ JNIEXPORT void JNICALL Java _ io _ realm _ internal _ SharedRealm _ nativeUpdateSchema ( JNI 
 env - > Throw ( reinterpret _ cast < jthrowable > ( migration _ needed _ exception ) ) ; 
 } 
 catch ( InvalidSchemaVersionException & e ) { 
 + / / An exception has been thrown in the migration block . 
 + if ( env - > ExceptionCheck ( ) ) { 
 + return ; 
 + } 
 / / To match the old behaviour . Otherwise it will be converted to ISE in the CATCH _ STD . 
 ThrowException ( env , IllegalArgument , e . what ( ) ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / cpp / java _ exception _ def . cpp b / realm / realm - library / src / main / cpp / java _ exception _ def . cpp 
 index 81246e4 . . aea9dbf 100644 
 - - - a / realm / realm - library / src / main / cpp / java _ exception _ def . cpp 
 + + + b / realm / realm - library / src / main / cpp / java _ exception _ def . cpp 
 @ @ - 20 , 3 + 20 , 4 @ @ using namespace realm : : _ impl ; 
 
 const char * JavaExceptionDef : : IllegalState = " java / lang / IllegalStateException " ; 
 const char * JavaExceptionDef : : IllegalArgument = " java / lang / IllegalArgumentException " ; 
 + const char * JavaExceptionDef : : RealmMigrationNeeded = " io / realm / exceptions / RealmMigrationNeededException " ; 
 diff - - git a / realm / realm - library / src / main / cpp / java _ exception _ def . hpp b / realm / realm - library / src / main / cpp / java _ exception _ def . hpp 
 index 9842d18 . . 0db02f9 100644 
 - - - a / realm / realm - library / src / main / cpp / java _ exception _ def . hpp 
 + + + b / realm / realm - library / src / main / cpp / java _ exception _ def . hpp 
 @ @ - 26 , 6 + 26 , 7 @ @ public : 
 / / Class names 
 static const char * IllegalState ; 
 static const char * IllegalArgument ; 
 + static const char * RealmMigrationNeeded ; 
 } ; 
 
 } / / namespace realm

NEAREST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java 
 index 14d10c0 . . 48b9bae 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / RealmNotifierTests . java 
 @ @ - 31 , 7 + 31 , 6 @ @ import io . realm . rule . RunInLooperThread ; 
 import io . realm . rule . RunTestInLooperThread ; 
 import io . realm . rule . TestRealmConfigurationFactory ; 
 
 - import static junit . framework . Assert . assertTrue ; 
 import static junit . framework . Assert . fail ; 
 
 @ RunWith ( AndroidJUnit4 . class ) 
 @ @ - 107 , 6 + 106 , 7 @ @ public class RealmNotifierTests { 
 / / Need a flag in java . 
 / / assertTrue ( sharedRealm . isInTransaction ( ) ) ; 
 looperThread . testComplete ( ) ; 
 + sharedRealm . close ( ) ; 
 } 
 } ) ; 
 sharedRealm . beginTransaction ( ) ; 
 @ @ - 121 , 6 + 121 , 7 @ @ public class RealmNotifierTests { 
 @ Override 
 public void onChange ( SharedRealm sharedRealm ) { 
 looperThread . testComplete ( ) ; 
 + sharedRealm . close ( ) ; 
 } 
 } ) ; 
 new Thread ( new Runnable ( ) { 
 diff - - git a / realm / realm - library / src / main / cpp / java _ binding _ context . cpp b / realm / realm - library / src / main / cpp / java _ binding _ context . cpp 
 index 7e7d387 . . b68db66 100644 
 - - - a / realm / realm - library / src / main / cpp / java _ binding _ context . cpp 
 + + + b / realm / realm - library / src / main / cpp / java _ binding _ context . cpp 
 @ @ - 56 , 7 + 56 , 7 @ @ std : : vector < BindingContext : : ObserverState > JavaBindingContext : : get _ observed _ rows 
 return state _ list ; 
 } 
 
 - void JavaBindingContext : : changes _ available ( ) 
 + void JavaBindingContext : : before _ notify ( ) 
 { 
 if ( m _ java _ notifier ) { 
 m _ java _ notifier . call _ with _ local _ ref ( [ & ] ( JNIEnv * env , jobject notifier _ obj ) { 
 diff - - git a / realm / realm - library / src / main / cpp / java _ binding _ context . hpp b / realm / realm - library / src / main / cpp / java _ binding _ context . hpp 
 index aaed72b . . 18535fc 100644 
 - - - a / realm / realm - library / src / main / cpp / java _ binding _ context . hpp 
 + + + b / realm / realm - library / src / main / cpp / java _ binding _ context . hpp 
 @ @ - 46 , 7 + 46 , 7 @ @ private : 
 public : 
 virtual ~ JavaBindingContext ( ) { } ; 
 virtual std : : vector < ObserverState > get _ observed _ rows ( ) ; 
 - virtual void changes _ available ( ) ; 
 + virtual void before _ notify ( ) ; 
 virtual void did _ change ( std : : vector < ObserverState > const & observers , 
 std : : vector < void * > const & invalidated , 
 bool version _ changed = true ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / Collection . java b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 index 8cbc460 . . fee2390 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / Collection . java 
 @ @ - 223 , 13 + 223 , 6 @ @ public class Collection implements NativeObject { 
 @ KeepMember 
 @ SuppressWarnings ( " unused " ) 
 private void notifyChangeListeners ( boolean emptyChanges ) { 
 - / / For the stable iteration . 
 - / / It is needed when the local commit triggered async query updates . And this is called in the next event loop 
 - / / by OS Realm : : notify ( ) . 
 - if ( ! emptyChanges ) { 
 - this . disableSnapshot ( ) ; 
 - } 
 - 
 if ( emptyChanges & & isDetached ( ) ) return ; 
 observerPairs . foreach ( onChangeCallback ) ; 
 } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 index 5a7703e . . 93c9d57 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmNotifier . java 
 @ @ - 91 , 6 + 91 , 7 @ @ public abstract class RealmNotifier implements Closeable { 
 @ SuppressWarnings ( " unused " ) / / called from java _ binding _ context . cpp 
 / / Package protected to avoid finding class by name in JNI . 
 void changesAvailable ( ) { 
 + / / For the stable iteration . 
 sharedRealm . disableCollectionSnapshot ( ) ; 
 } 

