BLEU SCORE: 0.2748254571080018

TEST MSG: Add a Dockerfile to the repo
GENERATED MSG: Add the Jenkins logic to the repo

TEST DIFF (one line): diff - - git a / Dockerfile b / Dockerfile <nl> new file mode 100644 <nl> index 0000000 . . b19667c <nl> - - - / dev / null <nl> + + + b / Dockerfile <nl> @ @ - 0 , 0 + 1 , 43 @ @ <nl> + FROM ubuntu : 16 . 04 <nl> + <nl> + # Locales <nl> + RUN locale - gen en _ US . UTF - 8 <nl> + ENV LANG " en _ US . UTF - 8 " <nl> + ENV LANGUAGE " en _ US . UTF - 8 " <nl> + ENV LC _ ALL " en _ US . UTF - 8 " <nl> + <nl> + # Set the environment variables <nl> + ENV JAVA _ HOME / usr / lib / jvm / java - 8 - openjdk - amd64 <nl> + ENV ANDROID _ HOME / opt / android - sdk - linux <nl> + ENV NDK _ HOME / opt / android - ndk <nl> + ENV PATH $ { PATH } : $ { ANDROID _ HOME } / tools : $ { ANDROID _ HOME } / platform - tools <nl> + ENV PATH $ { PATH } : $ { NDK _ HOME } <nl> + <nl> + # Install the JDK <nl> + # We are going to need some 32 bit binaries because aapt requires it <nl> + # file is need by the script that creates NDK toolchains <nl> + RUN DEBIAN _ FRONTEND = noninteractive dpkg - - add - architecture i386 \ <nl> + & & apt - get update - qq \ <nl> + & & apt - get install - y file git curl wget zip unzip \ <nl> + build - essential \ <nl> + openjdk - 8 - jdk - headless \ <nl> + libc6 : i386 libstdc + + 6 : i386 libgcc1 : i386 libncurses5 : i386 libz1 : i386 \ <nl> + & & apt - get clean <nl> + <nl> + # Install the Android SDK <nl> + RUN cd / opt & & wget - q https : / / dl . google . com / android / android - sdk _ r24 . 4 . 1 - linux . tgz - O android - sdk . tgz <nl> + RUN cd / opt & & tar - xvzf android - sdk . tgz <nl> + RUN cd / opt & & rm - f android - sdk . tgz <nl> + <nl> + # Grab what ' s needed in the SDK <nl> + RUN echo y | android update sdk - - no - ui - - all - - filter platform - tools | grep ' package installed ' <nl> + RUN echo y | android update sdk - - no - ui - - all - - filter extra - android - support | grep ' package installed ' <nl> + RUN echo y | android update sdk - - no - ui - - all - - filter android - 23 | grep ' package installed ' <nl> + RUN echo y | android update sdk - - no - ui - - all - - filter build - tools - 23 . 0 . 0 | grep ' package installed ' <nl> + <nl> + # Install the NDK <nl> + RUN mkdir / opt / android - ndk - tmp <nl> + RUN cd / opt / android - ndk - tmp & & wget - q http : / / dl . google . com / android / ndk / android - ndk - r10e - linux - x86 _ 64 . bin - O android - ndk . bin <nl> + RUN cd / opt / android - ndk - tmp & & chmod a + x . / android - ndk . bin & & . / android - ndk . bin <nl> + RUN cd / opt / android - ndk - tmp & & mv . / android - ndk - r10e / opt / android - ndk <nl> + RUN rm - rf / opt / android - ndk - tmp <nl> diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index ff2e964 . . 7a11856 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 1 , 5 + 1 , 92 @ @ <nl> # ! groovy <nl> <nl> + { - > <nl> + try { <nl> + node ( ' docker ' ) { <nl> + stage ' SCM ' <nl> + if ( isPullRequest ( ) ) { <nl> + checkout ( [ <nl> + $ class : ' GitSCM ' , <nl> + branches : [ [ name : " origin / pull / $ { GITHUB _ PR _ NUMBER } / head " ] ] , <nl> + doGenerateSubmoduleConfigurations : false , <nl> + extensions : [ [ $ class : ' CleanCheckout ' ] ] , <nl> + gitTool : ' native git ' , <nl> + submoduleCfg : [ ] , <nl> + userRemoteConfigs : [ [ <nl> + credentialsId : ' 1642fb1a - 1a82 - 4b10 - a25e - f9e95f43c93f ' , <nl> + name : ' origin ' , <nl> + refspec : " + refs / heads / master : refs / remotes / origin / master + refs / pull / $ { GITHUB _ PR _ NUMBER } / head : refs / remotes / origin / pull / $ { GITHUB _ PR _ NUMBER } / head " , <nl> + url : ' https : / / github . com / realm / realm - java . git ' <nl> + ] ] <nl> + ] ) <nl> + } else { <nl> + checkout ( [ <nl> + $ class : ' GitSCM ' , <nl> + branches : [ [ name : ' * / master ' ] ] , <nl> + doGenerateSubmoduleConfigurations : false , <nl> + extensions : [ [ $ class : ' CleanCheckout ' ] ] , <nl> + gitTool : ' native git ' , <nl> + submoduleCfg : [ ] , <nl> + userRemoteConfigs : [ [ url : ' https : / / github . com / realm / realm - java . git ' ] ] <nl> + ] ) <nl> + } <nl> + <nl> + stage ' Docker build ' <nl> + def buildEnv = docker . build ' realm - java : snapshot ' <nl> + buildEnv . inside ( " - - privileged - v / dev / bus / usb : / dev / bus / usb - v $ { env . HOME } / gradle - cache : / root / . gradle " ) { <nl> + stage ' JVM tests ' <nl> + try { <nl> + gradle ' assemble check javadoc ' <nl> + } finally { <nl> + storeJunitResults ' realm / realm - annotations - processor / build / test - results / TEST - * . xml ' <nl> + } <nl> + <nl> + try { <nl> + sh ' cd examples & & . / gradlew unitTestExample : check - - stacktrace ' <nl> + } finally { <nl> + storeJunitResults ' examples / unitTestExample / build / test - results / * * / TEST - * . xml ' <nl> + } <nl> + <nl> + stage ' Static code analysis ' <nl> + try { <nl> + sh ' cd realm & & . / gradlew findbugs pmd checkstyle - - stacktrace ' <nl> + } finally { <nl> + publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / findbugs ' , reportFiles : ' findbugs - output . html ' , reportName : ' Findbugs issues ' ] ) <nl> + publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / reports / pmd ' , reportFiles : ' pmd . html ' , reportName : ' PMD Issues ' ] ) <nl> + } <nl> + <nl> + stage ' Run instrumented tests ' <nl> + try { <nl> + sh ' cd realm & & . / gradlew connectedCheck - - stacktrace ' <nl> + } finally { <nl> + storeJunitResults ' realm / realm - library / build / outputs / androidTest - results / connected / TEST - * . xml ' <nl> + } <nl> + <nl> + / / TODO : add support for running monkey on the example apps <nl> + <nl> + if ( env . BRANCH _ NAME = = ' master ' ) { <nl> + stage ' Collect metrics ' <nl> + collectAarMetrics ( ) <nl> + <nl> + stage ' Publish to OJO ' <nl> + sh ' chmod + x gradlew & & . / gradlew assemble ojoUpload ' <nl> + } <nl> + } <nl> + } <nl> + <nl> + currentBuild . rawBuild . setResult ( Result . SUCCESS ) <nl> + } catch ( Exception e ) { <nl> + echo " The job failed with the following exception : $ { e . getMessage ( ) } " <nl> + currentBuild . rawBuild . setResult ( Result . FAILURE ) <nl> + } finally { <nl> + if ( isPullRequest ( ) ) { <nl> + node { <nl> + reportResultToGithub ( ) <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> def isPullRequest ( ) { <nl> return binding . variables . containsKey ( ' GITHUB _ PR _ NUMBER ' ) <nl> } <nl> @ @ - 34 , 10 + 121 , 10 @ @ def storeJunitResults ( String path ) { <nl> def collectAarMetrics ( ) { <nl> dir ( ' realm / realm - library / build / outputs / aar ' ) { <nl> sh ' ' ' set - xe <nl> - unzip realm - android - library - release . aar - d unzipped <nl> - find $ ANDROID _ HOME - name dx | sort - r | head - n 1 > dx <nl> - $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar <nl> - cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods <nl> + unzip realm - android - library - release . aar - d unzipped <nl> + find $ ANDROID _ HOME - name dx | sort - r | head - n 1 > dx <nl> + $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar <nl> + cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods <nl> ' ' ' <nl> sendMetrics ( ' methods ' , readFile ( ' methods ' ) ) <nl> <nl> @ @ - 55 , 143 + 142 , 3 @ @ def collectAarMetrics ( ) { <nl> def gradle ( String commands ) { <nl> sh " chmod + x gradlew & & . / gradlew $ { commands } - - stacktrace " <nl> } <nl> - <nl> - @ NonCPS <nl> - def getDeviceNames ( String commandOutput ) { <nl> - return commandOutput <nl> - . split ( ' \ n ' ) <nl> - . findAll { it . contains ( ' \ t ' ) } <nl> - . collect { it . split ( ' \ t ' ) [ 0 ] . trim ( ) } <nl> - } <nl> - <nl> - def transformIntoStep ( device ) { <nl> - / / We need to wrap what we return in a Groovy closure , or else it ' s invoked <nl> - / / when this method is called , not when we pass it to parallel . <nl> - / / To do this , you need to wrap the code below in { } , and either return <nl> - / / that explicitly , or use { - > } syntax . <nl> - return { <nl> - sh " adb - s $ { device } shell getprop ro . product . model | tee model - name . txt " <nl> - def modelName = readFile ( ' model - name . txt ' ) . trim ( ) . replaceAll ( ' ' , ' _ ' ) <nl> - <nl> - sh " adb - s $ { device } uninstall io . realm . test " <nl> - sh " adb - s $ { device } install realm - android - library - debug - androidTest - unaligned . apk " <nl> - sh " adb - s $ { device } shell am instrument - w - r io . realm . test / android . support . test . runner . AndroidJUnitRunner > test _ result _ $ { modelName } _ $ { device } . txt " <nl> - sh " java - jar / opt / log - converter . jar test _ result _ $ { modelName } _ $ { device } . txt " <nl> - } <nl> - } <nl> - <nl> - { - > <nl> - try { <nl> - node ( ' FastLinux ' ) { <nl> - if ( isPullRequest ( ) ) { <nl> - checkout ( [ <nl> - $ class : ' GitSCM ' , <nl> - branches : [ [ name : " origin / pull / $ { GITHUB _ PR _ NUMBER } / head " ] ] , <nl> - doGenerateSubmoduleConfigurations : false , <nl> - extensions : [ [ $ class : ' CleanCheckout ' ] ] , <nl> - gitTool : ' native git ' , <nl> - submoduleCfg : [ ] , <nl> - userRemoteConfigs : [ [ <nl> - credentialsId : ' 1642fb1a - 1a82 - 4b10 - a25e - f9e95f43c93f ' , <nl> - name : ' origin ' , <nl> - refspec : " + refs / heads / master : refs / remotes / origin / master + refs / pull / $ { GITHUB _ PR _ NUMBER } / head : refs / remotes / origin / pull / $ { GITHUB _ PR _ NUMBER } / head " , <nl> - url : ' https : / / github . com / realm / realm - java . git ' <nl> - ] ] <nl> - ] ) <nl> - } else { <nl> - checkout ( [ <nl> - $ class : ' GitSCM ' , <nl> - branches : [ [ name : ' * / master ' ] ] , <nl> - doGenerateSubmoduleConfigurations : false , <nl> - extensions : [ [ $ class : ' CleanCheckout ' ] ] , <nl> - gitTool : ' native git ' , <nl> - submoduleCfg : [ ] , <nl> - userRemoteConfigs : [ [ url : ' https : / / github . com / realm / realm - java . git ' ] ] <nl> - ] ) <nl> - } <nl> - <nl> - stage ' JVM tests ' <nl> - try { <nl> - gradle ' assemble check javadoc ' <nl> - } finally { <nl> - storeJunitResults ' realm / realm - annotations - processor / build / test - results / TEST - * . xml ' <nl> - } <nl> - if ( env . BRANCH _ NAME = = ' master ' ) { <nl> - collectAarMetrics ( ) <nl> - } <nl> - / / TODO : add support for running monkey on the example apps <nl> - / / stash includes : ' examples / * / build / outputs / apk / * debug . apk ' , name : ' examples ' <nl> - <nl> - dir ( ' examples ' ) { <nl> - try { <nl> - gradle ' check ' <nl> - } finally { <nl> - storeJunitResults ' unitTestExample / build / test - results / * * / TEST - * . xml ' <nl> - } <nl> - } <nl> - <nl> - stage ' static code analysis ' <nl> - try { <nl> - dir ( ' realm ' ) { <nl> - gradle ' findbugs pmd checkstyle ' <nl> - } <nl> - } finally { <nl> - publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / findbugs ' , reportFiles : ' findbugs - output . html ' , reportName : ' Findbugs issues ' ] ) <nl> - publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / reports / pmd ' , reportFiles : ' pmd . html ' , reportName : ' PMD Issues ' ] ) <nl> - } <nl> - <nl> - stage ' build instrumented tests ' <nl> - dir ( ' realm ' ) { <nl> - gradle ' assembleDebugAndroidTest ' <nl> - dir ( ' realm - library / build / outputs / apk ' ) { <nl> - stash name : ' test - apk ' , includes : ' realm - android - library - debug - androidTest - unaligned . apk ' <nl> - } <nl> - } <nl> - } <nl> - <nl> - node ( ' android - hub ' ) { <nl> - stage ' run instrumented tests ' <nl> - sh ' rm - rf * ' <nl> - unstash ' test - apk ' <nl> - <nl> - sh ' adb devices | tee devices . txt ' <nl> - def adbDevices = readFile ( ' devices . txt ' ) <nl> - def devices = getDeviceNames ( adbDevices ) <nl> - <nl> - if ( ! devices ) { <nl> - throw new IllegalStateException ( ' No devices were found ' ) <nl> - } <nl> - <nl> - def parallelSteps = [ : ] <nl> - devices . each { device - > <nl> - parallelSteps [ device ] = transformIntoStep ( device ) <nl> - } <nl> - <nl> - parallel parallelSteps <nl> - storeJunitResults ' test _ result _ * . xml ' <nl> - <nl> - / / TODO : add support for running monkey on the example apps <nl> - / / stage ' monkey examples ' <nl> - / / sh ' rm - rf * ' <nl> - / / unstash ' examples ' <nl> - } <nl> - <nl> - if ( env . BRANCH _ NAME = = ' master ' ) { <nl> - node ( ' FastLinux ' ) { <nl> - stage ' publish to OJO ' <nl> - unstash ' java ' <nl> - sh ' chmod + x gradlew & & . / gradlew assemble ojoUpload ' <nl> - } <nl> - } <nl> - currentBuild . rawBuild . setResult ( Result . SUCCESS ) <nl> - } catch ( Exception e ) { <nl> - echo e . getMessage ( ) <nl> - currentBuild . rawBuild . setResult ( Result . FAILURE ) <nl> - } finally { <nl> - if ( isPullRequest ( ) ) { <nl> - node { <nl> - reportResultToGithub ( ) <nl> - } <nl> - } <nl> - } <nl> - } <nl> diff - - git a / realm / realm - annotations - processor / build . gradle b / realm / realm - annotations - processor / build . gradle <nl> index fe4dab1 . . 7851465 100644 <nl> - - - a / realm / realm - annotations - processor / build . gradle <nl> + + + b / realm / realm - annotations - processor / build . gradle <nl> @ @ - 15 , 7 + 15 , 7 @ @ dependencies { <nl> testCompile files ( " $ { System . properties [ ' java . home ' ] } / . . / lib / tools . jar " ) / / This is needed otherwise compile - testing won ' t be able to find it <nl> testCompile group : ' junit ' , name : ' junit ' , version : ' 4 . 12 ' <nl> testCompile group : ' com . google . testing . compile ' , name : ' compile - testing ' , version : ' 0 . 6 ' <nl> - testCompile files ( file ( " $ { System . env . ANDROID _ HOME } / platforms / android - 21 / android . jar " ) ) <nl> + testCompile files ( file ( " $ { System . env . ANDROID _ HOME } / platforms / android - 23 / android . jar " ) ) <nl> } <nl> <nl> / / for Ant filter
NEAREST DIFF (one line): diff - - git a / Jenkinsfile b / Jenkinsfile <nl> new file mode 100644 <nl> index 0000000 . . ff2e964 <nl> - - - / dev / null <nl> + + + b / Jenkinsfile <nl> @ @ - 0 , 0 + 1 , 197 @ @ <nl> + # ! groovy <nl> + <nl> + def isPullRequest ( ) { <nl> + return binding . variables . containsKey ( ' GITHUB _ PR _ NUMBER ' ) <nl> + } <nl> + <nl> + def reportResultToGithub ( ) { <nl> + step ( [ <nl> + $ class : ' GitHubPRBuildStatusPublisher ' , <nl> + statusMsg : [ content : " $ { GITHUB _ PR _ COND _ REF } run ended " ] , <nl> + unstableAs : ' FAILURE ' <nl> + ] ) <nl> + } <nl> + <nl> + def sendMetrics ( String metric , String value ) { <nl> + withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { <nl> + sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " <nl> + } <nl> + } <nl> + <nl> + def sendTaggedMetric ( String metric , String value , String tagName , String tagValue ) { <nl> + withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { <nl> + sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } , $ { tagName } = $ { tagValue } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " <nl> + } <nl> + } <nl> + <nl> + def storeJunitResults ( String path ) { <nl> + step ( [ <nl> + $ class : ' JUnitResultArchiver ' , <nl> + testResults : path <nl> + ] ) <nl> + } <nl> + <nl> + def collectAarMetrics ( ) { <nl> + dir ( ' realm / realm - library / build / outputs / aar ' ) { <nl> + sh ' ' ' set - xe <nl> + unzip realm - android - library - release . aar - d unzipped <nl> + find $ ANDROID _ HOME - name dx | sort - r | head - n 1 > dx <nl> + $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar <nl> + cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods <nl> + ' ' ' <nl> + sendMetrics ( ' methods ' , readFile ( ' methods ' ) ) <nl> + <nl> + sendMetrics ( ' aar _ size ' , new File ( ' realm - android - library - release . aar ' ) . length ( ) ) <nl> + <nl> + def rootFolder = new File ( ' unzipped / jni ' ) <nl> + rootFolder . traverse ( type : DIRECTORIES ) { folder - > <nl> + def abiName = folder . name ( ) <nl> + def libSize = new File ( folder , ' librealm - jni . so ' ) . size ( ) as String <nl> + sendTaggedMetric ( ' abi _ size ' , libSize , ' type ' , abiName ) <nl> + } <nl> + } <nl> + } <nl> + <nl> + def gradle ( String commands ) { <nl> + sh " chmod + x gradlew & & . / gradlew $ { commands } - - stacktrace " <nl> + } <nl> + <nl> + @ NonCPS <nl> + def getDeviceNames ( String commandOutput ) { <nl> + return commandOutput <nl> + . split ( ' \ n ' ) <nl> + . findAll { it . contains ( ' \ t ' ) } <nl> + . collect { it . split ( ' \ t ' ) [ 0 ] . trim ( ) } <nl> + } <nl> + <nl> + def transformIntoStep ( device ) { <nl> + / / We need to wrap what we return in a Groovy closure , or else it ' s invoked <nl> + / / when this method is called , not when we pass it to parallel . <nl> + / / To do this , you need to wrap the code below in { } , and either return <nl> + / / that explicitly , or use { - > } syntax . <nl> + return { <nl> + sh " adb - s $ { device } shell getprop ro . product . model | tee model - name . txt " <nl> + def modelName = readFile ( ' model - name . txt ' ) . trim ( ) . replaceAll ( ' ' , ' _ ' ) <nl> + <nl> + sh " adb - s $ { device } uninstall io . realm . test " <nl> + sh " adb - s $ { device } install realm - android - library - debug - androidTest - unaligned . apk " <nl> + sh " adb - s $ { device } shell am instrument - w - r io . realm . test / android . support . test . runner . AndroidJUnitRunner > test _ result _ $ { modelName } _ $ { device } . txt " <nl> + sh " java - jar / opt / log - converter . jar test _ result _ $ { modelName } _ $ { device } . txt " <nl> + } <nl> + } <nl> + <nl> + { - > <nl> + try { <nl> + node ( ' FastLinux ' ) { <nl> + if ( isPullRequest ( ) ) { <nl> + checkout ( [ <nl> + $ class : ' GitSCM ' , <nl> + branches : [ [ name : " origin / pull / $ { GITHUB _ PR _ NUMBER } / head " ] ] , <nl> + doGenerateSubmoduleConfigurations : false , <nl> + extensions : [ [ $ class : ' CleanCheckout ' ] ] , <nl> + gitTool : ' native git ' , <nl> + submoduleCfg : [ ] , <nl> + userRemoteConfigs : [ [ <nl> + credentialsId : ' 1642fb1a - 1a82 - 4b10 - a25e - f9e95f43c93f ' , <nl> + name : ' origin ' , <nl> + refspec : " + refs / heads / master : refs / remotes / origin / master + refs / pull / $ { GITHUB _ PR _ NUMBER } / head : refs / remotes / origin / pull / $ { GITHUB _ PR _ NUMBER } / head " , <nl> + url : ' https : / / github . com / realm / realm - java . git ' <nl> + ] ] <nl> + ] ) <nl> + } else { <nl> + checkout ( [ <nl> + $ class : ' GitSCM ' , <nl> + branches : [ [ name : ' * / master ' ] ] , <nl> + doGenerateSubmoduleConfigurations : false , <nl> + extensions : [ [ $ class : ' CleanCheckout ' ] ] , <nl> + gitTool : ' native git ' , <nl> + submoduleCfg : [ ] , <nl> + userRemoteConfigs : [ [ url : ' https : / / github . com / realm / realm - java . git ' ] ] <nl> + ] ) <nl> + } <nl> + <nl> + stage ' JVM tests ' <nl> + try { <nl> + gradle ' assemble check javadoc ' <nl> + } finally { <nl> + storeJunitResults ' realm / realm - annotations - processor / build / test - results / TEST - * . xml ' <nl> + } <nl> + if ( env . BRANCH _ NAME = = ' master ' ) { <nl> + collectAarMetrics ( ) <nl> + } <nl> + / / TODO : add support for running monkey on the example apps <nl> + / / stash includes : ' examples / * / build / outputs / apk / * debug . apk ' , name : ' examples ' <nl> + <nl> + dir ( ' examples ' ) { <nl> + try { <nl> + gradle ' check ' <nl> + } finally { <nl> + storeJunitResults ' unitTestExample / build / test - results / * * / TEST - * . xml ' <nl> + } <nl> + } <nl> + <nl> + stage ' static code analysis ' <nl> + try { <nl> + dir ( ' realm ' ) { <nl> + gradle ' findbugs pmd checkstyle ' <nl> + } <nl> + } finally { <nl> + publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / findbugs ' , reportFiles : ' findbugs - output . html ' , reportName : ' Findbugs issues ' ] ) <nl> + publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / reports / pmd ' , reportFiles : ' pmd . html ' , reportName : ' PMD Issues ' ] ) <nl> + } <nl> + <nl> + stage ' build instrumented tests ' <nl> + dir ( ' realm ' ) { <nl> + gradle ' assembleDebugAndroidTest ' <nl> + dir ( ' realm - library / build / outputs / apk ' ) { <nl> + stash name : ' test - apk ' , includes : ' realm - android - library - debug - androidTest - unaligned . apk ' <nl> + } <nl> + } <nl> + } <nl> + <nl> + node ( ' android - hub ' ) { <nl> + stage ' run instrumented tests ' <nl> + sh ' rm - rf * ' <nl> + unstash ' test - apk ' <nl> + <nl> + sh ' adb devices | tee devices . txt ' <nl> + def adbDevices = readFile ( ' devices . txt ' ) <nl> + def devices = getDeviceNames ( adbDevices ) <nl> + <nl> + if ( ! devices ) { <nl> + throw new IllegalStateException ( ' No devices were found ' ) <nl> + } <nl> + <nl> + def parallelSteps = [ : ] <nl> + devices . each { device - > <nl> + parallelSteps [ device ] = transformIntoStep ( device ) <nl> + } <nl> + <nl> + parallel parallelSteps <nl> + storeJunitResults ' test _ result _ * . xml ' <nl> + <nl> + / / TODO : add support for running monkey on the example apps <nl> + / / stage ' monkey examples ' <nl> + / / sh ' rm - rf * ' <nl> + / / unstash ' examples ' <nl> + } <nl> + <nl> + if ( env . BRANCH _ NAME = = ' master ' ) { <nl> + node ( ' FastLinux ' ) { <nl> + stage ' publish to OJO ' <nl> + unstash ' java ' <nl> + sh ' chmod + x gradlew & & . / gradlew assemble ojoUpload ' <nl> + } <nl> + } <nl> + currentBuild . rawBuild . setResult ( Result . SUCCESS ) <nl> + } catch ( Exception e ) { <nl> + echo e . getMessage ( ) <nl> + currentBuild . rawBuild . setResult ( Result . FAILURE ) <nl> + } finally { <nl> + if ( isPullRequest ( ) ) { <nl> + node { <nl> + reportResultToGithub ( ) <nl> + } <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / Dockerfile b / Dockerfile 
 new file mode 100644 
 index 0000000 . . b19667c 
 - - - / dev / null 
 + + + b / Dockerfile 
 @ @ - 0 , 0 + 1 , 43 @ @ 
 + FROM ubuntu : 16 . 04 
 + 
 + # Locales 
 + RUN locale - gen en _ US . UTF - 8 
 + ENV LANG " en _ US . UTF - 8 " 
 + ENV LANGUAGE " en _ US . UTF - 8 " 
 + ENV LC _ ALL " en _ US . UTF - 8 " 
 + 
 + # Set the environment variables 
 + ENV JAVA _ HOME / usr / lib / jvm / java - 8 - openjdk - amd64 
 + ENV ANDROID _ HOME / opt / android - sdk - linux 
 + ENV NDK _ HOME / opt / android - ndk 
 + ENV PATH $ { PATH } : $ { ANDROID _ HOME } / tools : $ { ANDROID _ HOME } / platform - tools 
 + ENV PATH $ { PATH } : $ { NDK _ HOME } 
 + 
 + # Install the JDK 
 + # We are going to need some 32 bit binaries because aapt requires it 
 + # file is need by the script that creates NDK toolchains 
 + RUN DEBIAN _ FRONTEND = noninteractive dpkg - - add - architecture i386 \ 
 + & & apt - get update - qq \ 
 + & & apt - get install - y file git curl wget zip unzip \ 
 + build - essential \ 
 + openjdk - 8 - jdk - headless \ 
 + libc6 : i386 libstdc + + 6 : i386 libgcc1 : i386 libncurses5 : i386 libz1 : i386 \ 
 + & & apt - get clean 
 + 
 + # Install the Android SDK 
 + RUN cd / opt & & wget - q https : / / dl . google . com / android / android - sdk _ r24 . 4 . 1 - linux . tgz - O android - sdk . tgz 
 + RUN cd / opt & & tar - xvzf android - sdk . tgz 
 + RUN cd / opt & & rm - f android - sdk . tgz 
 + 
 + # Grab what ' s needed in the SDK 
 + RUN echo y | android update sdk - - no - ui - - all - - filter platform - tools | grep ' package installed ' 
 + RUN echo y | android update sdk - - no - ui - - all - - filter extra - android - support | grep ' package installed ' 
 + RUN echo y | android update sdk - - no - ui - - all - - filter android - 23 | grep ' package installed ' 
 + RUN echo y | android update sdk - - no - ui - - all - - filter build - tools - 23 . 0 . 0 | grep ' package installed ' 
 + 
 + # Install the NDK 
 + RUN mkdir / opt / android - ndk - tmp 
 + RUN cd / opt / android - ndk - tmp & & wget - q http : / / dl . google . com / android / ndk / android - ndk - r10e - linux - x86 _ 64 . bin - O android - ndk . bin 
 + RUN cd / opt / android - ndk - tmp & & chmod a + x . / android - ndk . bin & & . / android - ndk . bin 
 + RUN cd / opt / android - ndk - tmp & & mv . / android - ndk - r10e / opt / android - ndk 
 + RUN rm - rf / opt / android - ndk - tmp 
 diff - - git a / Jenkinsfile b / Jenkinsfile 
 index ff2e964 . . 7a11856 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 1 , 5 + 1 , 92 @ @ 
 # ! groovy 
 
 + { - > 
 + try { 
 + node ( ' docker ' ) { 
 + stage ' SCM ' 
 + if ( isPullRequest ( ) ) { 
 + checkout ( [ 
 + $ class : ' GitSCM ' , 
 + branches : [ [ name : " origin / pull / $ { GITHUB _ PR _ NUMBER } / head " ] ] , 
 + doGenerateSubmoduleConfigurations : false , 
 + extensions : [ [ $ class : ' CleanCheckout ' ] ] , 
 + gitTool : ' native git ' , 
 + submoduleCfg : [ ] , 
 + userRemoteConfigs : [ [ 
 + credentialsId : ' 1642fb1a - 1a82 - 4b10 - a25e - f9e95f43c93f ' , 
 + name : ' origin ' , 
 + refspec : " + refs / heads / master : refs / remotes / origin / master + refs / pull / $ { GITHUB _ PR _ NUMBER } / head : refs / remotes / origin / pull / $ { GITHUB _ PR _ NUMBER } / head " , 
 + url : ' https : / / github . com / realm / realm - java . git ' 
 + ] ] 
 + ] ) 
 + } else { 
 + checkout ( [ 
 + $ class : ' GitSCM ' , 
 + branches : [ [ name : ' * / master ' ] ] , 
 + doGenerateSubmoduleConfigurations : false , 
 + extensions : [ [ $ class : ' CleanCheckout ' ] ] , 
 + gitTool : ' native git ' , 
 + submoduleCfg : [ ] , 
 + userRemoteConfigs : [ [ url : ' https : / / github . com / realm / realm - java . git ' ] ] 
 + ] ) 
 + } 
 + 
 + stage ' Docker build ' 
 + def buildEnv = docker . build ' realm - java : snapshot ' 
 + buildEnv . inside ( " - - privileged - v / dev / bus / usb : / dev / bus / usb - v $ { env . HOME } / gradle - cache : / root / . gradle " ) { 
 + stage ' JVM tests ' 
 + try { 
 + gradle ' assemble check javadoc ' 
 + } finally { 
 + storeJunitResults ' realm / realm - annotations - processor / build / test - results / TEST - * . xml ' 
 + } 
 + 
 + try { 
 + sh ' cd examples & & . / gradlew unitTestExample : check - - stacktrace ' 
 + } finally { 
 + storeJunitResults ' examples / unitTestExample / build / test - results / * * / TEST - * . xml ' 
 + } 
 + 
 + stage ' Static code analysis ' 
 + try { 
 + sh ' cd realm & & . / gradlew findbugs pmd checkstyle - - stacktrace ' 
 + } finally { 
 + publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / findbugs ' , reportFiles : ' findbugs - output . html ' , reportName : ' Findbugs issues ' ] ) 
 + publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / reports / pmd ' , reportFiles : ' pmd . html ' , reportName : ' PMD Issues ' ] ) 
 + } 
 + 
 + stage ' Run instrumented tests ' 
 + try { 
 + sh ' cd realm & & . / gradlew connectedCheck - - stacktrace ' 
 + } finally { 
 + storeJunitResults ' realm / realm - library / build / outputs / androidTest - results / connected / TEST - * . xml ' 
 + } 
 + 
 + / / TODO : add support for running monkey on the example apps 
 + 
 + if ( env . BRANCH _ NAME = = ' master ' ) { 
 + stage ' Collect metrics ' 
 + collectAarMetrics ( ) 
 + 
 + stage ' Publish to OJO ' 
 + sh ' chmod + x gradlew & & . / gradlew assemble ojoUpload ' 
 + } 
 + } 
 + } 
 + 
 + currentBuild . rawBuild . setResult ( Result . SUCCESS ) 
 + } catch ( Exception e ) { 
 + echo " The job failed with the following exception : $ { e . getMessage ( ) } " 
 + currentBuild . rawBuild . setResult ( Result . FAILURE ) 
 + } finally { 
 + if ( isPullRequest ( ) ) { 
 + node { 
 + reportResultToGithub ( ) 
 + } 
 + } 
 + } 
 + } 
 + 
 def isPullRequest ( ) { 
 return binding . variables . containsKey ( ' GITHUB _ PR _ NUMBER ' ) 
 } 
 @ @ - 34 , 10 + 121 , 10 @ @ def storeJunitResults ( String path ) { 
 def collectAarMetrics ( ) { 
 dir ( ' realm / realm - library / build / outputs / aar ' ) { 
 sh ' ' ' set - xe 
 - unzip realm - android - library - release . aar - d unzipped 
 - find $ ANDROID _ HOME - name dx | sort - r | head - n 1 > dx 
 - $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar 
 - cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods 
 + unzip realm - android - library - release . aar - d unzipped 
 + find $ ANDROID _ HOME - name dx | sort - r | head - n 1 > dx 
 + $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar 
 + cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods 
 ' ' ' 
 sendMetrics ( ' methods ' , readFile ( ' methods ' ) ) 
 
 @ @ - 55 , 143 + 142 , 3 @ @ def collectAarMetrics ( ) { 
 def gradle ( String commands ) { 
 sh " chmod + x gradlew & & . / gradlew $ { commands } - - stacktrace " 
 } 
 - 
 - @ NonCPS 
 - def getDeviceNames ( String commandOutput ) { 
 - return commandOutput 
 - . split ( ' \ n ' ) 
 - . findAll { it . contains ( ' \ t ' ) } 
 - . collect { it . split ( ' \ t ' ) [ 0 ] . trim ( ) } 
 - } 
 - 
 - def transformIntoStep ( device ) { 
 - / / We need to wrap what we return in a Groovy closure , or else it ' s invoked 
 - / / when this method is called , not when we pass it to parallel . 
 - / / To do this , you need to wrap the code below in { } , and either return 
 - / / that explicitly , or use { - > } syntax . 
 - return { 
 - sh " adb - s $ { device } shell getprop ro . product . model | tee model - name . txt " 
 - def modelName = readFile ( ' model - name . txt ' ) . trim ( ) . replaceAll ( ' ' , ' _ ' ) 
 - 
 - sh " adb - s $ { device } uninstall io . realm . test " 
 - sh " adb - s $ { device } install realm - android - library - debug - androidTest - unaligned . apk " 
 - sh " adb - s $ { device } shell am instrument - w - r io . realm . test / android . support . test . runner . AndroidJUnitRunner > test _ result _ $ { modelName } _ $ { device } . txt " 
 - sh " java - jar / opt / log - converter . jar test _ result _ $ { modelName } _ $ { device } . txt " 
 - } 
 - } 
 - 
 - { - > 
 - try { 
 - node ( ' FastLinux ' ) { 
 - if ( isPullRequest ( ) ) { 
 - checkout ( [ 
 - $ class : ' GitSCM ' , 
 - branches : [ [ name : " origin / pull / $ { GITHUB _ PR _ NUMBER } / head " ] ] , 
 - doGenerateSubmoduleConfigurations : false , 
 - extensions : [ [ $ class : ' CleanCheckout ' ] ] , 
 - gitTool : ' native git ' , 
 - submoduleCfg : [ ] , 
 - userRemoteConfigs : [ [ 
 - credentialsId : ' 1642fb1a - 1a82 - 4b10 - a25e - f9e95f43c93f ' , 
 - name : ' origin ' , 
 - refspec : " + refs / heads / master : refs / remotes / origin / master + refs / pull / $ { GITHUB _ PR _ NUMBER } / head : refs / remotes / origin / pull / $ { GITHUB _ PR _ NUMBER } / head " , 
 - url : ' https : / / github . com / realm / realm - java . git ' 
 - ] ] 
 - ] ) 
 - } else { 
 - checkout ( [ 
 - $ class : ' GitSCM ' , 
 - branches : [ [ name : ' * / master ' ] ] , 
 - doGenerateSubmoduleConfigurations : false , 
 - extensions : [ [ $ class : ' CleanCheckout ' ] ] , 
 - gitTool : ' native git ' , 
 - submoduleCfg : [ ] , 
 - userRemoteConfigs : [ [ url : ' https : / / github . com / realm / realm - java . git ' ] ] 
 - ] ) 
 - } 
 - 
 - stage ' JVM tests ' 
 - try { 
 - gradle ' assemble check javadoc ' 
 - } finally { 
 - storeJunitResults ' realm / realm - annotations - processor / build / test - results / TEST - * . xml ' 
 - } 
 - if ( env . BRANCH _ NAME = = ' master ' ) { 
 - collectAarMetrics ( ) 
 - } 
 - / / TODO : add support for running monkey on the example apps 
 - / / stash includes : ' examples / * / build / outputs / apk / * debug . apk ' , name : ' examples ' 
 - 
 - dir ( ' examples ' ) { 
 - try { 
 - gradle ' check ' 
 - } finally { 
 - storeJunitResults ' unitTestExample / build / test - results / * * / TEST - * . xml ' 
 - } 
 - } 
 - 
 - stage ' static code analysis ' 
 - try { 
 - dir ( ' realm ' ) { 
 - gradle ' findbugs pmd checkstyle ' 
 - } 
 - } finally { 
 - publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / findbugs ' , reportFiles : ' findbugs - output . html ' , reportName : ' Findbugs issues ' ] ) 
 - publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / reports / pmd ' , reportFiles : ' pmd . html ' , reportName : ' PMD Issues ' ] ) 
 - } 
 - 
 - stage ' build instrumented tests ' 
 - dir ( ' realm ' ) { 
 - gradle ' assembleDebugAndroidTest ' 
 - dir ( ' realm - library / build / outputs / apk ' ) { 
 - stash name : ' test - apk ' , includes : ' realm - android - library - debug - androidTest - unaligned . apk ' 
 - } 
 - } 
 - } 
 - 
 - node ( ' android - hub ' ) { 
 - stage ' run instrumented tests ' 
 - sh ' rm - rf * ' 
 - unstash ' test - apk ' 
 - 
 - sh ' adb devices | tee devices . txt ' 
 - def adbDevices = readFile ( ' devices . txt ' ) 
 - def devices = getDeviceNames ( adbDevices ) 
 - 
 - if ( ! devices ) { 
 - throw new IllegalStateException ( ' No devices were found ' ) 
 - } 
 - 
 - def parallelSteps = [ : ] 
 - devices . each { device - > 
 - parallelSteps [ device ] = transformIntoStep ( device ) 
 - } 
 - 
 - parallel parallelSteps 
 - storeJunitResults ' test _ result _ * . xml ' 
 - 
 - / / TODO : add support for running monkey on the example apps 
 - / / stage ' monkey examples ' 
 - / / sh ' rm - rf * ' 
 - / / unstash ' examples ' 
 - } 
 - 
 - if ( env . BRANCH _ NAME = = ' master ' ) { 
 - node ( ' FastLinux ' ) { 
 - stage ' publish to OJO ' 
 - unstash ' java ' 
 - sh ' chmod + x gradlew & & . / gradlew assemble ojoUpload ' 
 - } 
 - } 
 - currentBuild . rawBuild . setResult ( Result . SUCCESS ) 
 - } catch ( Exception e ) { 
 - echo e . getMessage ( ) 
 - currentBuild . rawBuild . setResult ( Result . FAILURE ) 
 - } finally { 
 - if ( isPullRequest ( ) ) { 
 - node { 
 - reportResultToGithub ( ) 
 - } 
 - } 
 - } 
 - } 
 diff - - git a / realm / realm - annotations - processor / build . gradle b / realm / realm - annotations - processor / build . gradle 
 index fe4dab1 . . 7851465 100644 
 - - - a / realm / realm - annotations - processor / build . gradle 
 + + + b / realm / realm - annotations - processor / build . gradle 
 @ @ - 15 , 7 + 15 , 7 @ @ dependencies { 
 testCompile files ( " $ { System . properties [ ' java . home ' ] } / . . / lib / tools . jar " ) / / This is needed otherwise compile - testing won ' t be able to find it 
 testCompile group : ' junit ' , name : ' junit ' , version : ' 4 . 12 ' 
 testCompile group : ' com . google . testing . compile ' , name : ' compile - testing ' , version : ' 0 . 6 ' 
 - testCompile files ( file ( " $ { System . env . ANDROID _ HOME } / platforms / android - 21 / android . jar " ) ) 
 + testCompile files ( file ( " $ { System . env . ANDROID _ HOME } / platforms / android - 23 / android . jar " ) ) 
 } 
 
 / / for Ant filter

NEAREST DIFF:
diff - - git a / Jenkinsfile b / Jenkinsfile 
 new file mode 100644 
 index 0000000 . . ff2e964 
 - - - / dev / null 
 + + + b / Jenkinsfile 
 @ @ - 0 , 0 + 1 , 197 @ @ 
 + # ! groovy 
 + 
 + def isPullRequest ( ) { 
 + return binding . variables . containsKey ( ' GITHUB _ PR _ NUMBER ' ) 
 + } 
 + 
 + def reportResultToGithub ( ) { 
 + step ( [ 
 + $ class : ' GitHubPRBuildStatusPublisher ' , 
 + statusMsg : [ content : " $ { GITHUB _ PR _ COND _ REF } run ended " ] , 
 + unstableAs : ' FAILURE ' 
 + ] ) 
 + } 
 + 
 + def sendMetrics ( String metric , String value ) { 
 + withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { 
 + sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " 
 + } 
 + } 
 + 
 + def sendTaggedMetric ( String metric , String value , String tagName , String tagValue ) { 
 + withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { 
 + sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } , $ { tagName } = $ { tagValue } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " 
 + } 
 + } 
 + 
 + def storeJunitResults ( String path ) { 
 + step ( [ 
 + $ class : ' JUnitResultArchiver ' , 
 + testResults : path 
 + ] ) 
 + } 
 + 
 + def collectAarMetrics ( ) { 
 + dir ( ' realm / realm - library / build / outputs / aar ' ) { 
 + sh ' ' ' set - xe 
 + unzip realm - android - library - release . aar - d unzipped 
 + find $ ANDROID _ HOME - name dx | sort - r | head - n 1 > dx 
 + $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar 
 + cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods 
 + ' ' ' 
 + sendMetrics ( ' methods ' , readFile ( ' methods ' ) ) 
 + 
 + sendMetrics ( ' aar _ size ' , new File ( ' realm - android - library - release . aar ' ) . length ( ) ) 
 + 
 + def rootFolder = new File ( ' unzipped / jni ' ) 
 + rootFolder . traverse ( type : DIRECTORIES ) { folder - > 
 + def abiName = folder . name ( ) 
 + def libSize = new File ( folder , ' librealm - jni . so ' ) . size ( ) as String 
 + sendTaggedMetric ( ' abi _ size ' , libSize , ' type ' , abiName ) 
 + } 
 + } 
 + } 
 + 
 + def gradle ( String commands ) { 
 + sh " chmod + x gradlew & & . / gradlew $ { commands } - - stacktrace " 
 + } 
 + 
 + @ NonCPS 
 + def getDeviceNames ( String commandOutput ) { 
 + return commandOutput 
 + . split ( ' \ n ' ) 
 + . findAll { it . contains ( ' \ t ' ) } 
 + . collect { it . split ( ' \ t ' ) [ 0 ] . trim ( ) } 
 + } 
 + 
 + def transformIntoStep ( device ) { 
 + / / We need to wrap what we return in a Groovy closure , or else it ' s invoked 
 + / / when this method is called , not when we pass it to parallel . 
 + / / To do this , you need to wrap the code below in { } , and either return 
 + / / that explicitly , or use { - > } syntax . 
 + return { 
 + sh " adb - s $ { device } shell getprop ro . product . model | tee model - name . txt " 
 + def modelName = readFile ( ' model - name . txt ' ) . trim ( ) . replaceAll ( ' ' , ' _ ' ) 
 + 
 + sh " adb - s $ { device } uninstall io . realm . test " 
 + sh " adb - s $ { device } install realm - android - library - debug - androidTest - unaligned . apk " 
 + sh " adb - s $ { device } shell am instrument - w - r io . realm . test / android . support . test . runner . AndroidJUnitRunner > test _ result _ $ { modelName } _ $ { device } . txt " 
 + sh " java - jar / opt / log - converter . jar test _ result _ $ { modelName } _ $ { device } . txt " 
 + } 
 + } 
 + 
 + { - > 
 + try { 
 + node ( ' FastLinux ' ) { 
 + if ( isPullRequest ( ) ) { 
 + checkout ( [ 
 + $ class : ' GitSCM ' , 
 + branches : [ [ name : " origin / pull / $ { GITHUB _ PR _ NUMBER } / head " ] ] , 
 + doGenerateSubmoduleConfigurations : false , 
 + extensions : [ [ $ class : ' CleanCheckout ' ] ] , 
 + gitTool : ' native git ' , 
 + submoduleCfg : [ ] , 
 + userRemoteConfigs : [ [ 
 + credentialsId : ' 1642fb1a - 1a82 - 4b10 - a25e - f9e95f43c93f ' , 
 + name : ' origin ' , 
 + refspec : " + refs / heads / master : refs / remotes / origin / master + refs / pull / $ { GITHUB _ PR _ NUMBER } / head : refs / remotes / origin / pull / $ { GITHUB _ PR _ NUMBER } / head " , 
 + url : ' https : / / github . com / realm / realm - java . git ' 
 + ] ] 
 + ] ) 
 + } else { 
 + checkout ( [ 
 + $ class : ' GitSCM ' , 
 + branches : [ [ name : ' * / master ' ] ] , 
 + doGenerateSubmoduleConfigurations : false , 
 + extensions : [ [ $ class : ' CleanCheckout ' ] ] , 
 + gitTool : ' native git ' , 
 + submoduleCfg : [ ] , 
 + userRemoteConfigs : [ [ url : ' https : / / github . com / realm / realm - java . git ' ] ] 
 + ] ) 
 + } 
 + 
 + stage ' JVM tests ' 
 + try { 
 + gradle ' assemble check javadoc ' 
 + } finally { 
 + storeJunitResults ' realm / realm - annotations - processor / build / test - results / TEST - * . xml ' 
 + } 
 + if ( env . BRANCH _ NAME = = ' master ' ) { 
 + collectAarMetrics ( ) 
 + } 
 + / / TODO : add support for running monkey on the example apps 
 + / / stash includes : ' examples / * / build / outputs / apk / * debug . apk ' , name : ' examples ' 
 + 
 + dir ( ' examples ' ) { 
 + try { 
 + gradle ' check ' 
 + } finally { 
 + storeJunitResults ' unitTestExample / build / test - results / * * / TEST - * . xml ' 
 + } 
 + } 
 + 
 + stage ' static code analysis ' 
 + try { 
 + dir ( ' realm ' ) { 
 + gradle ' findbugs pmd checkstyle ' 
 + } 
 + } finally { 
 + publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / findbugs ' , reportFiles : ' findbugs - output . html ' , reportName : ' Findbugs issues ' ] ) 
 + publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : ' realm / realm - library / build / reports / pmd ' , reportFiles : ' pmd . html ' , reportName : ' PMD Issues ' ] ) 
 + } 
 + 
 + stage ' build instrumented tests ' 
 + dir ( ' realm ' ) { 
 + gradle ' assembleDebugAndroidTest ' 
 + dir ( ' realm - library / build / outputs / apk ' ) { 
 + stash name : ' test - apk ' , includes : ' realm - android - library - debug - androidTest - unaligned . apk ' 
 + } 
 + } 
 + } 
 + 
 + node ( ' android - hub ' ) { 
 + stage ' run instrumented tests ' 
 + sh ' rm - rf * ' 
 + unstash ' test - apk ' 
 + 
 + sh ' adb devices | tee devices . txt ' 
 + def adbDevices = readFile ( ' devices . txt ' ) 
 + def devices = getDeviceNames ( adbDevices ) 
 + 
 + if ( ! devices ) { 
 + throw new IllegalStateException ( ' No devices were found ' ) 
 + } 
 + 
 + def parallelSteps = [ : ] 
 + devices . each { device - > 
 + parallelSteps [ device ] = transformIntoStep ( device ) 
 + } 
 + 
 + parallel parallelSteps 
 + storeJunitResults ' test _ result _ * . xml ' 
 + 
 + / / TODO : add support for running monkey on the example apps 
 + / / stage ' monkey examples ' 
 + / / sh ' rm - rf * ' 
 + / / unstash ' examples ' 
 + } 
 + 
 + if ( env . BRANCH _ NAME = = ' master ' ) { 
 + node ( ' FastLinux ' ) { 
 + stage ' publish to OJO ' 
 + unstash ' java ' 
 + sh ' chmod + x gradlew & & . / gradlew assemble ojoUpload ' 
 + } 
 + } 
 + currentBuild . rawBuild . setResult ( Result . SUCCESS ) 
 + } catch ( Exception e ) { 
 + echo e . getMessage ( ) 
 + currentBuild . rawBuild . setResult ( Result . FAILURE ) 
 + } finally { 
 + if ( isPullRequest ( ) ) { 
 + node { 
 + reportResultToGithub ( ) 
 + } 
 + } 
 + } 
 + }
