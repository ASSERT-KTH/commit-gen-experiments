BLEU SCORE: 0.37991784282579627

TEST MSG: Fix ErrorProne warnings
GENERATED MSG: Introduce ErrorProne plugin

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java <nl> index 3a04a45 . . 568e3b2 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java <nl> @ @ - 750 , 7 + 750 , 7 @ @ public class DynamicRealmObjectTests { <nl> . setObject ( AllJavaTypes . FIELD _ OBJECT , dObjDynamic ) ; <nl> fail ( ) ; <nl> } catch ( IllegalArgumentException expected ) { <nl> - assertEquals ( expected . getMessage ( ) , " Cannot add an object from another Realm instance . " ) ; <nl> + assertEquals ( " Cannot add an object from another Realm instance . " , expected . getMessage ( ) ) ; <nl> } <nl> <nl> dynamicRealm . cancelTransaction ( ) ; <nl> @ @ - 861 , 8 + 861 , 7 @ @ public class DynamicRealmObjectTests { <nl> dynamicRealm . where ( AllJavaTypes . CLASS _ NAME ) . findFirst ( ) . setList ( AllJavaTypes . FIELD _ LIST , list ) ; <nl> fail ( ) ; <nl> } catch ( IllegalArgumentException expected ) { <nl> - assertEquals ( expected . getMessage ( ) , <nl> - " Each element in ' list ' must belong to the same Realm instance . " ) ; <nl> + assertEquals ( " Each element in ' list ' must belong to the same Realm instance . " , expected . getMessage ( ) ) ; <nl> } <nl> <nl> dynamicRealm . cancelTransaction ( ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> index b98b5ed . . 7e8d36d 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> @ @ - 332 , 7 + 332 , 7 @ @ public class DynamicRealmTests { <nl> } ) ; <nl> } catch ( RuntimeException ignored ) { <nl> / / Ensures that we pass a valuable error message to the logger for developers . <nl> - assertEquals ( testLogger . message , " Could not cancel transaction , not currently in a transaction . " ) ; <nl> + assertEquals ( " Could not cancel transaction , not currently in a transaction . " , testLogger . message ) ; <nl> } finally { <nl> RealmLog . remove ( testLogger ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java <nl> index 410ce96 . . 252dc08 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java <nl> @ @ - 115 , 7 + 115 , 7 @ @ public class RealmCacheTests { <nl> Realm . getInstance ( configB ) ; / / Tries to open with key 2 . <nl> fail ( ) ; <nl> } catch ( RealmFileException expected ) { <nl> - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . ACCESS _ ERROR ) ; <nl> + assertEquals ( RealmFileException . Kind . ACCESS _ ERROR , expected . getKind ( ) ) ; <nl> / / Deletes Realm so key 2 works . This should work as a Realm shouldn ' t be cached <nl> / / if initialization failed . <nl> assertTrue ( Realm . deleteRealm ( configA ) ) ; <nl> @ @ - 164 , 7 + 164 , 7 @ @ public class RealmCacheTests { <nl> Realm . getInstance ( wrongConfig ) ; <nl> fail ( ) ; <nl> } catch ( RealmFileException expected ) { <nl> - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . ACCESS _ ERROR ) ; <nl> + assertEquals ( RealmFileException . Kind . ACCESS _ ERROR , expected . getKind ( ) ) ; <nl> } <nl> <nl> / / Tries again with proper key . <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java <nl> index f5ecd5c . . 8f99d80 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java <nl> @ @ - 905 , 7 + 905 , 7 @ @ public class RealmConfigurationTests { <nl> Realm . getInstance ( configuration ) ; <nl> fail ( ) ; <nl> } catch ( RealmFileException expected ) { <nl> - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . ACCESS _ ERROR ) ; <nl> + assertEquals ( RealmFileException . Kind . ACCESS _ ERROR , expected . getKind ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmInMemoryTest . java b / realm / realm - library / src / androidTest / java / io / realm / RealmInMemoryTest . java <nl> index 1b41af1 . . 9f7f261 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmInMemoryTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmInMemoryTest . java <nl> @ @ - 81 , 14 + 81 , 14 @ @ public class RealmInMemoryTest { <nl> dog . setName ( " DinoDog " ) ; <nl> testRealm . commitTransaction ( ) ; <nl> <nl> - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 1 ) ; <nl> - assertEquals ( testRealm . where ( Dog . class ) . findFirst ( ) . getName ( ) , " DinoDog " ) ; <nl> + assertEquals ( 1 , testRealm . where ( Dog . class ) . count ( ) ) ; <nl> + assertEquals ( " DinoDog " , testRealm . where ( Dog . class ) . findFirst ( ) . getName ( ) ) ; <nl> <nl> testRealm . close ( ) ; <nl> / / After all references to the in - mem - realm closed , <nl> / / in - mem - realm with same identifier should create a fresh new instance . <nl> testRealm = Realm . getInstance ( inMemConf ) ; <nl> - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 0 ) ; <nl> + assertEquals ( 0 , testRealm . where ( Dog . class ) . count ( ) ) ; <nl> } <nl> <nl> / / Two in - memory Realms with different names should not affect each other . <nl> @ @ - 110 , 12 + 110 , 12 @ @ public class RealmInMemoryTest { <nl> dog2 . setName ( " UFODog " ) ; <nl> testRealm2 . commitTransaction ( ) ; <nl> <nl> - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 1 ) ; <nl> + assertEquals ( 1 , testRealm . where ( Dog . class ) . count ( ) ) ; <nl> / / noinspection ConstantConditions <nl> - assertEquals ( testRealm . where ( Dog . class ) . findFirst ( ) . getName ( ) , " DinoDog " ) ; <nl> - assertEquals ( testRealm2 . where ( Dog . class ) . count ( ) , 1 ) ; <nl> + assertEquals ( " DinoDog " , testRealm . where ( Dog . class ) . findFirst ( ) . getName ( ) ) ; <nl> + assertEquals ( 1 , testRealm2 . where ( Dog . class ) . count ( ) ) ; <nl> / / noinspection ConstantConditions <nl> - assertEquals ( testRealm2 . where ( Dog . class ) . findFirst ( ) . getName ( ) , " UFODog " ) ; <nl> + assertEquals ( " UFODog " , testRealm2 . where ( Dog . class ) . findFirst ( ) . getName ( ) ) ; <nl> <nl> testRealm2 . close ( ) ; <nl> } <nl> @ @ - 161 , 13 + 161 , 13 @ @ public class RealmInMemoryTest { <nl> / / Tests a normal Realm file . <nl> testRealm . writeCopyTo ( new File ( configFactory . getRoot ( ) , fileName ) ) ; <nl> Realm onDiskRealm = Realm . getInstance ( conf ) ; <nl> - assertEquals ( onDiskRealm . where ( Dog . class ) . count ( ) , 1 ) ; <nl> + assertEquals ( 1 , onDiskRealm . where ( Dog . class ) . count ( ) ) ; <nl> onDiskRealm . close ( ) ; <nl> <nl> / / Tests a encrypted Realm file . <nl> testRealm . writeEncryptedCopyTo ( new File ( configFactory . getRoot ( ) , encFileName ) , key ) ; <nl> onDiskRealm = Realm . getInstance ( encConf ) ; <nl> - assertEquals ( onDiskRealm . where ( Dog . class ) . count ( ) , 1 ) ; <nl> + assertEquals ( 1 , onDiskRealm . where ( Dog . class ) . count ( ) ) ; <nl> onDiskRealm . close ( ) ; <nl> / / Tests with a wrong key to see if it fails as expected . <nl> try { <nl> @ @ - 178 , 7 + 178 , 7 @ @ public class RealmInMemoryTest { <nl> Realm . getInstance ( wrongKeyConf ) ; <nl> fail ( " Realm . getInstance should fail with RealmFileException " ) ; <nl> } catch ( RealmFileException expected ) { <nl> - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . ACCESS _ ERROR ) ; <nl> + assertEquals ( RealmFileException . Kind . ACCESS _ ERROR , expected . getKind ( ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 207 , 7 + 207 , 7 @ @ public class RealmInMemoryTest { <nl> realm . commitTransaction ( ) ; <nl> <nl> try { <nl> - assertEquals ( realm . where ( Dog . class ) . count ( ) , 1 ) ; <nl> + assertEquals ( 1 , realm . where ( Dog . class ) . count ( ) ) ; <nl> } catch ( AssertionFailedError afe ) { <nl> threadError [ 0 ] = afe ; <nl> realm . close ( ) ; <nl> @ @ - 237 , 7 + 237 , 7 @ @ public class RealmInMemoryTest { <nl> <nl> / / Refreshes will be ran in the next loop , manually refreshes it here . <nl> testRealm . waitForChange ( ) ; <nl> - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 1 ) ; <nl> + assertEquals ( 1 , testRealm . where ( Dog . class ) . count ( ) ) ; <nl> <nl> / / Step 3 . <nl> / / Releases the main thread Realm reference , and the worker thread holds the reference still . <nl> @ @ - 246 , 7 + 246 , 7 @ @ public class RealmInMemoryTest { <nl> / / Step 4 . <nl> / / Creates a new Realm reference in main thread and checks the data . <nl> testRealm = Realm . getInstance ( inMemConf ) ; <nl> - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 1 ) ; <nl> + assertEquals ( 1 , testRealm . where ( Dog . class ) . count ( ) ) ; <nl> testRealm . close ( ) ; <nl> <nl> / / Let the worker thread continue . <nl> @ @ - 258 , 6 + 258 , 6 @ @ public class RealmInMemoryTest { <nl> <nl> / / Since all previous Realm instances has been closed before , below will create a fresh new in - mem - realm instance . <nl> testRealm = Realm . getInstance ( inMemConf ) ; <nl> - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 0 ) ; <nl> + assertEquals ( 0 , testRealm . where ( Dog . class ) . count ( ) ) ; <nl> } <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmInterprocessTest . java b / realm / realm - library / src / androidTest / java / io / realm / RealmInterprocessTest . java <nl> index 76c5c4c . . 56649a1 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmInterprocessTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmInterprocessTest . java <nl> @ @ - 282 , 7 + 282 , 7 @ @ public class RealmInterprocessTest extends AndroidTestCase { <nl> public void run ( ) { <nl> / / Step 1 <nl> testRealm = Realm . getInstance ( new RealmConfiguration . Builder ( getContext ( ) ) . build ( ) ) ; <nl> - assertEquals ( testRealm . where ( AllTypes . class ) . count ( ) , 0 ) ; <nl> + assertEquals ( 0 , testRealm . where ( AllTypes . class ) . count ( ) ) ; <nl> testRealm . beginTransaction ( ) ; <nl> testRealm . createObject ( AllTypes . class ) ; <nl> testRealm . commitTransaction ( ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> index d6ca5ad . . ae80d7b 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> @ @ - 213 , 7 + 213 , 7 @ @ public class RealmTests { <nl> . build ( ) ) ; <nl> fail ( ) ; <nl> } catch ( RealmFileException expected ) { <nl> - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . PERMISSION _ DENIED ) ; <nl> + assertEquals ( RealmFileException . Kind . PERMISSION _ DENIED , expected . getKind ( ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 230 , 7 + 230 , 7 @ @ public class RealmTests { <nl> Realm . getInstance ( new RealmConfiguration . Builder ( context ) . directory ( folder ) . name ( REALM _ FILE ) . build ( ) ) ; <nl> fail ( ) ; <nl> } catch ( RealmFileException expected ) { <nl> - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . PERMISSION _ DENIED ) ; <nl> + assertEquals ( RealmFileException . Kind . PERMISSION _ DENIED , expected . getKind ( ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 708 , 7 + 708 , 7 @ @ public class RealmTests { <nl> } ) ; <nl> } catch ( RuntimeException ignored ) { <nl> / / Ensures that we pass a valuable error message to the logger for developers . <nl> - assertEquals ( testLogger . message , " Could not cancel transaction , not currently in a transaction . " ) ; <nl> + assertEquals ( " Could not cancel transaction , not currently in a transaction . " , testLogger . message ) ; <nl> } finally { <nl> RealmLog . remove ( testLogger ) ; <nl> } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> index aa4c01f . . 86067e4 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java <nl> @ @ - 877 , 7 + 877 , 7 @ @ public class TypeBasedNotificationsTests { <nl> looperThread . postRunnable ( new Runnable ( ) { <nl> @ Override <nl> public void run ( ) { <nl> - assertEquals ( typebasedCommitInvocations . get ( ) , 1 ) ; <nl> + assertEquals ( 1 , typebasedCommitInvocations . get ( ) ) ; <nl> looperThread . testComplete ( ) ; <nl> } <nl> } ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / Thread . java b / realm / realm - library / src / androidTest / java / io / realm / entities / Thread . java <nl> index 8bad4e5 . . 5509f2f 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / Thread . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / Thread . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ package io . realm . entities ; <nl> <nl> import io . realm . RealmObject ; <nl> <nl> + @ SuppressWarnings ( " JavaLangClash " ) <nl> public class Thread extends RealmObject { <nl> private String name ; <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / conflict / String . java b / realm / realm - library / src / androidTest / java / io / realm / entities / conflict / String . java <nl> index 7b57935 . . e6d10a2 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / conflict / String . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / conflict / String . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ package io . realm . entities . conflict ; <nl> import io . realm . RealmList ; <nl> import io . realm . RealmObject ; <nl> <nl> + @ SuppressWarnings ( " JavaLangClash " ) <nl> public class String extends RealmObject { <nl> public String str ; <nl> public RealmList < String > strList ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java <nl> index 673bff1 . . 0457739 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java <nl> @ @ - 135 , 10 + 135 , 10 @ @ public class CollectionTests { <nl> SortDescriptor distinctDescriptor = SortDescriptor . getInstanceForDistinct ( null , table , " firstName " ) ; <nl> Collection collection = new Collection ( sharedRealm , table . where ( ) , null , distinctDescriptor ) ; <nl> <nl> - assertEquals ( collection . size ( ) , 3 ) ; <nl> - assertEquals ( collection . getUncheckedRow ( 0 ) . getString ( 0 ) , " John " ) ; <nl> - assertEquals ( collection . getUncheckedRow ( 1 ) . getString ( 0 ) , " Erik " ) ; <nl> - assertEquals ( collection . getUncheckedRow ( 2 ) . getString ( 0 ) , " Henry " ) ; <nl> + assertEquals ( 3 , collection . size ( ) ) ; <nl> + assertEquals ( " John " , collection . getUncheckedRow ( 0 ) . getString ( 0 ) ) ; <nl> + assertEquals ( " Erik " , collection . getUncheckedRow ( 1 ) . getString ( 0 ) ) ; <nl> + assertEquals ( " Henry " , collection . getUncheckedRow ( 2 ) . getString ( 0 ) ) ; <nl> } <nl> <nl> <nl> @ @ - 192 , 8 + 192 , 8 @ @ public class CollectionTests { <nl> assertEquals ( 2 , collection . size ( ) ) ; <nl> assertEquals ( 2 , collection2 . size ( ) ) ; <nl> <nl> - assertEquals ( collection2 . getUncheckedRow ( 0 ) . getLong ( 2 ) , 3 ) ; <nl> - assertEquals ( collection2 . getUncheckedRow ( 1 ) . getLong ( 2 ) , 4 ) ; <nl> + assertEquals ( 3 , collection2 . getUncheckedRow ( 0 ) . getLong ( 2 ) ) ; <nl> + assertEquals ( 4 , collection2 . getUncheckedRow ( 1 ) . getLong ( 2 ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 366 , 7 + 366 , 7 @ @ public class CollectionTests { <nl> <nl> final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; <nl> looperThread . keepStrongReference ( collection ) ; <nl> - assertEquals ( collection . size ( ) , 4 ) ; / / Trigger the query to run . <nl> + assertEquals ( 4 , collection . size ( ) ) ; / / Trigger the query to run . <nl> collection . addListener ( collection , new RealmChangeListener < Collection > ( ) { <nl> @ Override <nl> public void onChange ( Collection collection1 ) { <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / JNIRowTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / JNIRowTest . java <nl> index 93bf833 . . 371f8f2 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / JNIRowTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / JNIRowTest . java <nl> @ @ - 134 , 7 + 134 , 7 @ @ public class JNIRowTest { <nl> UncheckedRow row = table . getUncheckedRow ( rowIndex ) ; <nl> <nl> row . setString ( colStringIndex , " test " ) ; <nl> - assertEquals ( row . getString ( colStringIndex ) , " test " ) ; <nl> + assertEquals ( " test " , row . getString ( colStringIndex ) ) ; <nl> row . setNull ( colStringIndex ) ; <nl> assertNull ( row . getString ( colStringIndex ) ) ; <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java <nl> index a36ec5b . . fb77df3 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java <nl> @ @ - 39 , 8 + 39 , 8 @ @ import static junit . framework . Assert . fail ; <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class ObserverPairListTests { <nl> <nl> - private static class TestListener < Integer > { <nl> - void onChange ( Integer integer ) { <nl> + private static class TestListener < T > { <nl> + void onChange ( T integer ) { <nl> } <nl> } <nl> <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / android / JsonUtilsTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / android / JsonUtilsTest . java <nl> index 42958d9 . . 9d8a431 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / android / JsonUtilsTest . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / android / JsonUtilsTest . java <nl> @ @ - 48 , 7 + 48 , 7 @ @ public class JsonUtilsTest extends AndroidTestCase { <nl> String jsonDate = " / Date ( 1198908717056 ) / " ; / / 2007 - 12 - 27T23 : 11 : 57 . 056 <nl> Date output = JsonUtils . stringToDate ( jsonDate ) ; <nl> <nl> - assertEquals ( output . getTime ( ) , 1198908717056L ) ; <nl> + assertEquals ( 1198908717056L , output . getTime ( ) ) ; <nl> } <nl> <nl> public void testNegativeLongDate ( ) { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / OutOfMemoryError . java b / realm / realm - library / src / main / java / io / realm / internal / OutOfMemoryError . java <nl> index 88b664f . . f74c99e 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / OutOfMemoryError . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / OutOfMemoryError . java <nl> @ @ - 21 , 7 + 21 , 7 @ @ package io . realm . internal ; <nl> * Can be thrown when Realm runs out of memory . <nl> * A JVM that catches this will be able to cleanup , e . g . release other resources to avoid also running out of memory . <nl> * / <nl> - @ SuppressWarnings ( " serial " ) <nl> + @ SuppressWarnings ( { " serial " , " JavaLangClash " } ) <nl> @ Keep <nl> public class OutOfMemoryError extends Error { <nl> <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> index 1a086c3 . . 4620330 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> @ @ - 52 , 8 + 52 , 6 @ @ import static org . junit . Assert . assertEquals ; <nl> public class ProcessCommitTests extends BaseIntegrationTest { <nl> <nl> @ Rule <nl> - public RunInLooperThread looperThread = new RunInLooperThread ( ) ; <nl> - @ Rule <nl> public RunWithRemoteService remoteService = new RunWithRemoteService ( ) ; <nl> <nl> @ Before
NEAREST DIFF (one line): diff - - git a / realm / build . gradle b / realm / build . gradle <nl> index 120340d . . 53a4573 100644 <nl> - - - a / realm / build . gradle <nl> + + + b / realm / build . gradle <nl> @ @ - 3 , 6 + 3 , 7 @ @ buildscript { <nl> mavenLocal ( ) <nl> jcenter ( ) <nl> maven { url ' https : / / jitpack . io ' } <nl> + maven { url " https : / / plugins . gradle . org / m2 / " } <nl> } <nl> <nl> dependencies { <nl> @ @ - 15 , 6 + 16 , 7 @ @ buildscript { <nl> classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' <nl> classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 6 ' <nl> classpath " io . realm : realm - transformer : $ { file ( ' . . / version . txt ' ) . text . trim ( ) } " <nl> + classpath ' net . ltgt . gradle : gradle - errorprone - plugin : 0 . 0 . 9 ' <nl> } <nl> } <nl> <nl> diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index b7b5097 . . 208d17e 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 9 , 6 + 9 , 7 @ @ apply plugin : ' pmd ' <nl> apply plugin : ' checkstyle ' <nl> apply plugin : ' com . github . kt3k . coveralls ' <nl> apply plugin : ' de . undercouch . download ' <nl> + apply plugin : ' net . ltgt . errorprone ' <nl> <nl> def properties = new Properties ( ) <nl> properties . load ( new FileInputStream ( " $ { projectDir } / . . / . . / dependencies . list " ) ) <nl> @ @ - 113 , 6 + 114 , 12 @ @ android { <nl> } <nl> } <nl> <nl> + project . afterEvaluate { <nl> + tasks . withType ( JavaCompile ) { <nl> + options . compilerArgs < < ' - Werror ' <nl> + } <nl> + } <nl> + <nl> coveralls . jacocoReportPath = " $ { buildDir } / reports / coverage / debug / report . xml " <nl> <nl> import io . realm . transformer . RealmTransformer <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java <nl> index e0208b4 . . fac6bd2 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java <nl> @ @ - 128 , 7 + 128 , 7 @ @ public class DynamicRealmObjectTests { <nl> HASH _ CODE , EQUALS , TO _ STRING , <nl> } <nl> <nl> - @ SuppressWarnings ( { " ResultOfMethodCallIgnored " , " EqualsWithItself " } ) <nl> + @ SuppressWarnings ( { " ResultOfMethodCallIgnored " , " EqualsWithItself " , " SelfEquals " } ) <nl> private static void callThreadConfinedMethod ( DynamicRealmObject obj , ThreadConfinedMethods method ) { <nl> switch ( method ) { <nl> case GET _ BOOLEAN : obj . getBoolean ( AllJavaTypes . FIELD _ BOOLEAN ) ; break ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java <nl> index 2278bf2 . . 1ea3651 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java <nl> @ @ - 146 , 6 + 146 , 7 @ @ public class IOSRealmTests { <nl> } <nl> <nl> @ Test <nl> + @ SuppressWarnings ( " ConstantOverflow " ) <nl> public void iOSDataTypesMinimumValues ( ) throws IOException { <nl> for ( String iosVersion : IOS _ VERSIONS ) { <nl> configFactory . copyRealmFromAssets ( context , <nl> @ @ - 167 , 6 + 168 , 7 @ @ public class IOSRealmTests { <nl> } <nl> <nl> @ Test <nl> + @ SuppressWarnings ( " ConstantOverflow " ) <nl> public void iOSDataTypesMaximumValues ( ) throws IOException { <nl> for ( String iosVersion : IOS _ VERSIONS ) { <nl> configFactory . copyRealmFromAssets ( context , <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmCollectionTests . java <nl> index f72137c . . 7e3c7a9 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmCollectionTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmCollectionTests . java <nl> @ @ - 235 , 6 + 235 , 7 @ @ public class RealmCollectionTests extends CollectionTests { <nl> } <nl> <nl> @ Test <nl> + @ SuppressWarnings ( " CollectionIncompatibleType " ) <nl> public void contains _ wrongType ( ) { <nl> / / noinspection SuspiciousMethodCalls <nl> assertFalse ( collection . contains ( new Dog ( ) ) ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java <nl> index cd4e057 . . 78fdc0e 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java <nl> @ @ - 591 , 6 + 591 , 7 @ @ public class RealmListTests extends CollectionTests { <nl> } <nl> <nl> @ Test <nl> + @ SuppressWarnings ( " CollectionIncompatibleType " ) <nl> public void removeAll _ managedMode _ wrongClass ( ) { <nl> realm . beginTransaction ( ) ; <nl> / / noinspection SuspiciousMethodCalls <nl> @ @ - 598 , 6 + 599 , 7 @ @ public class RealmListTests extends CollectionTests { <nl> } <nl> <nl> @ Test <nl> + @ SuppressWarnings ( " CollectionIncompatibleType " ) <nl> public void removeAll _ unmanaged _ wrongClass ( ) { <nl> RealmList < Dog > list = createUnmanagedDogList ( ) ; <nl> / / noinspection SuspiciousMethodCalls <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> index b10f607 . . 27f6cae 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java <nl> @ @ - 2606 , 6 + 2606 , 7 @ @ public class RealmQueryTests { <nl> Thread thread = new Thread ( <nl> new Runnable ( ) { <nl> @ Override <nl> + @ SuppressWarnings ( " ElementsCountedInLoop " ) <nl> public void run ( ) { <nl> RealmConfiguration realmConfig = configFactory . createConfiguration ( ) ; <nl> Realm realm = Realm . getInstance ( realmConfig ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java <nl> index 4b4b690 . . 2a996bf 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java <nl> @ @ - 229 , 6 + 229 , 7 @ @ public class RealmResultsTests extends CollectionTests { <nl> } <nl> <nl> @ Test <nl> + @ SuppressWarnings ( " ReferenceEquality " ) <nl> public void distinct _ restrictedByPreviousDistinct ( ) { <nl> final long numberOfBlocks = 25 ; <nl> final long numberOfObjects = 10 ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> index f2a3e78 . . e306343 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java <nl> @ @ - 230 , 6 + 230 , 7 @ @ public class RxJavaTests { <nl> final RealmResults < AllTypes > results = realm . where ( AllTypes . class ) . findAll ( ) ; <nl> subscription = results . asObservable ( ) . subscribe ( new Action1 < RealmResults < AllTypes > > ( ) { <nl> @ Override <nl> + @ SuppressWarnings ( " ReferenceEquality " ) <nl> public void call ( RealmResults < AllTypes > rxResults ) { <nl> assertTrue ( rxResults = = results ) ; <nl> subscribedNotified . set ( true ) ; <nl> @ @ - 248 , 6 + 249 , 7 @ @ public class RxJavaTests { <nl> realm . commitTransaction ( ) ; <nl> subscription = list . asObservable ( ) . subscribe ( new Action1 < RealmList < Dog > > ( ) { <nl> @ Override <nl> + @ SuppressWarnings ( " ReferenceEquality " ) <nl> public void call ( RealmList < Dog > rxList ) { <nl> assertTrue ( rxList = = list ) ; <nl> subscribedNotified . set ( true ) ; <nl> @ @ - 265 , 6 + 267 , 7 @ @ public class RxJavaTests { <nl> final RealmResults < DynamicRealmObject > results = dynamicRealm . where ( AllTypes . CLASS _ NAME ) . findAll ( ) ; <nl> subscription = results . asObservable ( ) . subscribe ( new Action1 < RealmResults < DynamicRealmObject > > ( ) { <nl> @ Override <nl> + @ SuppressWarnings ( " ReferenceEquality " ) <nl> public void call ( RealmResults < DynamicRealmObject > rxResults ) { <nl> assertTrue ( rxResults = = results ) ; <nl> subscribedNotified . set ( true ) ; <nl> @ @ - 353 , 6 + 356 , 7 @ @ public class RxJavaTests { <nl> final RealmResults < AllTypes > results = realm . where ( AllTypes . class ) . findAllAsync ( ) ; <nl> subscription = results . asObservable ( ) . subscribe ( new Action1 < RealmResults < AllTypes > > ( ) { <nl> @ Override <nl> + @ SuppressWarnings ( " ReferenceEquality " ) <nl> public void call ( RealmResults < AllTypes > rxResults ) { <nl> assertTrue ( rxResults = = results ) ; <nl> subscribedNotified . set ( true ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> index 5485151 . . 064af91 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java <nl> @ @ - 796 , 6 + 796 , 7 @ @ public class TestHelper { <nl> } <nl> <nl> / / Cleans resource , shutdowns the executor service and throws any background exception . <nl> + @ SuppressWarnings ( " Finally " ) <nl> public static void exitOrThrow ( final ExecutorService executorService , <nl> final CountDownLatch signalTestFinished , <nl> final CountDownLatch signalClosedRealm , <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java <nl> index c06aa13 . . a36ec5b 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java <nl> @ @ - 123 , 7 + 123 , 7 @ @ public class ObserverPairListTests { <nl> assertTrue ( foreachCalled . get ( ) ) ; <nl> } <nl> <nl> - @ SuppressLint ( " UseValueOf " ) <nl> + @ SuppressLint ( { " UseValueOf " , " BoxedPrimitiveConstructor " } ) <nl> @ Test <nl> public void remove ( ) { <nl> TestObserverPair pair = new TestObserverPair ( ONE , testListener ) ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java b / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java <nl> index 704deb9 . . 186040b 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java <nl> @ @ - 92 , 6 + 92 , 7 @ @ public class RunInLooperThread extends TestRealmConfigurationFactory { <nl> private Throwable testException ; <nl> <nl> @ Override <nl> + @ SuppressWarnings ( { " ClassNewInstance " , " Finally " } ) <nl> public void evaluate ( ) throws Throwable { <nl> before ( ) ; <nl> final String threadName = annotation . threadName ( ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> index 7488623 . . 7d85e9a 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java <nl> @ @ - 82 , 7 + 82 , 7 @ @ public class DynamicRealmObject extends RealmObject implements RealmObjectProxy <nl> * @ return the field value . <nl> * @ throws ClassCastException if the field doesn ' t contain a field of the defined return type . <nl> * / <nl> - @ SuppressWarnings ( " unchecked " ) <nl> + @ SuppressWarnings ( { " unchecked " , " TypeParameterUnusedInFormals " } ) <nl> public < E > E get ( String fieldName ) { <nl> proxyState . getRealm $ realm ( ) . checkIfValid ( ) ; <nl> <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> index cb6bddc . . aec0408 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java <nl> @ @ - 337 , 6 + 337 , 7 @ @ public class RealmConfiguration { <nl> * <nl> * @ return { @ code true } if RxJava dependency exist , { @ code false } otherwise . <nl> * / <nl> + @ SuppressWarnings ( " LiteralClassName " ) <nl> static synchronized boolean isRxJavaAvailable ( ) { <nl> if ( rxJavaAvailable = = null ) { <nl> try { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java b / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java <nl> index cdf5b9b . . 1862aec 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java <nl> @ @ - 35 , 6 + 35 , 7 @ @ public class ObjectServerFacade { <nl> static { <nl> / / noinspection TryWithIdenticalCatches <nl> try { <nl> + @ SuppressWarnings ( " LiteralClassName " ) <nl> Class syncFacadeClass = Class . forName ( " io . realm . internal . objectserver . SyncObjectServerFacade " ) ; <nl> / / noinspection unchecked <nl> syncFacade = ( ObjectServerFacade ) syncFacadeClass . getDeclaredConstructor ( ) . newInstance ( ) ;

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java 
 index 3a04a45 . . 568e3b2 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java 
 @ @ - 750 , 7 + 750 , 7 @ @ public class DynamicRealmObjectTests { 
 . setObject ( AllJavaTypes . FIELD _ OBJECT , dObjDynamic ) ; 
 fail ( ) ; 
 } catch ( IllegalArgumentException expected ) { 
 - assertEquals ( expected . getMessage ( ) , " Cannot add an object from another Realm instance . " ) ; 
 + assertEquals ( " Cannot add an object from another Realm instance . " , expected . getMessage ( ) ) ; 
 } 
 
 dynamicRealm . cancelTransaction ( ) ; 
 @ @ - 861 , 8 + 861 , 7 @ @ public class DynamicRealmObjectTests { 
 dynamicRealm . where ( AllJavaTypes . CLASS _ NAME ) . findFirst ( ) . setList ( AllJavaTypes . FIELD _ LIST , list ) ; 
 fail ( ) ; 
 } catch ( IllegalArgumentException expected ) { 
 - assertEquals ( expected . getMessage ( ) , 
 - " Each element in ' list ' must belong to the same Realm instance . " ) ; 
 + assertEquals ( " Each element in ' list ' must belong to the same Realm instance . " , expected . getMessage ( ) ) ; 
 } 
 
 dynamicRealm . cancelTransaction ( ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 index b98b5ed . . 7e8d36d 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 @ @ - 332 , 7 + 332 , 7 @ @ public class DynamicRealmTests { 
 } ) ; 
 } catch ( RuntimeException ignored ) { 
 / / Ensures that we pass a valuable error message to the logger for developers . 
 - assertEquals ( testLogger . message , " Could not cancel transaction , not currently in a transaction . " ) ; 
 + assertEquals ( " Could not cancel transaction , not currently in a transaction . " , testLogger . message ) ; 
 } finally { 
 RealmLog . remove ( testLogger ) ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java 
 index 410ce96 . . 252dc08 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmCacheTests . java 
 @ @ - 115 , 7 + 115 , 7 @ @ public class RealmCacheTests { 
 Realm . getInstance ( configB ) ; / / Tries to open with key 2 . 
 fail ( ) ; 
 } catch ( RealmFileException expected ) { 
 - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . ACCESS _ ERROR ) ; 
 + assertEquals ( RealmFileException . Kind . ACCESS _ ERROR , expected . getKind ( ) ) ; 
 / / Deletes Realm so key 2 works . This should work as a Realm shouldn ' t be cached 
 / / if initialization failed . 
 assertTrue ( Realm . deleteRealm ( configA ) ) ; 
 @ @ - 164 , 7 + 164 , 7 @ @ public class RealmCacheTests { 
 Realm . getInstance ( wrongConfig ) ; 
 fail ( ) ; 
 } catch ( RealmFileException expected ) { 
 - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . ACCESS _ ERROR ) ; 
 + assertEquals ( RealmFileException . Kind . ACCESS _ ERROR , expected . getKind ( ) ) ; 
 } 
 
 / / Tries again with proper key . 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java 
 index f5ecd5c . . 8f99d80 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmConfigurationTests . java 
 @ @ - 905 , 7 + 905 , 7 @ @ public class RealmConfigurationTests { 
 Realm . getInstance ( configuration ) ; 
 fail ( ) ; 
 } catch ( RealmFileException expected ) { 
 - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . ACCESS _ ERROR ) ; 
 + assertEquals ( RealmFileException . Kind . ACCESS _ ERROR , expected . getKind ( ) ) ; 
 } 
 } 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmInMemoryTest . java b / realm / realm - library / src / androidTest / java / io / realm / RealmInMemoryTest . java 
 index 1b41af1 . . 9f7f261 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmInMemoryTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmInMemoryTest . java 
 @ @ - 81 , 14 + 81 , 14 @ @ public class RealmInMemoryTest { 
 dog . setName ( " DinoDog " ) ; 
 testRealm . commitTransaction ( ) ; 
 
 - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 1 ) ; 
 - assertEquals ( testRealm . where ( Dog . class ) . findFirst ( ) . getName ( ) , " DinoDog " ) ; 
 + assertEquals ( 1 , testRealm . where ( Dog . class ) . count ( ) ) ; 
 + assertEquals ( " DinoDog " , testRealm . where ( Dog . class ) . findFirst ( ) . getName ( ) ) ; 
 
 testRealm . close ( ) ; 
 / / After all references to the in - mem - realm closed , 
 / / in - mem - realm with same identifier should create a fresh new instance . 
 testRealm = Realm . getInstance ( inMemConf ) ; 
 - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 0 ) ; 
 + assertEquals ( 0 , testRealm . where ( Dog . class ) . count ( ) ) ; 
 } 
 
 / / Two in - memory Realms with different names should not affect each other . 
 @ @ - 110 , 12 + 110 , 12 @ @ public class RealmInMemoryTest { 
 dog2 . setName ( " UFODog " ) ; 
 testRealm2 . commitTransaction ( ) ; 
 
 - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 1 ) ; 
 + assertEquals ( 1 , testRealm . where ( Dog . class ) . count ( ) ) ; 
 / / noinspection ConstantConditions 
 - assertEquals ( testRealm . where ( Dog . class ) . findFirst ( ) . getName ( ) , " DinoDog " ) ; 
 - assertEquals ( testRealm2 . where ( Dog . class ) . count ( ) , 1 ) ; 
 + assertEquals ( " DinoDog " , testRealm . where ( Dog . class ) . findFirst ( ) . getName ( ) ) ; 
 + assertEquals ( 1 , testRealm2 . where ( Dog . class ) . count ( ) ) ; 
 / / noinspection ConstantConditions 
 - assertEquals ( testRealm2 . where ( Dog . class ) . findFirst ( ) . getName ( ) , " UFODog " ) ; 
 + assertEquals ( " UFODog " , testRealm2 . where ( Dog . class ) . findFirst ( ) . getName ( ) ) ; 
 
 testRealm2 . close ( ) ; 
 } 
 @ @ - 161 , 13 + 161 , 13 @ @ public class RealmInMemoryTest { 
 / / Tests a normal Realm file . 
 testRealm . writeCopyTo ( new File ( configFactory . getRoot ( ) , fileName ) ) ; 
 Realm onDiskRealm = Realm . getInstance ( conf ) ; 
 - assertEquals ( onDiskRealm . where ( Dog . class ) . count ( ) , 1 ) ; 
 + assertEquals ( 1 , onDiskRealm . where ( Dog . class ) . count ( ) ) ; 
 onDiskRealm . close ( ) ; 
 
 / / Tests a encrypted Realm file . 
 testRealm . writeEncryptedCopyTo ( new File ( configFactory . getRoot ( ) , encFileName ) , key ) ; 
 onDiskRealm = Realm . getInstance ( encConf ) ; 
 - assertEquals ( onDiskRealm . where ( Dog . class ) . count ( ) , 1 ) ; 
 + assertEquals ( 1 , onDiskRealm . where ( Dog . class ) . count ( ) ) ; 
 onDiskRealm . close ( ) ; 
 / / Tests with a wrong key to see if it fails as expected . 
 try { 
 @ @ - 178 , 7 + 178 , 7 @ @ public class RealmInMemoryTest { 
 Realm . getInstance ( wrongKeyConf ) ; 
 fail ( " Realm . getInstance should fail with RealmFileException " ) ; 
 } catch ( RealmFileException expected ) { 
 - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . ACCESS _ ERROR ) ; 
 + assertEquals ( RealmFileException . Kind . ACCESS _ ERROR , expected . getKind ( ) ) ; 
 } 
 } 
 
 @ @ - 207 , 7 + 207 , 7 @ @ public class RealmInMemoryTest { 
 realm . commitTransaction ( ) ; 
 
 try { 
 - assertEquals ( realm . where ( Dog . class ) . count ( ) , 1 ) ; 
 + assertEquals ( 1 , realm . where ( Dog . class ) . count ( ) ) ; 
 } catch ( AssertionFailedError afe ) { 
 threadError [ 0 ] = afe ; 
 realm . close ( ) ; 
 @ @ - 237 , 7 + 237 , 7 @ @ public class RealmInMemoryTest { 
 
 / / Refreshes will be ran in the next loop , manually refreshes it here . 
 testRealm . waitForChange ( ) ; 
 - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 1 ) ; 
 + assertEquals ( 1 , testRealm . where ( Dog . class ) . count ( ) ) ; 
 
 / / Step 3 . 
 / / Releases the main thread Realm reference , and the worker thread holds the reference still . 
 @ @ - 246 , 7 + 246 , 7 @ @ public class RealmInMemoryTest { 
 / / Step 4 . 
 / / Creates a new Realm reference in main thread and checks the data . 
 testRealm = Realm . getInstance ( inMemConf ) ; 
 - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 1 ) ; 
 + assertEquals ( 1 , testRealm . where ( Dog . class ) . count ( ) ) ; 
 testRealm . close ( ) ; 
 
 / / Let the worker thread continue . 
 @ @ - 258 , 6 + 258 , 6 @ @ public class RealmInMemoryTest { 
 
 / / Since all previous Realm instances has been closed before , below will create a fresh new in - mem - realm instance . 
 testRealm = Realm . getInstance ( inMemConf ) ; 
 - assertEquals ( testRealm . where ( Dog . class ) . count ( ) , 0 ) ; 
 + assertEquals ( 0 , testRealm . where ( Dog . class ) . count ( ) ) ; 
 } 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmInterprocessTest . java b / realm / realm - library / src / androidTest / java / io / realm / RealmInterprocessTest . java 
 index 76c5c4c . . 56649a1 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmInterprocessTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmInterprocessTest . java 
 @ @ - 282 , 7 + 282 , 7 @ @ public class RealmInterprocessTest extends AndroidTestCase { 
 public void run ( ) { 
 / / Step 1 
 testRealm = Realm . getInstance ( new RealmConfiguration . Builder ( getContext ( ) ) . build ( ) ) ; 
 - assertEquals ( testRealm . where ( AllTypes . class ) . count ( ) , 0 ) ; 
 + assertEquals ( 0 , testRealm . where ( AllTypes . class ) . count ( ) ) ; 
 testRealm . beginTransaction ( ) ; 
 testRealm . createObject ( AllTypes . class ) ; 
 testRealm . commitTransaction ( ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 index d6ca5ad . . ae80d7b 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 @ @ - 213 , 7 + 213 , 7 @ @ public class RealmTests { 
 . build ( ) ) ; 
 fail ( ) ; 
 } catch ( RealmFileException expected ) { 
 - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . PERMISSION _ DENIED ) ; 
 + assertEquals ( RealmFileException . Kind . PERMISSION _ DENIED , expected . getKind ( ) ) ; 
 } 
 } 
 
 @ @ - 230 , 7 + 230 , 7 @ @ public class RealmTests { 
 Realm . getInstance ( new RealmConfiguration . Builder ( context ) . directory ( folder ) . name ( REALM _ FILE ) . build ( ) ) ; 
 fail ( ) ; 
 } catch ( RealmFileException expected ) { 
 - assertEquals ( expected . getKind ( ) , RealmFileException . Kind . PERMISSION _ DENIED ) ; 
 + assertEquals ( RealmFileException . Kind . PERMISSION _ DENIED , expected . getKind ( ) ) ; 
 } 
 } 
 
 @ @ - 708 , 7 + 708 , 7 @ @ public class RealmTests { 
 } ) ; 
 } catch ( RuntimeException ignored ) { 
 / / Ensures that we pass a valuable error message to the logger for developers . 
 - assertEquals ( testLogger . message , " Could not cancel transaction , not currently in a transaction . " ) ; 
 + assertEquals ( " Could not cancel transaction , not currently in a transaction . " , testLogger . message ) ; 
 } finally { 
 RealmLog . remove ( testLogger ) ; 
 } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 index aa4c01f . . 86067e4 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / TypeBasedNotificationsTests . java 
 @ @ - 877 , 7 + 877 , 7 @ @ public class TypeBasedNotificationsTests { 
 looperThread . postRunnable ( new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 - assertEquals ( typebasedCommitInvocations . get ( ) , 1 ) ; 
 + assertEquals ( 1 , typebasedCommitInvocations . get ( ) ) ; 
 looperThread . testComplete ( ) ; 
 } 
 } ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / Thread . java b / realm / realm - library / src / androidTest / java / io / realm / entities / Thread . java 
 index 8bad4e5 . . 5509f2f 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / Thread . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / Thread . java 
 @ @ - 18 , 6 + 18 , 7 @ @ package io . realm . entities ; 
 
 import io . realm . RealmObject ; 
 
 + @ SuppressWarnings ( " JavaLangClash " ) 
 public class Thread extends RealmObject { 
 private String name ; 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / entities / conflict / String . java b / realm / realm - library / src / androidTest / java / io / realm / entities / conflict / String . java 
 index 7b57935 . . e6d10a2 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / entities / conflict / String . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / entities / conflict / String . java 
 @ @ - 19 , 6 + 19 , 7 @ @ package io . realm . entities . conflict ; 
 import io . realm . RealmList ; 
 import io . realm . RealmObject ; 
 
 + @ SuppressWarnings ( " JavaLangClash " ) 
 public class String extends RealmObject { 
 public String str ; 
 public RealmList < String > strList ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java 
 index 673bff1 . . 0457739 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / CollectionTests . java 
 @ @ - 135 , 10 + 135 , 10 @ @ public class CollectionTests { 
 SortDescriptor distinctDescriptor = SortDescriptor . getInstanceForDistinct ( null , table , " firstName " ) ; 
 Collection collection = new Collection ( sharedRealm , table . where ( ) , null , distinctDescriptor ) ; 
 
 - assertEquals ( collection . size ( ) , 3 ) ; 
 - assertEquals ( collection . getUncheckedRow ( 0 ) . getString ( 0 ) , " John " ) ; 
 - assertEquals ( collection . getUncheckedRow ( 1 ) . getString ( 0 ) , " Erik " ) ; 
 - assertEquals ( collection . getUncheckedRow ( 2 ) . getString ( 0 ) , " Henry " ) ; 
 + assertEquals ( 3 , collection . size ( ) ) ; 
 + assertEquals ( " John " , collection . getUncheckedRow ( 0 ) . getString ( 0 ) ) ; 
 + assertEquals ( " Erik " , collection . getUncheckedRow ( 1 ) . getString ( 0 ) ) ; 
 + assertEquals ( " Henry " , collection . getUncheckedRow ( 2 ) . getString ( 0 ) ) ; 
 } 
 
 
 @ @ - 192 , 8 + 192 , 8 @ @ public class CollectionTests { 
 assertEquals ( 2 , collection . size ( ) ) ; 
 assertEquals ( 2 , collection2 . size ( ) ) ; 
 
 - assertEquals ( collection2 . getUncheckedRow ( 0 ) . getLong ( 2 ) , 3 ) ; 
 - assertEquals ( collection2 . getUncheckedRow ( 1 ) . getLong ( 2 ) , 4 ) ; 
 + assertEquals ( 3 , collection2 . getUncheckedRow ( 0 ) . getLong ( 2 ) ) ; 
 + assertEquals ( 4 , collection2 . getUncheckedRow ( 1 ) . getLong ( 2 ) ) ; 
 } 
 
 @ Test 
 @ @ - 366 , 7 + 366 , 7 @ @ public class CollectionTests { 
 
 final Collection collection = new Collection ( sharedRealm , table . where ( ) ) ; 
 looperThread . keepStrongReference ( collection ) ; 
 - assertEquals ( collection . size ( ) , 4 ) ; / / Trigger the query to run . 
 + assertEquals ( 4 , collection . size ( ) ) ; / / Trigger the query to run . 
 collection . addListener ( collection , new RealmChangeListener < Collection > ( ) { 
 @ Override 
 public void onChange ( Collection collection1 ) { 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / JNIRowTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / JNIRowTest . java 
 index 93bf833 . . 371f8f2 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / JNIRowTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / JNIRowTest . java 
 @ @ - 134 , 7 + 134 , 7 @ @ public class JNIRowTest { 
 UncheckedRow row = table . getUncheckedRow ( rowIndex ) ; 
 
 row . setString ( colStringIndex , " test " ) ; 
 - assertEquals ( row . getString ( colStringIndex ) , " test " ) ; 
 + assertEquals ( " test " , row . getString ( colStringIndex ) ) ; 
 row . setNull ( colStringIndex ) ; 
 assertNull ( row . getString ( colStringIndex ) ) ; 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java 
 index a36ec5b . . fb77df3 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java 
 @ @ - 39 , 8 + 39 , 8 @ @ import static junit . framework . Assert . fail ; 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class ObserverPairListTests { 
 
 - private static class TestListener < Integer > { 
 - void onChange ( Integer integer ) { 
 + private static class TestListener < T > { 
 + void onChange ( T integer ) { 
 } 
 } 
 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / android / JsonUtilsTest . java b / realm / realm - library / src / androidTest / java / io / realm / internal / android / JsonUtilsTest . java 
 index 42958d9 . . 9d8a431 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / android / JsonUtilsTest . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / android / JsonUtilsTest . java 
 @ @ - 48 , 7 + 48 , 7 @ @ public class JsonUtilsTest extends AndroidTestCase { 
 String jsonDate = " / Date ( 1198908717056 ) / " ; / / 2007 - 12 - 27T23 : 11 : 57 . 056 
 Date output = JsonUtils . stringToDate ( jsonDate ) ; 
 
 - assertEquals ( output . getTime ( ) , 1198908717056L ) ; 
 + assertEquals ( 1198908717056L , output . getTime ( ) ) ; 
 } 
 
 public void testNegativeLongDate ( ) { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / OutOfMemoryError . java b / realm / realm - library / src / main / java / io / realm / internal / OutOfMemoryError . java 
 index 88b664f . . f74c99e 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / OutOfMemoryError . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / OutOfMemoryError . java 
 @ @ - 21 , 7 + 21 , 7 @ @ package io . realm . internal ; 
 * Can be thrown when Realm runs out of memory . 
 * A JVM that catches this will be able to cleanup , e . g . release other resources to avoid also running out of memory . 
 * / 
 - @ SuppressWarnings ( " serial " ) 
 + @ SuppressWarnings ( { " serial " , " JavaLangClash " } ) 
 @ Keep 
 public class OutOfMemoryError extends Error { 
 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 index 1a086c3 . . 4620330 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 @ @ - 52 , 8 + 52 , 6 @ @ import static org . junit . Assert . assertEquals ; 
 public class ProcessCommitTests extends BaseIntegrationTest { 
 
 @ Rule 
 - public RunInLooperThread looperThread = new RunInLooperThread ( ) ; 
 - @ Rule 
 public RunWithRemoteService remoteService = new RunWithRemoteService ( ) ; 
 
 @ Before

NEAREST DIFF:
diff - - git a / realm / build . gradle b / realm / build . gradle 
 index 120340d . . 53a4573 100644 
 - - - a / realm / build . gradle 
 + + + b / realm / build . gradle 
 @ @ - 3 , 6 + 3 , 7 @ @ buildscript { 
 mavenLocal ( ) 
 jcenter ( ) 
 maven { url ' https : / / jitpack . io ' } 
 + maven { url " https : / / plugins . gradle . org / m2 / " } 
 } 
 
 dependencies { 
 @ @ - 15 , 6 + 16 , 7 @ @ buildscript { 
 classpath ' org . jfrog . buildinfo : build - info - extractor - gradle : 3 . 1 . 1 ' 
 classpath ' com . jfrog . bintray . gradle : gradle - bintray - plugin : 1 . 6 ' 
 classpath " io . realm : realm - transformer : $ { file ( ' . . / version . txt ' ) . text . trim ( ) } " 
 + classpath ' net . ltgt . gradle : gradle - errorprone - plugin : 0 . 0 . 9 ' 
 } 
 } 
 
 diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index b7b5097 . . 208d17e 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 9 , 6 + 9 , 7 @ @ apply plugin : ' pmd ' 
 apply plugin : ' checkstyle ' 
 apply plugin : ' com . github . kt3k . coveralls ' 
 apply plugin : ' de . undercouch . download ' 
 + apply plugin : ' net . ltgt . errorprone ' 
 
 def properties = new Properties ( ) 
 properties . load ( new FileInputStream ( " $ { projectDir } / . . / . . / dependencies . list " ) ) 
 @ @ - 113 , 6 + 114 , 12 @ @ android { 
 } 
 } 
 
 + project . afterEvaluate { 
 + tasks . withType ( JavaCompile ) { 
 + options . compilerArgs < < ' - Werror ' 
 + } 
 + } 
 + 
 coveralls . jacocoReportPath = " $ { buildDir } / reports / coverage / debug / report . xml " 
 
 import io . realm . transformer . RealmTransformer 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java 
 index e0208b4 . . fac6bd2 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmObjectTests . java 
 @ @ - 128 , 7 + 128 , 7 @ @ public class DynamicRealmObjectTests { 
 HASH _ CODE , EQUALS , TO _ STRING , 
 } 
 
 - @ SuppressWarnings ( { " ResultOfMethodCallIgnored " , " EqualsWithItself " } ) 
 + @ SuppressWarnings ( { " ResultOfMethodCallIgnored " , " EqualsWithItself " , " SelfEquals " } ) 
 private static void callThreadConfinedMethod ( DynamicRealmObject obj , ThreadConfinedMethods method ) { 
 switch ( method ) { 
 case GET _ BOOLEAN : obj . getBoolean ( AllJavaTypes . FIELD _ BOOLEAN ) ; break ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java 
 index 2278bf2 . . 1ea3651 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / IOSRealmTests . java 
 @ @ - 146 , 6 + 146 , 7 @ @ public class IOSRealmTests { 
 } 
 
 @ Test 
 + @ SuppressWarnings ( " ConstantOverflow " ) 
 public void iOSDataTypesMinimumValues ( ) throws IOException { 
 for ( String iosVersion : IOS _ VERSIONS ) { 
 configFactory . copyRealmFromAssets ( context , 
 @ @ - 167 , 6 + 168 , 7 @ @ public class IOSRealmTests { 
 } 
 
 @ Test 
 + @ SuppressWarnings ( " ConstantOverflow " ) 
 public void iOSDataTypesMaximumValues ( ) throws IOException { 
 for ( String iosVersion : IOS _ VERSIONS ) { 
 configFactory . copyRealmFromAssets ( context , 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmCollectionTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmCollectionTests . java 
 index f72137c . . 7e3c7a9 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmCollectionTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmCollectionTests . java 
 @ @ - 235 , 6 + 235 , 7 @ @ public class RealmCollectionTests extends CollectionTests { 
 } 
 
 @ Test 
 + @ SuppressWarnings ( " CollectionIncompatibleType " ) 
 public void contains _ wrongType ( ) { 
 / / noinspection SuspiciousMethodCalls 
 assertFalse ( collection . contains ( new Dog ( ) ) ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java 
 index cd4e057 . . 78fdc0e 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmListTests . java 
 @ @ - 591 , 6 + 591 , 7 @ @ public class RealmListTests extends CollectionTests { 
 } 
 
 @ Test 
 + @ SuppressWarnings ( " CollectionIncompatibleType " ) 
 public void removeAll _ managedMode _ wrongClass ( ) { 
 realm . beginTransaction ( ) ; 
 / / noinspection SuspiciousMethodCalls 
 @ @ - 598 , 6 + 599 , 7 @ @ public class RealmListTests extends CollectionTests { 
 } 
 
 @ Test 
 + @ SuppressWarnings ( " CollectionIncompatibleType " ) 
 public void removeAll _ unmanaged _ wrongClass ( ) { 
 RealmList < Dog > list = createUnmanagedDogList ( ) ; 
 / / noinspection SuspiciousMethodCalls 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 index b10f607 . . 27f6cae 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmQueryTests . java 
 @ @ - 2606 , 6 + 2606 , 7 @ @ public class RealmQueryTests { 
 Thread thread = new Thread ( 
 new Runnable ( ) { 
 @ Override 
 + @ SuppressWarnings ( " ElementsCountedInLoop " ) 
 public void run ( ) { 
 RealmConfiguration realmConfig = configFactory . createConfiguration ( ) ; 
 Realm realm = Realm . getInstance ( realmConfig ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java 
 index 4b4b690 . . 2a996bf 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmResultsTests . java 
 @ @ - 229 , 6 + 229 , 7 @ @ public class RealmResultsTests extends CollectionTests { 
 } 
 
 @ Test 
 + @ SuppressWarnings ( " ReferenceEquality " ) 
 public void distinct _ restrictedByPreviousDistinct ( ) { 
 final long numberOfBlocks = 25 ; 
 final long numberOfObjects = 10 ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 index f2a3e78 . . e306343 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RxJavaTests . java 
 @ @ - 230 , 6 + 230 , 7 @ @ public class RxJavaTests { 
 final RealmResults < AllTypes > results = realm . where ( AllTypes . class ) . findAll ( ) ; 
 subscription = results . asObservable ( ) . subscribe ( new Action1 < RealmResults < AllTypes > > ( ) { 
 @ Override 
 + @ SuppressWarnings ( " ReferenceEquality " ) 
 public void call ( RealmResults < AllTypes > rxResults ) { 
 assertTrue ( rxResults = = results ) ; 
 subscribedNotified . set ( true ) ; 
 @ @ - 248 , 6 + 249 , 7 @ @ public class RxJavaTests { 
 realm . commitTransaction ( ) ; 
 subscription = list . asObservable ( ) . subscribe ( new Action1 < RealmList < Dog > > ( ) { 
 @ Override 
 + @ SuppressWarnings ( " ReferenceEquality " ) 
 public void call ( RealmList < Dog > rxList ) { 
 assertTrue ( rxList = = list ) ; 
 subscribedNotified . set ( true ) ; 
 @ @ - 265 , 6 + 267 , 7 @ @ public class RxJavaTests { 
 final RealmResults < DynamicRealmObject > results = dynamicRealm . where ( AllTypes . CLASS _ NAME ) . findAll ( ) ; 
 subscription = results . asObservable ( ) . subscribe ( new Action1 < RealmResults < DynamicRealmObject > > ( ) { 
 @ Override 
 + @ SuppressWarnings ( " ReferenceEquality " ) 
 public void call ( RealmResults < DynamicRealmObject > rxResults ) { 
 assertTrue ( rxResults = = results ) ; 
 subscribedNotified . set ( true ) ; 
 @ @ - 353 , 6 + 356 , 7 @ @ public class RxJavaTests { 
 final RealmResults < AllTypes > results = realm . where ( AllTypes . class ) . findAllAsync ( ) ; 
 subscription = results . asObservable ( ) . subscribe ( new Action1 < RealmResults < AllTypes > > ( ) { 
 @ Override 
 + @ SuppressWarnings ( " ReferenceEquality " ) 
 public void call ( RealmResults < AllTypes > rxResults ) { 
 assertTrue ( rxResults = = results ) ; 
 subscribedNotified . set ( true ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 index 5485151 . . 064af91 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / TestHelper . java 
 @ @ - 796 , 6 + 796 , 7 @ @ public class TestHelper { 
 } 
 
 / / Cleans resource , shutdowns the executor service and throws any background exception . 
 + @ SuppressWarnings ( " Finally " ) 
 public static void exitOrThrow ( final ExecutorService executorService , 
 final CountDownLatch signalTestFinished , 
 final CountDownLatch signalClosedRealm , 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java b / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java 
 index c06aa13 . . a36ec5b 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / internal / ObserverPairListTests . java 
 @ @ - 123 , 7 + 123 , 7 @ @ public class ObserverPairListTests { 
 assertTrue ( foreachCalled . get ( ) ) ; 
 } 
 
 - @ SuppressLint ( " UseValueOf " ) 
 + @ SuppressLint ( { " UseValueOf " , " BoxedPrimitiveConstructor " } ) 
 @ Test 
 public void remove ( ) { 
 TestObserverPair pair = new TestObserverPair ( ONE , testListener ) ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java b / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java 
 index 704deb9 . . 186040b 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / rule / RunInLooperThread . java 
 @ @ - 92 , 6 + 92 , 7 @ @ public class RunInLooperThread extends TestRealmConfigurationFactory { 
 private Throwable testException ; 
 
 @ Override 
 + @ SuppressWarnings ( { " ClassNewInstance " , " Finally " } ) 
 public void evaluate ( ) throws Throwable { 
 before ( ) ; 
 final String threadName = annotation . threadName ( ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 index 7488623 . . 7d85e9a 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 + + + b / realm / realm - library / src / main / java / io / realm / DynamicRealmObject . java 
 @ @ - 82 , 7 + 82 , 7 @ @ public class DynamicRealmObject extends RealmObject implements RealmObjectProxy 
 * @ return the field value . 
 * @ throws ClassCastException if the field doesn ' t contain a field of the defined return type . 
 * / 
 - @ SuppressWarnings ( " unchecked " ) 
 + @ SuppressWarnings ( { " unchecked " , " TypeParameterUnusedInFormals " } ) 
 public < E > E get ( String fieldName ) { 
 proxyState . getRealm $ realm ( ) . checkIfValid ( ) ; 
 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 index cb6bddc . . aec0408 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmConfiguration . java 
 @ @ - 337 , 6 + 337 , 7 @ @ public class RealmConfiguration { 
 * 
 * @ return { @ code true } if RxJava dependency exist , { @ code false } otherwise . 
 * / 
 + @ SuppressWarnings ( " LiteralClassName " ) 
 static synchronized boolean isRxJavaAvailable ( ) { 
 if ( rxJavaAvailable = = null ) { 
 try { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java b / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java 
 index cdf5b9b . . 1862aec 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / ObjectServerFacade . java 
 @ @ - 35 , 6 + 35 , 7 @ @ public class ObjectServerFacade { 
 static { 
 / / noinspection TryWithIdenticalCatches 
 try { 
 + @ SuppressWarnings ( " LiteralClassName " ) 
 Class syncFacadeClass = Class . forName ( " io . realm . internal . objectserver . SyncObjectServerFacade " ) ; 
 / / noinspection unchecked 
 syncFacade = ( ObjectServerFacade ) syncFacadeClass . getDeclaredConstructor ( ) . newInstance ( ) ;
