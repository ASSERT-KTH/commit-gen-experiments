BLEU SCORE: 0.1597357760615681

TEST MSG: Update to use MutableRealmIntegers
GENERATED MSG: Update ObjectServerExample

TEST DIFF (one line): diff - - git a / examples / objectServerExample / README . md b / examples / objectServerExample / README . md <nl> index f9ec43a . . d3c8558 100644 <nl> - - - a / examples / objectServerExample / README . md <nl> + + + b / examples / objectServerExample / README . md <nl> @ @ - 1 , 14 + 1 , 20 @ @ <nl> # Using this example <nl> <nl> - This example shows a minimal example on how to connect to and use the <nl> + This example is a minimal demonstration of how to connect to and use the <nl> Realm Object Server to synchronize changes between devices . <nl> <nl> - The example will assume that the Object Server is running on the machine <nl> - building the example and the IP address will automatically be injected <nl> - into the build configuration . <nl> + The example assumes that the Object Server is running on the machine <nl> + that built the application : The build machine IP address is automatically <nl> + injected into the build configuration . <nl> <nl> - If this for some reasons does not work , please insert the IP Address into <nl> - the ` build . gradle ` accordingly . <nl> + To use a different ObjectServer , simply put the server IP Address into <nl> + the ` build . gradle ` , as indicated in the comments , on the lines like this : <nl> + <nl> + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " <nl> + <nl> + For instance : <nl> + <nl> + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " 192 . 168 . 0 . 1 " <nl> <nl> To read more about the Realm Object Server and how to deploy it , see <nl> https : / / realm . io / news / introducing - realm - mobile - platform / <nl> diff - - git a / examples / objectServerExample / build . gradle b / examples / objectServerExample / build . gradle <nl> index 8f6646b . . 7dc1ce0 100644 <nl> - - - a / examples / objectServerExample / build . gradle <nl> + + + b / examples / objectServerExample / build . gradle <nl> @ @ - 29 , 7 + 29 , 7 @ @ android { <nl> defaultConfig { <nl> applicationId ' io . realm . examples . objectserver ' <nl> targetSdkVersion rootProject . sdkVersion <nl> - minSdkVersion 15 <nl> + minSdkVersion 16 <nl> versionCode 1 <nl> versionName " 1 . 0 " <nl> } <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> index 536b24e . . 8fa975c 100644 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> @ @ - 29 , 6 + 29 , 8 @ @ import android . widget . TextView ; <nl> import java . util . Locale ; <nl> import java . util . concurrent . atomic . AtomicBoolean ; <nl> <nl> + import javax . annotation . Nonnull ; <nl> + <nl> import butterknife . BindView ; <nl> import butterknife . ButterKnife ; <nl> import butterknife . OnClick ; <nl> @ @ - 45 , 36 + 47 , 35 @ @ import io . realm . examples . objectserver . model . CRDTCounter ; <nl> import me . zhanghai . android . materialprogressbar . MaterialProgressBar ; <nl> <nl> public class CounterActivity extends AppCompatActivity { <nl> - <nl> private static final String REALM _ URL = " realm : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / ~ / default " ; <nl> <nl> - private Realm realm ; <nl> - private SyncSession session ; <nl> - private CRDTCounter counter ; <nl> - private SyncUser user ; <nl> - private AtomicBoolean downloadingChanges = new AtomicBoolean ( false ) ; <nl> - private AtomicBoolean uploadingChanges = new AtomicBoolean ( false ) ; <nl> - private ProgressListener downloadListener = new ProgressListener ( ) { <nl> + private final ProgressListener downloadListener = new ProgressListener ( ) { <nl> @ Override <nl> - public void onChange ( Progress progress ) { <nl> + public void onChange ( @ Nonnull Progress progress ) { <nl> downloadingChanges . set ( ! progress . isTransferComplete ( ) ) ; <nl> runOnUiThread ( updateProgressBar ) ; <nl> } <nl> } ; <nl> - private ProgressListener uploadListener = new ProgressListener ( ) { <nl> + private final ProgressListener uploadListener = new ProgressListener ( ) { <nl> @ Override <nl> - public void onChange ( Progress progress ) { <nl> + public void onChange ( @ Nonnull Progress progress ) { <nl> uploadingChanges . set ( ! progress . isTransferComplete ( ) ) ; <nl> runOnUiThread ( updateProgressBar ) ; <nl> } <nl> } ; <nl> - private Runnable updateProgressBar = new Runnable ( ) { <nl> + private final Runnable updateProgressBar = new Runnable ( ) { <nl> @ Override <nl> public void run ( ) { <nl> updateProgressBar ( downloadingChanges . get ( ) , uploadingChanges . get ( ) ) ; <nl> } <nl> } ; <nl> <nl> + private final AtomicBoolean downloadingChanges = new AtomicBoolean ( false ) ; <nl> + private final AtomicBoolean uploadingChanges = new AtomicBoolean ( false ) ; <nl> + <nl> + private Realm realm ; <nl> + private SyncSession session ; <nl> + private SyncUser user ; <nl> <nl> @ BindView ( R . id . text _ counter ) TextView counterView ; <nl> @ BindView ( R . id . progressbar ) MaterialProgressBar progressBar ; <nl> @ @ - 84 , 49 + 85 , 40 @ @ public class CounterActivity extends AppCompatActivity { <nl> super . onCreate ( savedInstanceState ) ; <nl> setContentView ( R . layout . activity _ counter ) ; <nl> ButterKnife . bind ( this ) ; <nl> - <nl> - / / Check if we have a valid user , otherwise redirect to login <nl> - if ( SyncUser . currentUser ( ) = = null ) { <nl> - gotoLoginActivity ( ) ; <nl> - } <nl> } <nl> <nl> @ Override <nl> protected void onStart ( ) { <nl> super . onStart ( ) ; <nl> - user = SyncUser . currentUser ( ) ; <nl> - if ( user ! = null ) { <nl> - / / Create a RealmConfiguration for our user <nl> - SyncConfiguration config = new SyncConfiguration . Builder ( user , REALM _ URL ) <nl> - . initialData ( new Realm . Transaction ( ) { <nl> - @ Override <nl> - public void execute ( Realm realm ) { <nl> - realm . createObject ( CRDTCounter . class , 1 ) ; <nl> - } <nl> - } ) <nl> - . build ( ) ; <nl> - <nl> - / / This will automatically sync all changes in the background for as long as the Realm is open <nl> - realm = Realm . getInstance ( config ) ; <nl> - <nl> - counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; <nl> - counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { <nl> - @ Override <nl> - public void onChange ( CRDTCounter counter ) { <nl> - if ( counter . isValid ( ) ) { <nl> - counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; <nl> - } else { <nl> - counterView . setText ( " - " ) ; <nl> + user = getLoggedInUser ( ) ; <nl> + if ( user = = null ) { return ; } <nl> + <nl> + / / Create a RealmConfiguration for our user <nl> + SyncConfiguration config = new SyncConfiguration . Builder ( user , REALM _ URL ) <nl> + . initialData ( new Realm . Transaction ( ) { <nl> + @ Override <nl> + public void execute ( @ Nonnull Realm realm ) { <nl> + realm . createObject ( CRDTCounter . class , user . getIdentity ( ) ) ; <nl> } <nl> - } <nl> - } ) ; <nl> - counterView . setText ( " 0 " ) ; <nl> + } ) <nl> + . build ( ) ; <nl> <nl> - / / Setup progress listeners for indeterminate progress bars <nl> - session = SyncManager . getSession ( config ) ; <nl> - session . addDownloadProgressListener ( ProgressMode . INDEFINITELY , downloadListener ) ; <nl> - session . addUploadProgressListener ( ProgressMode . INDEFINITELY , uploadListener ) ; <nl> - } <nl> + / / This will automatically sync all changes in the background for as long as the Realm is open <nl> + realm = Realm . getInstance ( config ) ; <nl> + <nl> + counterView . setText ( " - " ) ; <nl> + CRDTCounter counter = realm . where ( CRDTCounter . class ) . equalTo ( " name " , user . getIdentity ( ) ) . findFirstAsync ( ) ; <nl> + counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { <nl> + @ Override <nl> + public void onChange ( @ Nonnull CRDTCounter counter ) { <nl> + counterView . setText ( ( ! counter . isValid ( ) ) ? " - " : String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; <nl> + } <nl> + } ) ; <nl> + <nl> + / / Setup progress listeners for indeterminate progress bars <nl> + session = SyncManager . getSession ( config ) ; <nl> + session . addDownloadProgressListener ( ProgressMode . INDEFINITELY , downloadListener ) ; <nl> + session . addUploadProgressListener ( ProgressMode . INDEFINITELY , uploadListener ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 135 , 17 + 127 , 12 @ @ public class CounterActivity extends AppCompatActivity { <nl> if ( session ! = null ) { <nl> session . removeProgressListener ( downloadListener ) ; <nl> session . removeProgressListener ( uploadListener ) ; <nl> + session = null ; <nl> } <nl> closeRealm ( ) ; <nl> user = null ; <nl> } <nl> <nl> - private void closeRealm ( ) { <nl> - if ( realm ! = null & & ! realm . isClosed ( ) ) { <nl> - realm . close ( ) ; <nl> - } <nl> - } <nl> - <nl> @ Override <nl> public boolean onCreateOptionsMenu ( Menu menu ) { <nl> getMenuInflater ( ) . inflate ( R . menu . menu _ counter , menu ) ; <nl> @ @ - 158 , 7 + 145 , 7 @ @ public class CounterActivity extends AppCompatActivity { <nl> case R . id . action _ logout : <nl> closeRealm ( ) ; <nl> user . logout ( ) ; <nl> - gotoLoginActivity ( ) ; <nl> + user = getLoggedInUser ( ) ; <nl> return true ; <nl> <nl> default : <nl> @ @ - 194 , 18 + 181 , 34 @ @ public class CounterActivity extends AppCompatActivity { <nl> <nl> private void adjustCounter ( final int adjustment ) { <nl> / / A synchronized Realm can get written to at any point in time , so doing synchronous writes on the UI <nl> - / / thread is HIGHLY discouraged as it might block longer than intended . Only use async transactions . <nl> + / / thread is HIGHLY discouraged as it might block longer than intended . Use only async transactions . <nl> realm . executeTransactionAsync ( new Realm . Transaction ( ) { <nl> @ Override <nl> - public void execute ( Realm realm ) { <nl> + public void execute ( @ Nonnull Realm realm ) { <nl> CRDTCounter counter = realm . where ( CRDTCounter . class ) . findFirst ( ) ; <nl> - counter . add ( adjustment ) ; <nl> + if ( counter ! = null ) { <nl> + counter . incrementCounter ( adjustment ) ; <nl> + } <nl> } <nl> } ) ; <nl> } <nl> <nl> - private void gotoLoginActivity ( ) { <nl> - Intent intent = new Intent ( this , LoginActivity . class ) ; <nl> - startActivity ( intent ) ; <nl> + private SyncUser getLoggedInUser ( ) { <nl> + SyncUser user = null ; <nl> + <nl> + try { user = SyncUser . currentUser ( ) ; } <nl> + catch ( IllegalStateException ignore ) { } <nl> + <nl> + if ( user = = null ) { <nl> + startActivity ( new Intent ( this , LoginActivity . class ) ) ; <nl> + } <nl> + <nl> + return user ; <nl> + } <nl> + <nl> + private void closeRealm ( ) { <nl> + if ( realm ! = null & & ! realm . isClosed ( ) ) { <nl> + realm . close ( ) ; <nl> + } <nl> } <nl> } <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> index 5ce56af . . 73793b1 100644 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> @ @ - 24 , 16 + 24 , 17 @ @ import android . widget . Button ; <nl> import android . widget . EditText ; <nl> import android . widget . Toast ; <nl> <nl> + import javax . annotation . Nonnull ; <nl> + <nl> import butterknife . BindView ; <nl> import butterknife . ButterKnife ; <nl> import io . realm . SyncCredentials ; <nl> import io . realm . ObjectServerError ; <nl> import io . realm . SyncUser ; <nl> - import io . realm . UserStore ; <nl> <nl> - import static io . realm . ErrorCode . UNKNOWN _ ACCOUNT ; <nl> <nl> public class LoginActivity extends AppCompatActivity { <nl> + private static final String REALM _ AUTH _ URL = " http : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / auth " ; <nl> <nl> @ BindView ( R . id . input _ username ) EditText username ; <nl> @ BindView ( R . id . input _ password ) EditText password ; <nl> @ @ - 77 , 16 + 78 , 15 @ @ public class LoginActivity extends AppCompatActivity { <nl> String password = this . password . getText ( ) . toString ( ) ; <nl> <nl> SyncCredentials creds = SyncCredentials . usernamePassword ( username , password , createUser ) ; <nl> - String authUrl = " http : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / auth " ; <nl> SyncUser . Callback callback = new SyncUser . Callback ( ) { <nl> @ Override <nl> - public void onSuccess ( SyncUser user ) { <nl> + public void onSuccess ( @ Nonnull SyncUser user ) { <nl> progressDialog . dismiss ( ) ; <nl> onLoginSuccess ( ) ; <nl> } <nl> <nl> @ Override <nl> - public void onError ( ObjectServerError error ) { <nl> + public void onError ( @ Nonnull ObjectServerError error ) { <nl> progressDialog . dismiss ( ) ; <nl> String errorMsg ; <nl> switch ( error . getErrorCode ( ) ) { <nl> @ @ - 103 , 7 + 103 , 7 @ @ public class LoginActivity extends AppCompatActivity { <nl> } <nl> } ; <nl> <nl> - SyncUser . loginAsync ( creds , authUrl , callback ) ; <nl> + SyncUser . loginAsync ( creds , REALM _ AUTH _ URL , callback ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java <nl> index 93096e3 . . 0bca8fd 100644 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> / * <nl> - * Copyright 2016 Realm Inc . <nl> + * Copyright 2017 Realm Inc . <nl> * <nl> * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> * you may not use this file except in compliance with the License . <nl> @ @ - 13 , 38 + 13 , 30 @ @ <nl> * See the License for the specific language governing permissions and <nl> * limitations under the License . <nl> * / <nl> - <nl> package io . realm . examples . objectserver . model ; <nl> <nl> - import io . realm . RealmList ; <nl> + import io . realm . MutableRealmInteger ; <nl> import io . realm . RealmObject ; <nl> import io . realm . annotations . PrimaryKey ; <nl> + import io . realm . annotations . Required ; <nl> <nl> / * * <nl> - * Counter class that is eventually consistent . Two devices can simultaneous increment this and eventually reach <nl> - * the same value . <nl> - * <nl> - * @ see < href ref = " https : / / en . wikipedia . org / wiki / Conflict - free _ replicated _ data _ type " > Conflict Free Replicated Data Structures < / href > <nl> + * A named , conflict - free replicated data - type . <nl> * / <nl> public class CRDTCounter extends RealmObject { <nl> - <nl> @ PrimaryKey <nl> - private long id ; <nl> - private RealmList < CounterOperation > operations ; <nl> + private String name ; <nl> + <nl> + @ Required <nl> + public final MutableRealmInteger counter = MutableRealmInteger . valueOf ( 0L ) ; <nl> <nl> - public CRDTCounter ( ) { <nl> - / / Required by Realm <nl> - } <nl> + / / Required for Realm <nl> + public CRDTCounter ( ) { } <nl> <nl> - public CRDTCounter ( long id ) { <nl> - this . id = id ; <nl> - } <nl> + public CRDTCounter ( String name ) { this . name = name ; } <nl> <nl> - public long getCount ( ) { <nl> - return operations . where ( ) . sum ( " adjustment " ) . longValue ( ) ; <nl> - } <nl> + public String getName ( ) { return name ; } <nl> <nl> - public void add ( long val ) { <nl> - operations . add ( new CounterOperation ( val ) ) ; <nl> - } <nl> + public long getCount ( ) { return counter . get ( ) . longValue ( ) ; } <nl> + public void incrementCounter ( long delta ) { counter . increment ( delta ) ; } <nl> } <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java <nl> deleted file mode 100644 <nl> index 53342f6 . . 0000000 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java <nl> + + + / dev / null <nl> @ @ - 1 , 27 + 0 , 0 @ @ <nl> - / * <nl> - * Copyright 2016 Realm Inc . <nl> - * <nl> - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - * you may not use this file except in compliance with the License . <nl> - * You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - <nl> - package io . realm . examples . objectserver . model ; <nl> - <nl> - import io . realm . RealmObject ; <nl> - <nl> - public class CounterOperation extends RealmObject { <nl> - public long adjustment ; <nl> - public CounterOperation ( ) { } ; <nl> - public CounterOperation ( long adjustment ) { <nl> - this . adjustment = adjustment ; <nl> - } <nl> - } <nl> diff - - git a / examples / objectServerExample / src / main / res / layout / activity _ counter . xml b / examples / objectServerExample / src / main / res / layout / activity _ counter . xml <nl> index df73031 . . a1300b2 100644 <nl> - - - a / examples / objectServerExample / src / main / res / layout / activity _ counter . xml <nl> + + + b / examples / objectServerExample / src / main / res / layout / activity _ counter . xml <nl> @ @ - 1 , 21 + 1 , 20 @ @ <nl> < RelativeLayout <nl> xmlns : android = " http : / / schemas . android . com / apk / res / android " <nl> + xmlns : app = " http : / / schemas . android . com / apk / res - auto " <nl> android : layout _ width = " match _ parent " <nl> android : layout _ height = " match _ parent " <nl> - xmlns : app = " http : / / schemas . android . com / apk / res - auto " > <nl> - <nl> + > <nl> <nl> < LinearLayout <nl> android : layout _ width = " match _ parent " <nl> android : layout _ height = " match _ parent " <nl> - android : orientation = " vertical " <nl> - android : weightSum = " 1 . 0 " > <nl> + android : orientation = " vertical " > <nl> <nl> < View <nl> android : id = " @ + id / upper " <nl> android : layout _ width = " match _ parent " <nl> android : layout _ height = " 0dp " <nl> - android : layout _ weight = " 0 . 5 " <nl> + android : layout _ weight = " 1 " <nl> android : background = " @ drawable / button _ counter " > <nl> < / View > <nl> <nl> @ @ - 23 , 7 + 22 , 7 @ @ <nl> android : id = " @ + id / lower " <nl> android : layout _ width = " match _ parent " <nl> android : layout _ height = " 0dp " <nl> - android : layout _ weight = " 0 . 5 " <nl> + android : layout _ weight = " 1 " <nl> android : background = " @ drawable / button _ counter " > <nl> < / View > <nl> < / LinearLayout > <nl> diff - - git a / examples / objectServerExample / src / main / res / layout / activity _ login . xml b / examples / objectServerExample / src / main / res / layout / activity _ login . xml <nl> index 142ad53 . . 375cdbc 100644 <nl> - - - a / examples / objectServerExample / src / main / res / layout / activity _ login . xml <nl> + + + b / examples / objectServerExample / src / main / res / layout / activity _ login . xml <nl> @ @ - 17 , 6 + 17 , 7 @ @ <nl> android : layout _ height = " 72dp " <nl> android : layout _ gravity = " center _ horizontal " <nl> android : layout _ marginBottom = " 24dp " <nl> + android : contentDescription = " @ string / realm _ logo " <nl> android : src = " @ drawable / logo " / > <nl> <nl> < android . support . design . widget . TextInputLayout <nl> @ @ - 29 , 7 + 30 , 7 @ @ <nl> android : id = " @ + id / input _ username " <nl> android : layout _ width = " match _ parent " <nl> android : layout _ height = " wrap _ content " <nl> - android : hint = " Username " <nl> + android : hint = " @ string / username " <nl> android : inputType = " text " / > <nl> < / android . support . design . widget . TextInputLayout > <nl> <nl> @ @ - 43 , 7 + 44 , 7 @ @ <nl> android : id = " @ + id / input _ password " <nl> android : layout _ width = " match _ parent " <nl> android : layout _ height = " wrap _ content " <nl> - android : hint = " Password " <nl> + android : hint = " @ string / password " <nl> android : inputType = " textPassword " / > <nl> < / android . support . design . widget . TextInputLayout > <nl> <nl> @ @ - 54 , 7 + 55 , 7 @ @ <nl> android : layout _ marginBottom = " 12dp " <nl> android : layout _ marginTop = " 24dp " <nl> android : padding = " 12dp " <nl> - android : text = " Login " / > <nl> + android : text = " @ string / login " / > <nl> <nl> < android . support . v7 . widget . AppCompatButton <nl> android : id = " @ + id / button _ create " <nl> @ @ - 62 , 6 + 63 , 6 @ @ <nl> android : layout _ height = " wrap _ content " <nl> android : layout _ marginBottom = " 24dp " <nl> android : padding = " 12dp " <nl> - android : text = " Create account and login " / > <nl> + android : text = " @ string / create _ account " / > <nl> < / LinearLayout > <nl> - < / ScrollView > <nl> \ No newline at end of file <nl> + < / ScrollView > <nl> diff - - git a / examples / objectServerExample / src / main / res / menu / menu _ counter . xml b / examples / objectServerExample / src / main / res / menu / menu _ counter . xml <nl> index 858fd2e . . d0e93f2 100644 <nl> - - - a / examples / objectServerExample / src / main / res / menu / menu _ counter . xml <nl> + + + b / examples / objectServerExample / src / main / res / menu / menu _ counter . xml <nl> @ @ - 5 , 7 + 5 , 7 @ @ <nl> < item <nl> android : id = " @ + id / action _ logout " <nl> android : orderInCategory = " 100 " <nl> - android : title = " Logout " <nl> + android : title = " @ string / logout " <nl> android : icon = " @ drawable / ic _ exit _ to _ app _ white _ 24dp " <nl> app : showAsAction = " always " / > <nl> < / menu > <nl> diff - - git a / examples / objectServerExample / src / main / res / values / strings . xml b / examples / objectServerExample / src / main / res / values / strings . xml <nl> index 10e43bd . . b4f90b3 100644 <nl> - - - a / examples / objectServerExample / src / main / res / values / strings . xml <nl> + + + b / examples / objectServerExample / src / main / res / values / strings . xml <nl> @ @ - 1 , 4 + 1 , 10 @ @ <nl> < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > <nl> < resources > <nl> < string name = " app _ name " > Object Server Example < / string > <nl> + < string name = " realm _ logo " > Realm Logo < / string > <nl> + < string name = " username " > Username < / string > <nl> + < string name = " password " > Password < / string > <nl> + < string name = " create _ account " > Create account and login < / string > <nl> + < string name = " login " > Login < / string > <nl> + < string name = " logout " > Logout < / string > <nl> < / resources >
NEAREST DIFF (one line): diff - - git a / examples / objectServerExample / README . md b / examples / objectServerExample / README . md <nl> new file mode 100644 <nl> index 0000000 . . f9ec43a <nl> - - - / dev / null <nl> + + + b / examples / objectServerExample / README . md <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + # Using this example <nl> + <nl> + This example shows a minimal example on how to connect to and use the <nl> + Realm Object Server to synchronize changes between devices . <nl> + <nl> + The example will assume that the Object Server is running on the machine <nl> + building the example and the IP address will automatically be injected <nl> + into the build configuration . <nl> + <nl> + If this for some reasons does not work , please insert the IP Address into <nl> + the ` build . gradle ` accordingly . <nl> + <nl> + To read more about the Realm Object Server and how to deploy it , see <nl> + https : / / realm . io / news / introducing - realm - mobile - platform / <nl> diff - - git a / examples / objectServerExample / build . gradle b / examples / objectServerExample / build . gradle <nl> index 51de41a . . dd0e37e 100644 <nl> - - - a / examples / objectServerExample / build . gradle <nl> + + + b / examples / objectServerExample / build . gradle <nl> @ @ - 2 , 6 + 2 , 26 @ @ apply plugin : ' com . android . application ' <nl> apply plugin : ' android - command ' <nl> apply plugin : ' realm - android ' <nl> <nl> + / / Credit : http : / / jeremie - martinez . com / 2015 / 05 / 05 / inject - host - gradle / <nl> + def getIP ( ) { <nl> + InetAddress result = null ; <nl> + Enumeration < NetworkInterface > interfaces = NetworkInterface . getNetworkInterfaces ( ) ; <nl> + while ( interfaces . hasMoreElements ( ) ) { <nl> + Enumeration < InetAddress > addresses = interfaces . nextElement ( ) . getInetAddresses ( ) ; <nl> + while ( addresses . hasMoreElements ( ) ) { <nl> + InetAddress address = addresses . nextElement ( ) ; <nl> + if ( ! address . isLoopbackAddress ( ) ) { <nl> + if ( address . isSiteLocalAddress ( ) ) { <nl> + return address . getHostAddress ( ) ; <nl> + } else if ( result = = null ) { <nl> + result = address ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + return ( result ! = null ? result : InetAddress . getLocalHost ( ) ) . getHostAddress ( ) ; <nl> + } <nl> + <nl> android { <nl> compileSdkVersion rootProject . sdkVersion <nl> buildToolsVersion rootProject . buildTools <nl> @ @ - 15 , 11 + 35 , 18 @ @ android { <nl> } <nl> <nl> buildTypes { <nl> - release { <nl> - minifyEnabled false <nl> - } <nl> + / / This will automatically try to detect the IP address of the machine <nl> + / / building the example . It is assumed that this machine is also running <nl> + / / the Object Server . If not , replace ' host ' with the IP of the machine <nl> + / / hosting the server . In some cases the wrong IP address will also <nl> + / / be detected . In that case also insert the IP address manually . <nl> + def host = getIP ( ) <nl> debug { <nl> + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " <nl> + } <nl> + release { <nl> minifyEnabled false <nl> + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " <nl> } <nl> } <nl> <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> index 5537ca1 . . accbf13 100644 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java <nl> @ @ - 23 , 24 + 23 , 23 @ @ import android . view . Menu ; <nl> import android . view . MenuItem ; <nl> import android . widget . TextView ; <nl> <nl> + import java . util . Locale ; <nl> + <nl> import butterknife . BindView ; <nl> import butterknife . ButterKnife ; <nl> import butterknife . OnClick ; <nl> import io . realm . Realm ; <nl> import io . realm . RealmChangeListener ; <nl> - import io . realm . RealmResults ; <nl> - import io . realm . examples . objectserver . model . CRDTCounter ; <nl> - import io . realm . examples . objectserver . model . CounterOperation ; <nl> import io . realm . SyncConfiguration ; <nl> - import io . realm . SyncManager ; <nl> import io . realm . User ; <nl> + import io . realm . examples . objectserver . model . CRDTCounter ; <nl> <nl> public class CounterActivity extends AppCompatActivity { <nl> <nl> - private static final String REALM _ URL = " realm : / / " + MyApplication . OBJECT _ SERVER _ IP + " : 7800 / ~ / default " ; <nl> + private static final String REALM _ URL = " realm : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / ~ / default " ; <nl> <nl> private Realm realm ; <nl> - private RealmResults < CounterOperation > counter ; <nl> + private CRDTCounter counter ; <nl> private User user ; <nl> <nl> @ BindView ( R . id . text _ counter ) TextView counterView ; <nl> @ @ - 67 , 10 + 66 , 7 @ @ public class CounterActivity extends AppCompatActivity { <nl> . initialData ( new Realm . Transaction ( ) { <nl> @ Override <nl> public void execute ( Realm realm ) { <nl> - / / Workaround for initialData right now https : / / github . com / realm / realm - java - private / issues / 164 <nl> - if ( realm . isEmpty ( ) ) { <nl> - realm . createObject ( CRDTCounter . class , 1 ) ; <nl> - } <nl> + realm . createObject ( CRDTCounter . class , 1 ) ; <nl> } <nl> } ) <nl> . build ( ) ; <nl> @ @ - 78 , 30 + 74 , 14 @ @ public class CounterActivity extends AppCompatActivity { <nl> / / This will automatically sync all changes in the background for as long as the Realm is open <nl> realm = Realm . getInstance ( config ) ; <nl> <nl> - / / FIXME Looks like PrimaryKey and lists are not working correctly yet <nl> - / / FIXME Also need support for the ` setDefault ` instruction for this to make sense . <nl> - / / counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; <nl> - / / counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { <nl> - / / @ Override <nl> - / / public void onChange ( CRDTCounter counter ) { <nl> - / / if ( counter . isValid ( ) ) { <nl> - / / counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; <nl> - / / } else { <nl> - / / counterView . setText ( " - " ) ; <nl> - / / } <nl> - / / } <nl> - / / } ) ; <nl> - <nl> - counter = realm . where ( CounterOperation . class ) . findAllAsync ( ) ; <nl> - counter . addChangeListener ( new RealmChangeListener < RealmResults < CounterOperation > > ( ) { <nl> + counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; <nl> + counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { <nl> @ Override <nl> - public void onChange ( RealmResults < CounterOperation > result ) { <nl> - / / FIXME Why isn ' t this triggered when the DB is opened ? <nl> - Number sum = result . sum ( " adjustment " ) ; <nl> - if ( sum ! = null ) { <nl> - counterView . setText ( Long . toString ( sum . longValue ( ) ) ) ; <nl> + public void onChange ( CRDTCounter counter ) { <nl> + if ( counter . isValid ( ) ) { <nl> + counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; <nl> } else { <nl> - counterView . setText ( " 0 " ) ; <nl> + counterView . setText ( " - " ) ; <nl> } <nl> } <nl> } ) ; <nl> @ @ - 144 , 21 + 124 , 22 @ @ public class CounterActivity extends AppCompatActivity { <nl> <nl> @ OnClick ( R . id . upper ) <nl> public void incrementCounter ( ) { <nl> - adjustCounter ( new CounterOperation ( 1 ) ) ; <nl> + adjustCounter ( 1 ) ; <nl> } <nl> <nl> @ OnClick ( R . id . lower ) <nl> public void decrementCounter ( ) { <nl> - adjustCounter ( new CounterOperation ( - 1 ) ) ; <nl> + adjustCounter ( - 1 ) ; <nl> } <nl> <nl> - private void adjustCounter ( final CounterOperation ops ) { <nl> + private void adjustCounter ( final int adjustment ) { <nl> / / A synchronized Realm can get written to at any point in time , so doing synchronous writes on the UI <nl> / / thread is HIGHLY discouraged as it might block longer than intended . Only use async transactions . <nl> realm . executeTransactionAsync ( new Realm . Transaction ( ) { <nl> @ Override <nl> public void execute ( Realm realm ) { <nl> - realm . copyToRealm ( ops ) ; <nl> + CRDTCounter counter = realm . where ( CRDTCounter . class ) . findFirst ( ) ; <nl> + counter . add ( adjustment ) ; <nl> } <nl> } ) ; <nl> } <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> index bd02d2d . . 7018e8b 100644 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java <nl> @ @ - 77 , 7 + 77 , 7 @ @ public class LoginActivity extends AppCompatActivity { <nl> String password = this . password . getText ( ) . toString ( ) ; <nl> <nl> Credentials creds = Credentials . usernamePassword ( username , password , createUser ) ; <nl> - String authUrl = " http : / / " + MyApplication . OBJECT _ SERVER _ IP + " : 8080 / auth " ; <nl> + String authUrl = " http : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / auth " ; <nl> User . Callback callback = new User . Callback ( ) { <nl> @ Override <nl> public void onSuccess ( User user ) { <nl> diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java <nl> index 05d7567 . . 45050d8 100644 <nl> - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java <nl> + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java <nl> @ @ - 25 , 7 + 25 , 6 @ @ import io . realm . log . RealmLog ; <nl> <nl> public class MyApplication extends Application { <nl> <nl> - public static final String OBJECT _ SERVER _ IP = " 192 . 168 . 104 . 22 " ; <nl> @ Override <nl> public void onCreate ( ) { <nl> super . onCreate ( ) ;

TEST DIFF:
diff - - git a / examples / objectServerExample / README . md b / examples / objectServerExample / README . md 
 index f9ec43a . . d3c8558 100644 
 - - - a / examples / objectServerExample / README . md 
 + + + b / examples / objectServerExample / README . md 
 @ @ - 1 , 14 + 1 , 20 @ @ 
 # Using this example 
 
 - This example shows a minimal example on how to connect to and use the 
 + This example is a minimal demonstration of how to connect to and use the 
 Realm Object Server to synchronize changes between devices . 
 
 - The example will assume that the Object Server is running on the machine 
 - building the example and the IP address will automatically be injected 
 - into the build configuration . 
 + The example assumes that the Object Server is running on the machine 
 + that built the application : The build machine IP address is automatically 
 + injected into the build configuration . 
 
 - If this for some reasons does not work , please insert the IP Address into 
 - the ` build . gradle ` accordingly . 
 + To use a different ObjectServer , simply put the server IP Address into 
 + the ` build . gradle ` , as indicated in the comments , on the lines like this : 
 + 
 + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " 
 + 
 + For instance : 
 + 
 + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " 192 . 168 . 0 . 1 " 
 
 To read more about the Realm Object Server and how to deploy it , see 
 https : / / realm . io / news / introducing - realm - mobile - platform / 
 diff - - git a / examples / objectServerExample / build . gradle b / examples / objectServerExample / build . gradle 
 index 8f6646b . . 7dc1ce0 100644 
 - - - a / examples / objectServerExample / build . gradle 
 + + + b / examples / objectServerExample / build . gradle 
 @ @ - 29 , 7 + 29 , 7 @ @ android { 
 defaultConfig { 
 applicationId ' io . realm . examples . objectserver ' 
 targetSdkVersion rootProject . sdkVersion 
 - minSdkVersion 15 
 + minSdkVersion 16 
 versionCode 1 
 versionName " 1 . 0 " 
 } 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 index 536b24e . . 8fa975c 100644 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 @ @ - 29 , 6 + 29 , 8 @ @ import android . widget . TextView ; 
 import java . util . Locale ; 
 import java . util . concurrent . atomic . AtomicBoolean ; 
 
 + import javax . annotation . Nonnull ; 
 + 
 import butterknife . BindView ; 
 import butterknife . ButterKnife ; 
 import butterknife . OnClick ; 
 @ @ - 45 , 36 + 47 , 35 @ @ import io . realm . examples . objectserver . model . CRDTCounter ; 
 import me . zhanghai . android . materialprogressbar . MaterialProgressBar ; 
 
 public class CounterActivity extends AppCompatActivity { 
 - 
 private static final String REALM _ URL = " realm : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / ~ / default " ; 
 
 - private Realm realm ; 
 - private SyncSession session ; 
 - private CRDTCounter counter ; 
 - private SyncUser user ; 
 - private AtomicBoolean downloadingChanges = new AtomicBoolean ( false ) ; 
 - private AtomicBoolean uploadingChanges = new AtomicBoolean ( false ) ; 
 - private ProgressListener downloadListener = new ProgressListener ( ) { 
 + private final ProgressListener downloadListener = new ProgressListener ( ) { 
 @ Override 
 - public void onChange ( Progress progress ) { 
 + public void onChange ( @ Nonnull Progress progress ) { 
 downloadingChanges . set ( ! progress . isTransferComplete ( ) ) ; 
 runOnUiThread ( updateProgressBar ) ; 
 } 
 } ; 
 - private ProgressListener uploadListener = new ProgressListener ( ) { 
 + private final ProgressListener uploadListener = new ProgressListener ( ) { 
 @ Override 
 - public void onChange ( Progress progress ) { 
 + public void onChange ( @ Nonnull Progress progress ) { 
 uploadingChanges . set ( ! progress . isTransferComplete ( ) ) ; 
 runOnUiThread ( updateProgressBar ) ; 
 } 
 } ; 
 - private Runnable updateProgressBar = new Runnable ( ) { 
 + private final Runnable updateProgressBar = new Runnable ( ) { 
 @ Override 
 public void run ( ) { 
 updateProgressBar ( downloadingChanges . get ( ) , uploadingChanges . get ( ) ) ; 
 } 
 } ; 
 
 + private final AtomicBoolean downloadingChanges = new AtomicBoolean ( false ) ; 
 + private final AtomicBoolean uploadingChanges = new AtomicBoolean ( false ) ; 
 + 
 + private Realm realm ; 
 + private SyncSession session ; 
 + private SyncUser user ; 
 
 @ BindView ( R . id . text _ counter ) TextView counterView ; 
 @ BindView ( R . id . progressbar ) MaterialProgressBar progressBar ; 
 @ @ - 84 , 49 + 85 , 40 @ @ public class CounterActivity extends AppCompatActivity { 
 super . onCreate ( savedInstanceState ) ; 
 setContentView ( R . layout . activity _ counter ) ; 
 ButterKnife . bind ( this ) ; 
 - 
 - / / Check if we have a valid user , otherwise redirect to login 
 - if ( SyncUser . currentUser ( ) = = null ) { 
 - gotoLoginActivity ( ) ; 
 - } 
 } 
 
 @ Override 
 protected void onStart ( ) { 
 super . onStart ( ) ; 
 - user = SyncUser . currentUser ( ) ; 
 - if ( user ! = null ) { 
 - / / Create a RealmConfiguration for our user 
 - SyncConfiguration config = new SyncConfiguration . Builder ( user , REALM _ URL ) 
 - . initialData ( new Realm . Transaction ( ) { 
 - @ Override 
 - public void execute ( Realm realm ) { 
 - realm . createObject ( CRDTCounter . class , 1 ) ; 
 - } 
 - } ) 
 - . build ( ) ; 
 - 
 - / / This will automatically sync all changes in the background for as long as the Realm is open 
 - realm = Realm . getInstance ( config ) ; 
 - 
 - counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; 
 - counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { 
 - @ Override 
 - public void onChange ( CRDTCounter counter ) { 
 - if ( counter . isValid ( ) ) { 
 - counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; 
 - } else { 
 - counterView . setText ( " - " ) ; 
 + user = getLoggedInUser ( ) ; 
 + if ( user = = null ) { return ; } 
 + 
 + / / Create a RealmConfiguration for our user 
 + SyncConfiguration config = new SyncConfiguration . Builder ( user , REALM _ URL ) 
 + . initialData ( new Realm . Transaction ( ) { 
 + @ Override 
 + public void execute ( @ Nonnull Realm realm ) { 
 + realm . createObject ( CRDTCounter . class , user . getIdentity ( ) ) ; 
 } 
 - } 
 - } ) ; 
 - counterView . setText ( " 0 " ) ; 
 + } ) 
 + . build ( ) ; 
 
 - / / Setup progress listeners for indeterminate progress bars 
 - session = SyncManager . getSession ( config ) ; 
 - session . addDownloadProgressListener ( ProgressMode . INDEFINITELY , downloadListener ) ; 
 - session . addUploadProgressListener ( ProgressMode . INDEFINITELY , uploadListener ) ; 
 - } 
 + / / This will automatically sync all changes in the background for as long as the Realm is open 
 + realm = Realm . getInstance ( config ) ; 
 + 
 + counterView . setText ( " - " ) ; 
 + CRDTCounter counter = realm . where ( CRDTCounter . class ) . equalTo ( " name " , user . getIdentity ( ) ) . findFirstAsync ( ) ; 
 + counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { 
 + @ Override 
 + public void onChange ( @ Nonnull CRDTCounter counter ) { 
 + counterView . setText ( ( ! counter . isValid ( ) ) ? " - " : String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; 
 + } 
 + } ) ; 
 + 
 + / / Setup progress listeners for indeterminate progress bars 
 + session = SyncManager . getSession ( config ) ; 
 + session . addDownloadProgressListener ( ProgressMode . INDEFINITELY , downloadListener ) ; 
 + session . addUploadProgressListener ( ProgressMode . INDEFINITELY , uploadListener ) ; 
 } 
 
 @ Override 
 @ @ - 135 , 17 + 127 , 12 @ @ public class CounterActivity extends AppCompatActivity { 
 if ( session ! = null ) { 
 session . removeProgressListener ( downloadListener ) ; 
 session . removeProgressListener ( uploadListener ) ; 
 + session = null ; 
 } 
 closeRealm ( ) ; 
 user = null ; 
 } 
 
 - private void closeRealm ( ) { 
 - if ( realm ! = null & & ! realm . isClosed ( ) ) { 
 - realm . close ( ) ; 
 - } 
 - } 
 - 
 @ Override 
 public boolean onCreateOptionsMenu ( Menu menu ) { 
 getMenuInflater ( ) . inflate ( R . menu . menu _ counter , menu ) ; 
 @ @ - 158 , 7 + 145 , 7 @ @ public class CounterActivity extends AppCompatActivity { 
 case R . id . action _ logout : 
 closeRealm ( ) ; 
 user . logout ( ) ; 
 - gotoLoginActivity ( ) ; 
 + user = getLoggedInUser ( ) ; 
 return true ; 
 
 default : 
 @ @ - 194 , 18 + 181 , 34 @ @ public class CounterActivity extends AppCompatActivity { 
 
 private void adjustCounter ( final int adjustment ) { 
 / / A synchronized Realm can get written to at any point in time , so doing synchronous writes on the UI 
 - / / thread is HIGHLY discouraged as it might block longer than intended . Only use async transactions . 
 + / / thread is HIGHLY discouraged as it might block longer than intended . Use only async transactions . 
 realm . executeTransactionAsync ( new Realm . Transaction ( ) { 
 @ Override 
 - public void execute ( Realm realm ) { 
 + public void execute ( @ Nonnull Realm realm ) { 
 CRDTCounter counter = realm . where ( CRDTCounter . class ) . findFirst ( ) ; 
 - counter . add ( adjustment ) ; 
 + if ( counter ! = null ) { 
 + counter . incrementCounter ( adjustment ) ; 
 + } 
 } 
 } ) ; 
 } 
 
 - private void gotoLoginActivity ( ) { 
 - Intent intent = new Intent ( this , LoginActivity . class ) ; 
 - startActivity ( intent ) ; 
 + private SyncUser getLoggedInUser ( ) { 
 + SyncUser user = null ; 
 + 
 + try { user = SyncUser . currentUser ( ) ; } 
 + catch ( IllegalStateException ignore ) { } 
 + 
 + if ( user = = null ) { 
 + startActivity ( new Intent ( this , LoginActivity . class ) ) ; 
 + } 
 + 
 + return user ; 
 + } 
 + 
 + private void closeRealm ( ) { 
 + if ( realm ! = null & & ! realm . isClosed ( ) ) { 
 + realm . close ( ) ; 
 + } 
 } 
 } 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 index 5ce56af . . 73793b1 100644 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 @ @ - 24 , 16 + 24 , 17 @ @ import android . widget . Button ; 
 import android . widget . EditText ; 
 import android . widget . Toast ; 
 
 + import javax . annotation . Nonnull ; 
 + 
 import butterknife . BindView ; 
 import butterknife . ButterKnife ; 
 import io . realm . SyncCredentials ; 
 import io . realm . ObjectServerError ; 
 import io . realm . SyncUser ; 
 - import io . realm . UserStore ; 
 
 - import static io . realm . ErrorCode . UNKNOWN _ ACCOUNT ; 
 
 public class LoginActivity extends AppCompatActivity { 
 + private static final String REALM _ AUTH _ URL = " http : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / auth " ; 
 
 @ BindView ( R . id . input _ username ) EditText username ; 
 @ BindView ( R . id . input _ password ) EditText password ; 
 @ @ - 77 , 16 + 78 , 15 @ @ public class LoginActivity extends AppCompatActivity { 
 String password = this . password . getText ( ) . toString ( ) ; 
 
 SyncCredentials creds = SyncCredentials . usernamePassword ( username , password , createUser ) ; 
 - String authUrl = " http : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / auth " ; 
 SyncUser . Callback callback = new SyncUser . Callback ( ) { 
 @ Override 
 - public void onSuccess ( SyncUser user ) { 
 + public void onSuccess ( @ Nonnull SyncUser user ) { 
 progressDialog . dismiss ( ) ; 
 onLoginSuccess ( ) ; 
 } 
 
 @ Override 
 - public void onError ( ObjectServerError error ) { 
 + public void onError ( @ Nonnull ObjectServerError error ) { 
 progressDialog . dismiss ( ) ; 
 String errorMsg ; 
 switch ( error . getErrorCode ( ) ) { 
 @ @ - 103 , 7 + 103 , 7 @ @ public class LoginActivity extends AppCompatActivity { 
 } 
 } ; 
 
 - SyncUser . loginAsync ( creds , authUrl , callback ) ; 
 + SyncUser . loginAsync ( creds , REALM _ AUTH _ URL , callback ) ; 
 } 
 
 @ Override 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java 
 index 93096e3 . . 0bca8fd 100644 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CRDTCounter . java 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 / * 
 - * Copyright 2016 Realm Inc . 
 + * Copyright 2017 Realm Inc . 
 * 
 * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 * you may not use this file except in compliance with the License . 
 @ @ - 13 , 38 + 13 , 30 @ @ 
 * See the License for the specific language governing permissions and 
 * limitations under the License . 
 * / 
 - 
 package io . realm . examples . objectserver . model ; 
 
 - import io . realm . RealmList ; 
 + import io . realm . MutableRealmInteger ; 
 import io . realm . RealmObject ; 
 import io . realm . annotations . PrimaryKey ; 
 + import io . realm . annotations . Required ; 
 
 / * * 
 - * Counter class that is eventually consistent . Two devices can simultaneous increment this and eventually reach 
 - * the same value . 
 - * 
 - * @ see < href ref = " https : / / en . wikipedia . org / wiki / Conflict - free _ replicated _ data _ type " > Conflict Free Replicated Data Structures < / href > 
 + * A named , conflict - free replicated data - type . 
 * / 
 public class CRDTCounter extends RealmObject { 
 - 
 @ PrimaryKey 
 - private long id ; 
 - private RealmList < CounterOperation > operations ; 
 + private String name ; 
 + 
 + @ Required 
 + public final MutableRealmInteger counter = MutableRealmInteger . valueOf ( 0L ) ; 
 
 - public CRDTCounter ( ) { 
 - / / Required by Realm 
 - } 
 + / / Required for Realm 
 + public CRDTCounter ( ) { } 
 
 - public CRDTCounter ( long id ) { 
 - this . id = id ; 
 - } 
 + public CRDTCounter ( String name ) { this . name = name ; } 
 
 - public long getCount ( ) { 
 - return operations . where ( ) . sum ( " adjustment " ) . longValue ( ) ; 
 - } 
 + public String getName ( ) { return name ; } 
 
 - public void add ( long val ) { 
 - operations . add ( new CounterOperation ( val ) ) ; 
 - } 
 + public long getCount ( ) { return counter . get ( ) . longValue ( ) ; } 
 + public void incrementCounter ( long delta ) { counter . increment ( delta ) ; } 
 } 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java 
 deleted file mode 100644 
 index 53342f6 . . 0000000 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / model / CounterOperation . java 
 + + + / dev / null 
 @ @ - 1 , 27 + 0 , 0 @ @ 
 - / * 
 - * Copyright 2016 Realm Inc . 
 - * 
 - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - * you may not use this file except in compliance with the License . 
 - * You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - 
 - package io . realm . examples . objectserver . model ; 
 - 
 - import io . realm . RealmObject ; 
 - 
 - public class CounterOperation extends RealmObject { 
 - public long adjustment ; 
 - public CounterOperation ( ) { } ; 
 - public CounterOperation ( long adjustment ) { 
 - this . adjustment = adjustment ; 
 - } 
 - } 
 diff - - git a / examples / objectServerExample / src / main / res / layout / activity _ counter . xml b / examples / objectServerExample / src / main / res / layout / activity _ counter . xml 
 index df73031 . . a1300b2 100644 
 - - - a / examples / objectServerExample / src / main / res / layout / activity _ counter . xml 
 + + + b / examples / objectServerExample / src / main / res / layout / activity _ counter . xml 
 @ @ - 1 , 21 + 1 , 20 @ @ 
 < RelativeLayout 
 xmlns : android = " http : / / schemas . android . com / apk / res / android " 
 + xmlns : app = " http : / / schemas . android . com / apk / res - auto " 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " match _ parent " 
 - xmlns : app = " http : / / schemas . android . com / apk / res - auto " > 
 - 
 + > 
 
 < LinearLayout 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " match _ parent " 
 - android : orientation = " vertical " 
 - android : weightSum = " 1 . 0 " > 
 + android : orientation = " vertical " > 
 
 < View 
 android : id = " @ + id / upper " 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " 0dp " 
 - android : layout _ weight = " 0 . 5 " 
 + android : layout _ weight = " 1 " 
 android : background = " @ drawable / button _ counter " > 
 < / View > 
 
 @ @ - 23 , 7 + 22 , 7 @ @ 
 android : id = " @ + id / lower " 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " 0dp " 
 - android : layout _ weight = " 0 . 5 " 
 + android : layout _ weight = " 1 " 
 android : background = " @ drawable / button _ counter " > 
 < / View > 
 < / LinearLayout > 
 diff - - git a / examples / objectServerExample / src / main / res / layout / activity _ login . xml b / examples / objectServerExample / src / main / res / layout / activity _ login . xml 
 index 142ad53 . . 375cdbc 100644 
 - - - a / examples / objectServerExample / src / main / res / layout / activity _ login . xml 
 + + + b / examples / objectServerExample / src / main / res / layout / activity _ login . xml 
 @ @ - 17 , 6 + 17 , 7 @ @ 
 android : layout _ height = " 72dp " 
 android : layout _ gravity = " center _ horizontal " 
 android : layout _ marginBottom = " 24dp " 
 + android : contentDescription = " @ string / realm _ logo " 
 android : src = " @ drawable / logo " / > 
 
 < android . support . design . widget . TextInputLayout 
 @ @ - 29 , 7 + 30 , 7 @ @ 
 android : id = " @ + id / input _ username " 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " wrap _ content " 
 - android : hint = " Username " 
 + android : hint = " @ string / username " 
 android : inputType = " text " / > 
 < / android . support . design . widget . TextInputLayout > 
 
 @ @ - 43 , 7 + 44 , 7 @ @ 
 android : id = " @ + id / input _ password " 
 android : layout _ width = " match _ parent " 
 android : layout _ height = " wrap _ content " 
 - android : hint = " Password " 
 + android : hint = " @ string / password " 
 android : inputType = " textPassword " / > 
 < / android . support . design . widget . TextInputLayout > 
 
 @ @ - 54 , 7 + 55 , 7 @ @ 
 android : layout _ marginBottom = " 12dp " 
 android : layout _ marginTop = " 24dp " 
 android : padding = " 12dp " 
 - android : text = " Login " / > 
 + android : text = " @ string / login " / > 
 
 < android . support . v7 . widget . AppCompatButton 
 android : id = " @ + id / button _ create " 
 @ @ - 62 , 6 + 63 , 6 @ @ 
 android : layout _ height = " wrap _ content " 
 android : layout _ marginBottom = " 24dp " 
 android : padding = " 12dp " 
 - android : text = " Create account and login " / > 
 + android : text = " @ string / create _ account " / > 
 < / LinearLayout > 
 - < / ScrollView > 
 \ No newline at end of file 
 + < / ScrollView > 
 diff - - git a / examples / objectServerExample / src / main / res / menu / menu _ counter . xml b / examples / objectServerExample / src / main / res / menu / menu _ counter . xml 
 index 858fd2e . . d0e93f2 100644 
 - - - a / examples / objectServerExample / src / main / res / menu / menu _ counter . xml 
 + + + b / examples / objectServerExample / src / main / res / menu / menu _ counter . xml 
 @ @ - 5 , 7 + 5 , 7 @ @ 
 < item 
 android : id = " @ + id / action _ logout " 
 android : orderInCategory = " 100 " 
 - android : title = " Logout " 
 + android : title = " @ string / logout " 
 android : icon = " @ drawable / ic _ exit _ to _ app _ white _ 24dp " 
 app : showAsAction = " always " / > 
 < / menu > 
 diff - - git a / examples / objectServerExample / src / main / res / values / strings . xml b / examples / objectServerExample / src / main / res / values / strings . xml 
 index 10e43bd . . b4f90b3 100644 
 - - - a / examples / objectServerExample / src / main / res / values / strings . xml 
 + + + b / examples / objectServerExample / src / main / res / values / strings . xml 
 @ @ - 1 , 4 + 1 , 10 @ @ 
 < ? xml version = " 1 . 0 " encoding = " utf - 8 " ? > 
 < resources > 
 < string name = " app _ name " > Object Server Example < / string > 
 + < string name = " realm _ logo " > Realm Logo < / string > 
 + < string name = " username " > Username < / string > 
 + < string name = " password " > Password < / string > 
 + < string name = " create _ account " > Create account and login < / string > 
 + < string name = " login " > Login < / string > 
 + < string name = " logout " > Logout < / string > 
 < / resources >

NEAREST DIFF:
diff - - git a / examples / objectServerExample / README . md b / examples / objectServerExample / README . md 
 new file mode 100644 
 index 0000000 . . f9ec43a 
 - - - / dev / null 
 + + + b / examples / objectServerExample / README . md 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + # Using this example 
 + 
 + This example shows a minimal example on how to connect to and use the 
 + Realm Object Server to synchronize changes between devices . 
 + 
 + The example will assume that the Object Server is running on the machine 
 + building the example and the IP address will automatically be injected 
 + into the build configuration . 
 + 
 + If this for some reasons does not work , please insert the IP Address into 
 + the ` build . gradle ` accordingly . 
 + 
 + To read more about the Realm Object Server and how to deploy it , see 
 + https : / / realm . io / news / introducing - realm - mobile - platform / 
 diff - - git a / examples / objectServerExample / build . gradle b / examples / objectServerExample / build . gradle 
 index 51de41a . . dd0e37e 100644 
 - - - a / examples / objectServerExample / build . gradle 
 + + + b / examples / objectServerExample / build . gradle 
 @ @ - 2 , 6 + 2 , 26 @ @ apply plugin : ' com . android . application ' 
 apply plugin : ' android - command ' 
 apply plugin : ' realm - android ' 
 
 + / / Credit : http : / / jeremie - martinez . com / 2015 / 05 / 05 / inject - host - gradle / 
 + def getIP ( ) { 
 + InetAddress result = null ; 
 + Enumeration < NetworkInterface > interfaces = NetworkInterface . getNetworkInterfaces ( ) ; 
 + while ( interfaces . hasMoreElements ( ) ) { 
 + Enumeration < InetAddress > addresses = interfaces . nextElement ( ) . getInetAddresses ( ) ; 
 + while ( addresses . hasMoreElements ( ) ) { 
 + InetAddress address = addresses . nextElement ( ) ; 
 + if ( ! address . isLoopbackAddress ( ) ) { 
 + if ( address . isSiteLocalAddress ( ) ) { 
 + return address . getHostAddress ( ) ; 
 + } else if ( result = = null ) { 
 + result = address ; 
 + } 
 + } 
 + } 
 + } 
 + return ( result ! = null ? result : InetAddress . getLocalHost ( ) ) . getHostAddress ( ) ; 
 + } 
 + 
 android { 
 compileSdkVersion rootProject . sdkVersion 
 buildToolsVersion rootProject . buildTools 
 @ @ - 15 , 11 + 35 , 18 @ @ android { 
 } 
 
 buildTypes { 
 - release { 
 - minifyEnabled false 
 - } 
 + / / This will automatically try to detect the IP address of the machine 
 + / / building the example . It is assumed that this machine is also running 
 + / / the Object Server . If not , replace ' host ' with the IP of the machine 
 + / / hosting the server . In some cases the wrong IP address will also 
 + / / be detected . In that case also insert the IP address manually . 
 + def host = getIP ( ) 
 debug { 
 + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " 
 + } 
 + release { 
 minifyEnabled false 
 + buildConfigField " String " , " OBJECT _ SERVER _ IP " , " \ " $ { host } \ " " 
 } 
 } 
 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 index 5537ca1 . . accbf13 100644 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / CounterActivity . java 
 @ @ - 23 , 24 + 23 , 23 @ @ import android . view . Menu ; 
 import android . view . MenuItem ; 
 import android . widget . TextView ; 
 
 + import java . util . Locale ; 
 + 
 import butterknife . BindView ; 
 import butterknife . ButterKnife ; 
 import butterknife . OnClick ; 
 import io . realm . Realm ; 
 import io . realm . RealmChangeListener ; 
 - import io . realm . RealmResults ; 
 - import io . realm . examples . objectserver . model . CRDTCounter ; 
 - import io . realm . examples . objectserver . model . CounterOperation ; 
 import io . realm . SyncConfiguration ; 
 - import io . realm . SyncManager ; 
 import io . realm . User ; 
 + import io . realm . examples . objectserver . model . CRDTCounter ; 
 
 public class CounterActivity extends AppCompatActivity { 
 
 - private static final String REALM _ URL = " realm : / / " + MyApplication . OBJECT _ SERVER _ IP + " : 7800 / ~ / default " ; 
 + private static final String REALM _ URL = " realm : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / ~ / default " ; 
 
 private Realm realm ; 
 - private RealmResults < CounterOperation > counter ; 
 + private CRDTCounter counter ; 
 private User user ; 
 
 @ BindView ( R . id . text _ counter ) TextView counterView ; 
 @ @ - 67 , 10 + 66 , 7 @ @ public class CounterActivity extends AppCompatActivity { 
 . initialData ( new Realm . Transaction ( ) { 
 @ Override 
 public void execute ( Realm realm ) { 
 - / / Workaround for initialData right now https : / / github . com / realm / realm - java - private / issues / 164 
 - if ( realm . isEmpty ( ) ) { 
 - realm . createObject ( CRDTCounter . class , 1 ) ; 
 - } 
 + realm . createObject ( CRDTCounter . class , 1 ) ; 
 } 
 } ) 
 . build ( ) ; 
 @ @ - 78 , 30 + 74 , 14 @ @ public class CounterActivity extends AppCompatActivity { 
 / / This will automatically sync all changes in the background for as long as the Realm is open 
 realm = Realm . getInstance ( config ) ; 
 
 - / / FIXME Looks like PrimaryKey and lists are not working correctly yet 
 - / / FIXME Also need support for the ` setDefault ` instruction for this to make sense . 
 - / / counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; 
 - / / counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { 
 - / / @ Override 
 - / / public void onChange ( CRDTCounter counter ) { 
 - / / if ( counter . isValid ( ) ) { 
 - / / counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; 
 - / / } else { 
 - / / counterView . setText ( " - " ) ; 
 - / / } 
 - / / } 
 - / / } ) ; 
 - 
 - counter = realm . where ( CounterOperation . class ) . findAllAsync ( ) ; 
 - counter . addChangeListener ( new RealmChangeListener < RealmResults < CounterOperation > > ( ) { 
 + counter = realm . where ( CRDTCounter . class ) . findFirstAsync ( ) ; 
 + counter . addChangeListener ( new RealmChangeListener < CRDTCounter > ( ) { 
 @ Override 
 - public void onChange ( RealmResults < CounterOperation > result ) { 
 - / / FIXME Why isn ' t this triggered when the DB is opened ? 
 - Number sum = result . sum ( " adjustment " ) ; 
 - if ( sum ! = null ) { 
 - counterView . setText ( Long . toString ( sum . longValue ( ) ) ) ; 
 + public void onChange ( CRDTCounter counter ) { 
 + if ( counter . isValid ( ) ) { 
 + counterView . setText ( String . format ( Locale . US , " % d " , counter . getCount ( ) ) ) ; 
 } else { 
 - counterView . setText ( " 0 " ) ; 
 + counterView . setText ( " - " ) ; 
 } 
 } 
 } ) ; 
 @ @ - 144 , 21 + 124 , 22 @ @ public class CounterActivity extends AppCompatActivity { 
 
 @ OnClick ( R . id . upper ) 
 public void incrementCounter ( ) { 
 - adjustCounter ( new CounterOperation ( 1 ) ) ; 
 + adjustCounter ( 1 ) ; 
 } 
 
 @ OnClick ( R . id . lower ) 
 public void decrementCounter ( ) { 
 - adjustCounter ( new CounterOperation ( - 1 ) ) ; 
 + adjustCounter ( - 1 ) ; 
 } 
 
 - private void adjustCounter ( final CounterOperation ops ) { 
 + private void adjustCounter ( final int adjustment ) { 
 / / A synchronized Realm can get written to at any point in time , so doing synchronous writes on the UI 
 / / thread is HIGHLY discouraged as it might block longer than intended . Only use async transactions . 
 realm . executeTransactionAsync ( new Realm . Transaction ( ) { 
 @ Override 
 public void execute ( Realm realm ) { 
 - realm . copyToRealm ( ops ) ; 
 + CRDTCounter counter = realm . where ( CRDTCounter . class ) . findFirst ( ) ; 
 + counter . add ( adjustment ) ; 
 } 
 } ) ; 
 } 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 index bd02d2d . . 7018e8b 100644 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / LoginActivity . java 
 @ @ - 77 , 7 + 77 , 7 @ @ public class LoginActivity extends AppCompatActivity { 
 String password = this . password . getText ( ) . toString ( ) ; 
 
 Credentials creds = Credentials . usernamePassword ( username , password , createUser ) ; 
 - String authUrl = " http : / / " + MyApplication . OBJECT _ SERVER _ IP + " : 8080 / auth " ; 
 + String authUrl = " http : / / " + BuildConfig . OBJECT _ SERVER _ IP + " : 9080 / auth " ; 
 User . Callback callback = new User . Callback ( ) { 
 @ Override 
 public void onSuccess ( User user ) { 
 diff - - git a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java 
 index 05d7567 . . 45050d8 100644 
 - - - a / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java 
 + + + b / examples / objectServerExample / src / main / java / io / realm / examples / objectserver / MyApplication . java 
 @ @ - 25 , 7 + 25 , 6 @ @ import io . realm . log . RealmLog ; 
 
 public class MyApplication extends Application { 
 
 - public static final String OBJECT _ SERVER _ IP = " 192 . 168 . 104 . 22 " ; 
 @ Override 
 public void onCreate ( ) { 
 super . onCreate ( ) ;
