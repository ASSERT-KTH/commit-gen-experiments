BLEU SCORE: 0.06567274736060397

TEST MSG: Remove HandlerController from the public API .
GENERATED MSG: Added unit test .

TEST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index 8df16d6 . . 165b014 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 1 , 5 + 1 , 9 @ @ <nl> # # 0 . 90 . 0 <nl> <nl> + # # # Breaking changes <nl> + <nl> + * Removed ` HandlerController ` from the public API . <nl> + <nl> # # # Deprecated <nl> <nl> * ` RealmConfiguration . setModules ( ) ` . Use ` RealmConfiguration . modules ( ) ` instead . <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> index 7069da0 . . d5de2ab 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java <nl> @ @ - 43 , 7 + 43 , 6 @ @ import io . realm . entities . PrimaryKeyAsBoxedLong ; <nl> import io . realm . entities . PrimaryKeyAsBoxedShort ; <nl> import io . realm . entities . PrimaryKeyAsString ; <nl> import io . realm . internal . log . RealmLog ; <nl> - import io . realm . proxy . HandlerProxy ; <nl> import io . realm . rule . RunInLooperThread ; <nl> import io . realm . rule . RunTestInLooperThread ; <nl> import io . realm . rule . TestRealmConfigurationFactory ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java b / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java <nl> new file mode 100644 <nl> index 0000000 . . 1ba7760 <nl> - - - / dev / null <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java <nl> @ @ - 0 , 0 + 1 , 84 @ @ <nl> + / * <nl> + * Copyright 2015 Realm Inc . <nl> + * <nl> + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> + * you may not use this file except in compliance with the License . <nl> + * You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package io . realm ; <nl> + <nl> + import android . os . Handler ; <nl> + import android . os . Message ; <nl> + <nl> + import io . realm . HandlerController ; <nl> + <nl> + / * * <nl> + * Handler decorator , to help intercept some messages before they are sent and received . <nl> + * / <nl> + abstract class HandlerProxy extends Handler { <nl> + <nl> + private final HandlerController controller ; <nl> + <nl> + public HandlerProxy ( HandlerController controller ) { <nl> + if ( null = = controller ) { <nl> + throw new IllegalArgumentException ( " non - null HandlerController required . " ) ; <nl> + } <nl> + this . controller = controller ; <nl> + } <nl> + <nl> + / * * <nl> + * @ see { @ link Handler # postAtFrontOfQueue ( Runnable ) } <nl> + * / <nl> + public void postAtFront ( Runnable runnable ) { <nl> + if ( onInterceptOutMessage ( 0 ) ) { <nl> + postAtFrontOfQueue ( runnable ) ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public boolean sendMessageAtTime ( Message msg , long uptimeMillis ) { <nl> + boolean eventConsumed = onInterceptOutMessage ( msg . what ) ; <nl> + return ! eventConsumed & & super . sendMessageAtTime ( msg , uptimeMillis ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void handleMessage ( Message msg ) { <nl> + boolean eventConsumed = onInterceptInMessage ( msg . what ) ; <nl> + if ( ! eventConsumed ) { <nl> + controller . handleMessage ( msg ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Intercepts a message as it is being posted . Return { @ code false } to continue sending it . { @ code true } to <nl> + * swallow it . <nl> + * <nl> + * This method will be executed on the thread sending the message . <nl> + * <nl> + * @ return { @ code true } if message should be swallowed . { @ code false } to continue processing it . <nl> + * / <nl> + protected boolean onInterceptOutMessage ( int what ) { <nl> + return false ; <nl> + } <nl> + <nl> + / * * <nl> + * Intercepts a message as it is being received . Return { @ code false } to let subclasses continue the handling . <nl> + * { @ code true } to swallow it . <nl> + * <nl> + * This method will be executed on the thread of the Looper backing the Handler <nl> + * <nl> + * @ return { @ code true } if message should be swallowed . { @ code false } to continue processing it . <nl> + * / <nl> + protected boolean onInterceptInMessage ( int what ) { <nl> + return false ; <nl> + } <nl> + } <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> index 416a022 . . c4740fa 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> @ @ - 43 , 7 + 43 , 6 @ @ import io . realm . entities . Owner ; <nl> import io . realm . instrumentation . MockActivityManager ; <nl> import io . realm . internal . async . RealmThreadPoolExecutor ; <nl> import io . realm . internal . log . RealmLog ; <nl> - import io . realm . proxy . HandlerProxy ; <nl> import io . realm . rule . RunInLooperThread ; <nl> import io . realm . rule . RunTestInLooperThread ; <nl> import io . realm . rule . TestRealmConfigurationFactory ; <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / proxy / HandlerProxy . java b / realm / realm - library / src / androidTest / java / io / realm / proxy / HandlerProxy . java <nl> deleted file mode 100644 <nl> index 95d5797 . . 0000000 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / proxy / HandlerProxy . java <nl> + + + / dev / null <nl> @ @ - 1 , 84 + 0 , 0 @ @ <nl> - / * <nl> - * Copyright 2015 Realm Inc . <nl> - * <nl> - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - * you may not use this file except in compliance with the License . <nl> - * You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - <nl> - package io . realm . proxy ; <nl> - <nl> - import android . os . Handler ; <nl> - import android . os . Message ; <nl> - <nl> - import io . realm . HandlerController ; <nl> - <nl> - / * * <nl> - * Handler decorator , to help intercept some messages before they are sent and received . <nl> - * / <nl> - public abstract class HandlerProxy extends Handler { <nl> - <nl> - private final HandlerController controller ; <nl> - <nl> - public HandlerProxy ( HandlerController controller ) { <nl> - if ( null = = controller ) { <nl> - throw new IllegalArgumentException ( " non - null HandlerController required . " ) ; <nl> - } <nl> - this . controller = controller ; <nl> - } <nl> - <nl> - / * * <nl> - * @ see { @ link Handler # postAtFrontOfQueue ( Runnable ) } <nl> - * / <nl> - public void postAtFront ( Runnable runnable ) { <nl> - if ( onInterceptOutMessage ( 0 ) ) { <nl> - postAtFrontOfQueue ( runnable ) ; <nl> - } <nl> - } <nl> - <nl> - @ Override <nl> - public boolean sendMessageAtTime ( Message msg , long uptimeMillis ) { <nl> - boolean eventConsumed = onInterceptOutMessage ( msg . what ) ; <nl> - return ! eventConsumed & & super . sendMessageAtTime ( msg , uptimeMillis ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public void handleMessage ( Message msg ) { <nl> - boolean eventConsumed = onInterceptInMessage ( msg . what ) ; <nl> - if ( ! eventConsumed ) { <nl> - controller . handleMessage ( msg ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Intercepts a message as it is being posted . Return { @ code false } to continue sending it . { @ code true } to <nl> - * swallow it . <nl> - * <nl> - * This method will be executed on the thread sending the message . <nl> - * <nl> - * @ return { @ code true } if message should be swallowed . { @ code false } to continue processing it . <nl> - * / <nl> - protected boolean onInterceptOutMessage ( int what ) { <nl> - return false ; <nl> - } <nl> - <nl> - / * * <nl> - * Intercepts a message as it is being received . Return { @ code false } to let subclasses continue the handling . <nl> - * { @ code true } to swallow it . <nl> - * <nl> - * This method will be executed on the thread of the Looper backing the Handler <nl> - * <nl> - * @ return { @ code true } if message should be swallowed . { @ code false } to continue processing it . <nl> - * / <nl> - protected boolean onInterceptInMessage ( int what ) { <nl> - return false ; <nl> - } <nl> - } <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / HandlerController . java b / realm / realm - library / src / main / java / io / realm / HandlerController . java <nl> index 160d38d . . 5b4185f 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / HandlerController . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / HandlerController . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ import io . realm . internal . log . RealmLog ; <nl> / * * <nl> * Centralises all Handler callbacks , including updating async queries and refreshing the Realm . <nl> * / <nl> - public final class HandlerController implements Handler . Callback { <nl> + final class HandlerController implements Handler . Callback { <nl> <nl> static final int REALM _ CHANGED = 14930352 ; / / Hopefully it won ' t clash with other message IDs . <nl> static final int COMPLETED _ UPDATE _ ASYNC _ QUERIES = 24157817 ;
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / java / io / realm / RealmListTest . java b / realm / src / androidTest / java / io / realm / RealmListTest . java <nl> index 3e63bb0 . . 359aaf6 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmListTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmListTest . java <nl> @ @ - 351 , 6 + 351 , 17 @ @ public class RealmListTest extends AndroidTestCase { <nl> assertEquals ( TEST _ OBJECTS - 1 , dogs . size ( ) ) ; <nl> } <nl> <nl> + public void testRemoveLast ( ) { <nl> + Owner owner = testRealm . where ( Owner . class ) . findFirst ( ) ; <nl> + RealmList < Dog > dogs = owner . getDogs ( ) ; <nl> + <nl> + testRealm . beginTransaction ( ) ; <nl> + dogs . remove ( TEST _ OBJECTS - 1 ) ; <nl> + testRealm . commitTransaction ( ) ; <nl> + <nl> + assertEquals ( TEST _ OBJECTS - 1 , dogs . size ( ) ) ; <nl> + } <nl> + <nl> public void testRemoveByObject ( ) { <nl> Owner owner = testRealm . where ( Owner . class ) . findFirst ( ) ; <nl> RealmList < Dog > dogs = owner . getDogs ( ) ;

TEST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index 8df16d6 . . 165b014 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 1 , 5 + 1 , 9 @ @ 
 # # 0 . 90 . 0 
 
 + # # # Breaking changes 
 + 
 + * Removed ` HandlerController ` from the public API . 
 + 
 # # # Deprecated 
 
 * ` RealmConfiguration . setModules ( ) ` . Use ` RealmConfiguration . modules ( ) ` instead . 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 index 7069da0 . . d5de2ab 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / DynamicRealmTests . java 
 @ @ - 43 , 7 + 43 , 6 @ @ import io . realm . entities . PrimaryKeyAsBoxedLong ; 
 import io . realm . entities . PrimaryKeyAsBoxedShort ; 
 import io . realm . entities . PrimaryKeyAsString ; 
 import io . realm . internal . log . RealmLog ; 
 - import io . realm . proxy . HandlerProxy ; 
 import io . realm . rule . RunInLooperThread ; 
 import io . realm . rule . RunTestInLooperThread ; 
 import io . realm . rule . TestRealmConfigurationFactory ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java b / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java 
 new file mode 100644 
 index 0000000 . . 1ba7760 
 - - - / dev / null 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / HandlerProxy . java 
 @ @ - 0 , 0 + 1 , 84 @ @ 
 + / * 
 + * Copyright 2015 Realm Inc . 
 + * 
 + * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 + * you may not use this file except in compliance with the License . 
 + * You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package io . realm ; 
 + 
 + import android . os . Handler ; 
 + import android . os . Message ; 
 + 
 + import io . realm . HandlerController ; 
 + 
 + / * * 
 + * Handler decorator , to help intercept some messages before they are sent and received . 
 + * / 
 + abstract class HandlerProxy extends Handler { 
 + 
 + private final HandlerController controller ; 
 + 
 + public HandlerProxy ( HandlerController controller ) { 
 + if ( null = = controller ) { 
 + throw new IllegalArgumentException ( " non - null HandlerController required . " ) ; 
 + } 
 + this . controller = controller ; 
 + } 
 + 
 + / * * 
 + * @ see { @ link Handler # postAtFrontOfQueue ( Runnable ) } 
 + * / 
 + public void postAtFront ( Runnable runnable ) { 
 + if ( onInterceptOutMessage ( 0 ) ) { 
 + postAtFrontOfQueue ( runnable ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public boolean sendMessageAtTime ( Message msg , long uptimeMillis ) { 
 + boolean eventConsumed = onInterceptOutMessage ( msg . what ) ; 
 + return ! eventConsumed & & super . sendMessageAtTime ( msg , uptimeMillis ) ; 
 + } 
 + 
 + @ Override 
 + public void handleMessage ( Message msg ) { 
 + boolean eventConsumed = onInterceptInMessage ( msg . what ) ; 
 + if ( ! eventConsumed ) { 
 + controller . handleMessage ( msg ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * Intercepts a message as it is being posted . Return { @ code false } to continue sending it . { @ code true } to 
 + * swallow it . 
 + * 
 + * This method will be executed on the thread sending the message . 
 + * 
 + * @ return { @ code true } if message should be swallowed . { @ code false } to continue processing it . 
 + * / 
 + protected boolean onInterceptOutMessage ( int what ) { 
 + return false ; 
 + } 
 + 
 + / * * 
 + * Intercepts a message as it is being received . Return { @ code false } to let subclasses continue the handling . 
 + * { @ code true } to swallow it . 
 + * 
 + * This method will be executed on the thread of the Looper backing the Handler 
 + * 
 + * @ return { @ code true } if message should be swallowed . { @ code false } to continue processing it . 
 + * / 
 + protected boolean onInterceptInMessage ( int what ) { 
 + return false ; 
 + } 
 + } 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 index 416a022 . . c4740fa 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 @ @ - 43 , 7 + 43 , 6 @ @ import io . realm . entities . Owner ; 
 import io . realm . instrumentation . MockActivityManager ; 
 import io . realm . internal . async . RealmThreadPoolExecutor ; 
 import io . realm . internal . log . RealmLog ; 
 - import io . realm . proxy . HandlerProxy ; 
 import io . realm . rule . RunInLooperThread ; 
 import io . realm . rule . RunTestInLooperThread ; 
 import io . realm . rule . TestRealmConfigurationFactory ; 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / proxy / HandlerProxy . java b / realm / realm - library / src / androidTest / java / io / realm / proxy / HandlerProxy . java 
 deleted file mode 100644 
 index 95d5797 . . 0000000 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / proxy / HandlerProxy . java 
 + + + / dev / null 
 @ @ - 1 , 84 + 0 , 0 @ @ 
 - / * 
 - * Copyright 2015 Realm Inc . 
 - * 
 - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - * you may not use this file except in compliance with the License . 
 - * You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - 
 - package io . realm . proxy ; 
 - 
 - import android . os . Handler ; 
 - import android . os . Message ; 
 - 
 - import io . realm . HandlerController ; 
 - 
 - / * * 
 - * Handler decorator , to help intercept some messages before they are sent and received . 
 - * / 
 - public abstract class HandlerProxy extends Handler { 
 - 
 - private final HandlerController controller ; 
 - 
 - public HandlerProxy ( HandlerController controller ) { 
 - if ( null = = controller ) { 
 - throw new IllegalArgumentException ( " non - null HandlerController required . " ) ; 
 - } 
 - this . controller = controller ; 
 - } 
 - 
 - / * * 
 - * @ see { @ link Handler # postAtFrontOfQueue ( Runnable ) } 
 - * / 
 - public void postAtFront ( Runnable runnable ) { 
 - if ( onInterceptOutMessage ( 0 ) ) { 
 - postAtFrontOfQueue ( runnable ) ; 
 - } 
 - } 
 - 
 - @ Override 
 - public boolean sendMessageAtTime ( Message msg , long uptimeMillis ) { 
 - boolean eventConsumed = onInterceptOutMessage ( msg . what ) ; 
 - return ! eventConsumed & & super . sendMessageAtTime ( msg , uptimeMillis ) ; 
 - } 
 - 
 - @ Override 
 - public void handleMessage ( Message msg ) { 
 - boolean eventConsumed = onInterceptInMessage ( msg . what ) ; 
 - if ( ! eventConsumed ) { 
 - controller . handleMessage ( msg ) ; 
 - } 
 - } 
 - 
 - / * * 
 - * Intercepts a message as it is being posted . Return { @ code false } to continue sending it . { @ code true } to 
 - * swallow it . 
 - * 
 - * This method will be executed on the thread sending the message . 
 - * 
 - * @ return { @ code true } if message should be swallowed . { @ code false } to continue processing it . 
 - * / 
 - protected boolean onInterceptOutMessage ( int what ) { 
 - return false ; 
 - } 
 - 
 - / * * 
 - * Intercepts a message as it is being received . Return { @ code false } to let subclasses continue the handling . 
 - * { @ code true } to swallow it . 
 - * 
 - * This method will be executed on the thread of the Looper backing the Handler 
 - * 
 - * @ return { @ code true } if message should be swallowed . { @ code false } to continue processing it . 
 - * / 
 - protected boolean onInterceptInMessage ( int what ) { 
 - return false ; 
 - } 
 - } 
 diff - - git a / realm / realm - library / src / main / java / io / realm / HandlerController . java b / realm / realm - library / src / main / java / io / realm / HandlerController . java 
 index 160d38d . . 5b4185f 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / HandlerController . java 
 + + + b / realm / realm - library / src / main / java / io / realm / HandlerController . java 
 @ @ - 43 , 7 + 43 , 7 @ @ import io . realm . internal . log . RealmLog ; 
 / * * 
 * Centralises all Handler callbacks , including updating async queries and refreshing the Realm . 
 * / 
 - public final class HandlerController implements Handler . Callback { 
 + final class HandlerController implements Handler . Callback { 
 
 static final int REALM _ CHANGED = 14930352 ; / / Hopefully it won ' t clash with other message IDs . 
 static final int COMPLETED _ UPDATE _ ASYNC _ QUERIES = 24157817 ;

NEAREST DIFF:
diff - - git a / realm / src / androidTest / java / io / realm / RealmListTest . java b / realm / src / androidTest / java / io / realm / RealmListTest . java 
 index 3e63bb0 . . 359aaf6 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmListTest . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmListTest . java 
 @ @ - 351 , 6 + 351 , 17 @ @ public class RealmListTest extends AndroidTestCase { 
 assertEquals ( TEST _ OBJECTS - 1 , dogs . size ( ) ) ; 
 } 
 
 + public void testRemoveLast ( ) { 
 + Owner owner = testRealm . where ( Owner . class ) . findFirst ( ) ; 
 + RealmList < Dog > dogs = owner . getDogs ( ) ; 
 + 
 + testRealm . beginTransaction ( ) ; 
 + dogs . remove ( TEST _ OBJECTS - 1 ) ; 
 + testRealm . commitTransaction ( ) ; 
 + 
 + assertEquals ( TEST _ OBJECTS - 1 , dogs . size ( ) ) ; 
 + } 
 + 
 public void testRemoveByObject ( ) { 
 Owner owner = testRealm . where ( Owner . class ) . findFirst ( ) ; 
 RealmList < Dog > dogs = owner . getDogs ( ) ;
