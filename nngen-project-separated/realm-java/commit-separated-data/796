BLEU SCORE: 0.05522397783539471

TEST MSG: Add test case for getInstance ( Context )
GENERATED MSG: Adding a unit test to check string encoding

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> index b1bec7b . . 6f00668 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> @ @ - 237 , 6 + 237 , 20 @ @ public class RealmTests { <nl> } <nl> <nl> @ Test <nl> + public void getInstance _ context ( ) { <nl> + RealmConfiguration config = new RealmConfiguration . Builder ( context ) . build ( ) ; <nl> + Realm . deleteRealm ( config ) ; <nl> + <nl> + Realm testRealm = Realm . getInstance ( context ) ; <nl> + assertNotNull ( " Realm . getInstance unexpectedly returns null " , testRealm ) ; <nl> + assertTrue ( " Realm . getInstance does not contain expected table " , testRealm . contains ( AllTypes . class ) ) ; <nl> + config = testRealm . getConfiguration ( ) ; <nl> + config . getRealmFolder ( ) . equals ( context . getFilesDir ( ) ) ; <nl> + testRealm . close ( ) ; <nl> + Realm . deleteRealm ( config ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void getInstance _ nullContext ( ) { <nl> Realm realm = null ; <nl> try {
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / java / io / realm / RealmObjectTest . java b / realm / src / androidTest / java / io / realm / RealmObjectTest . java <nl> index 4bfbe71 . . 221f81c 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmObjectTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmObjectTest . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ <nl> package io . realm ; <nl> <nl> import android . test . AndroidTestCase ; <nl> + <nl> import io . realm . entities . AllTypes ; <nl> import io . realm . internal . Row ; <nl> <nl> @ @ - 47 , 4 + 48 , 25 @ @ public class RealmObjectTest extends AndroidTestCase { <nl> assertEquals ( " RealmObject . realmGetRow seems to return wrong row type : " , 8 , row . getColumnCount ( ) ) ; <nl> } <nl> <nl> + public void testStringEncoding ( ) { <nl> + String [ ] strings = { " ABCD " , " Æ Ø Å " , " Ö ∫ Ë " , " Π Α Ο Κ " , " З д р а в е й " } ; <nl> + <nl> + testRealm . beginTransaction ( ) ; <nl> + testRealm . clear ( AllTypes . class ) ; <nl> + <nl> + for ( String str : strings ) { <nl> + AllTypes obj1 = testRealm . createObject ( AllTypes . class ) ; <nl> + obj1 . setColumnString ( str ) ; <nl> + } <nl> + testRealm . commitTransaction ( ) ; <nl> + <nl> + RealmResults < AllTypes > objects = testRealm . allObjects ( AllTypes . class ) ; <nl> + assertEquals ( strings . length , objects . size ( ) ) ; <nl> + int i = 0 ; <nl> + for ( AllTypes obj : objects ) { <nl> + String s = obj . getColumnString ( ) ; <nl> + assertEquals ( strings [ i ] , s ) ; <nl> + i + + ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index b02ba2e . . a7e3d92 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 591 , 8 + 591 , 10 @ @ public class Realm { <nl> / * * <nl> * Delete the Realm file from the filesystem for the default Realm ( named " default . realm " ) . <nl> * The realm must be unused and closed before calling this method . <nl> + * WARNING : Your Realm must not be open ( typically when your app launch ) . <nl> * @ param context an Android context . <nl> * @ return false if a file could not be deleted . The failing file will be logged . <nl> + * @ see io . realm . Realm # clear ( Class ) <nl> * / <nl> public static boolean deleteRealmFile ( Context context ) { <nl> return deleteRealmFile ( context , DEFAULT _ REALM _ NAME ) ;

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 index b1bec7b . . 6f00668 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 @ @ - 237 , 6 + 237 , 20 @ @ public class RealmTests { 
 } 
 
 @ Test 
 + public void getInstance _ context ( ) { 
 + RealmConfiguration config = new RealmConfiguration . Builder ( context ) . build ( ) ; 
 + Realm . deleteRealm ( config ) ; 
 + 
 + Realm testRealm = Realm . getInstance ( context ) ; 
 + assertNotNull ( " Realm . getInstance unexpectedly returns null " , testRealm ) ; 
 + assertTrue ( " Realm . getInstance does not contain expected table " , testRealm . contains ( AllTypes . class ) ) ; 
 + config = testRealm . getConfiguration ( ) ; 
 + config . getRealmFolder ( ) . equals ( context . getFilesDir ( ) ) ; 
 + testRealm . close ( ) ; 
 + Realm . deleteRealm ( config ) ; 
 + } 
 + 
 + @ Test 
 public void getInstance _ nullContext ( ) { 
 Realm realm = null ; 
 try {

NEAREST DIFF:
diff - - git a / realm / src / androidTest / java / io / realm / RealmObjectTest . java b / realm / src / androidTest / java / io / realm / RealmObjectTest . java 
 index 4bfbe71 . . 221f81c 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmObjectTest . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmObjectTest . java 
 @ @ - 17 , 6 + 17 , 7 @ @ 
 package io . realm ; 
 
 import android . test . AndroidTestCase ; 
 + 
 import io . realm . entities . AllTypes ; 
 import io . realm . internal . Row ; 
 
 @ @ - 47 , 4 + 48 , 25 @ @ public class RealmObjectTest extends AndroidTestCase { 
 assertEquals ( " RealmObject . realmGetRow seems to return wrong row type : " , 8 , row . getColumnCount ( ) ) ; 
 } 
 
 + public void testStringEncoding ( ) { 
 + String [ ] strings = { " ABCD " , " Æ Ø Å " , " Ö ∫ Ë " , " Π Α Ο Κ " , " З д р а в е й " } ; 
 + 
 + testRealm . beginTransaction ( ) ; 
 + testRealm . clear ( AllTypes . class ) ; 
 + 
 + for ( String str : strings ) { 
 + AllTypes obj1 = testRealm . createObject ( AllTypes . class ) ; 
 + obj1 . setColumnString ( str ) ; 
 + } 
 + testRealm . commitTransaction ( ) ; 
 + 
 + RealmResults < AllTypes > objects = testRealm . allObjects ( AllTypes . class ) ; 
 + assertEquals ( strings . length , objects . size ( ) ) ; 
 + int i = 0 ; 
 + for ( AllTypes obj : objects ) { 
 + String s = obj . getColumnString ( ) ; 
 + assertEquals ( strings [ i ] , s ) ; 
 + i + + ; 
 + } 
 + } 
 } 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index b02ba2e . . a7e3d92 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 591 , 8 + 591 , 10 @ @ public class Realm { 
 / * * 
 * Delete the Realm file from the filesystem for the default Realm ( named " default . realm " ) . 
 * The realm must be unused and closed before calling this method . 
 + * WARNING : Your Realm must not be open ( typically when your app launch ) . 
 * @ param context an Android context . 
 * @ return false if a file could not be deleted . The failing file will be logged . 
 + * @ see io . realm . Realm # clear ( Class ) 
 * / 
 public static boolean deleteRealmFile ( Context context ) { 
 return deleteRealmFile ( context , DEFAULT _ REALM _ NAME ) ;
