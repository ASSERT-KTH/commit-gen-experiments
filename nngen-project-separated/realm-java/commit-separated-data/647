BLEU SCORE: 0.10014525608798037

TEST MSG: Fix metrics collection
GENERATED MSG: Fix some issues regarding Jenkinsfile and master

TEST DIFF (one line): diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index a68e00d . . ba704d0 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 58 , 9 + 58 , 8 @ @ try { <nl> collectAarMetrics ( ) <nl> <nl> stage ' Publish to OJO ' <nl> - withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' bintray ' , passwordVariable : ' BINTRAY _ USER ' , usernameVariable : ' BINTRAY _ KEY ' ] ] ) { <nl> - sh " chmod + x gradlew & & . / gradlew - DbintrayUser = $ { env . BINTRAY _ USER } - DbintrayKey = $ { env . BINTRAY _ KEY } assemble ojoUpload - - stacktrace " <nl> - gradle ' assemble ojoUpload ' <nl> + withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' bintray ' , passwordVariable : ' BINTRAY _ KEY ' , usernameVariable : ' BINTRAY _ USER ' ] ] ) { <nl> + sh " chmod + x gradlew & & . / gradlew - PbintrayUser = $ { env . BINTRAY _ USER } - PbintrayKey = $ { env . BINTRAY _ KEY } assemble ojoUpload - - stacktrace " <nl> } <nl> } <nl> } <nl> @ @ - 112 , 14 + 111 , 12 @ @ def stopLogCatCollector ( String backgroundPid , boolean archiveLog ) { <nl> sh ' rm logcat . txt ' <nl> } <nl> <nl> - @ NonCPS <nl> def sendMetrics ( String metric , String value ) { <nl> withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { <nl> sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " <nl> } <nl> } <nl> <nl> - @ NonCPS <nl> def sendTaggedMetric ( String metric , String value , String tagName , String tagValue ) { <nl> withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { <nl> sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } , $ { tagName } = $ { tagValue } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " <nl> @ @ - 133 , 7 + 130 , 6 @ @ def storeJunitResults ( String path ) { <nl> ] ) <nl> } <nl> <nl> - @ NonCPS <nl> def collectAarMetrics ( ) { <nl> sh ' ' ' set - xe <nl> cd realm / realm - library / build / outputs / aar <nl> @ @ - 146 , 13 + 142 , 13 @ @ def collectAarMetrics ( ) { <nl> sendMetrics ( ' methods ' , readFile ( ' realm / realm - library / build / outputs / aar / methods ' ) ) <nl> <nl> def aarFile = findFiles ( glob : ' realm / realm - library / build / outputs / aar / realm - android - library - release . aar ' ) [ 0 ] <nl> - sendMetrics ( ' aar _ size ' , String . valueOf ( aarFile . length ) ) <nl> + sendMetrics ( ' aar _ size ' , aarFile . length as String ) <nl> <nl> - def rootFolder = findFiles ( glob : ' realm / realm - library / build / outputs / aar / unzipped / jni ' ) [ 0 ] <nl> - rootFolder . traverse ( type : DIRECTORIES ) { folder - > <nl> - def abiName = folder . name ( ) <nl> - def libSize = new File ( folder , ' librealm - jni . so ' ) . size ( ) as String <nl> - sendTaggedMetric ( ' abi _ size ' , libSize , ' type ' , abiName ) <nl> + def soFiles = findFiles ( glob : ' realm / realm - library / build / outputs / aar / unzipped / jni / * / librealm - jni . so ' ) <nl> + for ( int i = 0 ; i < soFiles . length ; i + + ) { <nl> + def abiName = soFiles [ i ] . path . tokenize ( ' / ' ) [ - 2 ] <nl> + def libSize = soFiles [ i ] . length as String <nl> + sendTaggedMetric ( ' abi _ size ' , libSize , ' type ' , abiName ) <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index 5a74dd6 . . a68e00d 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 58 , 7 + 58 , 10 @ @ try { <nl> collectAarMetrics ( ) <nl> <nl> stage ' Publish to OJO ' <nl> - gradle ' assemble ojoUpload ' <nl> + withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' bintray ' , passwordVariable : ' BINTRAY _ USER ' , usernameVariable : ' BINTRAY _ KEY ' ] ] ) { <nl> + sh " chmod + x gradlew & & . / gradlew - DbintrayUser = $ { env . BINTRAY _ USER } - DbintrayKey = $ { env . BINTRAY _ KEY } assemble ojoUpload - - stacktrace " <nl> + gradle ' assemble ojoUpload ' <nl> + } <nl> } <nl> } <nl> } <nl> @ @ - 109 , 12 + 112 , 14 @ @ def stopLogCatCollector ( String backgroundPid , boolean archiveLog ) { <nl> sh ' rm logcat . txt ' <nl> } <nl> <nl> + @ NonCPS <nl> def sendMetrics ( String metric , String value ) { <nl> withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { <nl> sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " <nl> } <nl> } <nl> <nl> + @ NonCPS <nl> def sendTaggedMetric ( String metric , String value , String tagName , String tagValue ) { <nl> withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { <nl> sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } , $ { tagName } = $ { tagValue } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " <nl> @ @ - 128 , 6 + 133 , 7 @ @ def storeJunitResults ( String path ) { <nl> ] ) <nl> } <nl> <nl> + @ NonCPS <nl> def collectAarMetrics ( ) { <nl> sh ' ' ' set - xe <nl> cd realm / realm - library / build / outputs / aar <nl> @ @ - 136 , 11 + 142 , 13 @ @ def collectAarMetrics ( ) { <nl> $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar <nl> cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods <nl> ' ' ' <nl> + <nl> sendMetrics ( ' methods ' , readFile ( ' realm / realm - library / build / outputs / aar / methods ' ) ) <nl> <nl> - sendMetrics ( ' aar _ size ' , new File ( ' realm / realm - library / build / outputs / aar / realm - android - library - release . aar ' ) . length ( ) ) <nl> + def aarFile = findFiles ( glob : ' realm / realm - library / build / outputs / aar / realm - android - library - release . aar ' ) [ 0 ] <nl> + sendMetrics ( ' aar _ size ' , String . valueOf ( aarFile . length ) ) <nl> <nl> - def rootFolder = new File ( ' realm / realm - library / build / outputs / aar / unzipped / jni ' ) <nl> + def rootFolder = findFiles ( glob : ' realm / realm - library / build / outputs / aar / unzipped / jni ' ) [ 0 ] <nl> rootFolder . traverse ( type : DIRECTORIES ) { folder - > <nl> def abiName = folder . name ( ) <nl> def libSize = new File ( folder , ' librealm - jni . so ' ) . size ( ) as String <nl> diff - - git a / build . gradle b / build . gradle <nl> index 83db45b . . fe532a9 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 83 , 7 + 83 , 7 @ @ task check { <nl> group = ' Test ' <nl> description = ' Run the JVM tests and checks in the realm and examples projects ' <nl> dependsOn checkRealm <nl> - dependsOn checkExamples <nl> + dependsOn checkExamples <nl> } <nl> <nl> task integrationTestsConnectedCheck ( type : GradleBuild ) { <nl> @ @ - 314 , 6 + 314 , 7 @ @ task bintrayRealm ( type : GradleBuild ) { <nl> group = ' Publishing ' <nl> buildFile = file ( ' realm / build . gradle ' ) <nl> tasks = [ ' bintrayUpload ' ] <nl> + startParameter . projectProperties = gradle . startParameter . projectProperties <nl> if ( project . hasProperty ( ' buildTargetABIs ' ) ) { <nl> startParameter . projectProperties + = [ buildTargetABIs : project . getProperty ( ' buildTargetABIs ' ) ] <nl> } <nl> @ @ - 323 , 6 + 324 , 7 @ @ task bintrayAnnotations ( type : GradleBuild ) { <nl> description = ' Publish the Realm Annotations to Bintray ' <nl> group = ' Publishing ' <nl> buildFile = file ( ' realm - annotations / build . gradle ' ) <nl> + startParameter . projectProperties = gradle . startParameter . projectProperties <nl> tasks = [ ' bintrayUpload ' ] <nl> } <nl> <nl> @ @ - 330 , 6 + 332 , 7 @ @ task bintrayGradlePlugin ( type : GradleBuild ) { <nl> description = ' Publish the Realm Gradle Plugin to Bintray ' <nl> group = ' Publishing ' <nl> buildFile = file ( ' gradle - plugin / build . gradle ' ) <nl> + startParameter . projectProperties = gradle . startParameter . projectProperties <nl> tasks = [ ' bintrayUpload ' ] <nl> } <nl> <nl> @ @ - 337 , 6 + 340 , 7 @ @ task bintrayTransformer ( type : GradleBuild ) { <nl> description = ' Publish the Realm Transformer to Bintray ' <nl> group = ' Publishing ' <nl> buildFile = file ( ' realm - transformer / build . gradle ' ) <nl> + startParameter . projectProperties = gradle . startParameter . projectProperties <nl> tasks = [ ' bintrayUpload ' ] <nl> } <nl> <nl> @ @ - 354 , 6 + 358 , 7 @ @ task ojoRealm ( type : GradleBuild ) { <nl> group = ' Publishing ' <nl> buildFile = file ( ' realm / build . gradle ' ) <nl> tasks = [ ' artifactoryPublish ' ] <nl> + startParameter . projectProperties = gradle . startParameter . projectProperties <nl> if ( project . hasProperty ( ' buildTargetABIs ' ) ) { <nl> startParameter . projectProperties + = [ buildTargetABIs : project . getProperty ( ' buildTargetABIs ' ) ] <nl> } <nl> @ @ - 363 , 6 + 368 , 7 @ @ task ojoAnnotations ( type : GradleBuild ) { <nl> description = ' Publish the Realm Annotations SNAPSHOT to Bintray ' <nl> group = ' Publishing ' <nl> buildFile = file ( ' realm - annotations / build . gradle ' ) <nl> + startParameter . projectProperties = gradle . startParameter . projectProperties <nl> tasks = [ ' artifactoryPublish ' ] <nl> } <nl> <nl> @ @ - 370 , 6 + 376 , 7 @ @ task ojoGradlePlugin ( type : GradleBuild ) { <nl> description = ' Publish the Realm Gradle Plugin SNAPSHOT to Bintray ' <nl> group = ' Publishing ' <nl> buildFile = file ( ' gradle - plugin / build . gradle ' ) <nl> + startParameter . projectProperties = gradle . startParameter . projectProperties <nl> tasks = [ ' artifactoryPublish ' ] <nl> } <nl> <nl> @ @ - 377 , 6 + 384 , 7 @ @ task ojoTransformer ( type : GradleBuild ) { <nl> description = ' Publish the Realm Transformer SNAPSHOT to Bintray ' <nl> group = ' Publishing ' <nl> buildFile = file ( ' realm - transformer / build . gradle ' ) <nl> + startParameter . projectProperties = gradle . startParameter . projectProperties <nl> tasks = [ ' artifactoryPublish ' ] <nl> } <nl>

TEST DIFF:
diff - - git a / Jenkinsfile b / Jenkinsfile 
 index a68e00d . . ba704d0 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 58 , 9 + 58 , 8 @ @ try { 
 collectAarMetrics ( ) 
 
 stage ' Publish to OJO ' 
 - withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' bintray ' , passwordVariable : ' BINTRAY _ USER ' , usernameVariable : ' BINTRAY _ KEY ' ] ] ) { 
 - sh " chmod + x gradlew & & . / gradlew - DbintrayUser = $ { env . BINTRAY _ USER } - DbintrayKey = $ { env . BINTRAY _ KEY } assemble ojoUpload - - stacktrace " 
 - gradle ' assemble ojoUpload ' 
 + withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' bintray ' , passwordVariable : ' BINTRAY _ KEY ' , usernameVariable : ' BINTRAY _ USER ' ] ] ) { 
 + sh " chmod + x gradlew & & . / gradlew - PbintrayUser = $ { env . BINTRAY _ USER } - PbintrayKey = $ { env . BINTRAY _ KEY } assemble ojoUpload - - stacktrace " 
 } 
 } 
 } 
 @ @ - 112 , 14 + 111 , 12 @ @ def stopLogCatCollector ( String backgroundPid , boolean archiveLog ) { 
 sh ' rm logcat . txt ' 
 } 
 
 - @ NonCPS 
 def sendMetrics ( String metric , String value ) { 
 withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { 
 sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " 
 } 
 } 
 
 - @ NonCPS 
 def sendTaggedMetric ( String metric , String value , String tagName , String tagValue ) { 
 withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { 
 sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } , $ { tagName } = $ { tagValue } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " 
 @ @ - 133 , 7 + 130 , 6 @ @ def storeJunitResults ( String path ) { 
 ] ) 
 } 
 
 - @ NonCPS 
 def collectAarMetrics ( ) { 
 sh ' ' ' set - xe 
 cd realm / realm - library / build / outputs / aar 
 @ @ - 146 , 13 + 142 , 13 @ @ def collectAarMetrics ( ) { 
 sendMetrics ( ' methods ' , readFile ( ' realm / realm - library / build / outputs / aar / methods ' ) ) 
 
 def aarFile = findFiles ( glob : ' realm / realm - library / build / outputs / aar / realm - android - library - release . aar ' ) [ 0 ] 
 - sendMetrics ( ' aar _ size ' , String . valueOf ( aarFile . length ) ) 
 + sendMetrics ( ' aar _ size ' , aarFile . length as String ) 
 
 - def rootFolder = findFiles ( glob : ' realm / realm - library / build / outputs / aar / unzipped / jni ' ) [ 0 ] 
 - rootFolder . traverse ( type : DIRECTORIES ) { folder - > 
 - def abiName = folder . name ( ) 
 - def libSize = new File ( folder , ' librealm - jni . so ' ) . size ( ) as String 
 - sendTaggedMetric ( ' abi _ size ' , libSize , ' type ' , abiName ) 
 + def soFiles = findFiles ( glob : ' realm / realm - library / build / outputs / aar / unzipped / jni / * / librealm - jni . so ' ) 
 + for ( int i = 0 ; i < soFiles . length ; i + + ) { 
 + def abiName = soFiles [ i ] . path . tokenize ( ' / ' ) [ - 2 ] 
 + def libSize = soFiles [ i ] . length as String 
 + sendTaggedMetric ( ' abi _ size ' , libSize , ' type ' , abiName ) 
 } 
 } 


NEAREST DIFF:
diff - - git a / Jenkinsfile b / Jenkinsfile 
 index 5a74dd6 . . a68e00d 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 58 , 7 + 58 , 10 @ @ try { 
 collectAarMetrics ( ) 
 
 stage ' Publish to OJO ' 
 - gradle ' assemble ojoUpload ' 
 + withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' bintray ' , passwordVariable : ' BINTRAY _ USER ' , usernameVariable : ' BINTRAY _ KEY ' ] ] ) { 
 + sh " chmod + x gradlew & & . / gradlew - DbintrayUser = $ { env . BINTRAY _ USER } - DbintrayKey = $ { env . BINTRAY _ KEY } assemble ojoUpload - - stacktrace " 
 + gradle ' assemble ojoUpload ' 
 + } 
 } 
 } 
 } 
 @ @ - 109 , 12 + 112 , 14 @ @ def stopLogCatCollector ( String backgroundPid , boolean archiveLog ) { 
 sh ' rm logcat . txt ' 
 } 
 
 + @ NonCPS 
 def sendMetrics ( String metric , String value ) { 
 withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { 
 sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " 
 } 
 } 
 
 + @ NonCPS 
 def sendTaggedMetric ( String metric , String value , String tagName , String tagValue ) { 
 withCredentials ( [ [ $ class : ' UsernamePasswordMultiBinding ' , credentialsId : ' 5b8ad2d9 - 61a4 - 43b5 - b4df - b8ff6b1f16fa ' , passwordVariable : ' influx _ pass ' , usernameVariable : ' influx _ user ' ] ] ) { 
 sh " curl - i - XPOST ' https : / / greatscott - pinheads - 70 . c . influxdb . com : 8086 / write ? db = realm ' - - data - binary ' $ { metric } , $ { tagName } = $ { tagValue } value = $ { value } i ' - - user ' $ { env . influx _ user } : $ { env . influx _ pass } ' " 
 @ @ - 128 , 6 + 133 , 7 @ @ def storeJunitResults ( String path ) { 
 ] ) 
 } 
 
 + @ NonCPS 
 def collectAarMetrics ( ) { 
 sh ' ' ' set - xe 
 cd realm / realm - library / build / outputs / aar 
 @ @ - 136 , 11 + 142 , 13 @ @ def collectAarMetrics ( ) { 
 $ ( cat dx ) - - dex - - output = temp . dex unzipped / classes . jar 
 cat temp . dex | head - c 92 | tail - c 4 | hexdump - e ' 1 / 4 " % d " ' > methods 
 ' ' ' 
 + 
 sendMetrics ( ' methods ' , readFile ( ' realm / realm - library / build / outputs / aar / methods ' ) ) 
 
 - sendMetrics ( ' aar _ size ' , new File ( ' realm / realm - library / build / outputs / aar / realm - android - library - release . aar ' ) . length ( ) ) 
 + def aarFile = findFiles ( glob : ' realm / realm - library / build / outputs / aar / realm - android - library - release . aar ' ) [ 0 ] 
 + sendMetrics ( ' aar _ size ' , String . valueOf ( aarFile . length ) ) 
 
 - def rootFolder = new File ( ' realm / realm - library / build / outputs / aar / unzipped / jni ' ) 
 + def rootFolder = findFiles ( glob : ' realm / realm - library / build / outputs / aar / unzipped / jni ' ) [ 0 ] 
 rootFolder . traverse ( type : DIRECTORIES ) { folder - > 
 def abiName = folder . name ( ) 
 def libSize = new File ( folder , ' librealm - jni . so ' ) . size ( ) as String 
 diff - - git a / build . gradle b / build . gradle 
 index 83db45b . . fe532a9 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 83 , 7 + 83 , 7 @ @ task check { 
 group = ' Test ' 
 description = ' Run the JVM tests and checks in the realm and examples projects ' 
 dependsOn checkRealm 
 - dependsOn checkExamples 
 + dependsOn checkExamples 
 } 
 
 task integrationTestsConnectedCheck ( type : GradleBuild ) { 
 @ @ - 314 , 6 + 314 , 7 @ @ task bintrayRealm ( type : GradleBuild ) { 
 group = ' Publishing ' 
 buildFile = file ( ' realm / build . gradle ' ) 
 tasks = [ ' bintrayUpload ' ] 
 + startParameter . projectProperties = gradle . startParameter . projectProperties 
 if ( project . hasProperty ( ' buildTargetABIs ' ) ) { 
 startParameter . projectProperties + = [ buildTargetABIs : project . getProperty ( ' buildTargetABIs ' ) ] 
 } 
 @ @ - 323 , 6 + 324 , 7 @ @ task bintrayAnnotations ( type : GradleBuild ) { 
 description = ' Publish the Realm Annotations to Bintray ' 
 group = ' Publishing ' 
 buildFile = file ( ' realm - annotations / build . gradle ' ) 
 + startParameter . projectProperties = gradle . startParameter . projectProperties 
 tasks = [ ' bintrayUpload ' ] 
 } 
 
 @ @ - 330 , 6 + 332 , 7 @ @ task bintrayGradlePlugin ( type : GradleBuild ) { 
 description = ' Publish the Realm Gradle Plugin to Bintray ' 
 group = ' Publishing ' 
 buildFile = file ( ' gradle - plugin / build . gradle ' ) 
 + startParameter . projectProperties = gradle . startParameter . projectProperties 
 tasks = [ ' bintrayUpload ' ] 
 } 
 
 @ @ - 337 , 6 + 340 , 7 @ @ task bintrayTransformer ( type : GradleBuild ) { 
 description = ' Publish the Realm Transformer to Bintray ' 
 group = ' Publishing ' 
 buildFile = file ( ' realm - transformer / build . gradle ' ) 
 + startParameter . projectProperties = gradle . startParameter . projectProperties 
 tasks = [ ' bintrayUpload ' ] 
 } 
 
 @ @ - 354 , 6 + 358 , 7 @ @ task ojoRealm ( type : GradleBuild ) { 
 group = ' Publishing ' 
 buildFile = file ( ' realm / build . gradle ' ) 
 tasks = [ ' artifactoryPublish ' ] 
 + startParameter . projectProperties = gradle . startParameter . projectProperties 
 if ( project . hasProperty ( ' buildTargetABIs ' ) ) { 
 startParameter . projectProperties + = [ buildTargetABIs : project . getProperty ( ' buildTargetABIs ' ) ] 
 } 
 @ @ - 363 , 6 + 368 , 7 @ @ task ojoAnnotations ( type : GradleBuild ) { 
 description = ' Publish the Realm Annotations SNAPSHOT to Bintray ' 
 group = ' Publishing ' 
 buildFile = file ( ' realm - annotations / build . gradle ' ) 
 + startParameter . projectProperties = gradle . startParameter . projectProperties 
 tasks = [ ' artifactoryPublish ' ] 
 } 
 
 @ @ - 370 , 6 + 376 , 7 @ @ task ojoGradlePlugin ( type : GradleBuild ) { 
 description = ' Publish the Realm Gradle Plugin SNAPSHOT to Bintray ' 
 group = ' Publishing ' 
 buildFile = file ( ' gradle - plugin / build . gradle ' ) 
 + startParameter . projectProperties = gradle . startParameter . projectProperties 
 tasks = [ ' artifactoryPublish ' ] 
 } 
 
 @ @ - 377 , 6 + 384 , 7 @ @ task ojoTransformer ( type : GradleBuild ) { 
 description = ' Publish the Realm Transformer SNAPSHOT to Bintray ' 
 group = ' Publishing ' 
 buildFile = file ( ' realm - transformer / build . gradle ' ) 
 + startParameter . projectProperties = gradle . startParameter . projectProperties 
 tasks = [ ' artifactoryPublish ' ] 
 } 

