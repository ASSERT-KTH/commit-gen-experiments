BLEU SCORE: 0.2722230298303347

TEST MSG: Added API overview
GENERATED MSG: Added unit test .

TEST DIFF (one line): diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index 3895874 . . dc89bb2 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 71 , 10 + 71 , 17 @ @ task javadoc ( type : Javadoc ) { <nl> encoding = ' UTF - 8 ' <nl> charSet = ' UTF - 8 ' <nl> locale = ' en _ US ' <nl> + overview = ' src / overview . html ' <nl> } <nl> exclude ' * * / internal / * * ' <nl> exclude ' * * / BuildConfig . java ' <nl> exclude ' * * / R . java ' <nl> + doLast { <nl> + copy { <nl> + from " src / realm - overview . png " <nl> + into " $ buildDir / docs / javadoc " <nl> + } <nl> + } <nl> } <nl> <nl> task javadocJar ( type : Jar , dependsOn : javadoc ) { <nl> diff - - git a / realm / realm - library / src / overview . html b / realm / realm - library / src / overview . html <nl> new file mode 100644 <nl> index 0000000 . . 9d0915d <nl> - - - / dev / null <nl> + + + b / realm / realm - library / src / overview . html <nl> @ @ - 0 , 0 + 1 , 49 @ @ <nl> + < body > <nl> + < h2 > Quick start < / h2 > <nl> + <nl> + < img src = " . / realm - overview . png " alt = " Overview of Realm " style = " display : block ; margin : 0 auto ; " width = " 35 % " / > <nl> + <nl> + < ul > <nl> + < li > < b > { @ link io . realm . Realm } < / b > < br / > The Realm database . The storage and transactional manager of your object <nl> + persistent store . It is in charge of creating and removing instances of your RealmObjects , querying , and <nl> + performing transactions . <nl> + < a href = " https : / / realm . io / docs / java / latest / # realms " > Read more < / a > . <nl> + < p / > <nl> + < / li > <nl> + <nl> + < li > < b > { @ link io . realm . RealmConfiguration } < / b > < br / > <nl> + A configuration object that is used to setup a specific Realm instance . <nl> + < a href = " https : / / realm . io / docs / java / latest / # configuring - a - realm " > Read more < / a > . <nl> + < p / > <nl> + < / li > <nl> + <nl> + < li > < b > { @ link io . realm . RealmObject } < / b > < br / > <nl> + The super class of all objects ( models ) that are to be stored in Realm . A Java object must extend <nl> + { @ link io . realm . RealmObject } in order to be considered a < i > RealmObject < / i > . <nl> + < a href = " https : / / realm . io / docs / java / latest / # models " > Read more < / a > . <nl> + < p / > <nl> + < / li > <nl> + <nl> + < li > < b > { @ link io . realm . RealmList } < / b > < br / > <nl> + A < a href = " https : / / docs . oracle . com / javase / 7 / docs / api / java / util / List . html " > List < / a > that is used in <nl> + < i > RealmObject < / i > s to model one - to - many relationships with other < i > RealmObject < / i > s . <nl> + < a href = " https : / / realm . io / docs / java / latest / # many - to - many " > Read more < / a > . <nl> + < p / > <nl> + < / li > <nl> + <nl> + < li > < b > { @ link io . realm . RealmQuery } < / b > < br / > <nl> + An object that encapsulates a query as defined through Realms fluent query interface . Queries are executed <nl> + using either the { @ link io . realm . RealmQuery # findAll } , { @ link io . realm . RealmQuery # findFirst } or their variants . <nl> + < a href = " https : / / realm . io / docs / java / latest / # queries " > Read more < / a > . <nl> + < p / > <nl> + < / li > <nl> + <nl> + < li > < b > { @ link io . realm . RealmResults } < / b > < br / > <nl> + The result set of an executed < i > RealmQuery < / i > for a given Realm . < i > RealmResults < / i > are live , <nl> + < a href = " https : / / realm . io / docs / java / latest / # auto - updating - results " > auto - updating < / a > views into the underlying <nl> + data , which means results never have to be re - fetched . <nl> + < a href = " https : / / realm . io / docs / java / latest / # queries " > Read more < / a > . <nl> + < p / > <nl> + < / li > <nl> + < / ul > <nl> + < / body > <nl> \ No newline at end of file <nl> diff - - git a / realm / realm - library / src / realm - overview . png b / realm / realm - library / src / realm - overview . png <nl> new file mode 100644 <nl> index 0000000 . . b4f49dc <nl> Binary files / dev / null and b / realm / realm - library / src / realm - overview . png differ
NEAREST DIFF (one line): diff - - git a / realm / src / androidTest / java / io / realm / RealmListTest . java b / realm / src / androidTest / java / io / realm / RealmListTest . java <nl> index 3e63bb0 . . 359aaf6 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmListTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmListTest . java <nl> @ @ - 351 , 6 + 351 , 17 @ @ public class RealmListTest extends AndroidTestCase { <nl> assertEquals ( TEST _ OBJECTS - 1 , dogs . size ( ) ) ; <nl> } <nl> <nl> + public void testRemoveLast ( ) { <nl> + Owner owner = testRealm . where ( Owner . class ) . findFirst ( ) ; <nl> + RealmList < Dog > dogs = owner . getDogs ( ) ; <nl> + <nl> + testRealm . beginTransaction ( ) ; <nl> + dogs . remove ( TEST _ OBJECTS - 1 ) ; <nl> + testRealm . commitTransaction ( ) ; <nl> + <nl> + assertEquals ( TEST _ OBJECTS - 1 , dogs . size ( ) ) ; <nl> + } <nl> + <nl> public void testRemoveByObject ( ) { <nl> Owner owner = testRealm . where ( Owner . class ) . findFirst ( ) ; <nl> RealmList < Dog > dogs = owner . getDogs ( ) ;

TEST DIFF:
diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index 3895874 . . dc89bb2 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 71 , 10 + 71 , 17 @ @ task javadoc ( type : Javadoc ) { 
 encoding = ' UTF - 8 ' 
 charSet = ' UTF - 8 ' 
 locale = ' en _ US ' 
 + overview = ' src / overview . html ' 
 } 
 exclude ' * * / internal / * * ' 
 exclude ' * * / BuildConfig . java ' 
 exclude ' * * / R . java ' 
 + doLast { 
 + copy { 
 + from " src / realm - overview . png " 
 + into " $ buildDir / docs / javadoc " 
 + } 
 + } 
 } 
 
 task javadocJar ( type : Jar , dependsOn : javadoc ) { 
 diff - - git a / realm / realm - library / src / overview . html b / realm / realm - library / src / overview . html 
 new file mode 100644 
 index 0000000 . . 9d0915d 
 - - - / dev / null 
 + + + b / realm / realm - library / src / overview . html 
 @ @ - 0 , 0 + 1 , 49 @ @ 
 + < body > 
 + < h2 > Quick start < / h2 > 
 + 
 + < img src = " . / realm - overview . png " alt = " Overview of Realm " style = " display : block ; margin : 0 auto ; " width = " 35 % " / > 
 + 
 + < ul > 
 + < li > < b > { @ link io . realm . Realm } < / b > < br / > The Realm database . The storage and transactional manager of your object 
 + persistent store . It is in charge of creating and removing instances of your RealmObjects , querying , and 
 + performing transactions . 
 + < a href = " https : / / realm . io / docs / java / latest / # realms " > Read more < / a > . 
 + < p / > 
 + < / li > 
 + 
 + < li > < b > { @ link io . realm . RealmConfiguration } < / b > < br / > 
 + A configuration object that is used to setup a specific Realm instance . 
 + < a href = " https : / / realm . io / docs / java / latest / # configuring - a - realm " > Read more < / a > . 
 + < p / > 
 + < / li > 
 + 
 + < li > < b > { @ link io . realm . RealmObject } < / b > < br / > 
 + The super class of all objects ( models ) that are to be stored in Realm . A Java object must extend 
 + { @ link io . realm . RealmObject } in order to be considered a < i > RealmObject < / i > . 
 + < a href = " https : / / realm . io / docs / java / latest / # models " > Read more < / a > . 
 + < p / > 
 + < / li > 
 + 
 + < li > < b > { @ link io . realm . RealmList } < / b > < br / > 
 + A < a href = " https : / / docs . oracle . com / javase / 7 / docs / api / java / util / List . html " > List < / a > that is used in 
 + < i > RealmObject < / i > s to model one - to - many relationships with other < i > RealmObject < / i > s . 
 + < a href = " https : / / realm . io / docs / java / latest / # many - to - many " > Read more < / a > . 
 + < p / > 
 + < / li > 
 + 
 + < li > < b > { @ link io . realm . RealmQuery } < / b > < br / > 
 + An object that encapsulates a query as defined through Realms fluent query interface . Queries are executed 
 + using either the { @ link io . realm . RealmQuery # findAll } , { @ link io . realm . RealmQuery # findFirst } or their variants . 
 + < a href = " https : / / realm . io / docs / java / latest / # queries " > Read more < / a > . 
 + < p / > 
 + < / li > 
 + 
 + < li > < b > { @ link io . realm . RealmResults } < / b > < br / > 
 + The result set of an executed < i > RealmQuery < / i > for a given Realm . < i > RealmResults < / i > are live , 
 + < a href = " https : / / realm . io / docs / java / latest / # auto - updating - results " > auto - updating < / a > views into the underlying 
 + data , which means results never have to be re - fetched . 
 + < a href = " https : / / realm . io / docs / java / latest / # queries " > Read more < / a > . 
 + < p / > 
 + < / li > 
 + < / ul > 
 + < / body > 
 \ No newline at end of file 
 diff - - git a / realm / realm - library / src / realm - overview . png b / realm / realm - library / src / realm - overview . png 
 new file mode 100644 
 index 0000000 . . b4f49dc 
 Binary files / dev / null and b / realm / realm - library / src / realm - overview . png differ

NEAREST DIFF:
diff - - git a / realm / src / androidTest / java / io / realm / RealmListTest . java b / realm / src / androidTest / java / io / realm / RealmListTest . java 
 index 3e63bb0 . . 359aaf6 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmListTest . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmListTest . java 
 @ @ - 351 , 6 + 351 , 17 @ @ public class RealmListTest extends AndroidTestCase { 
 assertEquals ( TEST _ OBJECTS - 1 , dogs . size ( ) ) ; 
 } 
 
 + public void testRemoveLast ( ) { 
 + Owner owner = testRealm . where ( Owner . class ) . findFirst ( ) ; 
 + RealmList < Dog > dogs = owner . getDogs ( ) ; 
 + 
 + testRealm . beginTransaction ( ) ; 
 + dogs . remove ( TEST _ OBJECTS - 1 ) ; 
 + testRealm . commitTransaction ( ) ; 
 + 
 + assertEquals ( TEST _ OBJECTS - 1 , dogs . size ( ) ) ; 
 + } 
 + 
 public void testRemoveByObject ( ) { 
 Owner owner = testRealm . where ( Owner . class ) . findFirst ( ) ; 
 RealmList < Dog > dogs = owner . getDogs ( ) ;
