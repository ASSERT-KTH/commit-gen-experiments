BLEU SCORE: 0.018738883683389617

TEST MSG: New async transaction API used , Fixed scheduler bug . Cleanup
GENERATED MSG: update PR as per review

TEST DIFF (one line): diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / NewsReaderApplication . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / NewsReaderApplication . java <nl> index 8e14a80 . . d8f575d 100644 <nl> - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / NewsReaderApplication . java <nl> + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / NewsReaderApplication . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public abstract class NewsReaderApplication extends Application { <nl> } <nl> <nl> / * * <nl> - * Initialize Timer logging <nl> + * Initialize Timber logging <nl> * / <nl> protected abstract void initializeTimber ( ) ; <nl> <nl> diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / DefaultTransactionCallback . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / DefaultTransactionCallback . java <nl> deleted file mode 100644 <nl> index e5d1d59 . . 0000000 <nl> - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / DefaultTransactionCallback . java <nl> + + + / dev / null <nl> @ @ - 1 , 27 + 0 , 0 @ @ <nl> - / * <nl> - * Copyright 2016 Realm Inc . <nl> - * <nl> - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; <nl> - * you may not use this file except in compliance with the License . <nl> - * You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - <nl> - package io . realm . examples . newsreader . model ; <nl> - <nl> - import io . realm . Realm ; <nl> - import timber . log . Timber ; <nl> - <nl> - public class DefaultTransactionCallback extends Realm . Transaction . Callback { <nl> - @ Override <nl> - public void onError ( Exception e ) { <nl> - Timber . e ( e , " Failed to save data . " ) ; <nl> - } <nl> - } <nl> diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java <nl> index a317ebe . . f93ce53 100644 <nl> - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java <nl> + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java <nl> @ @ - 106 , 7 + 106 , 7 @ @ public class Repository implements Closeable { <nl> * / <nl> @ UiThread <nl> public void updateStoryReadState ( final String storyId , final boolean read ) { <nl> - realm . executeTransaction ( new Realm . Transaction ( ) { <nl> + realm . executeTransactionAsync ( new Realm . Transaction ( ) { <nl> @ Override <nl> public void execute ( Realm realm ) { <nl> NYTimesStory persistedStory = realm . where ( NYTimesStory . class ) . equalTo ( NYTimesStory . URL , storyId ) . findFirst ( ) ; <nl> @ @ - 116 , 7 + 116 , 12 @ @ public class Repository implements Closeable { <nl> Timber . e ( " Trying to update a story that no longer exists : " + storyId ) ; <nl> } <nl> } <nl> - } , new DefaultTransactionCallback ( ) ) ; <nl> + } , new Realm . Transaction . OnError ( ) { <nl> + @ Override <nl> + public void onError ( Throwable throwable ) { <nl> + Timber . e ( throwable , " Failed to save data . " ) ; <nl> + } <nl> + } ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / NYTimesDataLoader . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / NYTimesDataLoader . java <nl> index 4398aa9 . . c9be445 100644 <nl> - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / NYTimesDataLoader . java <nl> + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / NYTimesDataLoader . java <nl> @ @ - 25 , 7 + 25 , 6 @ @ import java . util . List ; <nl> import java . util . Locale ; <nl> <nl> import io . realm . Realm ; <nl> - import io . realm . examples . newsreader . model . DefaultTransactionCallback ; <nl> import io . realm . examples . newsreader . model . entity . NYTimesStory ; <nl> import retrofit . JacksonConverterFactory ; <nl> import retrofit . Retrofit ; <nl> @ @ - 90 , 7 + 89 , 7 @ @ public class NYTimesDataLoader { <nl> private void processAndAddData ( final Realm realm , final String sectionKey , final List < NYTimesStory > stories ) { <nl> if ( stories . isEmpty ( ) ) return ; <nl> <nl> - realm . executeTransaction ( new Realm . Transaction ( ) { <nl> + realm . executeTransactionAsync ( new Realm . Transaction ( ) { <nl> @ Override <nl> public void execute ( Realm realm ) { <nl> for ( NYTimesStory story : stories ) { <nl> @ @ - 114 , 6 + 113 , 11 @ @ public class NYTimesDataLoader { <nl> } <nl> } <nl> } <nl> - } , new DefaultTransactionCallback ( ) ) ; <nl> + } , new Realm . Transaction . OnError ( ) { <nl> + @ Override <nl> + public void onError ( Throwable throwable ) { <nl> + Timber . e ( throwable , " Could not save data " ) ; <nl> + } <nl> + } ) ; <nl> } <nl> } <nl> \ No newline at end of file <nl> diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / ui / details / DetailsPresenter . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / ui / details / DetailsPresenter . java <nl> index c5eb64c . . 0efde83 100644 <nl> - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / ui / details / DetailsPresenter . java <nl> + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / ui / details / DetailsPresenter . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ import io . realm . examples . newsreader . model . entity . NYTimesStory ; <nl> import io . realm . examples . newsreader . ui . Presenter ; <nl> import rx . Observable ; <nl> import rx . Subscription ; <nl> + import rx . android . schedulers . AndroidSchedulers ; <nl> import rx . functions . Action1 ; <nl> import rx . subscriptions . CompositeSubscription ; <nl> <nl> @ @ - 62 , 6 + 63 , 7 @ @ public class DetailsPresenter implements Presenter { <nl> <nl> / / Mark story as read if screen is visible for 2 seconds <nl> Subscription timerSubscription = Observable . timer ( 2 , TimeUnit . SECONDS ) <nl> + . observeOn ( AndroidSchedulers . mainThread ( ) ) <nl> . subscribe ( new Action1 < Long > ( ) { <nl> @ Override <nl> public void call ( Long aLong ) { <nl> diff - - git a / examples / newsreaderExample / src / main / res / layout / activity _ main . xml b / examples / newsreaderExample / src / main / res / layout / activity _ main . xml <nl> index fa54dd9 . . bc00946 100644 <nl> - - - a / examples / newsreaderExample / src / main / res / layout / activity _ main . xml <nl> + + + b / examples / newsreaderExample / src / main / res / layout / activity _ main . xml <nl> @ @ - 22 , 7 + 22 , 6 @ @ <nl> <nl> < Spinner <nl> android : id = " @ + id / spinner " <nl> - <nl> android : layout _ width = " wrap _ content " <nl> android : layout _ height = " wrap _ content " / > <nl>
NEAREST DIFF (one line): diff - - git a / changelog . txt b / changelog . txt <nl> index 5c4a126 . . 6560af9 100644 <nl> - - - a / changelog . txt <nl> + + + b / changelog . txt <nl> @ @ - 1 , 9 + 1 , 9 @ @ <nl> 0 . 82 <nl> - * Support async queries & transaction <nl> + * Support async queries & transactions . <nl> * Trying to access a deleted Realm object throw throws a proper IllegalStateException . <nl> * Added in - memory Realm support . <nl> * Closing realm on another thread different from where it was created now throws an exception . <nl> - * @ Index annotation can also be applied to byte / short / int / long / boolean / Date <nl> + * @ Index annotation can also be applied to byte / short / int / long / boolean / Date . <nl> now . <nl> <nl> 0 . 81 . 1 <nl> diff - - git a / examples / threadExample / build . gradle b / examples / threadExample / build . gradle <nl> index babcdcd . . a064db9 100644 <nl> - - - a / examples / threadExample / build . gradle <nl> + + + b / examples / threadExample / build . gradle <nl> @ @ - 30 , 5 + 30 , 4 @ @ tasks . preBuild { <nl> dependencies { <nl> compile ' com . android . support : appcompat - v7 : 21 . 0 . + ' <nl> compile files ( " . . / . . / realm / build / libs / realm - $ { version } . jar " ) <nl> - compile ' com . squareup . leakcanary : leakcanary - android : 1 . 3 . 1 ' <nl> } <nl> diff - - git a / examples / threadExample / src / main / java / io / realm / examples / threads / AsyncQueryFragment . java b / examples / threadExample / src / main / java / io / realm / examples / threads / AsyncQueryFragment . java <nl> index 231a58d . . 3657e46 100644 <nl> - - - a / examples / threadExample / src / main / java / io / realm / examples / threads / AsyncQueryFragment . java <nl> + + + b / examples / threadExample / src / main / java / io / realm / examples / threads / AsyncQueryFragment . java <nl> @ @ - 18 , 19 + 18 , 15 @ @ package io . realm . examples . threads ; <nl> <nl> import android . content . Context ; <nl> import android . os . Bundle ; <nl> - import android . os . SystemClock ; <nl> import android . support . v4 . app . Fragment ; <nl> import android . view . LayoutInflater ; <nl> import android . view . View ; <nl> import android . view . ViewGroup ; <nl> import android . widget . BaseAdapter ; <nl> - import android . widget . Button ; <nl> import android . widget . ListView ; <nl> import android . widget . TextView ; <nl> import android . widget . Toast ; <nl> <nl> - import com . squareup . leakcanary . RefWatcher ; <nl> - <nl> import java . util . Collections ; <nl> import java . util . List ; <nl> <nl> @ @ - 78 , 13 + 74 , 6 @ @ public class AsyncQueryFragment extends Fragment implements View . OnClickListener <nl> } <nl> <nl> @ Override <nl> - public void onDestroy ( ) { <nl> - super . onDestroy ( ) ; <nl> - RefWatcher refWatcher = MyApplication . getRefWatcher ( getActivity ( ) ) ; <nl> - refWatcher . watch ( this ) ; <nl> - } <nl> - <nl> - @ Override <nl> public void onClick ( View view ) { <nl> switch ( view . getId ( ) ) { <nl> case R . id . start _ button : { <nl> @ @ - 118 , 6 + 107 , 8 @ @ public class AsyncQueryFragment extends Fragment implements View . OnClickListener <nl> public void execute ( Realm realm ) { <nl> / / query for all points <nl> RealmResults < Dot > dots = realm . where ( Dot . class ) . findAll ( ) ; <nl> + <nl> + / / Iterating backwards to avoid https : / / github . com / realm / realm - java / issues / 640 <nl> for ( int i = dots . size ( ) - 1 ; i > = 0 ; i - - ) { <nl> Dot dot = dots . get ( i ) ; <nl> if ( dot . isValid ( ) ) { <nl> @ @ - 126 , 7 + 117 , 6 @ @ public class AsyncQueryFragment extends Fragment implements View . OnClickListener <nl> dot . setX ( y ) ; <nl> dot . setY ( x ) ; <nl> } <nl> - SystemClock . sleep ( 60 ) ; <nl> } <nl> } <nl> } , new Realm . Transaction . Callback ( ) { <nl> diff - - git a / examples / threadExample / src / main / java / io / realm / examples / threads / MyApplication . java b / examples / threadExample / src / main / java / io / realm / examples / threads / MyApplication . java <nl> index 3363272 . . 7ced58b 100644 <nl> - - - a / examples / threadExample / src / main / java / io / realm / examples / threads / MyApplication . java <nl> + + + b / examples / threadExample / src / main / java / io / realm / examples / threads / MyApplication . java <nl> @ @ - 17 , 16 + 17 , 11 @ @ <nl> package io . realm . examples . threads ; <nl> <nl> import android . app . Application ; <nl> - import android . content . Context ; <nl> - <nl> - import com . squareup . leakcanary . LeakCanary ; <nl> - import com . squareup . leakcanary . RefWatcher ; <nl> <nl> import io . realm . Realm ; <nl> import io . realm . RealmConfiguration ; <nl> <nl> public class MyApplication extends Application { <nl> - private RefWatcher refWatcher ; <nl> <nl> @ Override <nl> public void onCreate ( ) { <nl> @ @ - 36 , 12 + 31 , 5 @ @ public class MyApplication extends Application { <nl> RealmConfiguration realmConfiguration = new RealmConfiguration . Builder ( this ) . build ( ) ; <nl> Realm . deleteRealm ( realmConfiguration ) ; / / Clean slate <nl> Realm . setDefaultConfiguration ( realmConfiguration ) ; / / Make this Realm the default <nl> - <nl> - refWatcher = LeakCanary . install ( this ) ; <nl> - } <nl> - <nl> - public static RefWatcher getRefWatcher ( Context context ) { <nl> - MyApplication application = ( MyApplication ) context . getApplicationContext ( ) ; <nl> - return application . refWatcher ; <nl> } <nl> } <nl> diff - - git a / realm - jni / src / io _ realm _ internal _ TableQuery . cpp b / realm - jni / src / io _ realm _ internal _ TableQuery . cpp <nl> index af196e0 . . bed6e19 100644 <nl> - - - a / realm - jni / src / io _ realm _ internal _ TableQuery . cpp <nl> + + + b / realm - jni / src / io _ realm _ internal _ TableQuery . cpp <nl> @ @ - 891 , 11 + 891 , 12 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableQuery _ nativeFindWithHandover <nl> <nl> if ( ! QUERY _ VALID ( env , pQuery . get ( ) ) ) <nl> return - 1 ; <nl> + <nl> / / It ' s valid to go 1 past the end index <nl> if ( ( fromTableRow < 0 ) | | ( S ( fromTableRow ) > pTable - > size ( ) ) ) { <nl> - / / below check will fail with appropriate exception <nl> - ( void ) ROW _ INDEX _ VALID ( env , pTable , fromTableRow ) ; <nl> - return - 1 ; <nl> + / / below check will fail with appropriate exception <nl> + ( void ) ROW _ INDEX _ VALID ( env , pTable , fromTableRow ) ; <nl> + return - 1 ; <nl> } <nl> <nl> size _ t r = pQuery - > find ( S ( fromTableRow ) ) ; <nl> diff - - git a / realm / src / main / java / io / realm / RealmQuery . java b / realm / src / main / java / io / realm / RealmQuery . java <nl> index 06a2808 . . 548c335 100644 <nl> - - - a / realm / src / main / java / io / realm / RealmQuery . java <nl> + + + b / realm / src / main / java / io / realm / RealmQuery . java <nl> @ @ - 1886 , 6 + 1886 , 7 @ @ public class RealmQuery < E extends RealmObject > { <nl> * to deliver result or error to a { @ link io . realm . RealmResults . QueryCallback } or <nl> * a { @ link io . realm . RealmObject . QueryCallback } <nl> * / <nl> + / / this handler is private & lives within the scope of the retained RealmQuery instance only <nl> @ SuppressLint ( " HandlerLeak " ) <nl> private class EventHandler extends Handler { <nl> private final static int FIND _ FIRST _ QUERY = 1 ;

TEST DIFF:
diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / NewsReaderApplication . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / NewsReaderApplication . java 
 index 8e14a80 . . d8f575d 100644 
 - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / NewsReaderApplication . java 
 + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / NewsReaderApplication . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public abstract class NewsReaderApplication extends Application { 
 } 
 
 / * * 
 - * Initialize Timer logging 
 + * Initialize Timber logging 
 * / 
 protected abstract void initializeTimber ( ) ; 
 
 diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / DefaultTransactionCallback . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / DefaultTransactionCallback . java 
 deleted file mode 100644 
 index e5d1d59 . . 0000000 
 - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / DefaultTransactionCallback . java 
 + + + / dev / null 
 @ @ - 1 , 27 + 0 , 0 @ @ 
 - / * 
 - * Copyright 2016 Realm Inc . 
 - * 
 - * Licensed under the Apache License , Version 2 . 0 ( the " License " ) ; 
 - * you may not use this file except in compliance with the License . 
 - * You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - 
 - package io . realm . examples . newsreader . model ; 
 - 
 - import io . realm . Realm ; 
 - import timber . log . Timber ; 
 - 
 - public class DefaultTransactionCallback extends Realm . Transaction . Callback { 
 - @ Override 
 - public void onError ( Exception e ) { 
 - Timber . e ( e , " Failed to save data . " ) ; 
 - } 
 - } 
 diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java 
 index a317ebe . . f93ce53 100644 
 - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java 
 + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / Repository . java 
 @ @ - 106 , 7 + 106 , 7 @ @ public class Repository implements Closeable { 
 * / 
 @ UiThread 
 public void updateStoryReadState ( final String storyId , final boolean read ) { 
 - realm . executeTransaction ( new Realm . Transaction ( ) { 
 + realm . executeTransactionAsync ( new Realm . Transaction ( ) { 
 @ Override 
 public void execute ( Realm realm ) { 
 NYTimesStory persistedStory = realm . where ( NYTimesStory . class ) . equalTo ( NYTimesStory . URL , storyId ) . findFirst ( ) ; 
 @ @ - 116 , 7 + 116 , 12 @ @ public class Repository implements Closeable { 
 Timber . e ( " Trying to update a story that no longer exists : " + storyId ) ; 
 } 
 } 
 - } , new DefaultTransactionCallback ( ) ) ; 
 + } , new Realm . Transaction . OnError ( ) { 
 + @ Override 
 + public void onError ( Throwable throwable ) { 
 + Timber . e ( throwable , " Failed to save data . " ) ; 
 + } 
 + } ) ; 
 } 
 
 / * * 
 diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / NYTimesDataLoader . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / NYTimesDataLoader . java 
 index 4398aa9 . . c9be445 100644 
 - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / NYTimesDataLoader . java 
 + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / model / network / NYTimesDataLoader . java 
 @ @ - 25 , 7 + 25 , 6 @ @ import java . util . List ; 
 import java . util . Locale ; 
 
 import io . realm . Realm ; 
 - import io . realm . examples . newsreader . model . DefaultTransactionCallback ; 
 import io . realm . examples . newsreader . model . entity . NYTimesStory ; 
 import retrofit . JacksonConverterFactory ; 
 import retrofit . Retrofit ; 
 @ @ - 90 , 7 + 89 , 7 @ @ public class NYTimesDataLoader { 
 private void processAndAddData ( final Realm realm , final String sectionKey , final List < NYTimesStory > stories ) { 
 if ( stories . isEmpty ( ) ) return ; 
 
 - realm . executeTransaction ( new Realm . Transaction ( ) { 
 + realm . executeTransactionAsync ( new Realm . Transaction ( ) { 
 @ Override 
 public void execute ( Realm realm ) { 
 for ( NYTimesStory story : stories ) { 
 @ @ - 114 , 6 + 113 , 11 @ @ public class NYTimesDataLoader { 
 } 
 } 
 } 
 - } , new DefaultTransactionCallback ( ) ) ; 
 + } , new Realm . Transaction . OnError ( ) { 
 + @ Override 
 + public void onError ( Throwable throwable ) { 
 + Timber . e ( throwable , " Could not save data " ) ; 
 + } 
 + } ) ; 
 } 
 } 
 \ No newline at end of file 
 diff - - git a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / ui / details / DetailsPresenter . java b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / ui / details / DetailsPresenter . java 
 index c5eb64c . . 0efde83 100644 
 - - - a / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / ui / details / DetailsPresenter . java 
 + + + b / examples / newsreaderExample / src / main / java / io / realm / examples / newsreader / ui / details / DetailsPresenter . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import io . realm . examples . newsreader . model . entity . NYTimesStory ; 
 import io . realm . examples . newsreader . ui . Presenter ; 
 import rx . Observable ; 
 import rx . Subscription ; 
 + import rx . android . schedulers . AndroidSchedulers ; 
 import rx . functions . Action1 ; 
 import rx . subscriptions . CompositeSubscription ; 
 
 @ @ - 62 , 6 + 63 , 7 @ @ public class DetailsPresenter implements Presenter { 
 
 / / Mark story as read if screen is visible for 2 seconds 
 Subscription timerSubscription = Observable . timer ( 2 , TimeUnit . SECONDS ) 
 + . observeOn ( AndroidSchedulers . mainThread ( ) ) 
 . subscribe ( new Action1 < Long > ( ) { 
 @ Override 
 public void call ( Long aLong ) { 
 diff - - git a / examples / newsreaderExample / src / main / res / layout / activity _ main . xml b / examples / newsreaderExample / src / main / res / layout / activity _ main . xml 
 index fa54dd9 . . bc00946 100644 
 - - - a / examples / newsreaderExample / src / main / res / layout / activity _ main . xml 
 + + + b / examples / newsreaderExample / src / main / res / layout / activity _ main . xml 
 @ @ - 22 , 7 + 22 , 6 @ @ 
 
 < Spinner 
 android : id = " @ + id / spinner " 
 - 
 android : layout _ width = " wrap _ content " 
 android : layout _ height = " wrap _ content " / > 


NEAREST DIFF:
diff - - git a / changelog . txt b / changelog . txt 
 index 5c4a126 . . 6560af9 100644 
 - - - a / changelog . txt 
 + + + b / changelog . txt 
 @ @ - 1 , 9 + 1 , 9 @ @ 
 0 . 82 
 - * Support async queries & transaction 
 + * Support async queries & transactions . 
 * Trying to access a deleted Realm object throw throws a proper IllegalStateException . 
 * Added in - memory Realm support . 
 * Closing realm on another thread different from where it was created now throws an exception . 
 - * @ Index annotation can also be applied to byte / short / int / long / boolean / Date 
 + * @ Index annotation can also be applied to byte / short / int / long / boolean / Date . 
 now . 
 
 0 . 81 . 1 
 diff - - git a / examples / threadExample / build . gradle b / examples / threadExample / build . gradle 
 index babcdcd . . a064db9 100644 
 - - - a / examples / threadExample / build . gradle 
 + + + b / examples / threadExample / build . gradle 
 @ @ - 30 , 5 + 30 , 4 @ @ tasks . preBuild { 
 dependencies { 
 compile ' com . android . support : appcompat - v7 : 21 . 0 . + ' 
 compile files ( " . . / . . / realm / build / libs / realm - $ { version } . jar " ) 
 - compile ' com . squareup . leakcanary : leakcanary - android : 1 . 3 . 1 ' 
 } 
 diff - - git a / examples / threadExample / src / main / java / io / realm / examples / threads / AsyncQueryFragment . java b / examples / threadExample / src / main / java / io / realm / examples / threads / AsyncQueryFragment . java 
 index 231a58d . . 3657e46 100644 
 - - - a / examples / threadExample / src / main / java / io / realm / examples / threads / AsyncQueryFragment . java 
 + + + b / examples / threadExample / src / main / java / io / realm / examples / threads / AsyncQueryFragment . java 
 @ @ - 18 , 19 + 18 , 15 @ @ package io . realm . examples . threads ; 
 
 import android . content . Context ; 
 import android . os . Bundle ; 
 - import android . os . SystemClock ; 
 import android . support . v4 . app . Fragment ; 
 import android . view . LayoutInflater ; 
 import android . view . View ; 
 import android . view . ViewGroup ; 
 import android . widget . BaseAdapter ; 
 - import android . widget . Button ; 
 import android . widget . ListView ; 
 import android . widget . TextView ; 
 import android . widget . Toast ; 
 
 - import com . squareup . leakcanary . RefWatcher ; 
 - 
 import java . util . Collections ; 
 import java . util . List ; 
 
 @ @ - 78 , 13 + 74 , 6 @ @ public class AsyncQueryFragment extends Fragment implements View . OnClickListener 
 } 
 
 @ Override 
 - public void onDestroy ( ) { 
 - super . onDestroy ( ) ; 
 - RefWatcher refWatcher = MyApplication . getRefWatcher ( getActivity ( ) ) ; 
 - refWatcher . watch ( this ) ; 
 - } 
 - 
 - @ Override 
 public void onClick ( View view ) { 
 switch ( view . getId ( ) ) { 
 case R . id . start _ button : { 
 @ @ - 118 , 6 + 107 , 8 @ @ public class AsyncQueryFragment extends Fragment implements View . OnClickListener 
 public void execute ( Realm realm ) { 
 / / query for all points 
 RealmResults < Dot > dots = realm . where ( Dot . class ) . findAll ( ) ; 
 + 
 + / / Iterating backwards to avoid https : / / github . com / realm / realm - java / issues / 640 
 for ( int i = dots . size ( ) - 1 ; i > = 0 ; i - - ) { 
 Dot dot = dots . get ( i ) ; 
 if ( dot . isValid ( ) ) { 
 @ @ - 126 , 7 + 117 , 6 @ @ public class AsyncQueryFragment extends Fragment implements View . OnClickListener 
 dot . setX ( y ) ; 
 dot . setY ( x ) ; 
 } 
 - SystemClock . sleep ( 60 ) ; 
 } 
 } 
 } , new Realm . Transaction . Callback ( ) { 
 diff - - git a / examples / threadExample / src / main / java / io / realm / examples / threads / MyApplication . java b / examples / threadExample / src / main / java / io / realm / examples / threads / MyApplication . java 
 index 3363272 . . 7ced58b 100644 
 - - - a / examples / threadExample / src / main / java / io / realm / examples / threads / MyApplication . java 
 + + + b / examples / threadExample / src / main / java / io / realm / examples / threads / MyApplication . java 
 @ @ - 17 , 16 + 17 , 11 @ @ 
 package io . realm . examples . threads ; 
 
 import android . app . Application ; 
 - import android . content . Context ; 
 - 
 - import com . squareup . leakcanary . LeakCanary ; 
 - import com . squareup . leakcanary . RefWatcher ; 
 
 import io . realm . Realm ; 
 import io . realm . RealmConfiguration ; 
 
 public class MyApplication extends Application { 
 - private RefWatcher refWatcher ; 
 
 @ Override 
 public void onCreate ( ) { 
 @ @ - 36 , 12 + 31 , 5 @ @ public class MyApplication extends Application { 
 RealmConfiguration realmConfiguration = new RealmConfiguration . Builder ( this ) . build ( ) ; 
 Realm . deleteRealm ( realmConfiguration ) ; / / Clean slate 
 Realm . setDefaultConfiguration ( realmConfiguration ) ; / / Make this Realm the default 
 - 
 - refWatcher = LeakCanary . install ( this ) ; 
 - } 
 - 
 - public static RefWatcher getRefWatcher ( Context context ) { 
 - MyApplication application = ( MyApplication ) context . getApplicationContext ( ) ; 
 - return application . refWatcher ; 
 } 
 } 
 diff - - git a / realm - jni / src / io _ realm _ internal _ TableQuery . cpp b / realm - jni / src / io _ realm _ internal _ TableQuery . cpp 
 index af196e0 . . bed6e19 100644 
 - - - a / realm - jni / src / io _ realm _ internal _ TableQuery . cpp 
 + + + b / realm - jni / src / io _ realm _ internal _ TableQuery . cpp 
 @ @ - 891 , 11 + 891 , 12 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ TableQuery _ nativeFindWithHandover 
 
 if ( ! QUERY _ VALID ( env , pQuery . get ( ) ) ) 
 return - 1 ; 
 + 
 / / It ' s valid to go 1 past the end index 
 if ( ( fromTableRow < 0 ) | | ( S ( fromTableRow ) > pTable - > size ( ) ) ) { 
 - / / below check will fail with appropriate exception 
 - ( void ) ROW _ INDEX _ VALID ( env , pTable , fromTableRow ) ; 
 - return - 1 ; 
 + / / below check will fail with appropriate exception 
 + ( void ) ROW _ INDEX _ VALID ( env , pTable , fromTableRow ) ; 
 + return - 1 ; 
 } 
 
 size _ t r = pQuery - > find ( S ( fromTableRow ) ) ; 
 diff - - git a / realm / src / main / java / io / realm / RealmQuery . java b / realm / src / main / java / io / realm / RealmQuery . java 
 index 06a2808 . . 548c335 100644 
 - - - a / realm / src / main / java / io / realm / RealmQuery . java 
 + + + b / realm / src / main / java / io / realm / RealmQuery . java 
 @ @ - 1886 , 6 + 1886 , 7 @ @ public class RealmQuery < E extends RealmObject > { 
 * to deliver result or error to a { @ link io . realm . RealmResults . QueryCallback } or 
 * a { @ link io . realm . RealmObject . QueryCallback } 
 * / 
 + / / this handler is private & lives within the scope of the retained RealmQuery instance only 
 @ SuppressLint ( " HandlerLeak " ) 
 private class EventHandler extends Handler { 
 private final static int FIND _ FIRST _ QUERY = 1 ;
