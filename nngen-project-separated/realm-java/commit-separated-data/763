BLEU SCORE: 0.0334950357084578

TEST MSG: Fix the cast in proxy generator for CacheData
GENERATED MSG: copyToRealm now correctly handles nested objects already part of the Realm .

TEST DIFF (one line): diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> index 87e10ac . . 1d4b10d 100644 <nl> - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> @ @ - 699 , 14 + 699 , 14 @ @ public class RealmProxyClassGenerator { <nl> . beginControlFlow ( " if ( currentDepth > maxDepth | | realmObject = = null ) " ) <nl> . emitStatement ( " return null " ) <nl> . endControlFlow ( ) <nl> - . emitStatement ( " CacheData < % s > cachedObject = ( CacheData ) cache . get ( realmObject ) " , className ) <nl> + . emitStatement ( " CacheData < RealmObject > cachedObject = cache . get ( realmObject ) " ) <nl> . emitStatement ( " % s standaloneObject " , className ) <nl> . beginControlFlow ( " if ( cachedObject ! = null ) " ) <nl> . emitSingleLineComment ( " Reuse cached object or recreate it because it was encountered at a lower depth . " ) <nl> . beginControlFlow ( " if ( currentDepth > = cachedObject . minDepth ) " ) <nl> - . emitStatement ( " return cachedObject . object " ) <nl> + . emitStatement ( " return ( % s ) cachedObject . object " , className ) <nl> . nextControlFlow ( " else " ) <nl> - . emitStatement ( " standaloneObject = cachedObject . object " ) <nl> + . emitStatement ( " standaloneObject = ( % s ) cachedObject . object " , className ) <nl> . emitStatement ( " cachedObject . minDepth = currentDepth " ) <nl> . endControlFlow ( ) <nl> . nextControlFlow ( " else " ) <nl> diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> index f9df3e4 . . a0f31d9 100644 <nl> - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> @ @ - 646 , 14 + 646 , 14 @ @ public class AllTypesRealmProxy extends AllTypes <nl> if ( currentDepth > maxDepth | | realmObject = = null ) { <nl> return null ; <nl> } <nl> - CacheData < AllTypes > cachedObject = ( CacheData ) cache . get ( realmObject ) ; <nl> + CacheData < RealmObject > cachedObject = cache . get ( realmObject ) ; <nl> AllTypes standaloneObject ; <nl> if ( cachedObject ! = null ) { <nl> / / Reuse cached object or recreate it because it was encountered at a lower depth . <nl> if ( currentDepth > = cachedObject . minDepth ) { <nl> - return cachedObject . object ; <nl> + return ( AllTypes ) cachedObject . object ; <nl> } else { <nl> - standaloneObject = cachedObject . object ; <nl> + standaloneObject = ( AllTypes ) cachedObject . object ; <nl> cachedObject . minDepth = currentDepth ; <nl> } <nl> } else { <nl> diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> index 4982352 . . c87b718 100644 <nl> - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> @ @ - 286 , 14 + 286 , 14 @ @ public class BooleansRealmProxy extends Booleans <nl> if ( currentDepth > maxDepth | | realmObject = = null ) { <nl> return null ; <nl> } <nl> - CacheData < Booleans > cachedObject = ( CacheData ) cache . get ( realmObject ) ; <nl> + CacheData < RealmObject > cachedObject = cache . get ( realmObject ) ; <nl> Booleans standaloneObject ; <nl> if ( cachedObject ! = null ) { <nl> / / Reuse cached object or recreate it because it was encountered at a lower depth . <nl> if ( currentDepth > = cachedObject . minDepth ) { <nl> - return cachedObject . object ; <nl> + return ( Booleans ) cachedObject . object ; <nl> } else { <nl> - standaloneObject = cachedObject . object ; <nl> + standaloneObject = ( Booleans ) cachedObject . object ; <nl> cachedObject . minDepth = currentDepth ; <nl> } <nl> } else { <nl> diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java <nl> index 95e845b . . a096482 100644 <nl> - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java <nl> + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java <nl> @ @ - 1129 , 14 + 1129 , 14 @ @ public class NullTypesRealmProxy extends NullTypes <nl> if ( currentDepth > maxDepth | | realmObject = = null ) { <nl> return null ; <nl> } <nl> - CacheData < NullTypes > cachedObject = ( CacheData ) cache . get ( realmObject ) ; <nl> + CacheData < RealmObject > cachedObject = cache . get ( realmObject ) ; <nl> NullTypes standaloneObject ; <nl> if ( cachedObject ! = null ) { <nl> / / Reuse cached object or recreate it because it was encountered at a lower depth . <nl> if ( currentDepth > = cachedObject . minDepth ) { <nl> - return cachedObject . object ; <nl> + return ( NullTypes ) cachedObject . object ; <nl> } else { <nl> - standaloneObject = cachedObject . object ; <nl> + standaloneObject = ( NullTypes ) cachedObject . object ; <nl> cachedObject . minDepth = currentDepth ; <nl> } <nl> } else { <nl> diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> index 22cba74 . . 9935490 100644 <nl> - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> @ @ - 208 , 14 + 208 , 14 @ @ public class SimpleRealmProxy extends Simple <nl> if ( currentDepth > maxDepth | | realmObject = = null ) { <nl> return null ; <nl> } <nl> - CacheData < Simple > cachedObject = ( CacheData ) cache . get ( realmObject ) ; <nl> + CacheData < RealmObject > cachedObject = cache . get ( realmObject ) ; <nl> Simple standaloneObject ; <nl> if ( cachedObject ! = null ) { <nl> / / Reuse cached object or recreate it because it was encountered at a lower depth . <nl> if ( currentDepth > = cachedObject . minDepth ) { <nl> - return cachedObject . object ; <nl> + return ( Simple ) cachedObject . object ; <nl> } else { <nl> - standaloneObject = cachedObject . object ; <nl> + standaloneObject = ( Simple ) cachedObject . object ; <nl> cachedObject . minDepth = currentDepth ; <nl> } <nl> } else {
NEAREST DIFF (one line): diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> index 9f518de . . 89acb07 100644 <nl> - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> @ @ - 491 , 6 + 491 , 12 @ @ public class RealmProxyClassGenerator { <nl> " Realm " , " realm " , className , " object " , " boolean " , " update " , " Map < RealmObject , RealmObject > " , " cache " / / Argument type & argument name <nl> ) ; <nl> <nl> + / / If object is already in the Realm there is nothing to update <nl> + writer <nl> + . beginControlFlow ( " if ( object . realm ! = null & & object . realm . getId ( ) = = realm . getId ( ) ) " ) <nl> + . emitStatement ( " return object " ) <nl> + . endControlFlow ( ) ; <nl> + <nl> if ( ! metadata . hasPrimaryKey ( ) ) { <nl> writer . emitStatement ( " return copy ( realm , object , update , cache ) " ) ; <nl> } else { <nl> diff - - git a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> index da83178 . . 81cbe26 100644 <nl> - - - a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> + + + b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> @ @ - 392 , 6 + 392 , 9 @ @ public class AllTypesRealmProxy extends AllTypes { <nl> } <nl> <nl> public static AllTypes copyOrUpdate ( Realm realm , AllTypes object , boolean update , Map < RealmObject , RealmObject > cache ) { <nl> + if ( object . realm ! = null & & object . realm . getId ( ) = = realm . getId ( ) ) { <nl> + return object ; <nl> + } <nl> AllTypes realmObject = null ; <nl> boolean canUpdate = update ; <nl> if ( canUpdate ) { <nl> diff - - git a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> index 291905e . . c00a40c 100644 <nl> - - - a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> + + + b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> @ @ - 175 , 6 + 175 , 9 @ @ public class BooleansRealmProxy extends Booleans { <nl> } <nl> <nl> public static Booleans copyOrUpdate ( Realm realm , Booleans object , boolean update , Map < RealmObject , RealmObject > cache ) { <nl> + if ( object . realm ! = null & & object . realm . getId ( ) = = realm . getId ( ) ) { <nl> + return object ; <nl> + } <nl> return copy ( realm , object , update , cache ) ; <nl> } <nl> <nl> diff - - git a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> index 211b4ff . . 42f697f 100644 <nl> - - - a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> + + + b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> @ @ - 148 , 6 + 148 , 9 @ @ public class SimpleRealmProxy extends Simple { <nl> } <nl> <nl> public static Simple copyOrUpdate ( Realm realm , Simple object , boolean update , Map < RealmObject , RealmObject > cache ) { <nl> + if ( object . realm ! = null & & object . realm . getId ( ) = = realm . getId ( ) ) { <nl> + return object ; <nl> + } <nl> return copy ( realm , object , update , cache ) ; <nl> } <nl> <nl> diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> index cd0e555 . . 53547ad 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> @ @ - 1089 , 6 + 1089 , 20 @ @ public class RealmTest extends AndroidTestCase { <nl> } <nl> } <nl> <nl> + public void testCopyToRealmDontCopyNestedRealmObjets ( ) { <nl> + testRealm . beginTransaction ( ) ; <nl> + CyclicTypePrimaryKey childObj = testRealm . createObject ( CyclicTypePrimaryKey . class ) ; <nl> + childObj . setName ( " Child " ) ; <nl> + childObj . setId ( 1 ) ; <nl> + <nl> + CyclicTypePrimaryKey parentObj = new CyclicTypePrimaryKey ( 2 ) ; <nl> + parentObj . setObject ( childObj ) ; <nl> + testRealm . copyToRealm ( parentObj ) ; <nl> + testRealm . commitTransaction ( ) ; <nl> + <nl> + assertEquals ( 2 , testRealm . where ( CyclicTypePrimaryKey . class ) . count ( ) ) ; <nl> + } <nl> + <nl> public void testCopyToRealmList ( ) { <nl> Dog dog1 = new Dog ( ) ; <nl> dog1 . setName ( " Dog 1 " ) ; <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index 656f6e7 . . 3c5b9fb 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 1187 , 10 + 1187 , 6 @ @ public final class Realm implements Closeable { <nl> * / <nl> public < E extends RealmObject > E copyToRealm ( E object ) { <nl> checkNotNullObject ( object ) ; <nl> - if ( isObjectInRealm ( object ) ) { <nl> - return object ; <nl> - } <nl> - <nl> return copyOrUpdate ( object , false ) ; <nl> } <nl> <nl> @ @ - 1207 , 10 + 1203 , 6 @ @ public final class Realm implements Closeable { <nl> public < E extends RealmObject > E copyToRealmOrUpdate ( E object ) { <nl> checkNotNullObject ( object ) ; <nl> checkHasPrimaryKey ( object ) ; <nl> - if ( isObjectInRealm ( object ) ) { <nl> - return object ; <nl> - } <nl> - <nl> return copyOrUpdate ( object , true ) ; <nl> } <nl> <nl> @ @ - 1623 , 10 + 1615 , 6 @ @ public final class Realm implements Closeable { <nl> } <nl> } <nl> <nl> - private < E extends RealmObject > boolean isObjectInRealm ( E object ) { <nl> - return ( object . realm ! = null & & object . realm . id = = this . id ) ; <nl> - } <nl> - <nl> private < E extends RealmObject > void checkNotNullObject ( E object ) { <nl> if ( object = = null ) { <nl> throw new IllegalArgumentException ( " Null objects cannot be copied into Realm . " ) ;

TEST DIFF:
diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 index 87e10ac . . 1d4b10d 100644 
 - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 @ @ - 699 , 14 + 699 , 14 @ @ public class RealmProxyClassGenerator { 
 . beginControlFlow ( " if ( currentDepth > maxDepth | | realmObject = = null ) " ) 
 . emitStatement ( " return null " ) 
 . endControlFlow ( ) 
 - . emitStatement ( " CacheData < % s > cachedObject = ( CacheData ) cache . get ( realmObject ) " , className ) 
 + . emitStatement ( " CacheData < RealmObject > cachedObject = cache . get ( realmObject ) " ) 
 . emitStatement ( " % s standaloneObject " , className ) 
 . beginControlFlow ( " if ( cachedObject ! = null ) " ) 
 . emitSingleLineComment ( " Reuse cached object or recreate it because it was encountered at a lower depth . " ) 
 . beginControlFlow ( " if ( currentDepth > = cachedObject . minDepth ) " ) 
 - . emitStatement ( " return cachedObject . object " ) 
 + . emitStatement ( " return ( % s ) cachedObject . object " , className ) 
 . nextControlFlow ( " else " ) 
 - . emitStatement ( " standaloneObject = cachedObject . object " ) 
 + . emitStatement ( " standaloneObject = ( % s ) cachedObject . object " , className ) 
 . emitStatement ( " cachedObject . minDepth = currentDepth " ) 
 . endControlFlow ( ) 
 . nextControlFlow ( " else " ) 
 diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 index f9df3e4 . . a0f31d9 100644 
 - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 @ @ - 646 , 14 + 646 , 14 @ @ public class AllTypesRealmProxy extends AllTypes 
 if ( currentDepth > maxDepth | | realmObject = = null ) { 
 return null ; 
 } 
 - CacheData < AllTypes > cachedObject = ( CacheData ) cache . get ( realmObject ) ; 
 + CacheData < RealmObject > cachedObject = cache . get ( realmObject ) ; 
 AllTypes standaloneObject ; 
 if ( cachedObject ! = null ) { 
 / / Reuse cached object or recreate it because it was encountered at a lower depth . 
 if ( currentDepth > = cachedObject . minDepth ) { 
 - return cachedObject . object ; 
 + return ( AllTypes ) cachedObject . object ; 
 } else { 
 - standaloneObject = cachedObject . object ; 
 + standaloneObject = ( AllTypes ) cachedObject . object ; 
 cachedObject . minDepth = currentDepth ; 
 } 
 } else { 
 diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 index 4982352 . . c87b718 100644 
 - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 @ @ - 286 , 14 + 286 , 14 @ @ public class BooleansRealmProxy extends Booleans 
 if ( currentDepth > maxDepth | | realmObject = = null ) { 
 return null ; 
 } 
 - CacheData < Booleans > cachedObject = ( CacheData ) cache . get ( realmObject ) ; 
 + CacheData < RealmObject > cachedObject = cache . get ( realmObject ) ; 
 Booleans standaloneObject ; 
 if ( cachedObject ! = null ) { 
 / / Reuse cached object or recreate it because it was encountered at a lower depth . 
 if ( currentDepth > = cachedObject . minDepth ) { 
 - return cachedObject . object ; 
 + return ( Booleans ) cachedObject . object ; 
 } else { 
 - standaloneObject = cachedObject . object ; 
 + standaloneObject = ( Booleans ) cachedObject . object ; 
 cachedObject . minDepth = currentDepth ; 
 } 
 } else { 
 diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java 
 index 95e845b . . a096482 100644 
 - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java 
 + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java 
 @ @ - 1129 , 14 + 1129 , 14 @ @ public class NullTypesRealmProxy extends NullTypes 
 if ( currentDepth > maxDepth | | realmObject = = null ) { 
 return null ; 
 } 
 - CacheData < NullTypes > cachedObject = ( CacheData ) cache . get ( realmObject ) ; 
 + CacheData < RealmObject > cachedObject = cache . get ( realmObject ) ; 
 NullTypes standaloneObject ; 
 if ( cachedObject ! = null ) { 
 / / Reuse cached object or recreate it because it was encountered at a lower depth . 
 if ( currentDepth > = cachedObject . minDepth ) { 
 - return cachedObject . object ; 
 + return ( NullTypes ) cachedObject . object ; 
 } else { 
 - standaloneObject = cachedObject . object ; 
 + standaloneObject = ( NullTypes ) cachedObject . object ; 
 cachedObject . minDepth = currentDepth ; 
 } 
 } else { 
 diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 index 22cba74 . . 9935490 100644 
 - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 @ @ - 208 , 14 + 208 , 14 @ @ public class SimpleRealmProxy extends Simple 
 if ( currentDepth > maxDepth | | realmObject = = null ) { 
 return null ; 
 } 
 - CacheData < Simple > cachedObject = ( CacheData ) cache . get ( realmObject ) ; 
 + CacheData < RealmObject > cachedObject = cache . get ( realmObject ) ; 
 Simple standaloneObject ; 
 if ( cachedObject ! = null ) { 
 / / Reuse cached object or recreate it because it was encountered at a lower depth . 
 if ( currentDepth > = cachedObject . minDepth ) { 
 - return cachedObject . object ; 
 + return ( Simple ) cachedObject . object ; 
 } else { 
 - standaloneObject = cachedObject . object ; 
 + standaloneObject = ( Simple ) cachedObject . object ; 
 cachedObject . minDepth = currentDepth ; 
 } 
 } else {

NEAREST DIFF:
diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 index 9f518de . . 89acb07 100644 
 - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 @ @ - 491 , 6 + 491 , 12 @ @ public class RealmProxyClassGenerator { 
 " Realm " , " realm " , className , " object " , " boolean " , " update " , " Map < RealmObject , RealmObject > " , " cache " / / Argument type & argument name 
 ) ; 
 
 + / / If object is already in the Realm there is nothing to update 
 + writer 
 + . beginControlFlow ( " if ( object . realm ! = null & & object . realm . getId ( ) = = realm . getId ( ) ) " ) 
 + . emitStatement ( " return object " ) 
 + . endControlFlow ( ) ; 
 + 
 if ( ! metadata . hasPrimaryKey ( ) ) { 
 writer . emitStatement ( " return copy ( realm , object , update , cache ) " ) ; 
 } else { 
 diff - - git a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 index da83178 . . 81cbe26 100644 
 - - - a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 + + + b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 @ @ - 392 , 6 + 392 , 9 @ @ public class AllTypesRealmProxy extends AllTypes { 
 } 
 
 public static AllTypes copyOrUpdate ( Realm realm , AllTypes object , boolean update , Map < RealmObject , RealmObject > cache ) { 
 + if ( object . realm ! = null & & object . realm . getId ( ) = = realm . getId ( ) ) { 
 + return object ; 
 + } 
 AllTypes realmObject = null ; 
 boolean canUpdate = update ; 
 if ( canUpdate ) { 
 diff - - git a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 index 291905e . . c00a40c 100644 
 - - - a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 + + + b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 @ @ - 175 , 6 + 175 , 9 @ @ public class BooleansRealmProxy extends Booleans { 
 } 
 
 public static Booleans copyOrUpdate ( Realm realm , Booleans object , boolean update , Map < RealmObject , RealmObject > cache ) { 
 + if ( object . realm ! = null & & object . realm . getId ( ) = = realm . getId ( ) ) { 
 + return object ; 
 + } 
 return copy ( realm , object , update , cache ) ; 
 } 
 
 diff - - git a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 index 211b4ff . . 42f697f 100644 
 - - - a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 + + + b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 @ @ - 148 , 6 + 148 , 9 @ @ public class SimpleRealmProxy extends Simple { 
 } 
 
 public static Simple copyOrUpdate ( Realm realm , Simple object , boolean update , Map < RealmObject , RealmObject > cache ) { 
 + if ( object . realm ! = null & & object . realm . getId ( ) = = realm . getId ( ) ) { 
 + return object ; 
 + } 
 return copy ( realm , object , update , cache ) ; 
 } 
 
 diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java 
 index cd0e555 . . 53547ad 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmTest . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmTest . java 
 @ @ - 1089 , 6 + 1089 , 20 @ @ public class RealmTest extends AndroidTestCase { 
 } 
 } 
 
 + public void testCopyToRealmDontCopyNestedRealmObjets ( ) { 
 + testRealm . beginTransaction ( ) ; 
 + CyclicTypePrimaryKey childObj = testRealm . createObject ( CyclicTypePrimaryKey . class ) ; 
 + childObj . setName ( " Child " ) ; 
 + childObj . setId ( 1 ) ; 
 + 
 + CyclicTypePrimaryKey parentObj = new CyclicTypePrimaryKey ( 2 ) ; 
 + parentObj . setObject ( childObj ) ; 
 + testRealm . copyToRealm ( parentObj ) ; 
 + testRealm . commitTransaction ( ) ; 
 + 
 + assertEquals ( 2 , testRealm . where ( CyclicTypePrimaryKey . class ) . count ( ) ) ; 
 + } 
 + 
 public void testCopyToRealmList ( ) { 
 Dog dog1 = new Dog ( ) ; 
 dog1 . setName ( " Dog 1 " ) ; 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index 656f6e7 . . 3c5b9fb 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 1187 , 10 + 1187 , 6 @ @ public final class Realm implements Closeable { 
 * / 
 public < E extends RealmObject > E copyToRealm ( E object ) { 
 checkNotNullObject ( object ) ; 
 - if ( isObjectInRealm ( object ) ) { 
 - return object ; 
 - } 
 - 
 return copyOrUpdate ( object , false ) ; 
 } 
 
 @ @ - 1207 , 10 + 1203 , 6 @ @ public final class Realm implements Closeable { 
 public < E extends RealmObject > E copyToRealmOrUpdate ( E object ) { 
 checkNotNullObject ( object ) ; 
 checkHasPrimaryKey ( object ) ; 
 - if ( isObjectInRealm ( object ) ) { 
 - return object ; 
 - } 
 - 
 return copyOrUpdate ( object , true ) ; 
 } 
 
 @ @ - 1623 , 10 + 1615 , 6 @ @ public final class Realm implements Closeable { 
 } 
 } 
 
 - private < E extends RealmObject > boolean isObjectInRealm ( E object ) { 
 - return ( object . realm ! = null & & object . realm . id = = this . id ) ; 
 - } 
 - 
 private < E extends RealmObject > void checkNotNullObject ( E object ) { 
 if ( object = = null ) { 
 throw new IllegalArgumentException ( " Null objects cannot be copied into Realm . " ) ;
