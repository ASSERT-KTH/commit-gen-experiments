BLEU SCORE: 0.005554498269121153

TEST MSG: fix typo
GENERATED MSG: RealmObject . toString ( ) method now uses isValid ( )

TEST DIFF (one line): diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> index 443fe3f . . a8ae039 100644 <nl> - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> @ @ - 331 , 7 + 331 , 7 @ @ public class RealmProxyClassGenerator { <nl> writer . endControlFlow ( ) ; <nl> writer . beginControlFlow ( " for ( RealmObject linkedObject : ( RealmList < ? extends RealmObject > ) value ) " ) ; <nl> writer . beginControlFlow ( " if ( ! linkedObject . isValid ( ) ) " ) ; <nl> - writer . emitStatement ( " throw new IllegalArgumentException ( \ " Each element of ' value ' must be an valid managed object . \ " ) " ) ; <nl> + writer . emitStatement ( " throw new IllegalArgumentException ( \ " Each element of ' value ' must be a valid managed object . \ " ) " ) ; <nl> writer . endControlFlow ( ) ; <nl> writer . emitStatement ( " links . add ( linkedObject . row . getIndex ( ) ) " ) ; <nl> writer . endControlFlow ( ) ; <nl> diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> index 95deb90 . . ce4889e 100644 <nl> - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> @ @ - 246 , 7 + 246 , 7 @ @ public class AllTypesRealmProxy extends AllTypes <nl> } <nl> for ( RealmObject linkedObject : ( RealmList < ? extends RealmObject > ) value ) { <nl> if ( ! linkedObject . isValid ( ) ) { <nl> - throw new IllegalArgumentException ( " Each element of ' value ' must be an valid managed object . " ) ; <nl> + throw new IllegalArgumentException ( " Each element of ' value ' must be a valid managed object . " ) ; <nl> } <nl> links . add ( linkedObject . row . getIndex ( ) ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> index 954b21e . . e0201b0 100644 <nl> - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> @ @ - 461 , 6 + 461 , 9 @ @ public class RealmProxyClassGenerator { <nl> private void emitToStringMethod ( JavaWriter writer ) throws IOException { <nl> writer . emitAnnotation ( " Override " ) ; <nl> writer . beginMethod ( " String " , " toString " , EnumSet . of ( Modifier . PUBLIC ) ) ; <nl> + writer . beginControlFlow ( " if ( ! isValid ( ) ) " ) ; <nl> + writer . emitStatement ( " return \ " Invalid object \ " " ) ; <nl> + writer . endControlFlow ( ) ; <nl> writer . emitStatement ( " StringBuilder stringBuilder = new StringBuilder ( \ " % s = [ \ " ) " , className ) ; <nl> for ( int i = 0 ; i < fields . size ( ) ; i + + ) { <nl> VariableElement field = fields . get ( i ) ; <nl> diff - - git a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> index 7619d7c . . bc46c84 100644 <nl> - - - a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> + + + b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> @ @ - 245 , 6 + 245 , 9 @ @ public class AllTypesRealmProxy extends AllTypes { <nl> <nl> @ Override <nl> public String toString ( ) { <nl> + if ( ! isValid ( ) ) { <nl> + return " Invalid object " ; <nl> + } <nl> StringBuilder stringBuilder = new StringBuilder ( " AllTypes = [ " ) ; <nl> stringBuilder . append ( " { columnString : " ) ; <nl> stringBuilder . append ( getColumnString ( ) ) ; <nl> diff - - git a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> index 0a4d1d6 . . e3c5244 100644 <nl> - - - a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> + + + b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> @ @ - 136 , 6 + 136 , 9 @ @ public class BooleansRealmProxy extends Booleans { <nl> <nl> @ Override <nl> public String toString ( ) { <nl> + if ( ! isValid ( ) ) { <nl> + return " Invalid object " ; <nl> + } <nl> StringBuilder stringBuilder = new StringBuilder ( " Booleans = [ " ) ; <nl> stringBuilder . append ( " { done : " ) ; <nl> stringBuilder . append ( isDone ( ) ) ; <nl> diff - - git a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> index e614df0 . . 6a5e3a3 100644 <nl> - - - a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> + + + b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> @ @ - 112 , 6 + 112 , 9 @ @ public class SimpleRealmProxy extends Simple { <nl> <nl> @ Override <nl> public String toString ( ) { <nl> + if ( ! isValid ( ) ) { <nl> + return " Invalid object " ; <nl> + } <nl> StringBuilder stringBuilder = new StringBuilder ( " Simple = [ " ) ; <nl> stringBuilder . append ( " { name : " ) ; <nl> stringBuilder . append ( getName ( ) ) ;

TEST DIFF:
diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 index 443fe3f . . a8ae039 100644 
 - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 @ @ - 331 , 7 + 331 , 7 @ @ public class RealmProxyClassGenerator { 
 writer . endControlFlow ( ) ; 
 writer . beginControlFlow ( " for ( RealmObject linkedObject : ( RealmList < ? extends RealmObject > ) value ) " ) ; 
 writer . beginControlFlow ( " if ( ! linkedObject . isValid ( ) ) " ) ; 
 - writer . emitStatement ( " throw new IllegalArgumentException ( \ " Each element of ' value ' must be an valid managed object . \ " ) " ) ; 
 + writer . emitStatement ( " throw new IllegalArgumentException ( \ " Each element of ' value ' must be a valid managed object . \ " ) " ) ; 
 writer . endControlFlow ( ) ; 
 writer . emitStatement ( " links . add ( linkedObject . row . getIndex ( ) ) " ) ; 
 writer . endControlFlow ( ) ; 
 diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 index 95deb90 . . ce4889e 100644 
 - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 @ @ - 246 , 7 + 246 , 7 @ @ public class AllTypesRealmProxy extends AllTypes 
 } 
 for ( RealmObject linkedObject : ( RealmList < ? extends RealmObject > ) value ) { 
 if ( ! linkedObject . isValid ( ) ) { 
 - throw new IllegalArgumentException ( " Each element of ' value ' must be an valid managed object . " ) ; 
 + throw new IllegalArgumentException ( " Each element of ' value ' must be a valid managed object . " ) ; 
 } 
 links . add ( linkedObject . row . getIndex ( ) ) ; 
 }

NEAREST DIFF:
diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 index 954b21e . . e0201b0 100644 
 - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 @ @ - 461 , 6 + 461 , 9 @ @ public class RealmProxyClassGenerator { 
 private void emitToStringMethod ( JavaWriter writer ) throws IOException { 
 writer . emitAnnotation ( " Override " ) ; 
 writer . beginMethod ( " String " , " toString " , EnumSet . of ( Modifier . PUBLIC ) ) ; 
 + writer . beginControlFlow ( " if ( ! isValid ( ) ) " ) ; 
 + writer . emitStatement ( " return \ " Invalid object \ " " ) ; 
 + writer . endControlFlow ( ) ; 
 writer . emitStatement ( " StringBuilder stringBuilder = new StringBuilder ( \ " % s = [ \ " ) " , className ) ; 
 for ( int i = 0 ; i < fields . size ( ) ; i + + ) { 
 VariableElement field = fields . get ( i ) ; 
 diff - - git a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 index 7619d7c . . bc46c84 100644 
 - - - a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 + + + b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 @ @ - 245 , 6 + 245 , 9 @ @ public class AllTypesRealmProxy extends AllTypes { 
 
 @ Override 
 public String toString ( ) { 
 + if ( ! isValid ( ) ) { 
 + return " Invalid object " ; 
 + } 
 StringBuilder stringBuilder = new StringBuilder ( " AllTypes = [ " ) ; 
 stringBuilder . append ( " { columnString : " ) ; 
 stringBuilder . append ( getColumnString ( ) ) ; 
 diff - - git a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 index 0a4d1d6 . . e3c5244 100644 
 - - - a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 + + + b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 @ @ - 136 , 6 + 136 , 9 @ @ public class BooleansRealmProxy extends Booleans { 
 
 @ Override 
 public String toString ( ) { 
 + if ( ! isValid ( ) ) { 
 + return " Invalid object " ; 
 + } 
 StringBuilder stringBuilder = new StringBuilder ( " Booleans = [ " ) ; 
 stringBuilder . append ( " { done : " ) ; 
 stringBuilder . append ( isDone ( ) ) ; 
 diff - - git a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 index e614df0 . . 6a5e3a3 100644 
 - - - a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 + + + b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 @ @ - 112 , 6 + 112 , 9 @ @ public class SimpleRealmProxy extends Simple { 
 
 @ Override 
 public String toString ( ) { 
 + if ( ! isValid ( ) ) { 
 + return " Invalid object " ; 
 + } 
 StringBuilder stringBuilder = new StringBuilder ( " Simple = [ " ) ; 
 stringBuilder . append ( " { name : " ) ; 
 stringBuilder . append ( getName ( ) ) ;
