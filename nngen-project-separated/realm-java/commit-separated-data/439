BLEU SCORE: 0.027611988917697356

TEST MSG: Disallow calling findAllAsync on non - looper thread
GENERATED MSG: Adding where ( ) to RealmList

TEST DIFF (one line): diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> index 611083d . . 69bba49 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java <nl> @ @ - 460 , 6 + 460 , 7 @ @ public class RealmAsyncQueryTests { <nl> Realm realm = Realm . getInstance ( configFactory . createConfiguration ( ) ) ; <nl> try { <nl> realm . where ( AllTypes . class ) . findAllAsync ( ) ; <nl> + fail ( ) ; <nl> } catch ( IllegalStateException ignored ) { <nl> } finally { <nl> realm . close ( ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> index e335f4e . . 6ff652c 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java <nl> @ @ - 60 , 6 + 60 , 7 @ @ public class RealmQuery < E extends RealmModel > { <nl> private TableQuery query ; <nl> private static final String TYPE _ MISMATCH = " Field ' % s ' : type mismatch - % s expected . " ; <nl> private static final String EMPTY _ VALUES = " Non - empty ' values ' must be provided . " ; <nl> + static final String ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE = " Async query cannot be created on current thread . " ; <nl> <nl> / * * <nl> * Creates a query for objects of a given class from a { @ link Realm } . <nl> @ @ - 1522 , 6 + 1523 , 7 @ @ public class RealmQuery < E extends RealmModel > { <nl> * @ see io . realm . RealmResults <nl> * / <nl> public RealmResults < E > findAllAsync ( ) { <nl> + realm . sharedRealm . capabilities . checkCanDeliverNotification ( ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE ) ; <nl> return createRealmResults ( query , null , null , false ) ; <nl> } <nl> <nl> @ @ - 1554 , 6 + 1556 , 7 @ @ public class RealmQuery < E extends RealmModel > { <nl> * { @ link RealmObject } or a child { @ link RealmList } . <nl> * / <nl> public RealmResults < E > findAllSortedAsync ( final String fieldName , final Sort sortOrder ) { <nl> + realm . sharedRealm . capabilities . checkCanDeliverNotification ( ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE ) ; <nl> SortDescriptor sortDescriptor = SortDescriptor . getInstanceForSort ( query . getTable ( ) , fieldName , sortOrder ) ; <nl> return createRealmResults ( query , sortDescriptor , null , false ) ; <nl> } <nl> @ @ - 1622 , 6 + 1625 , 7 @ @ public class RealmQuery < E extends RealmModel > { <nl> * { @ link RealmObject } or a child { @ link RealmList } . <nl> * / <nl> public RealmResults < E > findAllSortedAsync ( String fieldNames [ ] , final Sort [ ] sortOrders ) { <nl> + realm . sharedRealm . capabilities . checkCanDeliverNotification ( ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE ) ; <nl> SortDescriptor sortDescriptor = SortDescriptor . getInstanceForSort ( query . getTable ( ) , fieldNames , sortOrders ) ; <nl> return createRealmResults ( query , sortDescriptor , null , false ) ; <nl> } <nl> @ @ - 1688 , 6 + 1692 , 7 @ @ public class RealmQuery < E extends RealmModel > { <nl> * { @ code false } . <nl> * / <nl> public E findFirstAsync ( ) { <nl> + realm . sharedRealm . capabilities . checkCanDeliverNotification ( ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE ) ; <nl> Row row ; <nl> if ( realm . isInTransaction ( ) ) { <nl> / / It is not possible to create async query inside a transaction . So immediately query the first object . <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> index 4677e13 . . b2aef35 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java <nl> @ @ - 449 , 6 + 449 , 7 @ @ public class RealmResults < E extends RealmModel > extends AbstractList < E > implemen <nl> * is not indexed , or points to linked fields . <nl> * / <nl> public RealmResults < E > distinctAsync ( String fieldName ) { <nl> + realm . sharedRealm . capabilities . checkCanDeliverNotification ( RealmQuery . ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE ) ; <nl> return where ( ) . distinctAsync ( fieldName ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / changelog . txt b / changelog . txt <nl> index 666bd17 . . 3d708b9 100644 <nl> - - - a / changelog . txt <nl> + + + b / changelog . txt <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> 0 . 74 . 0 ( ? ? ) <nl> * Adding case sensitive versions of string comparison operators equalTo and notEqualTo <nl> - <nl> + * Adding where ( ) to RealmList to initiate queries <nl> <nl> 0 . 73 . 1 ( 05 Nov 2014 ) <nl> * Fixed a bug that would send infinite notifications in some instances <nl> diff - - git a / realm - jni / src / io _ realm _ internal _ LinkView . cpp b / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> index 80e946b . . 3dd3468 100644 <nl> - - - a / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> + + + b / realm - jni / src / io _ realm _ internal _ LinkView . cpp <nl> @ @ - 15 , 6 + 15 , 7 @ @ <nl> * / <nl> <nl> # include " io _ realm _ internal _ LinkView . h " <nl> + # include " tablequery . hpp " <nl> # include " util . hpp " <nl> <nl> using namespace tightdb ; <nl> @ @ - 119 , 3 + 120 , 15 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ LinkView _ nativeIsEmpty <nl> } CATCH _ STD ( ) <nl> return 0 ; <nl> } <nl> + <nl> + JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeWhere <nl> + ( JNIEnv * env , jobject , jlong nativeLinkViewPtr ) <nl> + { <nl> + try { <nl> + LinkView * lv = LV ( nativeLinkViewPtr ) ; <nl> + Query query = lv - > get _ origin _ table ( ) . where ( lv ) ; <nl> + TableQuery * queryPtr = new TableQuery ( query ) ; <nl> + return reinterpret _ cast < jlong > ( queryPtr ) ; <nl> + } CATCH _ STD ( ) <nl> + return 0 ; <nl> + } <nl> diff - - git a / realm - jni / src / io _ realm _ internal _ LinkView . h b / realm - jni / src / io _ realm _ internal _ LinkView . h <nl> index f639794 . . 0b5f810 100644 <nl> - - - a / realm - jni / src / io _ realm _ internal _ LinkView . h <nl> + + + b / realm - jni / src / io _ realm _ internal _ LinkView . h <nl> @ @ - 95 , 6 + 95 , 14 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeSize <nl> JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ LinkView _ nativeIsEmpty <nl> ( JNIEnv * , jobject , jlong ) ; <nl> <nl> + / * <nl> + * Class : io _ realm _ internal _ LinkView <nl> + * Method : nativeWhere <nl> + * Signature : ( J ) J <nl> + * / <nl> + JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeWhere <nl> + ( JNIEnv * , jobject , jlong ) ; <nl> + <nl> # ifdef _ _ cplusplus <nl> } <nl> # endif <nl> diff - - git a / realm / src / main / java / io / realm / RealmList . java b / realm / src / main / java / io / realm / RealmList . java <nl> index 8162400 . . 43ea5c6 100644 <nl> - - - a / realm / src / main / java / io / realm / RealmList . java <nl> + + + b / realm / src / main / java / io / realm / RealmList . java <nl> @ @ - 136 , 6 + 136 , 8 @ @ public class RealmList < E extends RealmObject > extends AbstractList < E > { <nl> * @ see io . realm . RealmQuery <nl> * / <nl> public RealmQuery < E > where ( ) { <nl> + <nl> + <nl> return null ; <nl> } <nl> } <nl> diff - - git a / realm / src / main / java / io / realm / internal / LinkView . java b / realm / src / main / java / io / realm / internal / LinkView . java <nl> index 1ffb0ce . . 4b45a04 100644 <nl> - - - a / realm / src / main / java / io / realm / internal / LinkView . java <nl> + + + b / realm / src / main / java / io / realm / internal / LinkView . java <nl> @ @ - 82 , 4 + 82 , 18 @ @ public class LinkView { <nl> return nativeIsEmpty ( nativeLinkViewPtr ) ; <nl> } <nl> private native boolean nativeIsEmpty ( long nativeLinkViewPtr ) ; <nl> + <nl> + public TableQuery where ( ) { <nl> + / / Execute the disposal of abandoned realm objects each time a new realm object is created <nl> + this . context . executeDelayedDisposal ( ) ; <nl> + long nativeQueryPtr = nativeWhere ( nativeLinkViewPtr ) ; <nl> + try { <nl> + return new TableQuery ( this . context , this . parent , nativeQueryPtr ) ; <nl> + } catch ( RuntimeException e ) { <nl> + TableQuery . nativeClose ( nativeQueryPtr ) ; <nl> + throw e ; <nl> + } <nl> + } <nl> + <nl> + protected native long nativeWhere ( long nativeLinkViewPtr ) ; <nl> }

TEST DIFF:
diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 index 611083d . . 69bba49 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmAsyncQueryTests . java 
 @ @ - 460 , 6 + 460 , 7 @ @ public class RealmAsyncQueryTests { 
 Realm realm = Realm . getInstance ( configFactory . createConfiguration ( ) ) ; 
 try { 
 realm . where ( AllTypes . class ) . findAllAsync ( ) ; 
 + fail ( ) ; 
 } catch ( IllegalStateException ignored ) { 
 } finally { 
 realm . close ( ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmQuery . java b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 index e335f4e . . 6ff652c 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmQuery . java 
 @ @ - 60 , 6 + 60 , 7 @ @ public class RealmQuery < E extends RealmModel > { 
 private TableQuery query ; 
 private static final String TYPE _ MISMATCH = " Field ' % s ' : type mismatch - % s expected . " ; 
 private static final String EMPTY _ VALUES = " Non - empty ' values ' must be provided . " ; 
 + static final String ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE = " Async query cannot be created on current thread . " ; 
 
 / * * 
 * Creates a query for objects of a given class from a { @ link Realm } . 
 @ @ - 1522 , 6 + 1523 , 7 @ @ public class RealmQuery < E extends RealmModel > { 
 * @ see io . realm . RealmResults 
 * / 
 public RealmResults < E > findAllAsync ( ) { 
 + realm . sharedRealm . capabilities . checkCanDeliverNotification ( ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE ) ; 
 return createRealmResults ( query , null , null , false ) ; 
 } 
 
 @ @ - 1554 , 6 + 1556 , 7 @ @ public class RealmQuery < E extends RealmModel > { 
 * { @ link RealmObject } or a child { @ link RealmList } . 
 * / 
 public RealmResults < E > findAllSortedAsync ( final String fieldName , final Sort sortOrder ) { 
 + realm . sharedRealm . capabilities . checkCanDeliverNotification ( ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE ) ; 
 SortDescriptor sortDescriptor = SortDescriptor . getInstanceForSort ( query . getTable ( ) , fieldName , sortOrder ) ; 
 return createRealmResults ( query , sortDescriptor , null , false ) ; 
 } 
 @ @ - 1622 , 6 + 1625 , 7 @ @ public class RealmQuery < E extends RealmModel > { 
 * { @ link RealmObject } or a child { @ link RealmList } . 
 * / 
 public RealmResults < E > findAllSortedAsync ( String fieldNames [ ] , final Sort [ ] sortOrders ) { 
 + realm . sharedRealm . capabilities . checkCanDeliverNotification ( ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE ) ; 
 SortDescriptor sortDescriptor = SortDescriptor . getInstanceForSort ( query . getTable ( ) , fieldNames , sortOrders ) ; 
 return createRealmResults ( query , sortDescriptor , null , false ) ; 
 } 
 @ @ - 1688 , 6 + 1692 , 7 @ @ public class RealmQuery < E extends RealmModel > { 
 * { @ code false } . 
 * / 
 public E findFirstAsync ( ) { 
 + realm . sharedRealm . capabilities . checkCanDeliverNotification ( ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE ) ; 
 Row row ; 
 if ( realm . isInTransaction ( ) ) { 
 / / It is not possible to create async query inside a transaction . So immediately query the first object . 
 diff - - git a / realm / realm - library / src / main / java / io / realm / RealmResults . java b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 index 4677e13 . . b2aef35 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 + + + b / realm / realm - library / src / main / java / io / realm / RealmResults . java 
 @ @ - 449 , 6 + 449 , 7 @ @ public class RealmResults < E extends RealmModel > extends AbstractList < E > implemen 
 * is not indexed , or points to linked fields . 
 * / 
 public RealmResults < E > distinctAsync ( String fieldName ) { 
 + realm . sharedRealm . capabilities . checkCanDeliverNotification ( RealmQuery . ASYNC _ QUERY _ WRONG _ THREAD _ MESSAGE ) ; 
 return where ( ) . distinctAsync ( fieldName ) ; 
 } 


NEAREST DIFF:
diff - - git a / changelog . txt b / changelog . txt 
 index 666bd17 . . 3d708b9 100644 
 - - - a / changelog . txt 
 + + + b / changelog . txt 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 0 . 74 . 0 ( ? ? ) 
 * Adding case sensitive versions of string comparison operators equalTo and notEqualTo 
 - 
 + * Adding where ( ) to RealmList to initiate queries 
 
 0 . 73 . 1 ( 05 Nov 2014 ) 
 * Fixed a bug that would send infinite notifications in some instances 
 diff - - git a / realm - jni / src / io _ realm _ internal _ LinkView . cpp b / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 index 80e946b . . 3dd3468 100644 
 - - - a / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 + + + b / realm - jni / src / io _ realm _ internal _ LinkView . cpp 
 @ @ - 15 , 6 + 15 , 7 @ @ 
 * / 
 
 # include " io _ realm _ internal _ LinkView . h " 
 + # include " tablequery . hpp " 
 # include " util . hpp " 
 
 using namespace tightdb ; 
 @ @ - 119 , 3 + 120 , 15 @ @ JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ LinkView _ nativeIsEmpty 
 } CATCH _ STD ( ) 
 return 0 ; 
 } 
 + 
 + JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeWhere 
 + ( JNIEnv * env , jobject , jlong nativeLinkViewPtr ) 
 + { 
 + try { 
 + LinkView * lv = LV ( nativeLinkViewPtr ) ; 
 + Query query = lv - > get _ origin _ table ( ) . where ( lv ) ; 
 + TableQuery * queryPtr = new TableQuery ( query ) ; 
 + return reinterpret _ cast < jlong > ( queryPtr ) ; 
 + } CATCH _ STD ( ) 
 + return 0 ; 
 + } 
 diff - - git a / realm - jni / src / io _ realm _ internal _ LinkView . h b / realm - jni / src / io _ realm _ internal _ LinkView . h 
 index f639794 . . 0b5f810 100644 
 - - - a / realm - jni / src / io _ realm _ internal _ LinkView . h 
 + + + b / realm - jni / src / io _ realm _ internal _ LinkView . h 
 @ @ - 95 , 6 + 95 , 14 @ @ JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeSize 
 JNIEXPORT jboolean JNICALL Java _ io _ realm _ internal _ LinkView _ nativeIsEmpty 
 ( JNIEnv * , jobject , jlong ) ; 
 
 + / * 
 + * Class : io _ realm _ internal _ LinkView 
 + * Method : nativeWhere 
 + * Signature : ( J ) J 
 + * / 
 + JNIEXPORT jlong JNICALL Java _ io _ realm _ internal _ LinkView _ nativeWhere 
 + ( JNIEnv * , jobject , jlong ) ; 
 + 
 # ifdef _ _ cplusplus 
 } 
 # endif 
 diff - - git a / realm / src / main / java / io / realm / RealmList . java b / realm / src / main / java / io / realm / RealmList . java 
 index 8162400 . . 43ea5c6 100644 
 - - - a / realm / src / main / java / io / realm / RealmList . java 
 + + + b / realm / src / main / java / io / realm / RealmList . java 
 @ @ - 136 , 6 + 136 , 8 @ @ public class RealmList < E extends RealmObject > extends AbstractList < E > { 
 * @ see io . realm . RealmQuery 
 * / 
 public RealmQuery < E > where ( ) { 
 + 
 + 
 return null ; 
 } 
 } 
 diff - - git a / realm / src / main / java / io / realm / internal / LinkView . java b / realm / src / main / java / io / realm / internal / LinkView . java 
 index 1ffb0ce . . 4b45a04 100644 
 - - - a / realm / src / main / java / io / realm / internal / LinkView . java 
 + + + b / realm / src / main / java / io / realm / internal / LinkView . java 
 @ @ - 82 , 4 + 82 , 18 @ @ public class LinkView { 
 return nativeIsEmpty ( nativeLinkViewPtr ) ; 
 } 
 private native boolean nativeIsEmpty ( long nativeLinkViewPtr ) ; 
 + 
 + public TableQuery where ( ) { 
 + / / Execute the disposal of abandoned realm objects each time a new realm object is created 
 + this . context . executeDelayedDisposal ( ) ; 
 + long nativeQueryPtr = nativeWhere ( nativeLinkViewPtr ) ; 
 + try { 
 + return new TableQuery ( this . context , this . parent , nativeQueryPtr ) ; 
 + } catch ( RuntimeException e ) { 
 + TableQuery . nativeClose ( nativeQueryPtr ) ; 
 + throw e ; 
 + } 
 + } 
 + 
 + protected native long nativeWhere ( long nativeLinkViewPtr ) ; 
 }
