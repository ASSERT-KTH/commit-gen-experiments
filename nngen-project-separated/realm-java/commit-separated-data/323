BLEU SCORE: 0.02931251013275449

TEST MSG: Script for doing release locally
GENERATED MSG: add gradle wrapper to realm - transformer project

TEST DIFF (one line): diff - - git a / tools / release . sh b / tools / release . sh <nl> new file mode 100755 <nl> index 0000000 . . 33a0183 <nl> - - - / dev / null <nl> + + + b / tools / release . sh <nl> @ @ - 0 , 0 + 1 , 239 @ @ <nl> + # ! / usr / bin / env bash <nl> + <nl> + # Script to make release on the local machine . <nl> + # See https : / / github . com / realm / realm - wiki / wiki / Java - Release - Checklist for more details . <nl> + # FIXME : Only patch release is supported now . <nl> + <nl> + set - euo pipefail <nl> + IFS = $ ' \ n \ t ' <nl> + <nl> + usage ( ) { <nl> + cat < < EOF <nl> + Usage : $ 0 < branch - to - release > <nl> + EOF <nl> + } <nl> + <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + # Input Validation <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + <nl> + if [ " $ # " - eq 0 ] | | [ " $ # " - gt 1 ] ; then <nl> + usage <nl> + exit 1 <nl> + fi <nl> + <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + # Variables <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + <nl> + BRANCH _ TO _ RELEASE = " $ 1 " <nl> + VERSION = " " <nl> + REALM _ IO _ PATH = $ { REALM _ IO _ PATH : - } <nl> + REALM _ JAVA _ PATH = $ ( pwd ) <nl> + <nl> + check _ adb _ device ( ) { <nl> + if ! adb get - state 1 > / dev / null 2 > & 1 ; then <nl> + read - n 1 - s - p - r " Attach a test device or start the emulator then press any key to continue . . . " <nl> + echo " " <nl> + check _ adb _ device <nl> + fi <nl> + } <nl> + <nl> + check _ env ( ) { <nl> + echo " Checking environment . . . " <nl> + <nl> + # Try to find s3cmd <nl> + path _ to _ s3cmd = $ ( which s3cmd ) <nl> + if [ [ ! - x " $ path _ to _ s3cmd " ] ] ; then <nl> + echo " Cannot find executable file ' s3cmd ' . " <nl> + exit - 1 <nl> + fi <nl> + if [ [ ! - e " $ HOME / . s3cfg " ] ] ; then <nl> + echo " ' $ HOME / . s3cfg ' cannot be found . " <nl> + exit - 1 <nl> + fi <nl> + <nl> + # Check BinTray credentials <nl> + if ! grep " bintrayUser = realm " " $ HOME / . gradle / gradle . properties " > / dev / null ; then <nl> + echo " ' bintrayUser ' is not set in the ' $ HOME / . gradle / gradle . properties ' . " <nl> + exit - 1 <nl> + fi <nl> + <nl> + if ! grep " bintrayKey = . * " " $ HOME / . gradle / gradle . properties " > / dev / null ; then <nl> + echo " ' bintrayKey ' is not set in the ' $ HOME / . gradle / gradle . properties ' . " <nl> + exit - 1 <nl> + fi <nl> + <nl> + # Check gradle params <nl> + if grep buildTargetABIs " $ HOME / . gradle / gradle . properties " | grep - v " ^ # " > / dev / null ; then <nl> + echo " ' buildTargetABIs ' should be disabled in the ' $ HOME / . gradle / gradle . properties ' . " <nl> + exit - 1 <nl> + fi <nl> + if grep ccachePath " $ HOME / . gradle / gradle . properties " | grep - v " ^ # " > / dev / null ; then <nl> + echo " ' ccachePath ' should be disabled in the ' $ HOME / . gradle / gradle . properties ' . " <nl> + exit - 1 <nl> + fi <nl> + if grep lcachePath " $ HOME / . gradle / gradle . properties " | grep - v " ^ # " > / dev / null ; then <nl> + echo " ' lcachePath ' should be disabled in the ' $ HOME / . gradle / gradle . properties ' . " <nl> + exit - 1 <nl> + fi <nl> + <nl> + if [ [ - z $ { REALM _ IO _ PATH } ] ] ; then <nl> + REALM _ IO _ PATH = " $ ( pwd ) / . . / realm . io " <nl> + fi <nl> + if [ [ ! - e $ { REALM _ IO _ PATH } ] ] ; then <nl> + echo " Please set ' REALM _ IO _ PATH ' to the ' realm . io ' repository path to publish javadoc . " <nl> + exit - 1 <nl> + fi <nl> + } <nl> + <nl> + prepare _ branch ( ) { <nl> + echo " Preparing release branch . . . " <nl> + <nl> + git fetch - - all <nl> + git checkout releases <nl> + git reset - - hard origin / releases <nl> + if [ [ " $ BRANCH _ TO _ RELEASE " ! = " releases " ] ] ; then <nl> + echo " Releasing from other branches than ' releases ' is not supported right now . " <nl> + exit - 1 <nl> + fi <nl> + <nl> + git clean - xfd <nl> + git submodule update - - init - - recursive <nl> + <nl> + if ! grep - q " SNAPSHOT " version . txt ; then <nl> + echo " ' version . txt ' doesn ' t contain ' SNAPSHOT ' . " <nl> + exit - 1 <nl> + fi <nl> + <nl> + version _ in _ changelog = $ ( head - 1 CHANGELOG . md | grep - o " [ 0 - 9 ] * \ . [ 0 - 9 ] * \ . [ 0 - 9 ] * " ) <nl> + VERSION = $ ( grep - o " [ 0 - 9 ] * \ . [ 0 - 9 ] * \ . [ 0 - 9 ] * " version . txt ) <nl> + if [ [ " $ { VERSION } " ! = " $ { version _ in _ changelog } " ] ] ; then <nl> + echo " ' version . txt ' doens ' t match the entry in ' CHANGELOG . md ' . $ { VERSION } vs $ { version _ in _ changelog } . " <nl> + exit - 1 <nl> + fi <nl> + <nl> + # Check if tag exists in remote <nl> + if git ls - remote - - tags origin | grep " v $ { VERSION } " > / dev / null ; then <nl> + echo " Tag ' v $ { VERSION } ' exists in remote ! " <nl> + exit - 1 <nl> + fi <nl> + if git tag | grep " v $ { VERSION } " > / dev / null ; then <nl> + git tag - d " v $ { VERSION } " <nl> + fi <nl> + <nl> + # Update date in change log <nl> + cur _ date = $ ( date " + % F " ) <nl> + sed - i " 1 s / YYYY - MM - DD / $ { cur _ date } / " CHANGELOG . md <nl> + git add CHANGELOG . md <nl> + git commit - m " Update changelog date " <nl> + <nl> + # This will create 2 new commits to change the version . txt . The top one is the next release version + SNAPSHOT . <nl> + . / gradlew release <nl> + # Checkout the one with current version number . <nl> + git checkout HEAD ~ 1 <nl> + } <nl> + <nl> + build ( ) { <nl> + echo " Building . . . " <nl> + <nl> + . / gradlew assemble <nl> + <nl> + echo " Verifying examples . . . " <nl> + <nl> + check _ adb _ device <nl> + <nl> + # Verify examples <nl> + ( cd examples & & . / gradlew uninstallAll & & . / gradlew monkeyDebug ) <nl> + } <nl> + <nl> + upload _ to _ bintray ( ) { <nl> + echo " Uploading artifacts to Bintray . . . " <nl> + # Upload to bintray <nl> + . / gradlew bintrayUpload <nl> + <nl> + echo " Done . " <nl> + echo " 1 . Log into BinTray ( https : / / bintray . com ) with the Realm account ; " <nl> + echo " 2 . Goto https : / / bintray . com / realm / maven and check if there are 16 artifacts to publish . " <nl> + echo " 3 . Press ' Publish ' . " <nl> + while true <nl> + do <nl> + read - r - p " Have you published 16 artifacts on Bintray ? Type ' Yes ' to continue . . . " input <nl> + <nl> + case " $ input " in <nl> + [ yY ] [ eE ] [ sS ] ) <nl> + break <nl> + ; ; <nl> + esac <nl> + done <nl> + } <nl> + <nl> + publish _ distribution ( ) { <nl> + echo " Publishing distribution package . . . " <nl> + <nl> + # Create distribution package <nl> + . / gradlew distributionPackage <nl> + pushd build / outputs / distribution <nl> + unzip " realm - java - $ { VERSION } . zip " <nl> + <nl> + # Test <nl> + check _ adb _ device <nl> + pushd examples / <nl> + . / gradlew uninstallAll <nl> + . / gradlew monkeyRelease <nl> + popd <nl> + popd <nl> + . / gradlew distribute <nl> + } <nl> + <nl> + push _ release ( ) { <nl> + echo " Pushing releases branch to origin . . . " <nl> + <nl> + # Push branch & tag <nl> + git checkout releases <nl> + git push origin releases <nl> + git push origin " v $ { VERSION } " <nl> + } <nl> + <nl> + publish _ javadoc ( ) { <nl> + echo " Publishing javadoc . . . " <nl> + cd " $ { REALM _ IO _ PATH } " <nl> + git fetch - - all <nl> + branch _ name = publish _ java _ doc / $ { VERSION } <nl> + git checkout origin / master - b " $ { branch _ name } " <nl> + <nl> + while true <nl> + do <nl> + read - r - p " Type ' Yes ' to clean uncommitted files in ' source / en / docs / java ' . . . " input <nl> + <nl> + case " $ input " in <nl> + [ yY ] [ eE ] [ sS ] ) <nl> + break <nl> + ; ; <nl> + esac <nl> + done <nl> + git clean - xfd . / source / en / docs / java / <nl> + bundle exec rake generate : java _ docs [ $ VERSION ] <nl> + cp - R " $ { REALM _ JAVA _ PATH } / realm / realm - library / build / docs / javadoc / * " . / source / en / docs / java / latest / api / <nl> + bundle exec rake generate : inject _ ga _ latest _ java _ api <nl> + git add . / source / en / docs / java / <nl> + git commit - m " Release realm - java doc $ { VERSION } " <nl> + git push origin " $ { branch _ name } " <nl> + path _ to _ hub = $ ( which hub ) <nl> + if [ [ ! - x " $ path _ to _ hub " ] ] ; then <nl> + echo " ' hub ' cannot be found in the executable path . " <nl> + echo " Please create a pull request manually in realm . io repo with branch $ { branch _ name } . " <nl> + exit - 1 <nl> + else <nl> + hub pull - request <nl> + echo " A pull request has been created for branch $ { branch _ name } . " <nl> + fi <nl> + } <nl> + <nl> + check _ env <nl> + prepare _ branch <nl> + build <nl> + upload _ to _ bintray <nl> + publish _ distribution <nl> + push _ release <nl> + publish _ javadoc
NEAREST DIFF (one line): diff - - git a / realm - transformer / build . gradle b / realm - transformer / build . gradle <nl> index 3df34f8 . . c9e8db8 100644 <nl> - - - a / realm - transformer / build . gradle <nl> + + + b / realm - transformer / build . gradle <nl> @ @ - 17 , 8 + 17 , 8 @ @ dependencies { <nl> compile localGroovy ( ) <nl> compile gradleApi ( ) <nl> compile " io . realm : realm - annotations : $ { version } " <nl> - compile ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> - compile ' com . android . tools . build : transform - api : 1 . 5 . 0 ' <nl> + compile ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha3 ' <nl> + compile ' com . android . tools . build : transform - api : 2 . 0 . 0 - alpha3 ' <nl> compile ' org . javassist : javassist : 3 . 20 . 0 - GA ' <nl> <nl> testCompile ( ' org . spockframework : spock - core : 1 . 0 - groovy - 2 . 4 ' ) { <nl> diff - - git a / realm - transformer / gradle / wrapper / gradle - wrapper . jar b / realm - transformer / gradle / wrapper / gradle - wrapper . jar <nl> new file mode 100644 <nl> index 0000000 . . e8c6bf7 <nl> Binary files / dev / null and b / realm - transformer / gradle / wrapper / gradle - wrapper . jar differ <nl> diff - - git a / realm - transformer / gradle / wrapper / gradle - wrapper . properties b / realm - transformer / gradle / wrapper / gradle - wrapper . properties <nl> new file mode 100644 <nl> index 0000000 . . 587246a <nl> - - - / dev / null <nl> + + + b / realm - transformer / gradle / wrapper / gradle - wrapper . properties <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + # Tue Jan 05 14 : 18 : 17 CET 2016 <nl> + distributionBase = GRADLE _ USER _ HOME <nl> + distributionPath = wrapper / dists <nl> + zipStoreBase = GRADLE _ USER _ HOME <nl> + zipStorePath = wrapper / dists <nl> + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 10 - all . zip <nl> diff - - git a / realm - transformer / gradlew b / realm - transformer / gradlew <nl> new file mode 100755 <nl> index 0000000 . . 97fac78 <nl> - - - / dev / null <nl> + + + b / realm - transformer / gradlew <nl> @ @ - 0 , 0 + 1 , 160 @ @ <nl> + # ! / usr / bin / env bash <nl> + <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + # # <nl> + # # Gradle start up script for UN * X <nl> + # # <nl> + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + <nl> + # Add default JVM options here . You can also use JAVA _ OPTS and GRADLE _ OPTS to pass JVM options to this script . <nl> + DEFAULT _ JVM _ OPTS = " " <nl> + <nl> + APP _ NAME = " Gradle " <nl> + APP _ BASE _ NAME = ` basename " $ 0 " ` <nl> + <nl> + # Use the maximum available , or set MAX _ FD ! = - 1 to use that value . <nl> + MAX _ FD = " maximum " <nl> + <nl> + warn ( ) { <nl> + echo " $ * " <nl> + } <nl> + <nl> + die ( ) { <nl> + echo <nl> + echo " $ * " <nl> + echo <nl> + exit 1 <nl> + } <nl> + <nl> + # OS specific support ( must be ' true ' or ' false ' ) . <nl> + cygwin = false <nl> + msys = false <nl> + darwin = false <nl> + case " ` uname ` " in <nl> + CYGWIN * ) <nl> + cygwin = true <nl> + ; ; <nl> + Darwin * ) <nl> + darwin = true <nl> + ; ; <nl> + MINGW * ) <nl> + msys = true <nl> + ; ; <nl> + esac <nl> + <nl> + # Attempt to set APP _ HOME <nl> + # Resolve links : $ 0 may be a link <nl> + PRG = " $ 0 " <nl> + # Need this for relative symlinks . <nl> + while [ - h " $ PRG " ] ; do <nl> + ls = ` ls - ld " $ PRG " ` <nl> + link = ` expr " $ ls " : ' . * - > \ ( . * \ ) $ ' ` <nl> + if expr " $ link " : ' / . * ' > / dev / null ; then <nl> + PRG = " $ link " <nl> + else <nl> + PRG = ` dirname " $ PRG " ` " / $ link " <nl> + fi <nl> + done <nl> + SAVED = " ` pwd ` " <nl> + cd " ` dirname \ " $ PRG \ " ` / " > & - <nl> + APP _ HOME = " ` pwd - P ` " <nl> + cd " $ SAVED " > & - <nl> + <nl> + CLASSPATH = $ APP _ HOME / gradle / wrapper / gradle - wrapper . jar <nl> + <nl> + # Determine the Java command to use to start the JVM . <nl> + if [ - n " $ JAVA _ HOME " ] ; then <nl> + if [ - x " $ JAVA _ HOME / jre / sh / java " ] ; then <nl> + # IBM ' s JDK on AIX uses strange locations for the executables <nl> + JAVACMD = " $ JAVA _ HOME / jre / sh / java " <nl> + else <nl> + JAVACMD = " $ JAVA _ HOME / bin / java " <nl> + fi <nl> + if [ ! - x " $ JAVACMD " ] ; then <nl> + die " ERROR : JAVA _ HOME is set to an invalid directory : $ JAVA _ HOME <nl> + <nl> + Please set the JAVA _ HOME variable in your environment to match the <nl> + location of your Java installation . " <nl> + fi <nl> + else <nl> + JAVACMD = " java " <nl> + which java > / dev / null 2 > & 1 | | die " ERROR : JAVA _ HOME is not set and no ' java ' command could be found in your PATH . <nl> + <nl> + Please set the JAVA _ HOME variable in your environment to match the <nl> + location of your Java installation . " <nl> + fi <nl> + <nl> + # Increase the maximum file descriptors if we can . <nl> + if [ " $ cygwin " = " false " - a " $ darwin " = " false " ] ; then <nl> + MAX _ FD _ LIMIT = ` ulimit - H - n ` <nl> + if [ $ ? - eq 0 ] ; then <nl> + if [ " $ MAX _ FD " = " maximum " - o " $ MAX _ FD " = " max " ] ; then <nl> + MAX _ FD = " $ MAX _ FD _ LIMIT " <nl> + fi <nl> + ulimit - n $ MAX _ FD <nl> + if [ $ ? - ne 0 ] ; then <nl> + warn " Could not set maximum file descriptor limit : $ MAX _ FD " <nl> + fi <nl> + else <nl> + warn " Could not query maximum file descriptor limit : $ MAX _ FD _ LIMIT " <nl> + fi <nl> + fi <nl> + <nl> + # For Darwin , add options to specify how the application appears in the dock <nl> + if $ darwin ; then <nl> + GRADLE _ OPTS = " $ GRADLE _ OPTS \ " - Xdock : name = $ APP _ NAME \ " \ " - Xdock : icon = $ APP _ HOME / media / gradle . icns \ " " <nl> + fi <nl> + <nl> + # For Cygwin , switch paths to Windows format before running java <nl> + if $ cygwin ; then <nl> + APP _ HOME = ` cygpath - - path - - mixed " $ APP _ HOME " ` <nl> + CLASSPATH = ` cygpath - - path - - mixed " $ CLASSPATH " ` <nl> + JAVACMD = ` cygpath - - unix " $ JAVACMD " ` <nl> + <nl> + # We build the pattern for arguments to be converted via cygpath <nl> + ROOTDIRSRAW = ` find - L / - maxdepth 1 - mindepth 1 - type d 2 > / dev / null ` <nl> + SEP = " " <nl> + for dir in $ ROOTDIRSRAW ; do <nl> + ROOTDIRS = " $ ROOTDIRS $ SEP $ dir " <nl> + SEP = " | " <nl> + done <nl> + OURCYGPATTERN = " ( ^ ( $ ROOTDIRS ) ) " <nl> + # Add a user - defined pattern to the cygpath arguments <nl> + if [ " $ GRADLE _ CYGPATTERN " ! = " " ] ; then <nl> + OURCYGPATTERN = " $ OURCYGPATTERN | ( $ GRADLE _ CYGPATTERN ) " <nl> + fi <nl> + # Now convert the arguments - kludge to limit ourselves to / bin / sh <nl> + i = 0 <nl> + for arg in " $ @ " ; do <nl> + CHECK = ` echo " $ arg " | egrep - c " $ OURCYGPATTERN " - ` <nl> + CHECK2 = ` echo " $ arg " | egrep - c " ^ - " ` # # # Determine if an option <nl> + <nl> + if [ $ CHECK - ne 0 ] & & [ $ CHECK2 - eq 0 ] ; then # # # Added a condition <nl> + eval ` echo args $ i ` = ` cygpath - - path - - ignore - - mixed " $ arg " ` <nl> + else <nl> + eval ` echo args $ i ` = " \ " $ arg \ " " <nl> + fi <nl> + i = $ ( ( i + 1 ) ) <nl> + done <nl> + case $ i in <nl> + ( 0 ) set - - ; ; <nl> + ( 1 ) set - - " $ args0 " ; ; <nl> + ( 2 ) set - - " $ args0 " " $ args1 " ; ; <nl> + ( 3 ) set - - " $ args0 " " $ args1 " " $ args2 " ; ; <nl> + ( 4 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " ; ; <nl> + ( 5 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " ; ; <nl> + ( 6 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " ; ; <nl> + ( 7 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " ; ; <nl> + ( 8 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " " $ args7 " ; ; <nl> + ( 9 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " " $ args7 " " $ args8 " ; ; <nl> + esac <nl> + fi <nl> + <nl> + # Split up the JVM _ OPTS And GRADLE _ OPTS values into an array , following the shell quoting and substitution rules <nl> + function splitJvmOpts ( ) { <nl> + JVM _ OPTS = ( " $ @ " ) <nl> + } <nl> + eval splitJvmOpts $ DEFAULT _ JVM _ OPTS $ JAVA _ OPTS $ GRADLE _ OPTS <nl> + JVM _ OPTS [ $ { # JVM _ OPTS [ * ] } ] = " - Dorg . gradle . appname = $ APP _ BASE _ NAME " <nl> + <nl> + exec " $ JAVACMD " " $ { JVM _ OPTS [ @ ] } " - classpath " $ CLASSPATH " org . gradle . wrapper . GradleWrapperMain " $ @ " <nl> diff - - git a / realm - transformer / gradlew . bat b / realm - transformer / gradlew . bat <nl> new file mode 100644 <nl> index 0000000 . . 8a0b282 <nl> - - - / dev / null <nl> + + + b / realm - transformer / gradlew . bat <nl> @ @ - 0 , 0 + 1 , 90 @ @ <nl> + @ if " % DEBUG % " = = " " @ echo off <nl> + @ rem # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + @ rem <nl> + @ rem Gradle startup script for Windows <nl> + @ rem <nl> + @ rem # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # <nl> + <nl> + @ rem Set local scope for the variables with windows NT shell <nl> + if " % OS % " = = " Windows _ NT " setlocal <nl> + <nl> + @ rem Add default JVM options here . You can also use JAVA _ OPTS and GRADLE _ OPTS to pass JVM options to this script . <nl> + set DEFAULT _ JVM _ OPTS = <nl> + <nl> + set DIRNAME = % ~ dp0 <nl> + if " % DIRNAME % " = = " " set DIRNAME = . <nl> + set APP _ BASE _ NAME = % ~ n0 <nl> + set APP _ HOME = % DIRNAME % <nl> + <nl> + @ rem Find java . exe <nl> + if defined JAVA _ HOME goto findJavaFromJavaHome <nl> + <nl> + set JAVA _ EXE = java . exe <nl> + % JAVA _ EXE % - version > NUL 2 > & 1 <nl> + if " % ERRORLEVEL % " = = " 0 " goto init <nl> + <nl> + echo . <nl> + echo ERROR : JAVA _ HOME is not set and no ' java ' command could be found in your PATH . <nl> + echo . <nl> + echo Please set the JAVA _ HOME variable in your environment to match the <nl> + echo location of your Java installation . <nl> + <nl> + goto fail <nl> + <nl> + : findJavaFromJavaHome <nl> + set JAVA _ HOME = % JAVA _ HOME : " = % <nl> + set JAVA _ EXE = % JAVA _ HOME % / bin / java . exe <nl> + <nl> + if exist " % JAVA _ EXE % " goto init <nl> + <nl> + echo . <nl> + echo ERROR : JAVA _ HOME is set to an invalid directory : % JAVA _ HOME % <nl> + echo . <nl> + echo Please set the JAVA _ HOME variable in your environment to match the <nl> + echo location of your Java installation . <nl> + <nl> + goto fail <nl> + <nl> + : init <nl> + @ rem Get command - line arguments , handling Windowz variants <nl> + <nl> + if not " % OS % " = = " Windows _ NT " goto win9xME _ args <nl> + if " % @ eval [ 2 + 2 ] " = = " 4 " goto 4NT _ args <nl> + <nl> + : win9xME _ args <nl> + @ rem Slurp the command line arguments . <nl> + set CMD _ LINE _ ARGS = <nl> + set _ SKIP = 2 <nl> + <nl> + : win9xME _ args _ slurp <nl> + if " x % ~ 1 " = = " x " goto execute <nl> + <nl> + set CMD _ LINE _ ARGS = % * <nl> + goto execute <nl> + <nl> + : 4NT _ args <nl> + @ rem Get arguments from the 4NT Shell from JP Software <nl> + set CMD _ LINE _ ARGS = % $ <nl> + <nl> + : execute <nl> + @ rem Setup the command line <nl> + <nl> + set CLASSPATH = % APP _ HOME % \ gradle \ wrapper \ gradle - wrapper . jar <nl> + <nl> + @ rem Execute Gradle <nl> + " % JAVA _ EXE % " % DEFAULT _ JVM _ OPTS % % JAVA _ OPTS % % GRADLE _ OPTS % " - Dorg . gradle . appname = % APP _ BASE _ NAME % " - classpath " % CLASSPATH % " org . gradle . wrapper . GradleWrapperMain % CMD _ LINE _ ARGS % <nl> + <nl> + : end <nl> + @ rem End local scope for the variables with windows NT shell <nl> + if " % ERRORLEVEL % " = = " 0 " goto mainEnd <nl> + <nl> + : fail <nl> + rem Set variable GRADLE _ EXIT _ CONSOLE if you need the _ script _ return code instead of <nl> + rem the _ cmd . exe / c _ return code ! <nl> + if not " " = = " % GRADLE _ EXIT _ CONSOLE % " exit 1 <nl> + exit / b 1 <nl> + <nl> + : mainEnd <nl> + if " % OS % " = = " Windows _ NT " endlocal <nl> + <nl> + : omega

TEST DIFF:
diff - - git a / tools / release . sh b / tools / release . sh 
 new file mode 100755 
 index 0000000 . . 33a0183 
 - - - / dev / null 
 + + + b / tools / release . sh 
 @ @ - 0 , 0 + 1 , 239 @ @ 
 + # ! / usr / bin / env bash 
 + 
 + # Script to make release on the local machine . 
 + # See https : / / github . com / realm / realm - wiki / wiki / Java - Release - Checklist for more details . 
 + # FIXME : Only patch release is supported now . 
 + 
 + set - euo pipefail 
 + IFS = $ ' \ n \ t ' 
 + 
 + usage ( ) { 
 + cat < < EOF 
 + Usage : $ 0 < branch - to - release > 
 + EOF 
 + } 
 + 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + # Input Validation 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + 
 + if [ " $ # " - eq 0 ] | | [ " $ # " - gt 1 ] ; then 
 + usage 
 + exit 1 
 + fi 
 + 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + # Variables 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + 
 + BRANCH _ TO _ RELEASE = " $ 1 " 
 + VERSION = " " 
 + REALM _ IO _ PATH = $ { REALM _ IO _ PATH : - } 
 + REALM _ JAVA _ PATH = $ ( pwd ) 
 + 
 + check _ adb _ device ( ) { 
 + if ! adb get - state 1 > / dev / null 2 > & 1 ; then 
 + read - n 1 - s - p - r " Attach a test device or start the emulator then press any key to continue . . . " 
 + echo " " 
 + check _ adb _ device 
 + fi 
 + } 
 + 
 + check _ env ( ) { 
 + echo " Checking environment . . . " 
 + 
 + # Try to find s3cmd 
 + path _ to _ s3cmd = $ ( which s3cmd ) 
 + if [ [ ! - x " $ path _ to _ s3cmd " ] ] ; then 
 + echo " Cannot find executable file ' s3cmd ' . " 
 + exit - 1 
 + fi 
 + if [ [ ! - e " $ HOME / . s3cfg " ] ] ; then 
 + echo " ' $ HOME / . s3cfg ' cannot be found . " 
 + exit - 1 
 + fi 
 + 
 + # Check BinTray credentials 
 + if ! grep " bintrayUser = realm " " $ HOME / . gradle / gradle . properties " > / dev / null ; then 
 + echo " ' bintrayUser ' is not set in the ' $ HOME / . gradle / gradle . properties ' . " 
 + exit - 1 
 + fi 
 + 
 + if ! grep " bintrayKey = . * " " $ HOME / . gradle / gradle . properties " > / dev / null ; then 
 + echo " ' bintrayKey ' is not set in the ' $ HOME / . gradle / gradle . properties ' . " 
 + exit - 1 
 + fi 
 + 
 + # Check gradle params 
 + if grep buildTargetABIs " $ HOME / . gradle / gradle . properties " | grep - v " ^ # " > / dev / null ; then 
 + echo " ' buildTargetABIs ' should be disabled in the ' $ HOME / . gradle / gradle . properties ' . " 
 + exit - 1 
 + fi 
 + if grep ccachePath " $ HOME / . gradle / gradle . properties " | grep - v " ^ # " > / dev / null ; then 
 + echo " ' ccachePath ' should be disabled in the ' $ HOME / . gradle / gradle . properties ' . " 
 + exit - 1 
 + fi 
 + if grep lcachePath " $ HOME / . gradle / gradle . properties " | grep - v " ^ # " > / dev / null ; then 
 + echo " ' lcachePath ' should be disabled in the ' $ HOME / . gradle / gradle . properties ' . " 
 + exit - 1 
 + fi 
 + 
 + if [ [ - z $ { REALM _ IO _ PATH } ] ] ; then 
 + REALM _ IO _ PATH = " $ ( pwd ) / . . / realm . io " 
 + fi 
 + if [ [ ! - e $ { REALM _ IO _ PATH } ] ] ; then 
 + echo " Please set ' REALM _ IO _ PATH ' to the ' realm . io ' repository path to publish javadoc . " 
 + exit - 1 
 + fi 
 + } 
 + 
 + prepare _ branch ( ) { 
 + echo " Preparing release branch . . . " 
 + 
 + git fetch - - all 
 + git checkout releases 
 + git reset - - hard origin / releases 
 + if [ [ " $ BRANCH _ TO _ RELEASE " ! = " releases " ] ] ; then 
 + echo " Releasing from other branches than ' releases ' is not supported right now . " 
 + exit - 1 
 + fi 
 + 
 + git clean - xfd 
 + git submodule update - - init - - recursive 
 + 
 + if ! grep - q " SNAPSHOT " version . txt ; then 
 + echo " ' version . txt ' doesn ' t contain ' SNAPSHOT ' . " 
 + exit - 1 
 + fi 
 + 
 + version _ in _ changelog = $ ( head - 1 CHANGELOG . md | grep - o " [ 0 - 9 ] * \ . [ 0 - 9 ] * \ . [ 0 - 9 ] * " ) 
 + VERSION = $ ( grep - o " [ 0 - 9 ] * \ . [ 0 - 9 ] * \ . [ 0 - 9 ] * " version . txt ) 
 + if [ [ " $ { VERSION } " ! = " $ { version _ in _ changelog } " ] ] ; then 
 + echo " ' version . txt ' doens ' t match the entry in ' CHANGELOG . md ' . $ { VERSION } vs $ { version _ in _ changelog } . " 
 + exit - 1 
 + fi 
 + 
 + # Check if tag exists in remote 
 + if git ls - remote - - tags origin | grep " v $ { VERSION } " > / dev / null ; then 
 + echo " Tag ' v $ { VERSION } ' exists in remote ! " 
 + exit - 1 
 + fi 
 + if git tag | grep " v $ { VERSION } " > / dev / null ; then 
 + git tag - d " v $ { VERSION } " 
 + fi 
 + 
 + # Update date in change log 
 + cur _ date = $ ( date " + % F " ) 
 + sed - i " 1 s / YYYY - MM - DD / $ { cur _ date } / " CHANGELOG . md 
 + git add CHANGELOG . md 
 + git commit - m " Update changelog date " 
 + 
 + # This will create 2 new commits to change the version . txt . The top one is the next release version + SNAPSHOT . 
 + . / gradlew release 
 + # Checkout the one with current version number . 
 + git checkout HEAD ~ 1 
 + } 
 + 
 + build ( ) { 
 + echo " Building . . . " 
 + 
 + . / gradlew assemble 
 + 
 + echo " Verifying examples . . . " 
 + 
 + check _ adb _ device 
 + 
 + # Verify examples 
 + ( cd examples & & . / gradlew uninstallAll & & . / gradlew monkeyDebug ) 
 + } 
 + 
 + upload _ to _ bintray ( ) { 
 + echo " Uploading artifacts to Bintray . . . " 
 + # Upload to bintray 
 + . / gradlew bintrayUpload 
 + 
 + echo " Done . " 
 + echo " 1 . Log into BinTray ( https : / / bintray . com ) with the Realm account ; " 
 + echo " 2 . Goto https : / / bintray . com / realm / maven and check if there are 16 artifacts to publish . " 
 + echo " 3 . Press ' Publish ' . " 
 + while true 
 + do 
 + read - r - p " Have you published 16 artifacts on Bintray ? Type ' Yes ' to continue . . . " input 
 + 
 + case " $ input " in 
 + [ yY ] [ eE ] [ sS ] ) 
 + break 
 + ; ; 
 + esac 
 + done 
 + } 
 + 
 + publish _ distribution ( ) { 
 + echo " Publishing distribution package . . . " 
 + 
 + # Create distribution package 
 + . / gradlew distributionPackage 
 + pushd build / outputs / distribution 
 + unzip " realm - java - $ { VERSION } . zip " 
 + 
 + # Test 
 + check _ adb _ device 
 + pushd examples / 
 + . / gradlew uninstallAll 
 + . / gradlew monkeyRelease 
 + popd 
 + popd 
 + . / gradlew distribute 
 + } 
 + 
 + push _ release ( ) { 
 + echo " Pushing releases branch to origin . . . " 
 + 
 + # Push branch & tag 
 + git checkout releases 
 + git push origin releases 
 + git push origin " v $ { VERSION } " 
 + } 
 + 
 + publish _ javadoc ( ) { 
 + echo " Publishing javadoc . . . " 
 + cd " $ { REALM _ IO _ PATH } " 
 + git fetch - - all 
 + branch _ name = publish _ java _ doc / $ { VERSION } 
 + git checkout origin / master - b " $ { branch _ name } " 
 + 
 + while true 
 + do 
 + read - r - p " Type ' Yes ' to clean uncommitted files in ' source / en / docs / java ' . . . " input 
 + 
 + case " $ input " in 
 + [ yY ] [ eE ] [ sS ] ) 
 + break 
 + ; ; 
 + esac 
 + done 
 + git clean - xfd . / source / en / docs / java / 
 + bundle exec rake generate : java _ docs [ $ VERSION ] 
 + cp - R " $ { REALM _ JAVA _ PATH } / realm / realm - library / build / docs / javadoc / * " . / source / en / docs / java / latest / api / 
 + bundle exec rake generate : inject _ ga _ latest _ java _ api 
 + git add . / source / en / docs / java / 
 + git commit - m " Release realm - java doc $ { VERSION } " 
 + git push origin " $ { branch _ name } " 
 + path _ to _ hub = $ ( which hub ) 
 + if [ [ ! - x " $ path _ to _ hub " ] ] ; then 
 + echo " ' hub ' cannot be found in the executable path . " 
 + echo " Please create a pull request manually in realm . io repo with branch $ { branch _ name } . " 
 + exit - 1 
 + else 
 + hub pull - request 
 + echo " A pull request has been created for branch $ { branch _ name } . " 
 + fi 
 + } 
 + 
 + check _ env 
 + prepare _ branch 
 + build 
 + upload _ to _ bintray 
 + publish _ distribution 
 + push _ release 
 + publish _ javadoc

NEAREST DIFF:
diff - - git a / realm - transformer / build . gradle b / realm - transformer / build . gradle 
 index 3df34f8 . . c9e8db8 100644 
 - - - a / realm - transformer / build . gradle 
 + + + b / realm - transformer / build . gradle 
 @ @ - 17 , 8 + 17 , 8 @ @ dependencies { 
 compile localGroovy ( ) 
 compile gradleApi ( ) 
 compile " io . realm : realm - annotations : $ { version } " 
 - compile ' com . android . tools . build : gradle : 1 . 5 . 0 ' 
 - compile ' com . android . tools . build : transform - api : 1 . 5 . 0 ' 
 + compile ' com . android . tools . build : gradle : 2 . 0 . 0 - alpha3 ' 
 + compile ' com . android . tools . build : transform - api : 2 . 0 . 0 - alpha3 ' 
 compile ' org . javassist : javassist : 3 . 20 . 0 - GA ' 
 
 testCompile ( ' org . spockframework : spock - core : 1 . 0 - groovy - 2 . 4 ' ) { 
 diff - - git a / realm - transformer / gradle / wrapper / gradle - wrapper . jar b / realm - transformer / gradle / wrapper / gradle - wrapper . jar 
 new file mode 100644 
 index 0000000 . . e8c6bf7 
 Binary files / dev / null and b / realm - transformer / gradle / wrapper / gradle - wrapper . jar differ 
 diff - - git a / realm - transformer / gradle / wrapper / gradle - wrapper . properties b / realm - transformer / gradle / wrapper / gradle - wrapper . properties 
 new file mode 100644 
 index 0000000 . . 587246a 
 - - - / dev / null 
 + + + b / realm - transformer / gradle / wrapper / gradle - wrapper . properties 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + # Tue Jan 05 14 : 18 : 17 CET 2016 
 + distributionBase = GRADLE _ USER _ HOME 
 + distributionPath = wrapper / dists 
 + zipStoreBase = GRADLE _ USER _ HOME 
 + zipStorePath = wrapper / dists 
 + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 2 . 10 - all . zip 
 diff - - git a / realm - transformer / gradlew b / realm - transformer / gradlew 
 new file mode 100755 
 index 0000000 . . 97fac78 
 - - - / dev / null 
 + + + b / realm - transformer / gradlew 
 @ @ - 0 , 0 + 1 , 160 @ @ 
 + # ! / usr / bin / env bash 
 + 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + # # 
 + # # Gradle start up script for UN * X 
 + # # 
 + # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + 
 + # Add default JVM options here . You can also use JAVA _ OPTS and GRADLE _ OPTS to pass JVM options to this script . 
 + DEFAULT _ JVM _ OPTS = " " 
 + 
 + APP _ NAME = " Gradle " 
 + APP _ BASE _ NAME = ` basename " $ 0 " ` 
 + 
 + # Use the maximum available , or set MAX _ FD ! = - 1 to use that value . 
 + MAX _ FD = " maximum " 
 + 
 + warn ( ) { 
 + echo " $ * " 
 + } 
 + 
 + die ( ) { 
 + echo 
 + echo " $ * " 
 + echo 
 + exit 1 
 + } 
 + 
 + # OS specific support ( must be ' true ' or ' false ' ) . 
 + cygwin = false 
 + msys = false 
 + darwin = false 
 + case " ` uname ` " in 
 + CYGWIN * ) 
 + cygwin = true 
 + ; ; 
 + Darwin * ) 
 + darwin = true 
 + ; ; 
 + MINGW * ) 
 + msys = true 
 + ; ; 
 + esac 
 + 
 + # Attempt to set APP _ HOME 
 + # Resolve links : $ 0 may be a link 
 + PRG = " $ 0 " 
 + # Need this for relative symlinks . 
 + while [ - h " $ PRG " ] ; do 
 + ls = ` ls - ld " $ PRG " ` 
 + link = ` expr " $ ls " : ' . * - > \ ( . * \ ) $ ' ` 
 + if expr " $ link " : ' / . * ' > / dev / null ; then 
 + PRG = " $ link " 
 + else 
 + PRG = ` dirname " $ PRG " ` " / $ link " 
 + fi 
 + done 
 + SAVED = " ` pwd ` " 
 + cd " ` dirname \ " $ PRG \ " ` / " > & - 
 + APP _ HOME = " ` pwd - P ` " 
 + cd " $ SAVED " > & - 
 + 
 + CLASSPATH = $ APP _ HOME / gradle / wrapper / gradle - wrapper . jar 
 + 
 + # Determine the Java command to use to start the JVM . 
 + if [ - n " $ JAVA _ HOME " ] ; then 
 + if [ - x " $ JAVA _ HOME / jre / sh / java " ] ; then 
 + # IBM ' s JDK on AIX uses strange locations for the executables 
 + JAVACMD = " $ JAVA _ HOME / jre / sh / java " 
 + else 
 + JAVACMD = " $ JAVA _ HOME / bin / java " 
 + fi 
 + if [ ! - x " $ JAVACMD " ] ; then 
 + die " ERROR : JAVA _ HOME is set to an invalid directory : $ JAVA _ HOME 
 + 
 + Please set the JAVA _ HOME variable in your environment to match the 
 + location of your Java installation . " 
 + fi 
 + else 
 + JAVACMD = " java " 
 + which java > / dev / null 2 > & 1 | | die " ERROR : JAVA _ HOME is not set and no ' java ' command could be found in your PATH . 
 + 
 + Please set the JAVA _ HOME variable in your environment to match the 
 + location of your Java installation . " 
 + fi 
 + 
 + # Increase the maximum file descriptors if we can . 
 + if [ " $ cygwin " = " false " - a " $ darwin " = " false " ] ; then 
 + MAX _ FD _ LIMIT = ` ulimit - H - n ` 
 + if [ $ ? - eq 0 ] ; then 
 + if [ " $ MAX _ FD " = " maximum " - o " $ MAX _ FD " = " max " ] ; then 
 + MAX _ FD = " $ MAX _ FD _ LIMIT " 
 + fi 
 + ulimit - n $ MAX _ FD 
 + if [ $ ? - ne 0 ] ; then 
 + warn " Could not set maximum file descriptor limit : $ MAX _ FD " 
 + fi 
 + else 
 + warn " Could not query maximum file descriptor limit : $ MAX _ FD _ LIMIT " 
 + fi 
 + fi 
 + 
 + # For Darwin , add options to specify how the application appears in the dock 
 + if $ darwin ; then 
 + GRADLE _ OPTS = " $ GRADLE _ OPTS \ " - Xdock : name = $ APP _ NAME \ " \ " - Xdock : icon = $ APP _ HOME / media / gradle . icns \ " " 
 + fi 
 + 
 + # For Cygwin , switch paths to Windows format before running java 
 + if $ cygwin ; then 
 + APP _ HOME = ` cygpath - - path - - mixed " $ APP _ HOME " ` 
 + CLASSPATH = ` cygpath - - path - - mixed " $ CLASSPATH " ` 
 + JAVACMD = ` cygpath - - unix " $ JAVACMD " ` 
 + 
 + # We build the pattern for arguments to be converted via cygpath 
 + ROOTDIRSRAW = ` find - L / - maxdepth 1 - mindepth 1 - type d 2 > / dev / null ` 
 + SEP = " " 
 + for dir in $ ROOTDIRSRAW ; do 
 + ROOTDIRS = " $ ROOTDIRS $ SEP $ dir " 
 + SEP = " | " 
 + done 
 + OURCYGPATTERN = " ( ^ ( $ ROOTDIRS ) ) " 
 + # Add a user - defined pattern to the cygpath arguments 
 + if [ " $ GRADLE _ CYGPATTERN " ! = " " ] ; then 
 + OURCYGPATTERN = " $ OURCYGPATTERN | ( $ GRADLE _ CYGPATTERN ) " 
 + fi 
 + # Now convert the arguments - kludge to limit ourselves to / bin / sh 
 + i = 0 
 + for arg in " $ @ " ; do 
 + CHECK = ` echo " $ arg " | egrep - c " $ OURCYGPATTERN " - ` 
 + CHECK2 = ` echo " $ arg " | egrep - c " ^ - " ` # # # Determine if an option 
 + 
 + if [ $ CHECK - ne 0 ] & & [ $ CHECK2 - eq 0 ] ; then # # # Added a condition 
 + eval ` echo args $ i ` = ` cygpath - - path - - ignore - - mixed " $ arg " ` 
 + else 
 + eval ` echo args $ i ` = " \ " $ arg \ " " 
 + fi 
 + i = $ ( ( i + 1 ) ) 
 + done 
 + case $ i in 
 + ( 0 ) set - - ; ; 
 + ( 1 ) set - - " $ args0 " ; ; 
 + ( 2 ) set - - " $ args0 " " $ args1 " ; ; 
 + ( 3 ) set - - " $ args0 " " $ args1 " " $ args2 " ; ; 
 + ( 4 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " ; ; 
 + ( 5 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " ; ; 
 + ( 6 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " ; ; 
 + ( 7 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " ; ; 
 + ( 8 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " " $ args7 " ; ; 
 + ( 9 ) set - - " $ args0 " " $ args1 " " $ args2 " " $ args3 " " $ args4 " " $ args5 " " $ args6 " " $ args7 " " $ args8 " ; ; 
 + esac 
 + fi 
 + 
 + # Split up the JVM _ OPTS And GRADLE _ OPTS values into an array , following the shell quoting and substitution rules 
 + function splitJvmOpts ( ) { 
 + JVM _ OPTS = ( " $ @ " ) 
 + } 
 + eval splitJvmOpts $ DEFAULT _ JVM _ OPTS $ JAVA _ OPTS $ GRADLE _ OPTS 
 + JVM _ OPTS [ $ { # JVM _ OPTS [ * ] } ] = " - Dorg . gradle . appname = $ APP _ BASE _ NAME " 
 + 
 + exec " $ JAVACMD " " $ { JVM _ OPTS [ @ ] } " - classpath " $ CLASSPATH " org . gradle . wrapper . GradleWrapperMain " $ @ " 
 diff - - git a / realm - transformer / gradlew . bat b / realm - transformer / gradlew . bat 
 new file mode 100644 
 index 0000000 . . 8a0b282 
 - - - / dev / null 
 + + + b / realm - transformer / gradlew . bat 
 @ @ - 0 , 0 + 1 , 90 @ @ 
 + @ if " % DEBUG % " = = " " @ echo off 
 + @ rem # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + @ rem 
 + @ rem Gradle startup script for Windows 
 + @ rem 
 + @ rem # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 + 
 + @ rem Set local scope for the variables with windows NT shell 
 + if " % OS % " = = " Windows _ NT " setlocal 
 + 
 + @ rem Add default JVM options here . You can also use JAVA _ OPTS and GRADLE _ OPTS to pass JVM options to this script . 
 + set DEFAULT _ JVM _ OPTS = 
 + 
 + set DIRNAME = % ~ dp0 
 + if " % DIRNAME % " = = " " set DIRNAME = . 
 + set APP _ BASE _ NAME = % ~ n0 
 + set APP _ HOME = % DIRNAME % 
 + 
 + @ rem Find java . exe 
 + if defined JAVA _ HOME goto findJavaFromJavaHome 
 + 
 + set JAVA _ EXE = java . exe 
 + % JAVA _ EXE % - version > NUL 2 > & 1 
 + if " % ERRORLEVEL % " = = " 0 " goto init 
 + 
 + echo . 
 + echo ERROR : JAVA _ HOME is not set and no ' java ' command could be found in your PATH . 
 + echo . 
 + echo Please set the JAVA _ HOME variable in your environment to match the 
 + echo location of your Java installation . 
 + 
 + goto fail 
 + 
 + : findJavaFromJavaHome 
 + set JAVA _ HOME = % JAVA _ HOME : " = % 
 + set JAVA _ EXE = % JAVA _ HOME % / bin / java . exe 
 + 
 + if exist " % JAVA _ EXE % " goto init 
 + 
 + echo . 
 + echo ERROR : JAVA _ HOME is set to an invalid directory : % JAVA _ HOME % 
 + echo . 
 + echo Please set the JAVA _ HOME variable in your environment to match the 
 + echo location of your Java installation . 
 + 
 + goto fail 
 + 
 + : init 
 + @ rem Get command - line arguments , handling Windowz variants 
 + 
 + if not " % OS % " = = " Windows _ NT " goto win9xME _ args 
 + if " % @ eval [ 2 + 2 ] " = = " 4 " goto 4NT _ args 
 + 
 + : win9xME _ args 
 + @ rem Slurp the command line arguments . 
 + set CMD _ LINE _ ARGS = 
 + set _ SKIP = 2 
 + 
 + : win9xME _ args _ slurp 
 + if " x % ~ 1 " = = " x " goto execute 
 + 
 + set CMD _ LINE _ ARGS = % * 
 + goto execute 
 + 
 + : 4NT _ args 
 + @ rem Get arguments from the 4NT Shell from JP Software 
 + set CMD _ LINE _ ARGS = % $ 
 + 
 + : execute 
 + @ rem Setup the command line 
 + 
 + set CLASSPATH = % APP _ HOME % \ gradle \ wrapper \ gradle - wrapper . jar 
 + 
 + @ rem Execute Gradle 
 + " % JAVA _ EXE % " % DEFAULT _ JVM _ OPTS % % JAVA _ OPTS % % GRADLE _ OPTS % " - Dorg . gradle . appname = % APP _ BASE _ NAME % " - classpath " % CLASSPATH % " org . gradle . wrapper . GradleWrapperMain % CMD _ LINE _ ARGS % 
 + 
 + : end 
 + @ rem End local scope for the variables with windows NT shell 
 + if " % ERRORLEVEL % " = = " 0 " goto mainEnd 
 + 
 + : fail 
 + rem Set variable GRADLE _ EXIT _ CONSOLE if you need the _ script _ return code instead of 
 + rem the _ cmd . exe / c _ return code ! 
 + if not " " = = " % GRADLE _ EXIT _ CONSOLE % " exit 1 
 + exit / b 1 
 + 
 + : mainEnd 
 + if " % OS % " = = " Windows _ NT " endlocal 
 + 
 + : omega
