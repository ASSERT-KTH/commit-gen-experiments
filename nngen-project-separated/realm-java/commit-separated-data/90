BLEU SCORE: 0.00882875838860343

TEST MSG: Remove getFieldNames from proxy classes
GENERATED MSG: Removed id variable . Deprecated getPath ( ) and replaced with getAbsolutePath ( )

TEST DIFF (one line): diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> index 6faacbf . . 54e8560 100644 <nl> - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> @ @ - 144 , 7 + 144 , 6 @ @ public class RealmProxyClassGenerator { <nl> emitGetExpectedObjectSchemaInfo ( writer ) ; <nl> emitCreateColumnInfoMethod ( writer ) ; <nl> emitGetSimpleClassNameMethod ( writer ) ; <nl> - emitGetFieldNamesMethod ( writer ) ; <nl> emitCreateOrUpdateUsingJsonObject ( writer ) ; <nl> emitCreateUsingJsonStream ( writer ) ; <nl> emitCopyOrUpdateMethod ( writer ) ; <nl> @ @ - 240 , 15 + 239 , 6 @ @ public class RealmProxyClassGenerator { <nl> writer . emitEmptyLine ( ) <nl> . emitField ( " OsObjectSchemaInfo " , " expectedObjectSchemaInfo " , <nl> EnumSet . of ( Modifier . PRIVATE , Modifier . STATIC , Modifier . FINAL ) , " createExpectedObjectSchemaInfo ( ) " ) ; <nl> - <nl> - writer . emitField ( " List < String > " , " FIELD _ NAMES " , EnumSet . of ( Modifier . PRIVATE , Modifier . STATIC , Modifier . FINAL ) ) ; <nl> - writer . beginInitializer ( true ) <nl> - . emitStatement ( " List < String > fieldNames = new ArrayList < String > ( % s ) " , metadata . getFields ( ) . size ( ) ) ; <nl> - for ( VariableElement field : metadata . getFields ( ) ) { <nl> - writer . emitStatement ( " fieldNames . add ( \ " % s \ " ) " , field . getSimpleName ( ) . toString ( ) ) ; <nl> - } <nl> - writer . emitStatement ( " FIELD _ NAMES = Collections . unmodifiableList ( fieldNames ) " ) <nl> - . endInitializer ( ) ; <nl> } <nl> / / @ formatter : on <nl> <nl> @ @ - 841 , 15 + 831 , 6 @ @ public class RealmProxyClassGenerator { <nl> / / @ formatter : on <nl> <nl> / / @ formatter : off <nl> - private void emitGetFieldNamesMethod ( JavaWriter writer ) throws IOException { <nl> - writer . beginMethod ( " List < String > " , " getFieldNames " , EnumSet . of ( Modifier . PUBLIC , Modifier . STATIC ) ) <nl> - . emitStatement ( " return FIELD _ NAMES " ) <nl> - . endMethod ( ) <nl> - . emitEmptyLine ( ) ; <nl> - } <nl> - / / @ formatter : on <nl> - <nl> - / / @ formatter : off <nl> private void emitCopyOrUpdateMethod ( JavaWriter writer ) throws IOException { <nl> writer . beginMethod ( <nl> qualifiedClassName , / / Return type <nl> diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyMediatorGenerator . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyMediatorGenerator . java <nl> index 1370de9 . . a667e57 100644 <nl> - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyMediatorGenerator . java <nl> + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyMediatorGenerator . java <nl> @ @ - 98 , 7 + 98 , 6 @ @ public class RealmProxyMediatorGenerator { <nl> emitFields ( writer ) ; <nl> emitGetExpectedObjectSchemaInfoMap ( writer ) ; <nl> emitCreateColumnInfoMethod ( writer ) ; <nl> - emitGetFieldNamesMethod ( writer ) ; <nl> emitGetSimpleClassNameMethod ( writer ) ; <nl> emitNewInstanceMethod ( writer ) ; <nl> emitGetClassModelList ( writer ) ; <nl> @ @ - 167 , 24 + 166 , 6 @ @ public class RealmProxyMediatorGenerator { <nl> writer . emitEmptyLine ( ) ; <nl> } <nl> <nl> - private void emitGetFieldNamesMethod ( JavaWriter writer ) throws IOException { <nl> - writer . emitAnnotation ( " Override " ) ; <nl> - writer . beginMethod ( <nl> - " List < String > " , <nl> - " getFieldNames " , <nl> - EnumSet . of ( Modifier . PUBLIC ) , <nl> - " Class < ? extends RealmModel > " , " clazz " <nl> - ) ; <nl> - emitMediatorShortCircuitSwitch ( new ProxySwitchStatement ( ) { <nl> - @ Override <nl> - public void emitStatement ( int i , JavaWriter writer ) throws IOException { <nl> - writer . emitStatement ( " return % s . getFieldNames ( ) " , qualifiedProxyClasses . get ( i ) ) ; <nl> - } <nl> - } , writer ) ; <nl> - writer . endMethod ( ) ; <nl> - writer . emitEmptyLine ( ) ; <nl> - } <nl> - <nl> private void emitGetSimpleClassNameMethod ( JavaWriter writer ) throws IOException { <nl> writer . emitAnnotation ( " Override " ) ; <nl> writer . beginMethod ( <nl> diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> index fb00a17 . . 03e4de0 100644 <nl> - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> @ @ - 121 , 31 + 121 , 6 @ @ public class AllTypesRealmProxy extends some . test . AllTypes <nl> } <nl> <nl> private static final OsObjectSchemaInfo expectedObjectSchemaInfo = createExpectedObjectSchemaInfo ( ) ; <nl> - private static final List < String > FIELD _ NAMES ; <nl> - static { <nl> - List < String > fieldNames = new ArrayList < String > ( 20 ) ; <nl> - fieldNames . add ( " columnString " ) ; <nl> - fieldNames . add ( " columnLong " ) ; <nl> - fieldNames . add ( " columnFloat " ) ; <nl> - fieldNames . add ( " columnDouble " ) ; <nl> - fieldNames . add ( " columnBoolean " ) ; <nl> - fieldNames . add ( " columnDate " ) ; <nl> - fieldNames . add ( " columnBinary " ) ; <nl> - fieldNames . add ( " columnMutableRealmInteger " ) ; <nl> - fieldNames . add ( " columnObject " ) ; <nl> - fieldNames . add ( " columnRealmList " ) ; <nl> - fieldNames . add ( " columnStringList " ) ; <nl> - fieldNames . add ( " columnBinaryList " ) ; <nl> - fieldNames . add ( " columnBooleanList " ) ; <nl> - fieldNames . add ( " columnLongList " ) ; <nl> - fieldNames . add ( " columnIntegerList " ) ; <nl> - fieldNames . add ( " columnShortList " ) ; <nl> - fieldNames . add ( " columnByteList " ) ; <nl> - fieldNames . add ( " columnDoubleList " ) ; <nl> - fieldNames . add ( " columnFloatList " ) ; <nl> - fieldNames . add ( " columnDateList " ) ; <nl> - FIELD _ NAMES = Collections . unmodifiableList ( fieldNames ) ; <nl> - } <nl> <nl> private AllTypesColumnInfo columnInfo ; <nl> private ProxyState < some . test . AllTypes > proxyState ; <nl> @ @ - 893 , 10 + 868 , 6 @ @ public class AllTypesRealmProxy extends some . test . AllTypes <nl> return " AllTypes " ; <nl> } <nl> <nl> - public static List < String > getFieldNames ( ) { <nl> - return FIELD _ NAMES ; <nl> - } <nl> - <nl> @ SuppressWarnings ( " cast " ) <nl> public static some . test . AllTypes createOrUpdateUsingJsonObject ( Realm realm , JSONObject json , boolean update ) <nl> throws JSONException { <nl> diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> index b957355 . . cb8c2ff 100644 <nl> - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> @ @ - 71 , 15 + 71 , 6 @ @ public class BooleansRealmProxy extends some . test . Booleans <nl> } <nl> <nl> private static final OsObjectSchemaInfo expectedObjectSchemaInfo = createExpectedObjectSchemaInfo ( ) ; <nl> - private static final List < String > FIELD _ NAMES ; <nl> - static { <nl> - List < String > fieldNames = new ArrayList < String > ( 4 ) ; <nl> - fieldNames . add ( " done " ) ; <nl> - fieldNames . add ( " isReady " ) ; <nl> - fieldNames . add ( " mCompleted " ) ; <nl> - fieldNames . add ( " anotherBoolean " ) ; <nl> - FIELD _ NAMES = Collections . unmodifiableList ( fieldNames ) ; <nl> - } <nl> <nl> private BooleansColumnInfo columnInfo ; <nl> private ProxyState < some . test . Booleans > proxyState ; <nl> @ @ - 211 , 10 + 202 , 6 @ @ public class BooleansRealmProxy extends some . test . Booleans <nl> return " Booleans " ; <nl> } <nl> <nl> - public static List < String > getFieldNames ( ) { <nl> - return FIELD _ NAMES ; <nl> - } <nl> - <nl> @ SuppressWarnings ( " cast " ) <nl> public static some . test . Booleans createOrUpdateUsingJsonObject ( Realm realm , JSONObject json , boolean update ) <nl> throws JSONException { <nl> diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java <nl> index bef81c5 . . fecf92e 100644 <nl> - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java <nl> + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java <nl> @ @ - 182 , 52 + 182 , 6 @ @ public class NullTypesRealmProxy extends some . test . NullTypes <nl> } <nl> <nl> private static final OsObjectSchemaInfo expectedObjectSchemaInfo = createExpectedObjectSchemaInfo ( ) ; <nl> - private static final List < String > FIELD _ NAMES ; <nl> - static { <nl> - List < String > fieldNames = new ArrayList < String > ( 41 ) ; <nl> - fieldNames . add ( " fieldStringNotNull " ) ; <nl> - fieldNames . add ( " fieldStringNull " ) ; <nl> - fieldNames . add ( " fieldBooleanNotNull " ) ; <nl> - fieldNames . add ( " fieldBooleanNull " ) ; <nl> - fieldNames . add ( " fieldBytesNotNull " ) ; <nl> - fieldNames . add ( " fieldBytesNull " ) ; <nl> - fieldNames . add ( " fieldByteNotNull " ) ; <nl> - fieldNames . add ( " fieldByteNull " ) ; <nl> - fieldNames . add ( " fieldShortNotNull " ) ; <nl> - fieldNames . add ( " fieldShortNull " ) ; <nl> - fieldNames . add ( " fieldIntegerNotNull " ) ; <nl> - fieldNames . add ( " fieldIntegerNull " ) ; <nl> - fieldNames . add ( " fieldLongNotNull " ) ; <nl> - fieldNames . add ( " fieldLongNull " ) ; <nl> - fieldNames . add ( " fieldFloatNotNull " ) ; <nl> - fieldNames . add ( " fieldFloatNull " ) ; <nl> - fieldNames . add ( " fieldDoubleNotNull " ) ; <nl> - fieldNames . add ( " fieldDoubleNull " ) ; <nl> - fieldNames . add ( " fieldDateNotNull " ) ; <nl> - fieldNames . add ( " fieldDateNull " ) ; <nl> - fieldNames . add ( " fieldObjectNull " ) ; <nl> - fieldNames . add ( " fieldStringListNotNull " ) ; <nl> - fieldNames . add ( " fieldStringListNull " ) ; <nl> - fieldNames . add ( " fieldBinaryListNotNull " ) ; <nl> - fieldNames . add ( " fieldBinaryListNull " ) ; <nl> - fieldNames . add ( " fieldBooleanListNotNull " ) ; <nl> - fieldNames . add ( " fieldBooleanListNull " ) ; <nl> - fieldNames . add ( " fieldLongListNotNull " ) ; <nl> - fieldNames . add ( " fieldLongListNull " ) ; <nl> - fieldNames . add ( " fieldIntegerListNotNull " ) ; <nl> - fieldNames . add ( " fieldIntegerListNull " ) ; <nl> - fieldNames . add ( " fieldShortListNotNull " ) ; <nl> - fieldNames . add ( " fieldShortListNull " ) ; <nl> - fieldNames . add ( " fieldByteListNotNull " ) ; <nl> - fieldNames . add ( " fieldByteListNull " ) ; <nl> - fieldNames . add ( " fieldDoubleListNotNull " ) ; <nl> - fieldNames . add ( " fieldDoubleListNull " ) ; <nl> - fieldNames . add ( " fieldFloatListNotNull " ) ; <nl> - fieldNames . add ( " fieldFloatListNull " ) ; <nl> - fieldNames . add ( " fieldDateListNotNull " ) ; <nl> - fieldNames . add ( " fieldDateListNull " ) ; <nl> - FIELD _ NAMES = Collections . unmodifiableList ( fieldNames ) ; <nl> - } <nl> <nl> private NullTypesColumnInfo columnInfo ; <nl> private ProxyState < some . test . NullTypes > proxyState ; <nl> @ @ - 1753 , 10 + 1707 , 6 @ @ public class NullTypesRealmProxy extends some . test . NullTypes <nl> return " NullTypes " ; <nl> } <nl> <nl> - public static List < String > getFieldNames ( ) { <nl> - return FIELD _ NAMES ; <nl> - } <nl> - <nl> @ SuppressWarnings ( " cast " ) <nl> public static some . test . NullTypes createOrUpdateUsingJsonObject ( Realm realm , JSONObject json , boolean update ) <nl> throws JSONException { <nl> diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java b / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java <nl> index 80a30b4 . . 506273e 100644 <nl> - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java <nl> + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java <nl> @ @ - 48 , 16 + 48 , 6 @ @ class DefaultRealmModuleMediator extends RealmProxyMediator { <nl> } <nl> <nl> @ Override <nl> - public List < String > getFieldNames ( Class < ? extends RealmModel > clazz ) { <nl> - checkClass ( clazz ) ; <nl> - <nl> - if ( clazz . equals ( some . test . AllTypes . class ) ) { <nl> - return io . realm . AllTypesRealmProxy . getFieldNames ( ) ; <nl> - } <nl> - throw getMissingProxyClassException ( clazz ) ; <nl> - } <nl> - <nl> - @ Override <nl> public String getSimpleClassNameImpl ( Class < ? extends RealmModel > clazz ) { <nl> checkClass ( clazz ) ; <nl> <nl> diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> index 4473a97 . . 1ea6822 100644 <nl> - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> @ @ - 65 , 13 + 65 , 6 @ @ public class SimpleRealmProxy extends some . test . Simple <nl> } <nl> <nl> private static final OsObjectSchemaInfo expectedObjectSchemaInfo = createExpectedObjectSchemaInfo ( ) ; <nl> - private static final List < String > FIELD _ NAMES ; <nl> - static { <nl> - List < String > fieldNames = new ArrayList < String > ( 2 ) ; <nl> - fieldNames . add ( " name " ) ; <nl> - fieldNames . add ( " age " ) ; <nl> - FIELD _ NAMES = Collections . unmodifiableList ( fieldNames ) ; <nl> - } <nl> <nl> private SimpleColumnInfo columnInfo ; <nl> private ProxyState < some . test . Simple > proxyState ; <nl> @ @ - 165 , 10 + 158 , 6 @ @ public class SimpleRealmProxy extends some . test . Simple <nl> return " Simple " ; <nl> } <nl> <nl> - public static List < String > getFieldNames ( ) { <nl> - return FIELD _ NAMES ; <nl> - } <nl> - <nl> @ SuppressWarnings ( " cast " ) <nl> public static some . test . Simple createOrUpdateUsingJsonObject ( Realm realm , JSONObject json , boolean update ) <nl> throws JSONException { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java b / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java <nl> index 188a6f9 . . 58db9cf 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java <nl> @ @ - 61 , 14 + 61 , 6 @ @ public abstract class RealmProxyMediator { <nl> public abstract ColumnInfo createColumnInfo ( Class < ? extends RealmModel > clazz , OsSchemaInfo osSchemaInfo ) ; <nl> <nl> / * * <nl> - * Returns a map of non - obfuscated object field names to their internal Realm name . <nl> - * <nl> - * @ param clazz the { @ link RealmObject } class reference . <nl> - * @ return The simple name of an RealmObject class ( before it has been obfuscated ) . <nl> - * / <nl> - public abstract List < String > getFieldNames ( Class < ? extends RealmModel > clazz ) ; <nl> - <nl> - / * * <nl> * Returns the name that Realm should use for all its internal tables . This is the un - obfuscated simple name of the <nl> * class . <nl> * <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java b / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java <nl> index 08df441 . . 626041c 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java <nl> @ @ - 77 , 12 + 77 , 6 @ @ public class CompositeMediator extends RealmProxyMediator { <nl> } <nl> <nl> @ Override <nl> - public List < String > getFieldNames ( Class < ? extends RealmModel > clazz ) { <nl> - RealmProxyMediator mediator = getMediator ( clazz ) ; <nl> - return mediator . getFieldNames ( clazz ) ; <nl> - } <nl> - <nl> - @ Override <nl> protected String getSimpleClassNameImpl ( Class < ? extends RealmModel > clazz ) { <nl> RealmProxyMediator mediator = getMediator ( clazz ) ; <nl> return mediator . getSimpleClassName ( clazz ) ; <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java b / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java <nl> index ef9fb56 . . b3ec7de 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java <nl> @ @ - 92 , 12 + 92 , 6 @ @ public class FilterableMediator extends RealmProxyMediator { <nl> } <nl> <nl> @ Override <nl> - public List < String > getFieldNames ( Class < ? extends RealmModel > clazz ) { <nl> - checkSchemaHasClass ( clazz ) ; <nl> - return originalMediator . getFieldNames ( clazz ) ; <nl> - } <nl> - <nl> - @ Override <nl> protected String getSimpleClassNameImpl ( Class < ? extends RealmModel > clazz ) { <nl> checkSchemaHasClass ( clazz ) ; <nl> return originalMediator . getSimpleClassName ( clazz ) ;
NEAREST DIFF (one line): diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> index f922683 . . 16cc5d1 100644 <nl> - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java <nl> @ @ - 508 , 7 + 508 , 7 @ @ public class RealmProxyClassGenerator { <nl> <nl> / / If object is already in the Realm there is nothing to update <nl> writer <nl> - . beginControlFlow ( " if ( object . realm ! = null & & object . realm . getId ( ) . equals ( realm . getId ( ) ) ) " ) <nl> + . beginControlFlow ( " if ( object . realm ! = null & & object . realm . getAbsolutePath ( ) . equals ( realm . getAbsolutePath ( ) ) ) " ) <nl> . emitStatement ( " return object " ) <nl> . endControlFlow ( ) ; <nl> <nl> @ @ - 732 , 7 + 732 , 7 @ @ public class RealmProxyClassGenerator { <nl> private void emitHashcodeMethod ( JavaWriter writer ) throws IOException { <nl> writer . emitAnnotation ( " Override " ) ; <nl> writer . beginMethod ( " int " , " hashCode " , EnumSet . of ( Modifier . PUBLIC ) ) ; <nl> - writer . emitStatement ( " String realmName = realm . getPath ( ) " ) ; <nl> + writer . emitStatement ( " String realmName = realm . getAbsolutePath ( ) " ) ; <nl> writer . emitStatement ( " String tableName = row . getTable ( ) . getName ( ) " ) ; <nl> writer . emitStatement ( " long rowIndex = row . getIndex ( ) " ) ; <nl> writer . emitEmptyLine ( ) ; <nl> @ @ - 753 , 8 + 753 , 8 @ @ public class RealmProxyClassGenerator { <nl> writer . emitStatement ( " if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false " ) ; <nl> writer . emitStatement ( " % s a % s = ( % s ) o " , proxyClassName , className , proxyClassName ) ; / / FooRealmProxy aFoo = ( FooRealmProxy ) o <nl> writer . emitEmptyLine ( ) ; <nl> - writer . emitStatement ( " String path = realm . getPath ( ) " ) ; <nl> - writer . emitStatement ( " String otherPath = a % s . realm . getPath ( ) " , className ) ; <nl> + writer . emitStatement ( " String path = realm . getAbsolutePath ( ) " ) ; <nl> + writer . emitStatement ( " String otherPath = a % s . realm . getAbsolutePath ( ) " , className ) ; <nl> writer . emitStatement ( " if ( path ! = null ? ! path . equals ( otherPath ) : otherPath ! = null ) return false ; " ) ; <nl> writer . emitEmptyLine ( ) ; <nl> writer . emitStatement ( " String tableName = row . getTable ( ) . getName ( ) " ) ; <nl> diff - - git a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> index 156760f . . 7833ec7 100644 <nl> - - - a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> + + + b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java <nl> @ @ - 406 , 7 + 406 , 7 @ @ public class AllTypesRealmProxy extends AllTypes { <nl> } <nl> <nl> public static AllTypes copyOrUpdate ( Realm realm , AllTypes object , boolean update , Map < RealmObject , RealmObject > cache ) { <nl> - if ( object . realm ! = null & & object . realm . getId ( ) . equals ( realm . getId ( ) ) ) { <nl> + if ( object . realm ! = null & & object . realm . getAbsolutePath ( ) . equals ( realm . getAbsolutePath ( ) ) ) { <nl> return object ; <nl> } <nl> AllTypes realmObject = null ; <nl> @ @ - 552 , 7 + 552 , 7 @ @ public class AllTypesRealmProxy extends AllTypes { <nl> <nl> @ Override <nl> public int hashCode ( ) { <nl> - String realmName = realm . getPath ( ) ; <nl> + String realmName = realm . getAbsolutePath ( ) ; <nl> String tableName = row . getTable ( ) . getName ( ) ; <nl> long rowIndex = row . getIndex ( ) ; <nl> <nl> @ @ - 569 , 8 + 569 , 8 @ @ public class AllTypesRealmProxy extends AllTypes { <nl> if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false ; <nl> AllTypesRealmProxy aAllTypes = ( AllTypesRealmProxy ) o ; <nl> <nl> - String path = realm . getPath ( ) ; <nl> - String otherPath = aAllTypes . realm . getPath ( ) ; <nl> + String path = realm . getAbsolutePath ( ) ; <nl> + String otherPath = aAllTypes . realm . getAbsolutePath ( ) ; <nl> if ( path ! = null ? ! path . equals ( otherPath ) : otherPath ! = null ) return false ; ; <nl> <nl> String tableName = row . getTable ( ) . getName ( ) ; <nl> diff - - git a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> index 12b1c5f . . 2882f7b 100644 <nl> - - - a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> + + + b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java <nl> @ @ - 177 , 7 + 177 , 7 @ @ public class BooleansRealmProxy extends Booleans { <nl> } <nl> <nl> public static Booleans copyOrUpdate ( Realm realm , Booleans object , boolean update , Map < RealmObject , RealmObject > cache ) { <nl> - if ( object . realm ! = null & & object . realm . getId ( ) . equals ( realm . getId ( ) ) ) { <nl> + if ( object . realm ! = null & & object . realm . getAbsolutePath ( ) . equals ( realm . getAbsolutePath ( ) ) ) { <nl> return object ; <nl> } <nl> return copy ( realm , object , update , cache ) ; <nl> @ @ - 222 , 7 + 222 , 7 @ @ public class BooleansRealmProxy extends Booleans { <nl> <nl> @ Override <nl> public int hashCode ( ) { <nl> - String realmName = realm . getPath ( ) ; <nl> + String realmName = realm . getAbsolutePath ( ) ; <nl> String tableName = row . getTable ( ) . getName ( ) ; <nl> long rowIndex = row . getIndex ( ) ; <nl> <nl> @ @ - 239 , 8 + 239 , 8 @ @ public class BooleansRealmProxy extends Booleans { <nl> if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false ; <nl> BooleansRealmProxy aBooleans = ( BooleansRealmProxy ) o ; <nl> <nl> - String path = realm . getPath ( ) ; <nl> - String otherPath = aBooleans . realm . getPath ( ) ; <nl> + String path = realm . getAbsolutePath ( ) ; <nl> + String otherPath = aBooleans . realm . getAbsolutePath ( ) ; <nl> if ( path ! = null ? ! path . equals ( otherPath ) : otherPath ! = null ) return false ; ; <nl> <nl> String tableName = row . getTable ( ) . getName ( ) ; <nl> diff - - git a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> index b92778b . . bd5a9e3 100644 <nl> - - - a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> + + + b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java <nl> @ @ - 150 , 7 + 150 , 7 @ @ public class SimpleRealmProxy extends Simple { <nl> } <nl> <nl> public static Simple copyOrUpdate ( Realm realm , Simple object , boolean update , Map < RealmObject , RealmObject > cache ) { <nl> - if ( object . realm ! = null & & object . realm . getId ( ) . equals ( realm . getId ( ) ) ) { <nl> + if ( object . realm ! = null & & object . realm . getAbsolutePath ( ) . equals ( realm . getAbsolutePath ( ) ) ) { <nl> return object ; <nl> } <nl> return copy ( realm , object , update , cache ) ; <nl> @ @ - 189 , 7 + 189 , 7 @ @ public class SimpleRealmProxy extends Simple { <nl> <nl> @ Override <nl> public int hashCode ( ) { <nl> - String realmName = realm . getPath ( ) ; <nl> + String realmName = realm . getAbsolutePath ( ) ; <nl> String tableName = row . getTable ( ) . getName ( ) ; <nl> long rowIndex = row . getIndex ( ) ; <nl> <nl> @ @ - 206 , 8 + 206 , 8 @ @ public class SimpleRealmProxy extends Simple { <nl> if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false ; <nl> SimpleRealmProxy aSimple = ( SimpleRealmProxy ) o ; <nl> <nl> - String path = realm . getPath ( ) ; <nl> - String otherPath = aSimple . realm . getPath ( ) ; <nl> + String path = realm . getAbsolutePath ( ) ; <nl> + String otherPath = aSimple . realm . getAbsolutePath ( ) ; <nl> if ( path ! = null ? ! path . equals ( otherPath ) : otherPath ! = null ) return false ; ; <nl> <nl> String tableName = row . getTable ( ) . getName ( ) ; <nl> diff - - git a / realm / src / androidTest / java / io / realm / NotificationsTest . java b / realm / src / androidTest / java / io / realm / NotificationsTest . java <nl> index a567c3d . . da11969 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / NotificationsTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / NotificationsTest . java <nl> @ @ - 294 , 7 + 294 , 7 @ @ public class NotificationsTest extends AndroidTestCase { <nl> Realm . deleteRealmFile ( getContext ( ) , " private - realm " ) ; <nl> Realm instance1 = Realm . getInstance ( getContext ( ) , " private - realm " ) ; <nl> Realm instance2 = Realm . getInstance ( getContext ( ) , " private - realm " ) ; <nl> - assertEquals ( instance1 . getId ( ) , instance2 . getId ( ) ) ; <nl> + assertEquals ( instance1 . getAbsolutePath ( ) , instance2 . getAbsolutePath ( ) ) ; <nl> assertNotNull ( instance1 . getHandler ( ) ) ; <nl> <nl> / / If multiple instances are open on the same thread , don ' t remove handler on that thread <nl> diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> index d2e4348 . . 2814470 100644 <nl> - - - a / realm / src / androidTest / java / io / realm / RealmTest . java <nl> + + + b / realm / src / androidTest / java / io / realm / RealmTest . java <nl> @ @ - 17 , 12 + 17 , 9 @ @ package io . realm ; <nl> <nl> import android . content . Context ; <nl> import android . test . AndroidTestCase ; <nl> - import android . util . Log ; <nl> <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> - import java . security . MessageDigest ; <nl> - import java . security . NoSuchAlgorithmException ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> import java . util . Date ; <nl> @ @ - 1499 , 7 + 1496 , 7 @ @ public class RealmTest extends AndroidTestCase { <nl> } finally { <nl> if ( reEncryptedRealm ! = null ) { <nl> reEncryptedRealm . close ( ) ; <nl> - boolean isDeleted = new File ( reEncryptedRealm . getPath ( ) ) . delete ( ) ; <nl> + boolean isDeleted = new File ( reEncryptedRealm . getAbsolutePath ( ) ) . delete ( ) ; <nl> if ( ! isDeleted ) { <nl> fail ( ) ; <nl> } <nl> @ @ - 1520 , 7 + 1517 , 7 @ @ public class RealmTest extends AndroidTestCase { <nl> } finally { <nl> if ( decryptedRealm ! = null ) { <nl> decryptedRealm . close ( ) ; <nl> - boolean isDeleted = new File ( decryptedRealm . getPath ( ) ) . delete ( ) ; <nl> + boolean isDeleted = new File ( decryptedRealm . getAbsolutePath ( ) ) . delete ( ) ; <nl> if ( ! isDeleted ) { <nl> fail ( ) ; <nl> } <nl> @ @ - 1529 , 7 + 1526 , 7 @ @ public class RealmTest extends AndroidTestCase { <nl> } finally { <nl> if ( encryptedRealm ! = null ) { <nl> encryptedRealm . close ( ) ; <nl> - boolean isDeleted = new File ( encryptedRealm . getPath ( ) ) . delete ( ) ; <nl> + boolean isDeleted = new File ( encryptedRealm . getAbsolutePath ( ) ) . delete ( ) ; <nl> if ( ! isDeleted ) { <nl> fail ( ) ; <nl> } <nl> diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java <nl> index 3fa94a6 . . f6fdd27 100644 <nl> - - - a / realm / src / main / java / io / realm / Realm . java <nl> + + + b / realm / src / main / java / io / realm / Realm . java <nl> @ @ - 25 , 7 + 25 , 6 @ @ import android . os . Looper ; <nl> import android . os . Message ; <nl> import android . util . JsonReader ; <nl> <nl> - import org . jetbrains . annotations . NotNull ; <nl> import org . json . JSONArray ; <nl> import org . json . JSONException ; <nl> import org . json . JSONObject ; <nl> @ @ - 157 , 8 + 156 , 7 @ @ public final class Realm implements Closeable { <nl> private Handler handler ; <nl> <nl> private final byte [ ] key ; <nl> - private final String id ; <nl> - private final String path ; <nl> + private final String absolutePath ; <nl> private SharedGroup sharedGroup ; <nl> private final ImplicitTransaction transaction ; <nl> private final RealmJson realmJson = getRealmJson ( ) ; <nl> @ @ - 189 , 7 + 187 , 7 @ @ public final class Realm implements Closeable { <nl> } <nl> <nl> / / Check if we are in the right thread <nl> - Realm currentRealm = realmsCache . get ( ) . get ( this . id ) ; <nl> + Realm currentRealm = realmsCache . get ( ) . get ( absolutePath ) ; <nl> if ( currentRealm ! = this ) { <nl> throw new IllegalStateException ( INCORRECT _ THREAD _ MESSAGE ) ; <nl> } <nl> @ @ - 202 , 9 + 200 , 8 @ @ public final class Realm implements Closeable { <nl> } <nl> this . sharedGroup = new SharedGroup ( absolutePath , true , key ) ; <nl> this . transaction = sharedGroup . beginImplicitTransaction ( ) ; <nl> - this . path = absolutePath ; <nl> + this . absolutePath = absolutePath ; <nl> this . key = key ; <nl> - this . id = absolutePath ; <nl> setAutoRefresh ( autoRefresh ) ; <nl> } <nl> <nl> @ @ - 212 , 7 + 209 , 7 @ @ public final class Realm implements Closeable { <nl> protected void finalize ( ) throws Throwable { <nl> if ( sharedGroup ! = null ) { <nl> RealmLog . w ( " Remember to call close ( ) on all Realm instances . " + <nl> - " Realm " + path + " is being finalized without being closed , " + <nl> + " Realm " + absolutePath + " is being finalized without being closed , " + <nl> " this can lead to running out of native memory . " <nl> ) ; <nl> } <nl> @ @ - 228 , 23 + 225 , 23 @ @ public final class Realm implements Closeable { <nl> @ Override <nl> public void close ( ) { <nl> Map < String , Integer > localRefCount = referenceCount . get ( ) ; <nl> - Integer references = localRefCount . get ( id ) ; <nl> + Integer references = localRefCount . get ( absolutePath ) ; <nl> if ( references = = null ) { <nl> references = 0 ; <nl> } <nl> if ( sharedGroup ! = null & & references = = 1 ) { <nl> - realmsCache . get ( ) . remove ( id ) ; <nl> + realmsCache . get ( ) . remove ( absolutePath ) ; <nl> sharedGroup . close ( ) ; <nl> sharedGroup = null ; <nl> - AtomicInteger counter = openRealms . get ( id ) ; <nl> + AtomicInteger counter = openRealms . get ( absolutePath ) ; <nl> counter . decrementAndGet ( ) ; <nl> } <nl> <nl> int refCount = references - 1 ; <nl> if ( refCount < 0 ) { <nl> - RealmLog . w ( " Calling close ( ) on a Realm that is already closed : " + getPath ( ) ) ; <nl> + RealmLog . w ( " Calling close ( ) on a Realm that is already closed : " + getAbsolutePath ( ) ) ; <nl> } <nl> - localRefCount . put ( id , Math . max ( 0 , refCount ) ) ; <nl> + localRefCount . put ( absolutePath , Math . max ( 0 , refCount ) ) ; <nl> <nl> if ( handler ! = null & & refCount < = 0 ) { <nl> removeHandler ( handler ) ; <nl> @ @ - 310 , 7 + 307 , 7 @ @ public final class Realm implements Closeable { <nl> <nl> if ( autoRefresh & & ! this . autoRefresh ) { / / Switch it on <nl> handler = new Handler ( new RealmCallback ( ) ) ; <nl> - handlers . put ( handler , id ) ; <nl> + handlers . put ( handler , absolutePath ) ; <nl> } else if ( ! autoRefresh & & this . autoRefresh & & handler ! = null ) { / / Switch it off <nl> removeHandler ( handler ) ; <nl> } <nl> @ @ - 1469 , 9 + 1466 , 9 @ @ public final class Realm implements Closeable { <nl> <nl> for ( Map . Entry < Handler , String > handlerIntegerEntry : handlers . entrySet ( ) ) { <nl> Handler handler = handlerIntegerEntry . getKey ( ) ; <nl> - String realmId = handlerIntegerEntry . getValue ( ) ; <nl> + String realmPath = handlerIntegerEntry . getValue ( ) ; <nl> if ( <nl> - realmId . equals ( id ) / / It ' s the right realm <nl> + realmPath . equals ( absolutePath ) / / It ' s the right realm <nl> & & ! handler . hasMessages ( REALM _ CHANGED ) / / The right message <nl> & & handler . getLooper ( ) . getThread ( ) . isAlive ( ) / / The receiving thread is alive <nl> & & ! handler . equals ( this . handler ) / / Don ' t notify yourself <nl> @ @ - 1532 , 14 + 1529 , 10 @ @ public final class Realm implements Closeable { <nl> getTable ( classSpec ) . clear ( ) ; <nl> } <nl> <nl> - String getId ( ) { <nl> - return id ; <nl> - } <nl> - <nl> / / Returns the Handler for this Realm on the calling thread <nl> Handler getHandler ( ) { <nl> for ( Map . Entry < Handler , String > entry : handlers . entrySet ( ) ) { <nl> - if ( entry . getValue ( ) . equals ( id ) ) { <nl> + if ( entry . getValue ( ) . equals ( absolutePath ) ) { <nl> return entry . getKey ( ) ; <nl> } <nl> } <nl> @ @ - 1781 , 14 + 1774 , 23 @ @ public final class Realm implements Closeable { <nl> } <nl> <nl> / * * <nl> - * Returns the absolute path to where this Realm is persisted on disk . <nl> + * Use { @ link # getAbsolutePath ( ) } instead . <nl> * <nl> * @ return The absolute path to the Realm file . <nl> * / <nl> + @ Deprecated <nl> public String getPath ( ) { <nl> - return path ; <nl> + return absolutePath ; <nl> } <nl> <nl> + / * * <nl> + * Returns the absolute path to where this Realm is persisted on disk . <nl> + * <nl> + * @ return The absolute path to the Realm file . <nl> + * / <nl> + public String getAbsolutePath ( ) { <nl> + return absolutePath ; <nl> + } <nl> <nl> / * * <nl> * Override the standard behavior of all classes extended RealmObject being part of the schema .

TEST DIFF:
diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 index 6faacbf . . 54e8560 100644 
 - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 @ @ - 144 , 7 + 144 , 6 @ @ public class RealmProxyClassGenerator { 
 emitGetExpectedObjectSchemaInfo ( writer ) ; 
 emitCreateColumnInfoMethod ( writer ) ; 
 emitGetSimpleClassNameMethod ( writer ) ; 
 - emitGetFieldNamesMethod ( writer ) ; 
 emitCreateOrUpdateUsingJsonObject ( writer ) ; 
 emitCreateUsingJsonStream ( writer ) ; 
 emitCopyOrUpdateMethod ( writer ) ; 
 @ @ - 240 , 15 + 239 , 6 @ @ public class RealmProxyClassGenerator { 
 writer . emitEmptyLine ( ) 
 . emitField ( " OsObjectSchemaInfo " , " expectedObjectSchemaInfo " , 
 EnumSet . of ( Modifier . PRIVATE , Modifier . STATIC , Modifier . FINAL ) , " createExpectedObjectSchemaInfo ( ) " ) ; 
 - 
 - writer . emitField ( " List < String > " , " FIELD _ NAMES " , EnumSet . of ( Modifier . PRIVATE , Modifier . STATIC , Modifier . FINAL ) ) ; 
 - writer . beginInitializer ( true ) 
 - . emitStatement ( " List < String > fieldNames = new ArrayList < String > ( % s ) " , metadata . getFields ( ) . size ( ) ) ; 
 - for ( VariableElement field : metadata . getFields ( ) ) { 
 - writer . emitStatement ( " fieldNames . add ( \ " % s \ " ) " , field . getSimpleName ( ) . toString ( ) ) ; 
 - } 
 - writer . emitStatement ( " FIELD _ NAMES = Collections . unmodifiableList ( fieldNames ) " ) 
 - . endInitializer ( ) ; 
 } 
 / / @ formatter : on 
 
 @ @ - 841 , 15 + 831 , 6 @ @ public class RealmProxyClassGenerator { 
 / / @ formatter : on 
 
 / / @ formatter : off 
 - private void emitGetFieldNamesMethod ( JavaWriter writer ) throws IOException { 
 - writer . beginMethod ( " List < String > " , " getFieldNames " , EnumSet . of ( Modifier . PUBLIC , Modifier . STATIC ) ) 
 - . emitStatement ( " return FIELD _ NAMES " ) 
 - . endMethod ( ) 
 - . emitEmptyLine ( ) ; 
 - } 
 - / / @ formatter : on 
 - 
 - / / @ formatter : off 
 private void emitCopyOrUpdateMethod ( JavaWriter writer ) throws IOException { 
 writer . beginMethod ( 
 qualifiedClassName , / / Return type 
 diff - - git a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyMediatorGenerator . java b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyMediatorGenerator . java 
 index 1370de9 . . a667e57 100644 
 - - - a / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyMediatorGenerator . java 
 + + + b / realm / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyMediatorGenerator . java 
 @ @ - 98 , 7 + 98 , 6 @ @ public class RealmProxyMediatorGenerator { 
 emitFields ( writer ) ; 
 emitGetExpectedObjectSchemaInfoMap ( writer ) ; 
 emitCreateColumnInfoMethod ( writer ) ; 
 - emitGetFieldNamesMethod ( writer ) ; 
 emitGetSimpleClassNameMethod ( writer ) ; 
 emitNewInstanceMethod ( writer ) ; 
 emitGetClassModelList ( writer ) ; 
 @ @ - 167 , 24 + 166 , 6 @ @ public class RealmProxyMediatorGenerator { 
 writer . emitEmptyLine ( ) ; 
 } 
 
 - private void emitGetFieldNamesMethod ( JavaWriter writer ) throws IOException { 
 - writer . emitAnnotation ( " Override " ) ; 
 - writer . beginMethod ( 
 - " List < String > " , 
 - " getFieldNames " , 
 - EnumSet . of ( Modifier . PUBLIC ) , 
 - " Class < ? extends RealmModel > " , " clazz " 
 - ) ; 
 - emitMediatorShortCircuitSwitch ( new ProxySwitchStatement ( ) { 
 - @ Override 
 - public void emitStatement ( int i , JavaWriter writer ) throws IOException { 
 - writer . emitStatement ( " return % s . getFieldNames ( ) " , qualifiedProxyClasses . get ( i ) ) ; 
 - } 
 - } , writer ) ; 
 - writer . endMethod ( ) ; 
 - writer . emitEmptyLine ( ) ; 
 - } 
 - 
 private void emitGetSimpleClassNameMethod ( JavaWriter writer ) throws IOException { 
 writer . emitAnnotation ( " Override " ) ; 
 writer . beginMethod ( 
 diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 index fb00a17 . . 03e4de0 100644 
 - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 @ @ - 121 , 31 + 121 , 6 @ @ public class AllTypesRealmProxy extends some . test . AllTypes 
 } 
 
 private static final OsObjectSchemaInfo expectedObjectSchemaInfo = createExpectedObjectSchemaInfo ( ) ; 
 - private static final List < String > FIELD _ NAMES ; 
 - static { 
 - List < String > fieldNames = new ArrayList < String > ( 20 ) ; 
 - fieldNames . add ( " columnString " ) ; 
 - fieldNames . add ( " columnLong " ) ; 
 - fieldNames . add ( " columnFloat " ) ; 
 - fieldNames . add ( " columnDouble " ) ; 
 - fieldNames . add ( " columnBoolean " ) ; 
 - fieldNames . add ( " columnDate " ) ; 
 - fieldNames . add ( " columnBinary " ) ; 
 - fieldNames . add ( " columnMutableRealmInteger " ) ; 
 - fieldNames . add ( " columnObject " ) ; 
 - fieldNames . add ( " columnRealmList " ) ; 
 - fieldNames . add ( " columnStringList " ) ; 
 - fieldNames . add ( " columnBinaryList " ) ; 
 - fieldNames . add ( " columnBooleanList " ) ; 
 - fieldNames . add ( " columnLongList " ) ; 
 - fieldNames . add ( " columnIntegerList " ) ; 
 - fieldNames . add ( " columnShortList " ) ; 
 - fieldNames . add ( " columnByteList " ) ; 
 - fieldNames . add ( " columnDoubleList " ) ; 
 - fieldNames . add ( " columnFloatList " ) ; 
 - fieldNames . add ( " columnDateList " ) ; 
 - FIELD _ NAMES = Collections . unmodifiableList ( fieldNames ) ; 
 - } 
 
 private AllTypesColumnInfo columnInfo ; 
 private ProxyState < some . test . AllTypes > proxyState ; 
 @ @ - 893 , 10 + 868 , 6 @ @ public class AllTypesRealmProxy extends some . test . AllTypes 
 return " AllTypes " ; 
 } 
 
 - public static List < String > getFieldNames ( ) { 
 - return FIELD _ NAMES ; 
 - } 
 - 
 @ SuppressWarnings ( " cast " ) 
 public static some . test . AllTypes createOrUpdateUsingJsonObject ( Realm realm , JSONObject json , boolean update ) 
 throws JSONException { 
 diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 index b957355 . . cb8c2ff 100644 
 - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 @ @ - 71 , 15 + 71 , 6 @ @ public class BooleansRealmProxy extends some . test . Booleans 
 } 
 
 private static final OsObjectSchemaInfo expectedObjectSchemaInfo = createExpectedObjectSchemaInfo ( ) ; 
 - private static final List < String > FIELD _ NAMES ; 
 - static { 
 - List < String > fieldNames = new ArrayList < String > ( 4 ) ; 
 - fieldNames . add ( " done " ) ; 
 - fieldNames . add ( " isReady " ) ; 
 - fieldNames . add ( " mCompleted " ) ; 
 - fieldNames . add ( " anotherBoolean " ) ; 
 - FIELD _ NAMES = Collections . unmodifiableList ( fieldNames ) ; 
 - } 
 
 private BooleansColumnInfo columnInfo ; 
 private ProxyState < some . test . Booleans > proxyState ; 
 @ @ - 211 , 10 + 202 , 6 @ @ public class BooleansRealmProxy extends some . test . Booleans 
 return " Booleans " ; 
 } 
 
 - public static List < String > getFieldNames ( ) { 
 - return FIELD _ NAMES ; 
 - } 
 - 
 @ SuppressWarnings ( " cast " ) 
 public static some . test . Booleans createOrUpdateUsingJsonObject ( Realm realm , JSONObject json , boolean update ) 
 throws JSONException { 
 diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java 
 index bef81c5 . . fecf92e 100644 
 - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java 
 + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / NullTypesRealmProxy . java 
 @ @ - 182 , 52 + 182 , 6 @ @ public class NullTypesRealmProxy extends some . test . NullTypes 
 } 
 
 private static final OsObjectSchemaInfo expectedObjectSchemaInfo = createExpectedObjectSchemaInfo ( ) ; 
 - private static final List < String > FIELD _ NAMES ; 
 - static { 
 - List < String > fieldNames = new ArrayList < String > ( 41 ) ; 
 - fieldNames . add ( " fieldStringNotNull " ) ; 
 - fieldNames . add ( " fieldStringNull " ) ; 
 - fieldNames . add ( " fieldBooleanNotNull " ) ; 
 - fieldNames . add ( " fieldBooleanNull " ) ; 
 - fieldNames . add ( " fieldBytesNotNull " ) ; 
 - fieldNames . add ( " fieldBytesNull " ) ; 
 - fieldNames . add ( " fieldByteNotNull " ) ; 
 - fieldNames . add ( " fieldByteNull " ) ; 
 - fieldNames . add ( " fieldShortNotNull " ) ; 
 - fieldNames . add ( " fieldShortNull " ) ; 
 - fieldNames . add ( " fieldIntegerNotNull " ) ; 
 - fieldNames . add ( " fieldIntegerNull " ) ; 
 - fieldNames . add ( " fieldLongNotNull " ) ; 
 - fieldNames . add ( " fieldLongNull " ) ; 
 - fieldNames . add ( " fieldFloatNotNull " ) ; 
 - fieldNames . add ( " fieldFloatNull " ) ; 
 - fieldNames . add ( " fieldDoubleNotNull " ) ; 
 - fieldNames . add ( " fieldDoubleNull " ) ; 
 - fieldNames . add ( " fieldDateNotNull " ) ; 
 - fieldNames . add ( " fieldDateNull " ) ; 
 - fieldNames . add ( " fieldObjectNull " ) ; 
 - fieldNames . add ( " fieldStringListNotNull " ) ; 
 - fieldNames . add ( " fieldStringListNull " ) ; 
 - fieldNames . add ( " fieldBinaryListNotNull " ) ; 
 - fieldNames . add ( " fieldBinaryListNull " ) ; 
 - fieldNames . add ( " fieldBooleanListNotNull " ) ; 
 - fieldNames . add ( " fieldBooleanListNull " ) ; 
 - fieldNames . add ( " fieldLongListNotNull " ) ; 
 - fieldNames . add ( " fieldLongListNull " ) ; 
 - fieldNames . add ( " fieldIntegerListNotNull " ) ; 
 - fieldNames . add ( " fieldIntegerListNull " ) ; 
 - fieldNames . add ( " fieldShortListNotNull " ) ; 
 - fieldNames . add ( " fieldShortListNull " ) ; 
 - fieldNames . add ( " fieldByteListNotNull " ) ; 
 - fieldNames . add ( " fieldByteListNull " ) ; 
 - fieldNames . add ( " fieldDoubleListNotNull " ) ; 
 - fieldNames . add ( " fieldDoubleListNull " ) ; 
 - fieldNames . add ( " fieldFloatListNotNull " ) ; 
 - fieldNames . add ( " fieldFloatListNull " ) ; 
 - fieldNames . add ( " fieldDateListNotNull " ) ; 
 - fieldNames . add ( " fieldDateListNull " ) ; 
 - FIELD _ NAMES = Collections . unmodifiableList ( fieldNames ) ; 
 - } 
 
 private NullTypesColumnInfo columnInfo ; 
 private ProxyState < some . test . NullTypes > proxyState ; 
 @ @ - 1753 , 10 + 1707 , 6 @ @ public class NullTypesRealmProxy extends some . test . NullTypes 
 return " NullTypes " ; 
 } 
 
 - public static List < String > getFieldNames ( ) { 
 - return FIELD _ NAMES ; 
 - } 
 - 
 @ SuppressWarnings ( " cast " ) 
 public static some . test . NullTypes createOrUpdateUsingJsonObject ( Realm realm , JSONObject json , boolean update ) 
 throws JSONException { 
 diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java b / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java 
 index 80a30b4 . . 506273e 100644 
 - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java 
 + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / RealmDefaultModuleMediator . java 
 @ @ - 48 , 16 + 48 , 6 @ @ class DefaultRealmModuleMediator extends RealmProxyMediator { 
 } 
 
 @ Override 
 - public List < String > getFieldNames ( Class < ? extends RealmModel > clazz ) { 
 - checkClass ( clazz ) ; 
 - 
 - if ( clazz . equals ( some . test . AllTypes . class ) ) { 
 - return io . realm . AllTypesRealmProxy . getFieldNames ( ) ; 
 - } 
 - throw getMissingProxyClassException ( clazz ) ; 
 - } 
 - 
 - @ Override 
 public String getSimpleClassNameImpl ( Class < ? extends RealmModel > clazz ) { 
 checkClass ( clazz ) ; 
 
 diff - - git a / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java b / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 index 4473a97 . . 1ea6822 100644 
 - - - a / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 + + + b / realm / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 @ @ - 65 , 13 + 65 , 6 @ @ public class SimpleRealmProxy extends some . test . Simple 
 } 
 
 private static final OsObjectSchemaInfo expectedObjectSchemaInfo = createExpectedObjectSchemaInfo ( ) ; 
 - private static final List < String > FIELD _ NAMES ; 
 - static { 
 - List < String > fieldNames = new ArrayList < String > ( 2 ) ; 
 - fieldNames . add ( " name " ) ; 
 - fieldNames . add ( " age " ) ; 
 - FIELD _ NAMES = Collections . unmodifiableList ( fieldNames ) ; 
 - } 
 
 private SimpleColumnInfo columnInfo ; 
 private ProxyState < some . test . Simple > proxyState ; 
 @ @ - 165 , 10 + 158 , 6 @ @ public class SimpleRealmProxy extends some . test . Simple 
 return " Simple " ; 
 } 
 
 - public static List < String > getFieldNames ( ) { 
 - return FIELD _ NAMES ; 
 - } 
 - 
 @ SuppressWarnings ( " cast " ) 
 public static some . test . Simple createOrUpdateUsingJsonObject ( Realm realm , JSONObject json , boolean update ) 
 throws JSONException { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java b / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java 
 index 188a6f9 . . 58db9cf 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmProxyMediator . java 
 @ @ - 61 , 14 + 61 , 6 @ @ public abstract class RealmProxyMediator { 
 public abstract ColumnInfo createColumnInfo ( Class < ? extends RealmModel > clazz , OsSchemaInfo osSchemaInfo ) ; 
 
 / * * 
 - * Returns a map of non - obfuscated object field names to their internal Realm name . 
 - * 
 - * @ param clazz the { @ link RealmObject } class reference . 
 - * @ return The simple name of an RealmObject class ( before it has been obfuscated ) . 
 - * / 
 - public abstract List < String > getFieldNames ( Class < ? extends RealmModel > clazz ) ; 
 - 
 - / * * 
 * Returns the name that Realm should use for all its internal tables . This is the un - obfuscated simple name of the 
 * class . 
 * 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java b / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java 
 index 08df441 . . 626041c 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / modules / CompositeMediator . java 
 @ @ - 77 , 12 + 77 , 6 @ @ public class CompositeMediator extends RealmProxyMediator { 
 } 
 
 @ Override 
 - public List < String > getFieldNames ( Class < ? extends RealmModel > clazz ) { 
 - RealmProxyMediator mediator = getMediator ( clazz ) ; 
 - return mediator . getFieldNames ( clazz ) ; 
 - } 
 - 
 - @ Override 
 protected String getSimpleClassNameImpl ( Class < ? extends RealmModel > clazz ) { 
 RealmProxyMediator mediator = getMediator ( clazz ) ; 
 return mediator . getSimpleClassName ( clazz ) ; 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java b / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java 
 index ef9fb56 . . b3ec7de 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / modules / FilterableMediator . java 
 @ @ - 92 , 12 + 92 , 6 @ @ public class FilterableMediator extends RealmProxyMediator { 
 } 
 
 @ Override 
 - public List < String > getFieldNames ( Class < ? extends RealmModel > clazz ) { 
 - checkSchemaHasClass ( clazz ) ; 
 - return originalMediator . getFieldNames ( clazz ) ; 
 - } 
 - 
 - @ Override 
 protected String getSimpleClassNameImpl ( Class < ? extends RealmModel > clazz ) { 
 checkSchemaHasClass ( clazz ) ; 
 return originalMediator . getSimpleClassName ( clazz ) ;

NEAREST DIFF:
diff - - git a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 index f922683 . . 16cc5d1 100644 
 - - - a / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 + + + b / realm - annotations - processor / src / main / java / io / realm / processor / RealmProxyClassGenerator . java 
 @ @ - 508 , 7 + 508 , 7 @ @ public class RealmProxyClassGenerator { 
 
 / / If object is already in the Realm there is nothing to update 
 writer 
 - . beginControlFlow ( " if ( object . realm ! = null & & object . realm . getId ( ) . equals ( realm . getId ( ) ) ) " ) 
 + . beginControlFlow ( " if ( object . realm ! = null & & object . realm . getAbsolutePath ( ) . equals ( realm . getAbsolutePath ( ) ) ) " ) 
 . emitStatement ( " return object " ) 
 . endControlFlow ( ) ; 
 
 @ @ - 732 , 7 + 732 , 7 @ @ public class RealmProxyClassGenerator { 
 private void emitHashcodeMethod ( JavaWriter writer ) throws IOException { 
 writer . emitAnnotation ( " Override " ) ; 
 writer . beginMethod ( " int " , " hashCode " , EnumSet . of ( Modifier . PUBLIC ) ) ; 
 - writer . emitStatement ( " String realmName = realm . getPath ( ) " ) ; 
 + writer . emitStatement ( " String realmName = realm . getAbsolutePath ( ) " ) ; 
 writer . emitStatement ( " String tableName = row . getTable ( ) . getName ( ) " ) ; 
 writer . emitStatement ( " long rowIndex = row . getIndex ( ) " ) ; 
 writer . emitEmptyLine ( ) ; 
 @ @ - 753 , 8 + 753 , 8 @ @ public class RealmProxyClassGenerator { 
 writer . emitStatement ( " if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false " ) ; 
 writer . emitStatement ( " % s a % s = ( % s ) o " , proxyClassName , className , proxyClassName ) ; / / FooRealmProxy aFoo = ( FooRealmProxy ) o 
 writer . emitEmptyLine ( ) ; 
 - writer . emitStatement ( " String path = realm . getPath ( ) " ) ; 
 - writer . emitStatement ( " String otherPath = a % s . realm . getPath ( ) " , className ) ; 
 + writer . emitStatement ( " String path = realm . getAbsolutePath ( ) " ) ; 
 + writer . emitStatement ( " String otherPath = a % s . realm . getAbsolutePath ( ) " , className ) ; 
 writer . emitStatement ( " if ( path ! = null ? ! path . equals ( otherPath ) : otherPath ! = null ) return false ; " ) ; 
 writer . emitEmptyLine ( ) ; 
 writer . emitStatement ( " String tableName = row . getTable ( ) . getName ( ) " ) ; 
 diff - - git a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 index 156760f . . 7833ec7 100644 
 - - - a / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 + + + b / realm - annotations - processor / src / test / resources / io / realm / AllTypesRealmProxy . java 
 @ @ - 406 , 7 + 406 , 7 @ @ public class AllTypesRealmProxy extends AllTypes { 
 } 
 
 public static AllTypes copyOrUpdate ( Realm realm , AllTypes object , boolean update , Map < RealmObject , RealmObject > cache ) { 
 - if ( object . realm ! = null & & object . realm . getId ( ) . equals ( realm . getId ( ) ) ) { 
 + if ( object . realm ! = null & & object . realm . getAbsolutePath ( ) . equals ( realm . getAbsolutePath ( ) ) ) { 
 return object ; 
 } 
 AllTypes realmObject = null ; 
 @ @ - 552 , 7 + 552 , 7 @ @ public class AllTypesRealmProxy extends AllTypes { 
 
 @ Override 
 public int hashCode ( ) { 
 - String realmName = realm . getPath ( ) ; 
 + String realmName = realm . getAbsolutePath ( ) ; 
 String tableName = row . getTable ( ) . getName ( ) ; 
 long rowIndex = row . getIndex ( ) ; 
 
 @ @ - 569 , 8 + 569 , 8 @ @ public class AllTypesRealmProxy extends AllTypes { 
 if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false ; 
 AllTypesRealmProxy aAllTypes = ( AllTypesRealmProxy ) o ; 
 
 - String path = realm . getPath ( ) ; 
 - String otherPath = aAllTypes . realm . getPath ( ) ; 
 + String path = realm . getAbsolutePath ( ) ; 
 + String otherPath = aAllTypes . realm . getAbsolutePath ( ) ; 
 if ( path ! = null ? ! path . equals ( otherPath ) : otherPath ! = null ) return false ; ; 
 
 String tableName = row . getTable ( ) . getName ( ) ; 
 diff - - git a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 index 12b1c5f . . 2882f7b 100644 
 - - - a / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 + + + b / realm - annotations - processor / src / test / resources / io / realm / BooleansRealmProxy . java 
 @ @ - 177 , 7 + 177 , 7 @ @ public class BooleansRealmProxy extends Booleans { 
 } 
 
 public static Booleans copyOrUpdate ( Realm realm , Booleans object , boolean update , Map < RealmObject , RealmObject > cache ) { 
 - if ( object . realm ! = null & & object . realm . getId ( ) . equals ( realm . getId ( ) ) ) { 
 + if ( object . realm ! = null & & object . realm . getAbsolutePath ( ) . equals ( realm . getAbsolutePath ( ) ) ) { 
 return object ; 
 } 
 return copy ( realm , object , update , cache ) ; 
 @ @ - 222 , 7 + 222 , 7 @ @ public class BooleansRealmProxy extends Booleans { 
 
 @ Override 
 public int hashCode ( ) { 
 - String realmName = realm . getPath ( ) ; 
 + String realmName = realm . getAbsolutePath ( ) ; 
 String tableName = row . getTable ( ) . getName ( ) ; 
 long rowIndex = row . getIndex ( ) ; 
 
 @ @ - 239 , 8 + 239 , 8 @ @ public class BooleansRealmProxy extends Booleans { 
 if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false ; 
 BooleansRealmProxy aBooleans = ( BooleansRealmProxy ) o ; 
 
 - String path = realm . getPath ( ) ; 
 - String otherPath = aBooleans . realm . getPath ( ) ; 
 + String path = realm . getAbsolutePath ( ) ; 
 + String otherPath = aBooleans . realm . getAbsolutePath ( ) ; 
 if ( path ! = null ? ! path . equals ( otherPath ) : otherPath ! = null ) return false ; ; 
 
 String tableName = row . getTable ( ) . getName ( ) ; 
 diff - - git a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 index b92778b . . bd5a9e3 100644 
 - - - a / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 + + + b / realm - annotations - processor / src / test / resources / io / realm / SimpleRealmProxy . java 
 @ @ - 150 , 7 + 150 , 7 @ @ public class SimpleRealmProxy extends Simple { 
 } 
 
 public static Simple copyOrUpdate ( Realm realm , Simple object , boolean update , Map < RealmObject , RealmObject > cache ) { 
 - if ( object . realm ! = null & & object . realm . getId ( ) . equals ( realm . getId ( ) ) ) { 
 + if ( object . realm ! = null & & object . realm . getAbsolutePath ( ) . equals ( realm . getAbsolutePath ( ) ) ) { 
 return object ; 
 } 
 return copy ( realm , object , update , cache ) ; 
 @ @ - 189 , 7 + 189 , 7 @ @ public class SimpleRealmProxy extends Simple { 
 
 @ Override 
 public int hashCode ( ) { 
 - String realmName = realm . getPath ( ) ; 
 + String realmName = realm . getAbsolutePath ( ) ; 
 String tableName = row . getTable ( ) . getName ( ) ; 
 long rowIndex = row . getIndex ( ) ; 
 
 @ @ - 206 , 8 + 206 , 8 @ @ public class SimpleRealmProxy extends Simple { 
 if ( o = = null | | getClass ( ) ! = o . getClass ( ) ) return false ; 
 SimpleRealmProxy aSimple = ( SimpleRealmProxy ) o ; 
 
 - String path = realm . getPath ( ) ; 
 - String otherPath = aSimple . realm . getPath ( ) ; 
 + String path = realm . getAbsolutePath ( ) ; 
 + String otherPath = aSimple . realm . getAbsolutePath ( ) ; 
 if ( path ! = null ? ! path . equals ( otherPath ) : otherPath ! = null ) return false ; ; 
 
 String tableName = row . getTable ( ) . getName ( ) ; 
 diff - - git a / realm / src / androidTest / java / io / realm / NotificationsTest . java b / realm / src / androidTest / java / io / realm / NotificationsTest . java 
 index a567c3d . . da11969 100644 
 - - - a / realm / src / androidTest / java / io / realm / NotificationsTest . java 
 + + + b / realm / src / androidTest / java / io / realm / NotificationsTest . java 
 @ @ - 294 , 7 + 294 , 7 @ @ public class NotificationsTest extends AndroidTestCase { 
 Realm . deleteRealmFile ( getContext ( ) , " private - realm " ) ; 
 Realm instance1 = Realm . getInstance ( getContext ( ) , " private - realm " ) ; 
 Realm instance2 = Realm . getInstance ( getContext ( ) , " private - realm " ) ; 
 - assertEquals ( instance1 . getId ( ) , instance2 . getId ( ) ) ; 
 + assertEquals ( instance1 . getAbsolutePath ( ) , instance2 . getAbsolutePath ( ) ) ; 
 assertNotNull ( instance1 . getHandler ( ) ) ; 
 
 / / If multiple instances are open on the same thread , don ' t remove handler on that thread 
 diff - - git a / realm / src / androidTest / java / io / realm / RealmTest . java b / realm / src / androidTest / java / io / realm / RealmTest . java 
 index d2e4348 . . 2814470 100644 
 - - - a / realm / src / androidTest / java / io / realm / RealmTest . java 
 + + + b / realm / src / androidTest / java / io / realm / RealmTest . java 
 @ @ - 17 , 12 + 17 , 9 @ @ package io . realm ; 
 
 import android . content . Context ; 
 import android . test . AndroidTestCase ; 
 - import android . util . Log ; 
 
 import java . io . File ; 
 import java . io . IOException ; 
 - import java . security . MessageDigest ; 
 - import java . security . NoSuchAlgorithmException ; 
 import java . util . ArrayList ; 
 import java . util . Arrays ; 
 import java . util . Date ; 
 @ @ - 1499 , 7 + 1496 , 7 @ @ public class RealmTest extends AndroidTestCase { 
 } finally { 
 if ( reEncryptedRealm ! = null ) { 
 reEncryptedRealm . close ( ) ; 
 - boolean isDeleted = new File ( reEncryptedRealm . getPath ( ) ) . delete ( ) ; 
 + boolean isDeleted = new File ( reEncryptedRealm . getAbsolutePath ( ) ) . delete ( ) ; 
 if ( ! isDeleted ) { 
 fail ( ) ; 
 } 
 @ @ - 1520 , 7 + 1517 , 7 @ @ public class RealmTest extends AndroidTestCase { 
 } finally { 
 if ( decryptedRealm ! = null ) { 
 decryptedRealm . close ( ) ; 
 - boolean isDeleted = new File ( decryptedRealm . getPath ( ) ) . delete ( ) ; 
 + boolean isDeleted = new File ( decryptedRealm . getAbsolutePath ( ) ) . delete ( ) ; 
 if ( ! isDeleted ) { 
 fail ( ) ; 
 } 
 @ @ - 1529 , 7 + 1526 , 7 @ @ public class RealmTest extends AndroidTestCase { 
 } finally { 
 if ( encryptedRealm ! = null ) { 
 encryptedRealm . close ( ) ; 
 - boolean isDeleted = new File ( encryptedRealm . getPath ( ) ) . delete ( ) ; 
 + boolean isDeleted = new File ( encryptedRealm . getAbsolutePath ( ) ) . delete ( ) ; 
 if ( ! isDeleted ) { 
 fail ( ) ; 
 } 
 diff - - git a / realm / src / main / java / io / realm / Realm . java b / realm / src / main / java / io / realm / Realm . java 
 index 3fa94a6 . . f6fdd27 100644 
 - - - a / realm / src / main / java / io / realm / Realm . java 
 + + + b / realm / src / main / java / io / realm / Realm . java 
 @ @ - 25 , 7 + 25 , 6 @ @ import android . os . Looper ; 
 import android . os . Message ; 
 import android . util . JsonReader ; 
 
 - import org . jetbrains . annotations . NotNull ; 
 import org . json . JSONArray ; 
 import org . json . JSONException ; 
 import org . json . JSONObject ; 
 @ @ - 157 , 8 + 156 , 7 @ @ public final class Realm implements Closeable { 
 private Handler handler ; 
 
 private final byte [ ] key ; 
 - private final String id ; 
 - private final String path ; 
 + private final String absolutePath ; 
 private SharedGroup sharedGroup ; 
 private final ImplicitTransaction transaction ; 
 private final RealmJson realmJson = getRealmJson ( ) ; 
 @ @ - 189 , 7 + 187 , 7 @ @ public final class Realm implements Closeable { 
 } 
 
 / / Check if we are in the right thread 
 - Realm currentRealm = realmsCache . get ( ) . get ( this . id ) ; 
 + Realm currentRealm = realmsCache . get ( ) . get ( absolutePath ) ; 
 if ( currentRealm ! = this ) { 
 throw new IllegalStateException ( INCORRECT _ THREAD _ MESSAGE ) ; 
 } 
 @ @ - 202 , 9 + 200 , 8 @ @ public final class Realm implements Closeable { 
 } 
 this . sharedGroup = new SharedGroup ( absolutePath , true , key ) ; 
 this . transaction = sharedGroup . beginImplicitTransaction ( ) ; 
 - this . path = absolutePath ; 
 + this . absolutePath = absolutePath ; 
 this . key = key ; 
 - this . id = absolutePath ; 
 setAutoRefresh ( autoRefresh ) ; 
 } 
 
 @ @ - 212 , 7 + 209 , 7 @ @ public final class Realm implements Closeable { 
 protected void finalize ( ) throws Throwable { 
 if ( sharedGroup ! = null ) { 
 RealmLog . w ( " Remember to call close ( ) on all Realm instances . " + 
 - " Realm " + path + " is being finalized without being closed , " + 
 + " Realm " + absolutePath + " is being finalized without being closed , " + 
 " this can lead to running out of native memory . " 
 ) ; 
 } 
 @ @ - 228 , 23 + 225 , 23 @ @ public final class Realm implements Closeable { 
 @ Override 
 public void close ( ) { 
 Map < String , Integer > localRefCount = referenceCount . get ( ) ; 
 - Integer references = localRefCount . get ( id ) ; 
 + Integer references = localRefCount . get ( absolutePath ) ; 
 if ( references = = null ) { 
 references = 0 ; 
 } 
 if ( sharedGroup ! = null & & references = = 1 ) { 
 - realmsCache . get ( ) . remove ( id ) ; 
 + realmsCache . get ( ) . remove ( absolutePath ) ; 
 sharedGroup . close ( ) ; 
 sharedGroup = null ; 
 - AtomicInteger counter = openRealms . get ( id ) ; 
 + AtomicInteger counter = openRealms . get ( absolutePath ) ; 
 counter . decrementAndGet ( ) ; 
 } 
 
 int refCount = references - 1 ; 
 if ( refCount < 0 ) { 
 - RealmLog . w ( " Calling close ( ) on a Realm that is already closed : " + getPath ( ) ) ; 
 + RealmLog . w ( " Calling close ( ) on a Realm that is already closed : " + getAbsolutePath ( ) ) ; 
 } 
 - localRefCount . put ( id , Math . max ( 0 , refCount ) ) ; 
 + localRefCount . put ( absolutePath , Math . max ( 0 , refCount ) ) ; 
 
 if ( handler ! = null & & refCount < = 0 ) { 
 removeHandler ( handler ) ; 
 @ @ - 310 , 7 + 307 , 7 @ @ public final class Realm implements Closeable { 
 
 if ( autoRefresh & & ! this . autoRefresh ) { / / Switch it on 
 handler = new Handler ( new RealmCallback ( ) ) ; 
 - handlers . put ( handler , id ) ; 
 + handlers . put ( handler , absolutePath ) ; 
 } else if ( ! autoRefresh & & this . autoRefresh & & handler ! = null ) { / / Switch it off 
 removeHandler ( handler ) ; 
 } 
 @ @ - 1469 , 9 + 1466 , 9 @ @ public final class Realm implements Closeable { 
 
 for ( Map . Entry < Handler , String > handlerIntegerEntry : handlers . entrySet ( ) ) { 
 Handler handler = handlerIntegerEntry . getKey ( ) ; 
 - String realmId = handlerIntegerEntry . getValue ( ) ; 
 + String realmPath = handlerIntegerEntry . getValue ( ) ; 
 if ( 
 - realmId . equals ( id ) / / It ' s the right realm 
 + realmPath . equals ( absolutePath ) / / It ' s the right realm 
 & & ! handler . hasMessages ( REALM _ CHANGED ) / / The right message 
 & & handler . getLooper ( ) . getThread ( ) . isAlive ( ) / / The receiving thread is alive 
 & & ! handler . equals ( this . handler ) / / Don ' t notify yourself 
 @ @ - 1532 , 14 + 1529 , 10 @ @ public final class Realm implements Closeable { 
 getTable ( classSpec ) . clear ( ) ; 
 } 
 
 - String getId ( ) { 
 - return id ; 
 - } 
 - 
 / / Returns the Handler for this Realm on the calling thread 
 Handler getHandler ( ) { 
 for ( Map . Entry < Handler , String > entry : handlers . entrySet ( ) ) { 
 - if ( entry . getValue ( ) . equals ( id ) ) { 
 + if ( entry . getValue ( ) . equals ( absolutePath ) ) { 
 return entry . getKey ( ) ; 
 } 
 } 
 @ @ - 1781 , 14 + 1774 , 23 @ @ public final class Realm implements Closeable { 
 } 
 
 / * * 
 - * Returns the absolute path to where this Realm is persisted on disk . 
 + * Use { @ link # getAbsolutePath ( ) } instead . 
 * 
 * @ return The absolute path to the Realm file . 
 * / 
 + @ Deprecated 
 public String getPath ( ) { 
 - return path ; 
 + return absolutePath ; 
 } 
 
 + / * * 
 + * Returns the absolute path to where this Realm is persisted on disk . 
 + * 
 + * @ return The absolute path to the Realm file . 
 + * / 
 + public String getAbsolutePath ( ) { 
 + return absolutePath ; 
 + } 
 
 / * * 
 * Override the standard behavior of all classes extended RealmObject being part of the schema .
