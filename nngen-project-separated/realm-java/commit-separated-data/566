BLEU SCORE: 0.04767707020457096

TEST MSG: Downgrade to Sync - 1 . 3 - BETA
GENERATED MSG: Compacting encrypted Realms is working .

TEST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index cfc36df . . f11ff0b 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 9 , 7 + 9 , 7 @ @ <nl> <nl> # # Internal <nl> <nl> - * Upgraded to Realm Core 2 . 1 . 0 / Realm Sync 2 . 0 - BETA <nl> + * Upgraded to Realm Core 2 . 0 . 1 / Realm Sync 1 . 3 - BETA <nl> <nl> # # 2 . 0 . 0 <nl> <nl> diff - - git a / dependencies . list b / dependencies . list <nl> index a7943dc . . 4ebb448 100644 <nl> - - - a / dependencies . list <nl> + + + b / dependencies . list <nl> @ @ - 1 , 2 + 1 , 2 @ @ <nl> - REALM _ SYNC _ VERSION = 1 . 0 . 0 - BETA - 2 . 0 <nl> - REALM _ SYNC _ SHA256 = c7eb59576b28373283e94dafe42737015657cb0deac435a66c28fc74629ce721 <nl> + REALM _ SYNC _ VERSION = 1 . 0 . 0 - BETA - 1 . 3 <nl> + REALM _ SYNC _ SHA256 = dfb527d58d3aa1b1044b8676a9e0fae60d38811e451cb04ae71376835f0acab4 <nl> diff - - git a / realm / realm - library / src / main / cpp / object - store b / realm / realm - library / src / main / cpp / object - store <nl> index c5135a5 . . a0ab785 160000 <nl> - - - a / realm / realm - library / src / main / cpp / object - store <nl> + + + b / realm / realm - library / src / main / cpp / object - store <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit c5135a5935765fa8993fc1b796ef5ed7da609cdf <nl> + Subproject commit a0ab785896b3e362e9703c798b8db729a49c9fda
NEAREST DIFF (one line): diff - - git a / CHANGELOG . md b / CHANGELOG . md <nl> index 4627bcd . . cdede1b 100644 <nl> - - - a / CHANGELOG . md <nl> + + + b / CHANGELOG . md <nl> @ @ - 1 , 3 + 1 , 9 @ @ <nl> + # # 2 . 0 . 1 <nl> + <nl> + # # # Enhancement <nl> + <nl> + * ` Realm . compactRealm ( ) ` works for encrypted Realms . <nl> + <nl> # # 2 . 0 . 0 <nl> <nl> This release introduces support for the Realm Mobile Platform ! <nl> diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> index a920574 . . fa5f8f6 100644 <nl> - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java <nl> @ @ - 982 , 27 + 982 , 26 @ @ public class RealmTests { <nl> RealmConfiguration realmConfig = configFactory . createConfiguration ( " enc . realm " , TestHelper . getRandomKey ( ) ) ; <nl> Realm realm = Realm . getInstance ( realmConfig ) ; <nl> realm . close ( ) ; <nl> - / / TODO : remove try / catch block when compacting encrypted Realms is supported <nl> - try { <nl> - assertTrue ( Realm . compactRealm ( realmConfig ) ) ; <nl> - fail ( ) ; <nl> - } catch ( IllegalArgumentException expected ) { <nl> - } <nl> + assertTrue ( Realm . compactRealm ( realmConfig ) ) ; <nl> + realm = Realm . getInstance ( realmConfig ) ; <nl> + assertFalse ( realm . isClosed ( ) ) ; <nl> + assertTrue ( realm . isEmpty ( ) ) ; <nl> + realm . close ( ) ; <nl> } <nl> <nl> @ Test <nl> public void compactRealm _ encryptedPopulatedRealm ( ) { <nl> + final int DATA _ SIZE = 100 ; <nl> RealmConfiguration realmConfig = configFactory . createConfiguration ( " enc . realm " , TestHelper . getRandomKey ( ) ) ; <nl> Realm realm = Realm . getInstance ( realmConfig ) ; <nl> <nl> - populateTestRealm ( realm , 100 ) ; <nl> + populateTestRealm ( realm , DATA _ SIZE ) ; <nl> + realm . close ( ) ; <nl> + assertTrue ( Realm . compactRealm ( realmConfig ) ) ; <nl> + realm = Realm . getInstance ( realmConfig ) ; <nl> + assertFalse ( realm . isClosed ( ) ) ; <nl> + assertEquals ( DATA _ SIZE , realm . where ( AllTypes . class ) . count ( ) ) ; <nl> realm . close ( ) ; <nl> - / / TODO : remove try / catch block when compacting encrypted Realms is supported <nl> - try { <nl> - assertTrue ( Realm . compactRealm ( realmConfig ) ) ; <nl> - fail ( ) ; <nl> - } catch ( IllegalArgumentException expected ) { <nl> - } <nl> } <nl> <nl> @ Test <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> index cc1d89d . . d3dc068 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java <nl> @ @ - 583 , 10 + 583 , 6 @ @ abstract class BaseRealm implements Closeable { <nl> * @ return { @ code true } if compaction succeeded , { @ code false } otherwise . <nl> * / <nl> static boolean compactRealm ( final RealmConfiguration configuration ) { <nl> - / / https : / / github . com / realm / realm - java / issues / 1033 <nl> - if ( configuration . getEncryptionKey ( ) ! = null ) { <nl> - throw new IllegalArgumentException ( " Cannot currently compact an encrypted Realm . " ) ; <nl> - } <nl> SharedRealm sharedRealm = SharedRealm . getInstance ( configuration ) ; <nl> Boolean result = sharedRealm . compact ( ) ; <nl> sharedRealm . close ( ) ;

TEST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index cfc36df . . f11ff0b 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 9 , 7 + 9 , 7 @ @ 
 
 # # Internal 
 
 - * Upgraded to Realm Core 2 . 1 . 0 / Realm Sync 2 . 0 - BETA 
 + * Upgraded to Realm Core 2 . 0 . 1 / Realm Sync 1 . 3 - BETA 
 
 # # 2 . 0 . 0 
 
 diff - - git a / dependencies . list b / dependencies . list 
 index a7943dc . . 4ebb448 100644 
 - - - a / dependencies . list 
 + + + b / dependencies . list 
 @ @ - 1 , 2 + 1 , 2 @ @ 
 - REALM _ SYNC _ VERSION = 1 . 0 . 0 - BETA - 2 . 0 
 - REALM _ SYNC _ SHA256 = c7eb59576b28373283e94dafe42737015657cb0deac435a66c28fc74629ce721 
 + REALM _ SYNC _ VERSION = 1 . 0 . 0 - BETA - 1 . 3 
 + REALM _ SYNC _ SHA256 = dfb527d58d3aa1b1044b8676a9e0fae60d38811e451cb04ae71376835f0acab4 
 diff - - git a / realm / realm - library / src / main / cpp / object - store b / realm / realm - library / src / main / cpp / object - store 
 index c5135a5 . . a0ab785 160000 
 - - - a / realm / realm - library / src / main / cpp / object - store 
 + + + b / realm / realm - library / src / main / cpp / object - store 
 @ @ - 1 + 1 @ @ 
 - Subproject commit c5135a5935765fa8993fc1b796ef5ed7da609cdf 
 + Subproject commit a0ab785896b3e362e9703c798b8db729a49c9fda

NEAREST DIFF:
diff - - git a / CHANGELOG . md b / CHANGELOG . md 
 index 4627bcd . . cdede1b 100644 
 - - - a / CHANGELOG . md 
 + + + b / CHANGELOG . md 
 @ @ - 1 , 3 + 1 , 9 @ @ 
 + # # 2 . 0 . 1 
 + 
 + # # # Enhancement 
 + 
 + * ` Realm . compactRealm ( ) ` works for encrypted Realms . 
 + 
 # # 2 . 0 . 0 
 
 This release introduces support for the Realm Mobile Platform ! 
 diff - - git a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 index a920574 . . fa5f8f6 100644 
 - - - a / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 + + + b / realm / realm - library / src / androidTest / java / io / realm / RealmTests . java 
 @ @ - 982 , 27 + 982 , 26 @ @ public class RealmTests { 
 RealmConfiguration realmConfig = configFactory . createConfiguration ( " enc . realm " , TestHelper . getRandomKey ( ) ) ; 
 Realm realm = Realm . getInstance ( realmConfig ) ; 
 realm . close ( ) ; 
 - / / TODO : remove try / catch block when compacting encrypted Realms is supported 
 - try { 
 - assertTrue ( Realm . compactRealm ( realmConfig ) ) ; 
 - fail ( ) ; 
 - } catch ( IllegalArgumentException expected ) { 
 - } 
 + assertTrue ( Realm . compactRealm ( realmConfig ) ) ; 
 + realm = Realm . getInstance ( realmConfig ) ; 
 + assertFalse ( realm . isClosed ( ) ) ; 
 + assertTrue ( realm . isEmpty ( ) ) ; 
 + realm . close ( ) ; 
 } 
 
 @ Test 
 public void compactRealm _ encryptedPopulatedRealm ( ) { 
 + final int DATA _ SIZE = 100 ; 
 RealmConfiguration realmConfig = configFactory . createConfiguration ( " enc . realm " , TestHelper . getRandomKey ( ) ) ; 
 Realm realm = Realm . getInstance ( realmConfig ) ; 
 
 - populateTestRealm ( realm , 100 ) ; 
 + populateTestRealm ( realm , DATA _ SIZE ) ; 
 + realm . close ( ) ; 
 + assertTrue ( Realm . compactRealm ( realmConfig ) ) ; 
 + realm = Realm . getInstance ( realmConfig ) ; 
 + assertFalse ( realm . isClosed ( ) ) ; 
 + assertEquals ( DATA _ SIZE , realm . where ( AllTypes . class ) . count ( ) ) ; 
 realm . close ( ) ; 
 - / / TODO : remove try / catch block when compacting encrypted Realms is supported 
 - try { 
 - assertTrue ( Realm . compactRealm ( realmConfig ) ) ; 
 - fail ( ) ; 
 - } catch ( IllegalArgumentException expected ) { 
 - } 
 } 
 
 @ Test 
 diff - - git a / realm / realm - library / src / main / java / io / realm / BaseRealm . java b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 index cc1d89d . . d3dc068 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 + + + b / realm / realm - library / src / main / java / io / realm / BaseRealm . java 
 @ @ - 583 , 10 + 583 , 6 @ @ abstract class BaseRealm implements Closeable { 
 * @ return { @ code true } if compaction succeeded , { @ code false } otherwise . 
 * / 
 static boolean compactRealm ( final RealmConfiguration configuration ) { 
 - / / https : / / github . com / realm / realm - java / issues / 1033 
 - if ( configuration . getEncryptionKey ( ) ! = null ) { 
 - throw new IllegalArgumentException ( " Cannot currently compact an encrypted Realm . " ) ; 
 - } 
 SharedRealm sharedRealm = SharedRealm . getInstance ( configuration ) ; 
 Boolean result = sharedRealm . compact ( ) ; 
 sharedRealm . close ( ) ;
