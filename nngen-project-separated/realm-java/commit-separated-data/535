BLEU SCORE: 0.040583489434387374

TEST MSG: Set native library version to ReLinker
GENERATED MSG: PR feedback

TEST DIFF (one line): diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle <nl> index 35bd90b . . a0200c1 100644 <nl> - - - a / realm / realm - library / build . gradle <nl> + + + b / realm / realm - library / build . gradle <nl> @ @ - 39 , 6 + 39 , 7 @ @ android { <nl> defaultConfig { <nl> minSdkVersion 9 <nl> targetSdkVersion 24 <nl> + versionName version <nl> project . archivesBaseName = " realm - android - library " <nl> testInstrumentationRunner " android . support . test . runner . AndroidJUnitRunner " <nl> externalNativeBuild { <nl> diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java <nl> index 1890f18 . . 496aa18 100644 <nl> - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java <nl> + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java <nl> @ @ - 26 , 6 + 26 , 8 @ @ import java . lang . reflect . Field ; <nl> import java . lang . reflect . InvocationTargetException ; <nl> import java . util . Locale ; <nl> <nl> + import io . realm . BuildConfig ; <nl> + <nl> / * * <nl> * Utility methods for Realm Core . <nl> * / <nl> @ @ - 56 , 7 + 58 , 7 @ @ public class RealmCore { <nl> if ( libraryIsLoaded ) { <nl> return ; <nl> } <nl> - ReLinker . loadLibrary ( context , " realm - jni " ) ; <nl> + ReLinker . loadLibrary ( context , " realm - jni " , BuildConfig . VERSION _ NAME ) ; <nl> libraryIsLoaded = true ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / realm / src / main / java / io / realm / RealmTableOrViewList . java b / realm / src / main / java / io / realm / RealmTableOrViewList . java <nl> index 8c20e37 . . b955644 100644 <nl> - - - a / realm / src / main / java / io / realm / RealmTableOrViewList . java <nl> + + + b / realm / src / main / java / io / realm / RealmTableOrViewList . java <nl> @ @ - 23 , 7 + 23 , 6 @ @ import java . util . Map ; <nl> <nl> import io . realm . internal . TableOrView ; <nl> import io . realm . internal . TableView ; <nl> - import sun . reflect . generics . reflectiveObjects . NotImplementedException ; <nl> <nl> / * * <nl> * <nl> @ @ - 109 , 28 + 108 , 28 @ @ public class RealmTableOrViewList < E extends RealmObject > extends AbstractList < E > <nl> <nl> / / Sorting <nl> public static enum Order { <nl> - ascending , descending <nl> + ASCENDING , DESCENDING <nl> } <nl> <nl> / * * <nl> - * Get a sorted ( ascending ) RealmList from an existing RealmList . <nl> + * Get a sorted ( ASCENDING ) RealmList from an existing RealmList . <nl> * <nl> - * @ param propName The property name to sort by . <nl> + * @ param fieldName The field name to sort by . <nl> * @ return A sorted RealmList <nl> * / <nl> - public RealmList < E > sort ( String propName ) { <nl> - return sort ( propName , Order . ascending ) ; <nl> + public RealmList < E > sort ( String fieldName ) { <nl> + return sort ( fieldName , Order . ASCENDING ) ; <nl> } <nl> <nl> / * * <nl> * Get a sorted RealmList from an existing RealmList . <nl> * <nl> - * @ param propName The property name to sort by . <nl> + * @ param fieldName The field name to sort by . <nl> * @ param sortOrder The direction to sort by . <nl> * @ return A sorted RealmList . <nl> * / <nl> - public RealmList < E > sort ( String propName , Order sortOrder ) { <nl> - throw new NotImplementedException ( ) ; <nl> + public RealmList < E > sort ( String fieldName , Order sortOrder ) { <nl> + throw new NoSuchMethodError ( ) ; <nl> } <nl> <nl> <nl> @ @ - 158 , 7 + 157 , 7 @ @ public class RealmTableOrViewList < E extends RealmObject > extends AbstractList < E > <nl> } <nl> <nl> / * * <nl> - * Removes all objects from an RealmList . <nl> + * Removes all objects from a RealmList . <nl> * <nl> * / <nl> public void clear ( ) { <nl> @ @ - 174 , 18 + 173 , 19 @ @ public class RealmTableOrViewList < E extends RealmObject > extends AbstractList < E > <nl> * @ param element The object to add . <nl> * @ return true if object was added . <nl> * / <nl> + @ Override <nl> public boolean add ( E element ) { <nl> - throw new NotImplementedException ( ) ; <nl> + throw new NoSuchMethodError ( ) ; <nl> } <nl> <nl> / * * <nl> * Add an object <nl> * <nl> - * @ param index The place to add the object at . <nl> + * @ param index The array index to add the object at . <nl> * @ param element The object to add . <nl> * / <nl> public void add ( int index , E element ) { <nl> - throw new NotImplementedException ( ) ; <nl> + throw new NoSuchMethodError ( ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 195 , 6 + 195 , 6 @ @ public class RealmTableOrViewList < E extends RealmObject > extends AbstractList < E > <nl> * @ param element An object . <nl> * / <nl> public void replace ( int index , E element ) { <nl> - throw new NotImplementedException ( ) ; <nl> + throw new NoSuchMethodError ( ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / realm / realm - library / build . gradle b / realm / realm - library / build . gradle 
 index 35bd90b . . a0200c1 100644 
 - - - a / realm / realm - library / build . gradle 
 + + + b / realm / realm - library / build . gradle 
 @ @ - 39 , 6 + 39 , 7 @ @ android { 
 defaultConfig { 
 minSdkVersion 9 
 targetSdkVersion 24 
 + versionName version 
 project . archivesBaseName = " realm - android - library " 
 testInstrumentationRunner " android . support . test . runner . AndroidJUnitRunner " 
 externalNativeBuild { 
 diff - - git a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java 
 index 1890f18 . . 496aa18 100644 
 - - - a / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java 
 + + + b / realm / realm - library / src / main / java / io / realm / internal / RealmCore . java 
 @ @ - 26 , 6 + 26 , 8 @ @ import java . lang . reflect . Field ; 
 import java . lang . reflect . InvocationTargetException ; 
 import java . util . Locale ; 
 
 + import io . realm . BuildConfig ; 
 + 
 / * * 
 * Utility methods for Realm Core . 
 * / 
 @ @ - 56 , 7 + 58 , 7 @ @ public class RealmCore { 
 if ( libraryIsLoaded ) { 
 return ; 
 } 
 - ReLinker . loadLibrary ( context , " realm - jni " ) ; 
 + ReLinker . loadLibrary ( context , " realm - jni " , BuildConfig . VERSION _ NAME ) ; 
 libraryIsLoaded = true ; 
 } 


NEAREST DIFF:
diff - - git a / realm / src / main / java / io / realm / RealmTableOrViewList . java b / realm / src / main / java / io / realm / RealmTableOrViewList . java 
 index 8c20e37 . . b955644 100644 
 - - - a / realm / src / main / java / io / realm / RealmTableOrViewList . java 
 + + + b / realm / src / main / java / io / realm / RealmTableOrViewList . java 
 @ @ - 23 , 7 + 23 , 6 @ @ import java . util . Map ; 
 
 import io . realm . internal . TableOrView ; 
 import io . realm . internal . TableView ; 
 - import sun . reflect . generics . reflectiveObjects . NotImplementedException ; 
 
 / * * 
 * 
 @ @ - 109 , 28 + 108 , 28 @ @ public class RealmTableOrViewList < E extends RealmObject > extends AbstractList < E > 
 
 / / Sorting 
 public static enum Order { 
 - ascending , descending 
 + ASCENDING , DESCENDING 
 } 
 
 / * * 
 - * Get a sorted ( ascending ) RealmList from an existing RealmList . 
 + * Get a sorted ( ASCENDING ) RealmList from an existing RealmList . 
 * 
 - * @ param propName The property name to sort by . 
 + * @ param fieldName The field name to sort by . 
 * @ return A sorted RealmList 
 * / 
 - public RealmList < E > sort ( String propName ) { 
 - return sort ( propName , Order . ascending ) ; 
 + public RealmList < E > sort ( String fieldName ) { 
 + return sort ( fieldName , Order . ASCENDING ) ; 
 } 
 
 / * * 
 * Get a sorted RealmList from an existing RealmList . 
 * 
 - * @ param propName The property name to sort by . 
 + * @ param fieldName The field name to sort by . 
 * @ param sortOrder The direction to sort by . 
 * @ return A sorted RealmList . 
 * / 
 - public RealmList < E > sort ( String propName , Order sortOrder ) { 
 - throw new NotImplementedException ( ) ; 
 + public RealmList < E > sort ( String fieldName , Order sortOrder ) { 
 + throw new NoSuchMethodError ( ) ; 
 } 
 
 
 @ @ - 158 , 7 + 157 , 7 @ @ public class RealmTableOrViewList < E extends RealmObject > extends AbstractList < E > 
 } 
 
 / * * 
 - * Removes all objects from an RealmList . 
 + * Removes all objects from a RealmList . 
 * 
 * / 
 public void clear ( ) { 
 @ @ - 174 , 18 + 173 , 19 @ @ public class RealmTableOrViewList < E extends RealmObject > extends AbstractList < E > 
 * @ param element The object to add . 
 * @ return true if object was added . 
 * / 
 + @ Override 
 public boolean add ( E element ) { 
 - throw new NotImplementedException ( ) ; 
 + throw new NoSuchMethodError ( ) ; 
 } 
 
 / * * 
 * Add an object 
 * 
 - * @ param index The place to add the object at . 
 + * @ param index The array index to add the object at . 
 * @ param element The object to add . 
 * / 
 public void add ( int index , E element ) { 
 - throw new NotImplementedException ( ) ; 
 + throw new NoSuchMethodError ( ) ; 
 } 
 
 / * * 
 @ @ - 195 , 6 + 195 , 6 @ @ public class RealmTableOrViewList < E extends RealmObject > extends AbstractList < E > 
 * @ param element An object . 
 * / 
 public void replace ( int index , E element ) { 
 - throw new NotImplementedException ( ) ; 
 + throw new NoSuchMethodError ( ) ; 
 } 
 }
