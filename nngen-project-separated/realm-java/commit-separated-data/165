BLEU SCORE: 0.013878957858167952

TEST MSG: Make CI more reliable
GENERATED MSG: Fix errors from login being wrapped in an UNKNOWN code .

TEST DIFF (one line): diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java <nl> index eb5c1a5 . . f2fb6af 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java <nl> @ @ - 7 , 7 + 7 , 6 @ @ import android . os . SystemClock ; <nl> import android . support . test . runner . AndroidJUnit4 ; <nl> <nl> import org . junit . Assert ; <nl> - import org . junit . Ignore ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> @ @ - 374 , 7 + 373 , 6 @ @ public class SyncSessionTests extends StandardIntegrationTest { <nl> <nl> / / A Realm that was opened before a user logged out should be able to resume downloading if the user logs back in . <nl> @ Test <nl> - @ Ignore ( " until https : / / github . com / realm / realm - java / issues / 5294 is fixed " ) <nl> public void downloadChangesWhenRealmOutOfScope ( ) throws InterruptedException { <nl> final String uniqueName = UUID . randomUUID ( ) . toString ( ) ; <nl> SyncCredentials credentials = SyncCredentials . usernamePassword ( uniqueName , " password " , true ) ; <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> index c938515 . . ba321be 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java <nl> @ @ - 155 , 6 + 155 , 7 @ @ public class SyncedRealmTests extends StandardIntegrationTest { <nl> / / needed to correctly test all error paths . <nl> @ Test <nl> @ RunTestInLooperThread <nl> + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5373 " ) <nl> public void waitForInitialData _ resilientInCaseOfRetriesAsync ( ) { <nl> SyncCredentials credentials = SyncCredentials . usernamePassword ( UUID . randomUUID ( ) . toString ( ) , " password " , true ) ; <nl> SyncUser user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java <nl> index 1414e39 . . ffb89ac 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import android . os . Handler ; <nl> import android . os . HandlerThread ; <nl> import android . support . test . runner . AndroidJUnit4 ; <nl> <nl> + import org . junit . Ignore ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> @ @ - 38 , 6 + 39 , 7 @ @ public class PartialSyncTests extends StandardIntegrationTest { <nl> public TestSyncConfigurationFactory configFactory = new TestSyncConfigurationFactory ( ) ; <nl> <nl> @ Test <nl> + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5375 " ) <nl> public void partialSync ( ) throws InterruptedException { <nl> SyncUser user = UserFactory . createUniqueUser ( Constants . AUTH _ URL ) ; <nl> SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; <nl> diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> index fe4eebf . . e4847f1 100644 <nl> - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ import android . os . Looper ; <nl> import android . support . test . runner . AndroidJUnit4 ; <nl> <nl> import org . junit . Before ; <nl> + import org . junit . Ignore ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> @ @ - 27 , 7 + 28 , 6 @ @ import org . junit . runner . RunWith ; <nl> import java . util . UUID ; <nl> import java . util . concurrent . atomic . AtomicInteger ; <nl> <nl> - import io . realm . BaseIntegrationTest ; <nl> import io . realm . Realm ; <nl> import io . realm . RealmChangeListener ; <nl> import io . realm . RealmResults ; <nl> @ @ - 104 , 6 + 104 , 7 @ @ public class ProcessCommitTests extends StandardIntegrationTest { <nl> @ Test <nl> @ RunTestInLooperThread <nl> @ RunTestWithRemoteService ( remoteService = SimpleCommitRemoteService . class , onLooperThread = true ) <nl> + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5376 " ) <nl> public void expectSimpleCommit ( ) { <nl> looperThread . runAfterTest ( remoteService . afterRunnable ) ; <nl> remoteService . createHandler ( Looper . myLooper ( ) ) ;
NEAREST DIFF (one line): diff - - git a / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java b / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java <nl> index bc274b8 . . 458bb29 100644 <nl> - - - a / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java <nl> + + + b / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java <nl> @ @ - 7 , 16 + 7 , 22 @ @ import org . json . JSONException ; <nl> import org . json . JSONObject ; <nl> import org . junit . Test ; <nl> import org . junit . runner . RunWith ; <nl> + import org . mockito . Mockito ; <nl> <nl> import java . net . URI ; <nl> import java . net . URISyntaxException ; <nl> + import java . net . URL ; <nl> <nl> import io . realm . internal . network . AuthenticateRequest ; <nl> + import io . realm . internal . network . AuthenticationServer ; <nl> import io . realm . internal . objectserver . Token ; <nl> import io . realm . util . SyncTestUtils ; <nl> <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . fail ; <nl> + import static org . mockito . Matchers . any ; <nl> + import static org . mockito . Mockito . when ; <nl> <nl> @ RunWith ( AndroidJUnit4 . class ) <nl> public class AuthenticateRequestTests { <nl> @ @ - 54 , 4 + 60 , 19 @ @ public class AuthenticateRequestTests { <nl> assertEquals ( t . value ( ) , obj . get ( " data " ) ) ; <nl> assertEquals ( " realm " , obj . get ( " provider " ) ) ; <nl> } <nl> + <nl> + <nl> + @ Test <nl> + public void errorsNotWrapped ( ) { <nl> + AuthenticationServer authServer = Mockito . mock ( AuthenticationServer . class ) ; <nl> + when ( authServer . loginUser ( any ( Credentials . class ) , any ( URL . class ) ) ) . thenReturn ( SyncTestUtils . createErrorResponse ( ErrorCode . ACCESS _ DENIED ) ) ; <nl> + SyncManager . setAuthServerImpl ( authServer ) ; <nl> + <nl> + try { <nl> + User . login ( Credentials . facebook ( " foo " ) , " http : / / foo . bar / auth " ) ; <nl> + fail ( ) ; <nl> + } catch ( ObjectServerError e ) { <nl> + assertEquals ( ErrorCode . ACCESS _ DENIED , e . getErrorCode ( ) ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java b / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java <nl> index 2fdd291 . . dda3944 100644 <nl> - - - a / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java <nl> + + + b / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java <nl> @ @ - 22 , 6 + 22 , 8 @ @ import org . json . JSONObject ; <nl> <nl> import java . util . UUID ; <nl> <nl> + import io . realm . ErrorCode ; <nl> + import io . realm . ObjectServerError ; <nl> import io . realm . User ; <nl> import io . realm . internal . network . AuthenticateResponse ; <nl> import io . realm . internal . objectserver . SyncUser ; <nl> @ @ - 79 , 4 + 81 , 8 @ @ public class SyncTestUtils { <nl> throw new RuntimeException ( e ) ; <nl> } <nl> } <nl> + <nl> + public static AuthenticateResponse createErrorResponse ( ErrorCode code ) { <nl> + return AuthenticateResponse . from ( new ObjectServerError ( code , " dummy " ) ) ; <nl> + } <nl> } <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / User . java b / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> index 439ea59 . . 2f84203 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / User . java <nl> @ @ - 126 , 6 + 126 , 7 @ @ public class User { <nl> } <nl> <nl> final AuthenticationServer server = SyncManager . getAuthServer ( ) ; <nl> + ObjectServerError error ; <nl> try { <nl> AuthenticateResponse result = server . loginUser ( credentials , authUrl ) ; <nl> if ( result . isValid ( ) ) { <nl> @ @ - 137 , 13 + 138 , 12 @ @ public class User { <nl> return user ; <nl> } else { <nl> RealmLog . info ( " Failed authenticating user . \ n % s " , result . getError ( ) ) ; <nl> - throw result . getError ( ) ; <nl> + error = result . getError ( ) ; <nl> } <nl> - } catch ( IOException e ) { <nl> - throw new ObjectServerError ( ErrorCode . IO _ EXCEPTION , e ) ; <nl> } catch ( Throwable e ) { <nl> throw new ObjectServerError ( ErrorCode . UNKNOWN , e ) ; <nl> } <nl> + throw error ; <nl> } <nl> <nl> / * * <nl> diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> index 919c1ed . . 2b5ae1e 100644 <nl> - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java <nl> @ @ - 52 , 7 + 52 , 7 @ @ public class OkHttpAuthenticationServer implements AuthenticationServer { <nl> String requestBody = AuthenticateRequest . userLogin ( credentials ) . toJson ( ) ; <nl> return authenticate ( authenticationUrl , requestBody ) ; <nl> } catch ( Exception e ) { <nl> - return AuthenticateResponse . from ( new ObjectServerError ( ErrorCode . OTHER _ ERROR , Util . getStackTrace ( e ) ) ) ; <nl> + return AuthenticateResponse . from ( new ObjectServerError ( ErrorCode . UNKNOWN , e ) ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java 
 index eb5c1a5 . . f2fb6af 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncSessionTests . java 
 @ @ - 7 , 7 + 7 , 6 @ @ import android . os . SystemClock ; 
 import android . support . test . runner . AndroidJUnit4 ; 
 
 import org . junit . Assert ; 
 - import org . junit . Ignore ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 @ @ - 374 , 7 + 373 , 6 @ @ public class SyncSessionTests extends StandardIntegrationTest { 
 
 / / A Realm that was opened before a user logged out should be able to resume downloading if the user logs back in . 
 @ Test 
 - @ Ignore ( " until https : / / github . com / realm / realm - java / issues / 5294 is fixed " ) 
 public void downloadChangesWhenRealmOutOfScope ( ) throws InterruptedException { 
 final String uniqueName = UUID . randomUUID ( ) . toString ( ) ; 
 SyncCredentials credentials = SyncCredentials . usernamePassword ( uniqueName , " password " , true ) ; 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 index c938515 . . ba321be 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / SyncedRealmTests . java 
 @ @ - 155 , 6 + 155 , 7 @ @ public class SyncedRealmTests extends StandardIntegrationTest { 
 / / needed to correctly test all error paths . 
 @ Test 
 @ RunTestInLooperThread 
 + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5373 " ) 
 public void waitForInitialData _ resilientInCaseOfRetriesAsync ( ) { 
 SyncCredentials credentials = SyncCredentials . usernamePassword ( UUID . randomUUID ( ) . toString ( ) , " password " , true ) ; 
 SyncUser user = SyncUser . login ( credentials , Constants . AUTH _ URL ) ; 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java 
 index 1414e39 . . ffb89ac 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / PartialSyncTests . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import android . os . Handler ; 
 import android . os . HandlerThread ; 
 import android . support . test . runner . AndroidJUnit4 ; 
 
 + import org . junit . Ignore ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 @ @ - 38 , 6 + 39 , 7 @ @ public class PartialSyncTests extends StandardIntegrationTest { 
 public TestSyncConfigurationFactory configFactory = new TestSyncConfigurationFactory ( ) ; 
 
 @ Test 
 + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5375 " ) 
 public void partialSync ( ) throws InterruptedException { 
 SyncUser user = UserFactory . createUniqueUser ( Constants . AUTH _ URL ) ; 
 SyncUser adminUser = UserFactory . createAdminUser ( Constants . AUTH _ URL ) ; 
 diff - - git a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 index fe4eebf . . e4847f1 100644 
 - - - a / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 + + + b / realm / realm - library / src / syncIntegrationTest / java / io / realm / objectserver / ProcessCommitTests . java 
 @ @ - 20 , 6 + 20 , 7 @ @ import android . os . Looper ; 
 import android . support . test . runner . AndroidJUnit4 ; 
 
 import org . junit . Before ; 
 + import org . junit . Ignore ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 @ @ - 27 , 7 + 28 , 6 @ @ import org . junit . runner . RunWith ; 
 import java . util . UUID ; 
 import java . util . concurrent . atomic . AtomicInteger ; 
 
 - import io . realm . BaseIntegrationTest ; 
 import io . realm . Realm ; 
 import io . realm . RealmChangeListener ; 
 import io . realm . RealmResults ; 
 @ @ - 104 , 6 + 104 , 7 @ @ public class ProcessCommitTests extends StandardIntegrationTest { 
 @ Test 
 @ RunTestInLooperThread 
 @ RunTestWithRemoteService ( remoteService = SimpleCommitRemoteService . class , onLooperThread = true ) 
 + @ Ignore ( " See https : / / github . com / realm / realm - java / issues / 5376 " ) 
 public void expectSimpleCommit ( ) { 
 looperThread . runAfterTest ( remoteService . afterRunnable ) ; 
 remoteService . createHandler ( Looper . myLooper ( ) ) ;

NEAREST DIFF:
diff - - git a / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java b / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java 
 index bc274b8 . . 458bb29 100644 
 - - - a / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java 
 + + + b / realm / realm - library / src / androidTestobjectServer / java / io / realm / AuthenticateRequestTests . java 
 @ @ - 7 , 16 + 7 , 22 @ @ import org . json . JSONException ; 
 import org . json . JSONObject ; 
 import org . junit . Test ; 
 import org . junit . runner . RunWith ; 
 + import org . mockito . Mockito ; 
 
 import java . net . URI ; 
 import java . net . URISyntaxException ; 
 + import java . net . URL ; 
 
 import io . realm . internal . network . AuthenticateRequest ; 
 + import io . realm . internal . network . AuthenticationServer ; 
 import io . realm . internal . objectserver . Token ; 
 import io . realm . util . SyncTestUtils ; 
 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertFalse ; 
 + import static org . junit . Assert . fail ; 
 + import static org . mockito . Matchers . any ; 
 + import static org . mockito . Mockito . when ; 
 
 @ RunWith ( AndroidJUnit4 . class ) 
 public class AuthenticateRequestTests { 
 @ @ - 54 , 4 + 60 , 19 @ @ public class AuthenticateRequestTests { 
 assertEquals ( t . value ( ) , obj . get ( " data " ) ) ; 
 assertEquals ( " realm " , obj . get ( " provider " ) ) ; 
 } 
 + 
 + 
 + @ Test 
 + public void errorsNotWrapped ( ) { 
 + AuthenticationServer authServer = Mockito . mock ( AuthenticationServer . class ) ; 
 + when ( authServer . loginUser ( any ( Credentials . class ) , any ( URL . class ) ) ) . thenReturn ( SyncTestUtils . createErrorResponse ( ErrorCode . ACCESS _ DENIED ) ) ; 
 + SyncManager . setAuthServerImpl ( authServer ) ; 
 + 
 + try { 
 + User . login ( Credentials . facebook ( " foo " ) , " http : / / foo . bar / auth " ) ; 
 + fail ( ) ; 
 + } catch ( ObjectServerError e ) { 
 + assertEquals ( ErrorCode . ACCESS _ DENIED , e . getErrorCode ( ) ) ; 
 + } 
 + } 
 } 
 diff - - git a / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java b / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java 
 index 2fdd291 . . dda3944 100644 
 - - - a / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java 
 + + + b / realm / realm - library / src / androidTestobjectServer / java / io / realm / util / SyncTestUtils . java 
 @ @ - 22 , 6 + 22 , 8 @ @ import org . json . JSONObject ; 
 
 import java . util . UUID ; 
 
 + import io . realm . ErrorCode ; 
 + import io . realm . ObjectServerError ; 
 import io . realm . User ; 
 import io . realm . internal . network . AuthenticateResponse ; 
 import io . realm . internal . objectserver . SyncUser ; 
 @ @ - 79 , 4 + 81 , 8 @ @ public class SyncTestUtils { 
 throw new RuntimeException ( e ) ; 
 } 
 } 
 + 
 + public static AuthenticateResponse createErrorResponse ( ErrorCode code ) { 
 + return AuthenticateResponse . from ( new ObjectServerError ( code , " dummy " ) ) ; 
 + } 
 } 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / User . java b / realm / realm - library / src / objectServer / java / io / realm / User . java 
 index 439ea59 . . 2f84203 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / User . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / User . java 
 @ @ - 126 , 6 + 126 , 7 @ @ public class User { 
 } 
 
 final AuthenticationServer server = SyncManager . getAuthServer ( ) ; 
 + ObjectServerError error ; 
 try { 
 AuthenticateResponse result = server . loginUser ( credentials , authUrl ) ; 
 if ( result . isValid ( ) ) { 
 @ @ - 137 , 13 + 138 , 12 @ @ public class User { 
 return user ; 
 } else { 
 RealmLog . info ( " Failed authenticating user . \ n % s " , result . getError ( ) ) ; 
 - throw result . getError ( ) ; 
 + error = result . getError ( ) ; 
 } 
 - } catch ( IOException e ) { 
 - throw new ObjectServerError ( ErrorCode . IO _ EXCEPTION , e ) ; 
 } catch ( Throwable e ) { 
 throw new ObjectServerError ( ErrorCode . UNKNOWN , e ) ; 
 } 
 + throw error ; 
 } 
 
 / * * 
 diff - - git a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 index 919c1ed . . 2b5ae1e 100644 
 - - - a / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 + + + b / realm / realm - library / src / objectServer / java / io / realm / internal / network / OkHttpAuthenticationServer . java 
 @ @ - 52 , 7 + 52 , 7 @ @ public class OkHttpAuthenticationServer implements AuthenticationServer { 
 String requestBody = AuthenticateRequest . userLogin ( credentials ) . toJson ( ) ; 
 return authenticate ( authenticationUrl , requestBody ) ; 
 } catch ( Exception e ) { 
 - return AuthenticateResponse . from ( new ObjectServerError ( ErrorCode . OTHER _ ERROR , Util . getStackTrace ( e ) ) ) ; 
 + return AuthenticateResponse . from ( new ObjectServerError ( ErrorCode . UNKNOWN , e ) ) ; 
 } 
 } 

