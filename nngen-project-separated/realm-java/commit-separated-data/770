BLEU SCORE: 0.016934096677198085

TEST MSG: remove runtime dependency to com . android . tools . build : gradle : 1 . 5 . 0 and add version check of android gradle plugin instead .
GENERATED MSG: Add unit tests for " realm - android " plugin .

TEST DIFF (one line): diff - - git a / gradle - plugin / build . gradle b / gradle - plugin / build . gradle <nl> index 2aab118 . . 7816f43 100644 <nl> - - - a / gradle - plugin / build . gradle <nl> + + + b / gradle - plugin / build . gradle <nl> @ @ - 31 , 12 + 31 , 23 @ @ targetCompatibility = 1 . 6 <nl> group = ' io . realm ' <nl> version = file ( " $ { projectDir } / . . / version . txt " ) . text . trim ( ) ; <nl> <nl> + configurations { <nl> + provided <nl> + compile . extendsFrom provided <nl> + } <nl> + <nl> + sourceSets { <nl> + main { <nl> + compileClasspath + = configurations . provided <nl> + } <nl> + } <nl> + <nl> dependencies { <nl> compile gradleApi ( ) <nl> compile localGroovy ( ) <nl> compile " io . realm : realm - transformer : $ { version } " <nl> compile ' com . neenbedankt . gradle . plugins : android - apt : 1 . 8 ' <nl> - compile ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + provided ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> <nl> testCompile gradleTestKit ( ) <nl> testCompile ' junit : junit : 4 . 12 ' <nl> diff - - git a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> index c97b4de . . f5f9419 100644 <nl> - - - a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> + + + b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> @ @ - 35 , 6 + 35 , 10 @ @ class Realm implements Plugin < Project > { <nl> throw new GradleException ( " ' com . android . application ' or ' com . android . library ' plugin required . " ) <nl> } <nl> <nl> + if ( ! isTransformAvailable ( ) ) { <nl> + throw new GradleException ( ' Realm gradle plugin only supports android gradle plugin 1 . 5 . 0 or later . ' ) <nl> + } <nl> + <nl> def isKotlinProject = project . plugins . find { <nl> it . getClass ( ) . name = = ' org . jetbrains . kotlin . gradle . plugin . KotlinAndroidPluginWrapper ' <nl> } <nl> @ @ - 56 , 4 + 60 , 13 @ @ class Realm implements Plugin < Project > { <nl> project . dependencies . add ( " apt " , " io . realm : realm - annotations - processor : $ { Version . VERSION } " ) <nl> } <nl> } <nl> + <nl> + private static boolean isTransformAvailable ( ) { <nl> + try { <nl> + Class . forName ( ' com . android . build . api . transform . Transform ' ) <nl> + return true <nl> + } catch ( Exception ignored ) { <nl> + return false <nl> + } <nl> + } <nl> } <nl> diff - - git a / realm - transformer / build . gradle b / realm - transformer / build . gradle <nl> index 9e76360 . . 750693d 100644 <nl> - - - a / realm - transformer / build . gradle <nl> + + + b / realm - transformer / build . gradle <nl> @ @ - 25 , 11 + 25 , 22 @ @ repositories { <nl> jcenter ( ) <nl> } <nl> <nl> + configurations { <nl> + provided <nl> + compile . extendsFrom provided <nl> + } <nl> + <nl> + sourceSets { <nl> + main { <nl> + compileClasspath + = configurations . provided <nl> + } <nl> + } <nl> + <nl> dependencies { <nl> compile localGroovy ( ) <nl> compile gradleApi ( ) <nl> compile " io . realm : realm - annotations : $ { version } " <nl> - compile ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + provided ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> compile ' org . javassist : javassist : 3 . 20 . 0 - GA ' <nl> <nl> testCompile ( ' org . spockframework : spock - core : 1 . 0 - groovy - 2 . 4 ' ) {
NEAREST DIFF (one line): diff - - git a / gradle - plugin / build . gradle b / gradle - plugin / build . gradle <nl> index c21be4b . . d3f9607 100644 <nl> - - - a / gradle - plugin / build . gradle <nl> + + + b / gradle - plugin / build . gradle <nl> @ @ - 32 , 6 + 32 , 8 @ @ dependencies { <nl> testCompile ( ' org . spockframework : spock - core : 1 . 0 - groovy - 2 . 4 ' ) { <nl> exclude module : ' groovy - all ' <nl> } <nl> + testCompile gradleTestKit ( ) <nl> + testCompile ' junit : junit : 4 . 12 ' <nl> } <nl> <nl> / / for Ant filter <nl> diff - - git a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> index 9490f5b . . 1d92b11 100644 <nl> - - - a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> + + + b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy <nl> @ @ - 16 , 7 + 16 , 7 @ @ class Realm implements Plugin < Project > { <nl> def isAndroidApp = project . plugins . withType ( AppPlugin ) <nl> def isAndroidLib = project . plugins . withType ( LibraryPlugin ) <nl> if ( ! isAndroidApp & & ! isAndroidLib ) { <nl> - throw new GradleException ( " ' android ' or ' android - library ' plugin required . " ) <nl> + throw new GradleException ( " ' com . android . application ' or ' com . android . library ' plugin required . " ) <nl> } <nl> <nl> def isKotlinProject = project . plugins . withType ( KotlinAndroidPlugin ) <nl> diff - - git a / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy b / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy <nl> new file mode 100644 <nl> index 0000000 . . ea611e0 <nl> - - - / dev / null <nl> + + + b / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy <nl> @ @ - 0 , 0 + 1 , 98 @ @ <nl> + package io . realm . gradle <nl> + import org . gradle . api . GradleException <nl> + import org . gradle . api . Project <nl> + import org . gradle . api . artifacts . Dependency <nl> + import org . gradle . api . artifacts . DependencySet <nl> + import org . gradle . api . artifacts . dsl . DependencyHandler <nl> + import org . gradle . api . artifacts . dsl . RepositoryHandler <nl> + import org . gradle . api . internal . artifacts . dsl . dependencies . DefaultDependencyHandler <nl> + import org . gradle . api . internal . plugins . PluginApplicationException <nl> + import org . gradle . testfixtures . ProjectBuilder <nl> + import org . junit . Before <nl> + import org . junit . Test <nl> + <nl> + import static org . junit . Assert . assertEquals <nl> + import static org . junit . Assert . assertTrue <nl> + import static org . junit . Assert . fail <nl> + <nl> + class PluginTest { <nl> + <nl> + private Project project <nl> + private String currentVersion <nl> + <nl> + @ Before <nl> + public void setUp ( ) { <nl> + project = ProjectBuilder . builder ( ) . build ( ) <nl> + currentVersion = new File ( " . . / version . txt " ) . text . trim ( ) <nl> + } <nl> + <nl> + @ Test <nl> + public void testPlugin ( ) { <nl> + project . buildscript { <nl> + repositories { <nl> + mavenLocal ( ) <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' <nl> + classpath " io . realm : realm - gradle - plugin : $ { currentVersion } " <nl> + } <nl> + } <nl> + <nl> + project . apply plugin : ' com . android . application ' <nl> + project . apply plugin : ' realm - android ' <nl> + <nl> + assertTrue ( containsUrl ( project . repositories , ' https : / / jitpack . io ' ) ) <nl> + <nl> + assertTrue ( containsDependency ( project . dependencies , ' io . realm ' , ' realm - android - library ' ) ) <nl> + assertTrue ( containsDependency ( project . dependencies , ' io . realm ' , ' realm - annotations ' ) ) <nl> + } <nl> + <nl> + @ Test <nl> + public void testWithoutAndroidPlugin ( ) { <nl> + project . buildscript { <nl> + repositories { <nl> + mavenLocal ( ) <nl> + jcenter ( ) <nl> + } <nl> + dependencies { <nl> + classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' <nl> + classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' <nl> + classpath " io . realm : realm - gradle - plugin : $ { currentVersion } " <nl> + } <nl> + } <nl> + <nl> + try { <nl> + project . apply plugin : ' realm - android ' <nl> + fail ( ) <nl> + } catch ( PluginApplicationException e ) { <nl> + assertEquals ( e . getCause ( ) . class , GradleException . class ) <nl> + assertTrue ( e . getCause ( ) . getMessage ( ) . contains ( " ' com . android . application ' or ' com . android . library ' plugin required . " ) ) <nl> + } <nl> + } <nl> + <nl> + private static boolean containsUrl ( RepositoryHandler repositories , String url ) { <nl> + for ( repo in repositories ) { <nl> + if ( repo . properties . get ( ' url ' ) . toString ( ) = = url ) { <nl> + return true <nl> + } <nl> + } <nl> + return false <nl> + } <nl> + <nl> + private static boolean containsDependency ( DependencyHandler dependencies , String group , String name ) { <nl> + def configurationContainerField = DefaultDependencyHandler . class . getDeclaredField ( " configurationContainer " ) <nl> + configurationContainerField . setAccessible ( true ) <nl> + def configurationContainer = configurationContainerField . get ( dependencies ) <nl> + def compileConfiguration = configurationContainer . findByName ( " compile " ) <nl> + <nl> + def DependencySet dependencySet = compileConfiguration . getDependencies ( ) <nl> + for ( Dependency dependency in dependencySet ) { <nl> + if ( dependency . properties . group = = group & & dependency . properties . name = = name ) { <nl> + return true <nl> + } <nl> + } <nl> + return false <nl> + } <nl> + }

TEST DIFF:
diff - - git a / gradle - plugin / build . gradle b / gradle - plugin / build . gradle 
 index 2aab118 . . 7816f43 100644 
 - - - a / gradle - plugin / build . gradle 
 + + + b / gradle - plugin / build . gradle 
 @ @ - 31 , 12 + 31 , 23 @ @ targetCompatibility = 1 . 6 
 group = ' io . realm ' 
 version = file ( " $ { projectDir } / . . / version . txt " ) . text . trim ( ) ; 
 
 + configurations { 
 + provided 
 + compile . extendsFrom provided 
 + } 
 + 
 + sourceSets { 
 + main { 
 + compileClasspath + = configurations . provided 
 + } 
 + } 
 + 
 dependencies { 
 compile gradleApi ( ) 
 compile localGroovy ( ) 
 compile " io . realm : realm - transformer : $ { version } " 
 compile ' com . neenbedankt . gradle . plugins : android - apt : 1 . 8 ' 
 - compile ' com . android . tools . build : gradle : 1 . 5 . 0 ' 
 + provided ' com . android . tools . build : gradle : 1 . 5 . 0 ' 
 
 testCompile gradleTestKit ( ) 
 testCompile ' junit : junit : 4 . 12 ' 
 diff - - git a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 index c97b4de . . f5f9419 100644 
 - - - a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 + + + b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 @ @ - 35 , 6 + 35 , 10 @ @ class Realm implements Plugin < Project > { 
 throw new GradleException ( " ' com . android . application ' or ' com . android . library ' plugin required . " ) 
 } 
 
 + if ( ! isTransformAvailable ( ) ) { 
 + throw new GradleException ( ' Realm gradle plugin only supports android gradle plugin 1 . 5 . 0 or later . ' ) 
 + } 
 + 
 def isKotlinProject = project . plugins . find { 
 it . getClass ( ) . name = = ' org . jetbrains . kotlin . gradle . plugin . KotlinAndroidPluginWrapper ' 
 } 
 @ @ - 56 , 4 + 60 , 13 @ @ class Realm implements Plugin < Project > { 
 project . dependencies . add ( " apt " , " io . realm : realm - annotations - processor : $ { Version . VERSION } " ) 
 } 
 } 
 + 
 + private static boolean isTransformAvailable ( ) { 
 + try { 
 + Class . forName ( ' com . android . build . api . transform . Transform ' ) 
 + return true 
 + } catch ( Exception ignored ) { 
 + return false 
 + } 
 + } 
 } 
 diff - - git a / realm - transformer / build . gradle b / realm - transformer / build . gradle 
 index 9e76360 . . 750693d 100644 
 - - - a / realm - transformer / build . gradle 
 + + + b / realm - transformer / build . gradle 
 @ @ - 25 , 11 + 25 , 22 @ @ repositories { 
 jcenter ( ) 
 } 
 
 + configurations { 
 + provided 
 + compile . extendsFrom provided 
 + } 
 + 
 + sourceSets { 
 + main { 
 + compileClasspath + = configurations . provided 
 + } 
 + } 
 + 
 dependencies { 
 compile localGroovy ( ) 
 compile gradleApi ( ) 
 compile " io . realm : realm - annotations : $ { version } " 
 - compile ' com . android . tools . build : gradle : 1 . 5 . 0 ' 
 + provided ' com . android . tools . build : gradle : 1 . 5 . 0 ' 
 compile ' org . javassist : javassist : 3 . 20 . 0 - GA ' 
 
 testCompile ( ' org . spockframework : spock - core : 1 . 0 - groovy - 2 . 4 ' ) {

NEAREST DIFF:
diff - - git a / gradle - plugin / build . gradle b / gradle - plugin / build . gradle 
 index c21be4b . . d3f9607 100644 
 - - - a / gradle - plugin / build . gradle 
 + + + b / gradle - plugin / build . gradle 
 @ @ - 32 , 6 + 32 , 8 @ @ dependencies { 
 testCompile ( ' org . spockframework : spock - core : 1 . 0 - groovy - 2 . 4 ' ) { 
 exclude module : ' groovy - all ' 
 } 
 + testCompile gradleTestKit ( ) 
 + testCompile ' junit : junit : 4 . 12 ' 
 } 
 
 / / for Ant filter 
 diff - - git a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 index 9490f5b . . 1d92b11 100644 
 - - - a / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 + + + b / gradle - plugin / src / main / groovy / io / realm / gradle / Realm . groovy 
 @ @ - 16 , 7 + 16 , 7 @ @ class Realm implements Plugin < Project > { 
 def isAndroidApp = project . plugins . withType ( AppPlugin ) 
 def isAndroidLib = project . plugins . withType ( LibraryPlugin ) 
 if ( ! isAndroidApp & & ! isAndroidLib ) { 
 - throw new GradleException ( " ' android ' or ' android - library ' plugin required . " ) 
 + throw new GradleException ( " ' com . android . application ' or ' com . android . library ' plugin required . " ) 
 } 
 
 def isKotlinProject = project . plugins . withType ( KotlinAndroidPlugin ) 
 diff - - git a / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy b / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy 
 new file mode 100644 
 index 0000000 . . ea611e0 
 - - - / dev / null 
 + + + b / gradle - plugin / src / test / groovy / io / realm / gradle / PluginTest . groovy 
 @ @ - 0 , 0 + 1 , 98 @ @ 
 + package io . realm . gradle 
 + import org . gradle . api . GradleException 
 + import org . gradle . api . Project 
 + import org . gradle . api . artifacts . Dependency 
 + import org . gradle . api . artifacts . DependencySet 
 + import org . gradle . api . artifacts . dsl . DependencyHandler 
 + import org . gradle . api . artifacts . dsl . RepositoryHandler 
 + import org . gradle . api . internal . artifacts . dsl . dependencies . DefaultDependencyHandler 
 + import org . gradle . api . internal . plugins . PluginApplicationException 
 + import org . gradle . testfixtures . ProjectBuilder 
 + import org . junit . Before 
 + import org . junit . Test 
 + 
 + import static org . junit . Assert . assertEquals 
 + import static org . junit . Assert . assertTrue 
 + import static org . junit . Assert . fail 
 + 
 + class PluginTest { 
 + 
 + private Project project 
 + private String currentVersion 
 + 
 + @ Before 
 + public void setUp ( ) { 
 + project = ProjectBuilder . builder ( ) . build ( ) 
 + currentVersion = new File ( " . . / version . txt " ) . text . trim ( ) 
 + } 
 + 
 + @ Test 
 + public void testPlugin ( ) { 
 + project . buildscript { 
 + repositories { 
 + mavenLocal ( ) 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' 
 + classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' 
 + classpath " io . realm : realm - gradle - plugin : $ { currentVersion } " 
 + } 
 + } 
 + 
 + project . apply plugin : ' com . android . application ' 
 + project . apply plugin : ' realm - android ' 
 + 
 + assertTrue ( containsUrl ( project . repositories , ' https : / / jitpack . io ' ) ) 
 + 
 + assertTrue ( containsDependency ( project . dependencies , ' io . realm ' , ' realm - android - library ' ) ) 
 + assertTrue ( containsDependency ( project . dependencies , ' io . realm ' , ' realm - annotations ' ) ) 
 + } 
 + 
 + @ Test 
 + public void testWithoutAndroidPlugin ( ) { 
 + project . buildscript { 
 + repositories { 
 + mavenLocal ( ) 
 + jcenter ( ) 
 + } 
 + dependencies { 
 + classpath ' com . android . tools . build : gradle : 1 . 5 . 0 ' 
 + classpath ' com . jakewharton . sdkmanager : gradle - plugin : 0 . 12 . 0 ' 
 + classpath " io . realm : realm - gradle - plugin : $ { currentVersion } " 
 + } 
 + } 
 + 
 + try { 
 + project . apply plugin : ' realm - android ' 
 + fail ( ) 
 + } catch ( PluginApplicationException e ) { 
 + assertEquals ( e . getCause ( ) . class , GradleException . class ) 
 + assertTrue ( e . getCause ( ) . getMessage ( ) . contains ( " ' com . android . application ' or ' com . android . library ' plugin required . " ) ) 
 + } 
 + } 
 + 
 + private static boolean containsUrl ( RepositoryHandler repositories , String url ) { 
 + for ( repo in repositories ) { 
 + if ( repo . properties . get ( ' url ' ) . toString ( ) = = url ) { 
 + return true 
 + } 
 + } 
 + return false 
 + } 
 + 
 + private static boolean containsDependency ( DependencyHandler dependencies , String group , String name ) { 
 + def configurationContainerField = DefaultDependencyHandler . class . getDeclaredField ( " configurationContainer " ) 
 + configurationContainerField . setAccessible ( true ) 
 + def configurationContainer = configurationContainerField . get ( dependencies ) 
 + def compileConfiguration = configurationContainer . findByName ( " compile " ) 
 + 
 + def DependencySet dependencySet = compileConfiguration . getDependencies ( ) 
 + for ( Dependency dependency in dependencySet ) { 
 + if ( dependency . properties . group = = group & & dependency . properties . name = = name ) { 
 + return true 
 + } 
 + } 
 + return false 
 + } 
 + }
