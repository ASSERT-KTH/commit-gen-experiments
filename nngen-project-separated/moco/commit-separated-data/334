BLEU SCORE: 0.1270331870386537

TEST MSG: documented max age cookie attribute
GENERATED MSG: documented secure cookie option

TEST DIFF (one line): diff - - git a / moco - doc / apis . md b / moco - doc / apis . md <nl> index c267c9a . . 2977fdf 100644 <nl> - - - a / moco - doc / apis . md <nl> + + + b / moco - doc / apis . md <nl> @ @ - 1435 , 6 + 1435 , 42 @ @ server . response ( cookie ( " loggedIn " , " true " , httpOnly ( ) ) , status ( 302 ) ) ; <nl> } <nl> ` ` ` <nl> <nl> + # # # # # Max Age <nl> + <nl> + @ Since will be at next version <nl> + <nl> + The Max - Age attribute can be used to set the cookie ' s expiration as an interval of seconds in the future , relative to the time the browser received the cookie . You can add your own ` maxAge ` cookie attribute to your response . <nl> + <nl> + * Java <nl> + <nl> + ` ` ` java <nl> + server . response ( cookie ( " loggedIn " , " true " , maxAge ( 1 , TimeUnit . HOURS ) ) , status ( 302 ) ) <nl> + ` ` ` <nl> + <nl> + * JSON <nl> + <nl> + ` ` ` json <nl> + { <nl> + " request " : <nl> + { <nl> + " uri " : " / cookie " <nl> + } , <nl> + " response " : <nl> + { <nl> + " cookies " : <nl> + { <nl> + " login " : { <nl> + " value " : " true " , <nl> + " maxAge " : { <nl> + " duration " : 1 , <nl> + " unit " : " hour " <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + ` ` ` <nl> + <nl> # # # Attachment <nl> * * @ Since 0 . 10 . 0 * * <nl>
NEAREST DIFF (one line): diff - - git a / moco - doc / apis . md b / moco - doc / apis . md <nl> index a63bfd8 . . e56fc51 100644 <nl> - - - a / moco - doc / apis . md <nl> + + + b / moco - doc / apis . md <nl> @ @ - 1368 , 6 + 1368 , 41 @ @ server . response ( cookie ( " loggedIn " , " true " , domain ( " github . com " ) ) , status ( 302 ) ) ; <nl> } <nl> ` ` ` <nl> <nl> + # # # # # Secure <nl> + <nl> + @ Since will be at next version <nl> + <nl> + A secure cookie can only be transmitted over an encrypted connection . You can add your own ` secure ` cookie attribute to your response . <nl> + <nl> + * Java <nl> + <nl> + ` ` ` java <nl> + server . response ( cookie ( " loggedIn " , " true " , secure ( ) ) , status ( 302 ) ) ; <nl> + ` ` ` <nl> + <nl> + * JSON <nl> + <nl> + * JSON <nl> + <nl> + ` ` ` json <nl> + { <nl> + " request " : <nl> + { <nl> + " uri " : " / cookie " <nl> + } , <nl> + " response " : <nl> + { <nl> + " cookies " : <nl> + { <nl> + " login " : { <nl> + " value " : " true " , <nl> + " secure " : " true " <nl> + } <nl> + } <nl> + } <nl> + } <nl> + ` ` ` <nl> + <nl> # # # Attachment <nl> * * @ Since 0 . 10 . 0 * * <nl>

TEST DIFF:
diff - - git a / moco - doc / apis . md b / moco - doc / apis . md 
 index c267c9a . . 2977fdf 100644 
 - - - a / moco - doc / apis . md 
 + + + b / moco - doc / apis . md 
 @ @ - 1435 , 6 + 1435 , 42 @ @ server . response ( cookie ( " loggedIn " , " true " , httpOnly ( ) ) , status ( 302 ) ) ; 
 } 
 ` ` ` 
 
 + # # # # # Max Age 
 + 
 + @ Since will be at next version 
 + 
 + The Max - Age attribute can be used to set the cookie ' s expiration as an interval of seconds in the future , relative to the time the browser received the cookie . You can add your own ` maxAge ` cookie attribute to your response . 
 + 
 + * Java 
 + 
 + ` ` ` java 
 + server . response ( cookie ( " loggedIn " , " true " , maxAge ( 1 , TimeUnit . HOURS ) ) , status ( 302 ) ) 
 + ` ` ` 
 + 
 + * JSON 
 + 
 + ` ` ` json 
 + { 
 + " request " : 
 + { 
 + " uri " : " / cookie " 
 + } , 
 + " response " : 
 + { 
 + " cookies " : 
 + { 
 + " login " : { 
 + " value " : " true " , 
 + " maxAge " : { 
 + " duration " : 1 , 
 + " unit " : " hour " 
 + } 
 + } 
 + } 
 + } 
 + } 
 + ` ` ` 
 + 
 # # # Attachment 
 * * @ Since 0 . 10 . 0 * * 


NEAREST DIFF:
diff - - git a / moco - doc / apis . md b / moco - doc / apis . md 
 index a63bfd8 . . e56fc51 100644 
 - - - a / moco - doc / apis . md 
 + + + b / moco - doc / apis . md 
 @ @ - 1368 , 6 + 1368 , 41 @ @ server . response ( cookie ( " loggedIn " , " true " , domain ( " github . com " ) ) , status ( 302 ) ) ; 
 } 
 ` ` ` 
 
 + # # # # # Secure 
 + 
 + @ Since will be at next version 
 + 
 + A secure cookie can only be transmitted over an encrypted connection . You can add your own ` secure ` cookie attribute to your response . 
 + 
 + * Java 
 + 
 + ` ` ` java 
 + server . response ( cookie ( " loggedIn " , " true " , secure ( ) ) , status ( 302 ) ) ; 
 + ` ` ` 
 + 
 + * JSON 
 + 
 + * JSON 
 + 
 + ` ` ` json 
 + { 
 + " request " : 
 + { 
 + " uri " : " / cookie " 
 + } , 
 + " response " : 
 + { 
 + " cookies " : 
 + { 
 + " login " : { 
 + " value " : " true " , 
 + " secure " : " true " 
 + } 
 + } 
 + } 
 + } 
 + ` ` ` 
 + 
 # # # Attachment 
 * * @ Since 0 . 10 . 0 * * 

