BLEU SCORE: 0.02383853510228548

TEST MSG: removed else from as resource in dynamic ressponse handler
GENERATED MSG: inlined file container constructor

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> index 1f7a1f8 . . 427e46a 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> @ @ - 202 , 7 + 202 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> FileContainer fileContainer = FileContainer . class . cast ( container ) ; <nl> TextContainer filename = fileContainer . getName ( ) ; <nl> if ( filename . isRawText ( ) ) { <nl> - return Optional . of ( asRawResource ( name , fileContainer ) ) ; <nl> + return Optional . of ( asResource ( name , fileContainer ) ) ; <nl> } <nl> <nl> if ( filename . isForTemplate ( ) ) { <nl> @ @ - 218 , 17 + 218 , 15 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> if ( charset . isPresent ( ) ) { <nl> return invokeTarget ( name , resource , charset . get ( ) , <nl> Resource . class , Resource . class , Charset . class ) ; <nl> - } else { <nl> - return invokeTarget ( name , resource , <nl> - Resource . class , Resource . class ) ; <nl> } <nl> + <nl> + return invokeTarget ( name , resource , Resource . class ) ; <nl> } <nl> <nl> - private Resource asRawResource ( final String name , final FileContainer fileContainer ) { <nl> + private Resource asResource ( final String name , final FileContainer fileContainer ) { <nl> Optional < Charset > charset = fileContainer . getCharset ( ) ; <nl> String text = fileContainer . getName ( ) . getText ( ) ; <nl> return asResource ( name , Moco . text ( text ) , charset ) ; <nl> - <nl> } <nl> <nl> private Resource createTemplate ( final String name , final TextContainer container ) {
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FileContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FileContainer . java <nl> index c03d56d . . e31a21e 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FileContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FileContainer . java <nl> @ @ - 16 , 7 + 16 , 9 @ @ public class FileContainer extends TextContainer { <nl> super ( container . getText ( ) , container . getOperation ( ) , container . getProps ( ) ) ; <nl> } <nl> <nl> - public FileContainer ( ) { <nl> + private FileContainer ( String name , Optional < Charset > charset ) { <nl> + this . name = name ; <nl> + this . charset = charset ; <nl> } <nl> <nl> public String getName ( ) { <nl> @ @ - 64 , 10 + 66 , 7 @ @ public class FileContainer extends TextContainer { <nl> } <nl> <nl> public FileContainer build ( ) { <nl> - FileContainer fileContainer = new FileContainer ( ) ; <nl> - fileContainer . name = name ; <nl> - fileContainer . charset = toCharset ( charset ) ; <nl> - return fileContainer ; <nl> + return new FileContainer ( name , toCharset ( charset ) ) ; <nl> } <nl> <nl> private Optional < Charset > toCharset ( String charset ) {

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 index 1f7a1f8 . . 427e46a 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 @ @ - 202 , 7 + 202 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 FileContainer fileContainer = FileContainer . class . cast ( container ) ; 
 TextContainer filename = fileContainer . getName ( ) ; 
 if ( filename . isRawText ( ) ) { 
 - return Optional . of ( asRawResource ( name , fileContainer ) ) ; 
 + return Optional . of ( asResource ( name , fileContainer ) ) ; 
 } 
 
 if ( filename . isForTemplate ( ) ) { 
 @ @ - 218 , 17 + 218 , 15 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 if ( charset . isPresent ( ) ) { 
 return invokeTarget ( name , resource , charset . get ( ) , 
 Resource . class , Resource . class , Charset . class ) ; 
 - } else { 
 - return invokeTarget ( name , resource , 
 - Resource . class , Resource . class ) ; 
 } 
 + 
 + return invokeTarget ( name , resource , Resource . class ) ; 
 } 
 
 - private Resource asRawResource ( final String name , final FileContainer fileContainer ) { 
 + private Resource asResource ( final String name , final FileContainer fileContainer ) { 
 Optional < Charset > charset = fileContainer . getCharset ( ) ; 
 String text = fileContainer . getName ( ) . getText ( ) ; 
 return asResource ( name , Moco . text ( text ) , charset ) ; 
 - 
 } 
 
 private Resource createTemplate ( final String name , final TextContainer container ) {

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FileContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FileContainer . java 
 index c03d56d . . e31a21e 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FileContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FileContainer . java 
 @ @ - 16 , 7 + 16 , 9 @ @ public class FileContainer extends TextContainer { 
 super ( container . getText ( ) , container . getOperation ( ) , container . getProps ( ) ) ; 
 } 
 
 - public FileContainer ( ) { 
 + private FileContainer ( String name , Optional < Charset > charset ) { 
 + this . name = name ; 
 + this . charset = charset ; 
 } 
 
 public String getName ( ) { 
 @ @ - 64 , 10 + 66 , 7 @ @ public class FileContainer extends TextContainer { 
 } 
 
 public FileContainer build ( ) { 
 - FileContainer fileContainer = new FileContainer ( ) ; 
 - fileContainer . name = name ; 
 - fileContainer . charset = toCharset ( charset ) ; 
 - return fileContainer ; 
 + return new FileContainer ( name , toCharset ( charset ) ) ; 
 } 
 
 private Optional < Charset > toCharset ( String charset ) {
