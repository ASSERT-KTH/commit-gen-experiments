BLEU SCORE: 0.06567274736060397

TEST MSG: dumped multiple http headers with same name
GENERATED MSG: collected header dumper in http dumpers

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> index ff2b7c7 . . 8ed6901 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> @ @ - 2 , 11 + 2 , 14 @ @ package com . github . dreamhead . moco . dumper ; <nl> <nl> import com . github . dreamhead . moco . HttpMessage ; <nl> import com . google . common . base . Joiner ; <nl> + import com . google . common . collect . Maps ; <nl> import com . google . common . net . HttpHeaders ; <nl> import com . google . common . net . MediaType ; <nl> import io . netty . util . internal . StringUtil ; <nl> <nl> - import static com . github . dreamhead . moco . util . Maps . asSimple ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> <nl> public final class HttpDumpers { <nl> public static String asContent ( final HttpMessage message ) { <nl> @ @ - 57 , 7 + 60 , 15 @ @ public final class HttpDumpers { <nl> private final static Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; <nl> <nl> public static String asHeaders ( final HttpMessage message ) { <nl> - return headerJoiner . join ( asSimple ( message . getHeaders ( ) ) ) ; <nl> + List < Map . Entry < String , String > > entries = new ArrayList < > ( ) ; <nl> + for ( Map . Entry < String , String [ ] > entry : message . getHeaders ( ) . entrySet ( ) ) { <nl> + String key = entry . getKey ( ) ; <nl> + for ( String value : entry . getValue ( ) ) { <nl> + entries . add ( Maps . immutableEntry ( key , value ) ) ; <nl> + } <nl> + } <nl> + <nl> + return headerJoiner . join ( entries ) ; <nl> } <nl> <nl> private HttpDumpers ( ) {
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> index e29c224 . . ff2b7c7 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> @ @ - 1 , 10 + 1 , 13 @ @ <nl> package com . github . dreamhead . moco . dumper ; <nl> <nl> import com . github . dreamhead . moco . HttpMessage ; <nl> + import com . google . common . base . Joiner ; <nl> import com . google . common . net . HttpHeaders ; <nl> import com . google . common . net . MediaType ; <nl> import io . netty . util . internal . StringUtil ; <nl> <nl> + import static com . github . dreamhead . moco . util . Maps . asSimple ; <nl> + <nl> public final class HttpDumpers { <nl> public static String asContent ( final HttpMessage message ) { <nl> long length = getContentLength ( message , - 1 ) ; <nl> @ @ - 51 , 6 + 54 , 12 @ @ public final class HttpDumpers { <nl> return defaultValue ; <nl> } <nl> <nl> + private final static Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; <nl> + <nl> + public static String asHeaders ( final HttpMessage message ) { <nl> + return headerJoiner . join ( asSimple ( message . getHeaders ( ) ) ) ; <nl> + } <nl> + <nl> private HttpDumpers ( ) { <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpRequestDumper . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpRequestDumper . java <nl> index e4d125d . . 82f4956 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpRequestDumper . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpRequestDumper . java <nl> @ @ - 2 , 22 + 2 , 19 @ @ package com . github . dreamhead . moco . dumper ; <nl> <nl> import com . github . dreamhead . moco . HttpRequest ; <nl> import com . github . dreamhead . moco . Request ; <nl> - import com . google . common . base . Joiner ; <nl> import io . netty . util . internal . StringUtil ; <nl> <nl> import static com . github . dreamhead . moco . dumper . HttpDumpers . asContent ; <nl> - import static com . github . dreamhead . moco . util . Maps . asSimple ; <nl> + import static com . github . dreamhead . moco . dumper . HttpDumpers . asHeaders ; <nl> <nl> public final class HttpRequestDumper implements Dumper < Request > { <nl> - private final Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; <nl> - <nl> @ Override <nl> public String dump ( final Request request ) { <nl> HttpRequest httpRequest = ( HttpRequest ) request ; <nl> StringBuilder buf = new StringBuilder ( ) ; <nl> buf . append ( requestProtocolLine ( httpRequest ) ) <nl> . append ( StringUtil . NEWLINE ) <nl> - . append ( headerJoiner . join ( asSimple ( httpRequest . getHeaders ( ) ) ) ) <nl> + . append ( asHeaders ( httpRequest ) ) <nl> . append ( asContent ( httpRequest ) ) ; <nl> return buf . toString ( ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpResponseDumper . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpResponseDumper . java <nl> index e64c5c8 . . 7a8d08f 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpResponseDumper . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpResponseDumper . java <nl> @ @ - 2 , 22 + 2 , 19 @ @ package com . github . dreamhead . moco . dumper ; <nl> <nl> import com . github . dreamhead . moco . HttpResponse ; <nl> import com . github . dreamhead . moco . Response ; <nl> - import com . google . common . base . Joiner ; <nl> import io . netty . util . internal . StringUtil ; <nl> <nl> import static com . github . dreamhead . moco . dumper . HttpDumpers . asContent ; <nl> - import static com . github . dreamhead . moco . util . Maps . asSimple ; <nl> + import static com . github . dreamhead . moco . dumper . HttpDumpers . asHeaders ; <nl> <nl> public class HttpResponseDumper implements Dumper < Response > { <nl> - private final Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; <nl> - <nl> @ Override <nl> public String dump ( final Response response ) { <nl> HttpResponse httpResponse = ( HttpResponse ) response ; <nl> return new StringBuilder ( ) <nl> . append ( responseProtocolLine ( httpResponse ) ) <nl> . append ( StringUtil . NEWLINE ) <nl> - . append ( headerJoiner . join ( asSimple ( httpResponse . getHeaders ( ) ) ) ) <nl> + . append ( asHeaders ( httpResponse ) ) <nl> . append ( asContent ( httpResponse ) ) <nl> . toString ( ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java <nl> index 5cee110 . . fc716da 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java <nl> @ @ - 82 , 7 + 82 , 7 @ @ public final class DefaultMutableHttpResponse implements MutableHttpResponse { <nl> <nl> @ Override <nl> public String getHeader ( final String name ) { <nl> - if ( this . headers . containsKey ( name ) ) { <nl> + if ( ! this . headers . containsKey ( name ) ) { <nl> return null ; <nl> } <nl> <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoLogTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoLogTest . java <nl> index 7f069e2 . . eb672e6 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoLogTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoLogTest . java <nl> @ @ - 34 , 7 + 34 , 7 @ @ public class MocoLogTest { <nl> private MocoTestHelper helper ; <nl> <nl> @ Before <nl> - public void setUp ( ) throws Exception { <nl> + public void setUp ( ) { <nl> this . helper = new MocoTestHelper ( ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 index ff2b7c7 . . 8ed6901 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 @ @ - 2 , 11 + 2 , 14 @ @ package com . github . dreamhead . moco . dumper ; 
 
 import com . github . dreamhead . moco . HttpMessage ; 
 import com . google . common . base . Joiner ; 
 + import com . google . common . collect . Maps ; 
 import com . google . common . net . HttpHeaders ; 
 import com . google . common . net . MediaType ; 
 import io . netty . util . internal . StringUtil ; 
 
 - import static com . github . dreamhead . moco . util . Maps . asSimple ; 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 + import java . util . Map ; 
 
 public final class HttpDumpers { 
 public static String asContent ( final HttpMessage message ) { 
 @ @ - 57 , 7 + 60 , 15 @ @ public final class HttpDumpers { 
 private final static Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; 
 
 public static String asHeaders ( final HttpMessage message ) { 
 - return headerJoiner . join ( asSimple ( message . getHeaders ( ) ) ) ; 
 + List < Map . Entry < String , String > > entries = new ArrayList < > ( ) ; 
 + for ( Map . Entry < String , String [ ] > entry : message . getHeaders ( ) . entrySet ( ) ) { 
 + String key = entry . getKey ( ) ; 
 + for ( String value : entry . getValue ( ) ) { 
 + entries . add ( Maps . immutableEntry ( key , value ) ) ; 
 + } 
 + } 
 + 
 + return headerJoiner . join ( entries ) ; 
 } 
 
 private HttpDumpers ( ) {

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 index e29c224 . . ff2b7c7 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 @ @ - 1 , 10 + 1 , 13 @ @ 
 package com . github . dreamhead . moco . dumper ; 
 
 import com . github . dreamhead . moco . HttpMessage ; 
 + import com . google . common . base . Joiner ; 
 import com . google . common . net . HttpHeaders ; 
 import com . google . common . net . MediaType ; 
 import io . netty . util . internal . StringUtil ; 
 
 + import static com . github . dreamhead . moco . util . Maps . asSimple ; 
 + 
 public final class HttpDumpers { 
 public static String asContent ( final HttpMessage message ) { 
 long length = getContentLength ( message , - 1 ) ; 
 @ @ - 51 , 6 + 54 , 12 @ @ public final class HttpDumpers { 
 return defaultValue ; 
 } 
 
 + private final static Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; 
 + 
 + public static String asHeaders ( final HttpMessage message ) { 
 + return headerJoiner . join ( asSimple ( message . getHeaders ( ) ) ) ; 
 + } 
 + 
 private HttpDumpers ( ) { 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpRequestDumper . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpRequestDumper . java 
 index e4d125d . . 82f4956 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpRequestDumper . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpRequestDumper . java 
 @ @ - 2 , 22 + 2 , 19 @ @ package com . github . dreamhead . moco . dumper ; 
 
 import com . github . dreamhead . moco . HttpRequest ; 
 import com . github . dreamhead . moco . Request ; 
 - import com . google . common . base . Joiner ; 
 import io . netty . util . internal . StringUtil ; 
 
 import static com . github . dreamhead . moco . dumper . HttpDumpers . asContent ; 
 - import static com . github . dreamhead . moco . util . Maps . asSimple ; 
 + import static com . github . dreamhead . moco . dumper . HttpDumpers . asHeaders ; 
 
 public final class HttpRequestDumper implements Dumper < Request > { 
 - private final Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; 
 - 
 @ Override 
 public String dump ( final Request request ) { 
 HttpRequest httpRequest = ( HttpRequest ) request ; 
 StringBuilder buf = new StringBuilder ( ) ; 
 buf . append ( requestProtocolLine ( httpRequest ) ) 
 . append ( StringUtil . NEWLINE ) 
 - . append ( headerJoiner . join ( asSimple ( httpRequest . getHeaders ( ) ) ) ) 
 + . append ( asHeaders ( httpRequest ) ) 
 . append ( asContent ( httpRequest ) ) ; 
 return buf . toString ( ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpResponseDumper . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpResponseDumper . java 
 index e64c5c8 . . 7a8d08f 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpResponseDumper . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpResponseDumper . java 
 @ @ - 2 , 22 + 2 , 19 @ @ package com . github . dreamhead . moco . dumper ; 
 
 import com . github . dreamhead . moco . HttpResponse ; 
 import com . github . dreamhead . moco . Response ; 
 - import com . google . common . base . Joiner ; 
 import io . netty . util . internal . StringUtil ; 
 
 import static com . github . dreamhead . moco . dumper . HttpDumpers . asContent ; 
 - import static com . github . dreamhead . moco . util . Maps . asSimple ; 
 + import static com . github . dreamhead . moco . dumper . HttpDumpers . asHeaders ; 
 
 public class HttpResponseDumper implements Dumper < Response > { 
 - private final Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; 
 - 
 @ Override 
 public String dump ( final Response response ) { 
 HttpResponse httpResponse = ( HttpResponse ) response ; 
 return new StringBuilder ( ) 
 . append ( responseProtocolLine ( httpResponse ) ) 
 . append ( StringUtil . NEWLINE ) 
 - . append ( headerJoiner . join ( asSimple ( httpResponse . getHeaders ( ) ) ) ) 
 + . append ( asHeaders ( httpResponse ) ) 
 . append ( asContent ( httpResponse ) ) 
 . toString ( ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java 
 index 5cee110 . . fc716da 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java 
 @ @ - 82 , 7 + 82 , 7 @ @ public final class DefaultMutableHttpResponse implements MutableHttpResponse { 
 
 @ Override 
 public String getHeader ( final String name ) { 
 - if ( this . headers . containsKey ( name ) ) { 
 + if ( ! this . headers . containsKey ( name ) ) { 
 return null ; 
 } 
 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoLogTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoLogTest . java 
 index 7f069e2 . . eb672e6 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoLogTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoLogTest . java 
 @ @ - 34 , 7 + 34 , 7 @ @ public class MocoLogTest { 
 private MocoTestHelper helper ; 
 
 @ Before 
 - public void setUp ( ) throws Exception { 
 + public void setUp ( ) { 
 this . helper = new MocoTestHelper ( ) ; 
 } 

