BLEU SCORE: 0.03089055318156698

TEST MSG: applied java 7 exception in json path request extractor and template resource reader
GENERATED MSG: corrected template parse error message

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java <nl> index 60623bf . . 14eee11 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java <nl> @ @ - 39 , 9 + 39 , 7 @ @ public class JsonPathRequestExtractor extends HttpRequestExtractor < Object > { <nl> return absent ( ) ; <nl> } <nl> return of ( toStringArray ( jsonPathContent ) ) ; <nl> - } catch ( PathNotFoundException e ) { <nl> - return absent ( ) ; <nl> - } catch ( IOException e ) { <nl> + } catch ( PathNotFoundException | IOException e ) { <nl> return absent ( ) ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> index 2e20751 . . 3066416 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> @ @ - 66 , 9 + 66 , 7 @ @ public class TemplateResourceReader implements ContentResourceReader { <nl> } catch ( ParseException e ) { <nl> logger . error ( " Fail to parse template : { } " , content . toString ( ) ) ; <nl> throw new MocoException ( e ) ; <nl> - } catch ( IOException e ) { <nl> - throw new MocoException ( e ) ; <nl> - } catch ( TemplateException e ) { <nl> + } catch ( IOException | TemplateException e ) { <nl> throw new MocoException ( e ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> index 9b6fa4a . . d9fe8c6 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> @ @ - 53 , 7 + 53 , 7 @ @ public class TemplateResourceReader implements ContentResourceReader { <nl> template . process ( variables ( request . get ( ) ) , writer ) ; <nl> return stream . toByteArray ( ) ; <nl> } catch ( ParseException e ) { <nl> - logger . info ( " Template is { } " , templateSource ) ; <nl> + logger . error ( " Fail to parse template : { } " , templateSource ) ; <nl> throw new RuntimeException ( e ) ; <nl> } catch ( IOException e ) { <nl> throw new RuntimeException ( e ) ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java 
 index 60623bf . . 14eee11 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java 
 @ @ - 39 , 9 + 39 , 7 @ @ public class JsonPathRequestExtractor extends HttpRequestExtractor < Object > { 
 return absent ( ) ; 
 } 
 return of ( toStringArray ( jsonPathContent ) ) ; 
 - } catch ( PathNotFoundException e ) { 
 - return absent ( ) ; 
 - } catch ( IOException e ) { 
 + } catch ( PathNotFoundException | IOException e ) { 
 return absent ( ) ; 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 index 2e20751 . . 3066416 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 @ @ - 66 , 9 + 66 , 7 @ @ public class TemplateResourceReader implements ContentResourceReader { 
 } catch ( ParseException e ) { 
 logger . error ( " Fail to parse template : { } " , content . toString ( ) ) ; 
 throw new MocoException ( e ) ; 
 - } catch ( IOException e ) { 
 - throw new MocoException ( e ) ; 
 - } catch ( TemplateException e ) { 
 + } catch ( IOException | TemplateException e ) { 
 throw new MocoException ( e ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 index 9b6fa4a . . d9fe8c6 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 @ @ - 53 , 7 + 53 , 7 @ @ public class TemplateResourceReader implements ContentResourceReader { 
 template . process ( variables ( request . get ( ) ) , writer ) ; 
 return stream . toByteArray ( ) ; 
 } catch ( ParseException e ) { 
 - logger . info ( " Template is { } " , templateSource ) ; 
 + logger . error ( " Fail to parse template : { } " , templateSource ) ; 
 throw new RuntimeException ( e ) ; 
 } catch ( IOException e ) { 
 throw new RuntimeException ( e ) ;
