BLEU SCORE: 0.029859662827819124

TEST MSG: added missing final to shutdown runner
GENERATED MSG: made sure file runner restart should be thread safe for # 193

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownRunner . java <nl> index 9e667b8 . . a591b46 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownRunner . java <nl> @ @ - 2 , 7 + 2 , 7 @ @ package com . github . dreamhead . moco . runner ; <nl> <nl> import com . github . dreamhead . moco . runner . watcher . ShutdownMocoRunnerWatcher ; <nl> <nl> - public class ShutdownRunner extends WatcherRunner { <nl> + public final class ShutdownRunner extends WatcherRunner { <nl> private final ShutdownMocoRunnerWatcher monitor ; <nl> <nl> public ShutdownRunner ( final Runner runner ,
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java <nl> index 5c13814 . . 0b0e37d 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java <nl> @ @ - 18 , 7 + 18 , 7 @ @ public abstract class FileRunner implements Runner { <nl> this . runner = newRunner ( ) ; <nl> } <nl> <nl> - public void restart ( ) { <nl> + public synchronized void restart ( ) { <nl> this . runner . stop ( ) ; <nl> this . runner = newRunner ( ) ; <nl> this . runner . run ( ) ;

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownRunner . java 
 index 9e667b8 . . a591b46 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownRunner . java 
 @ @ - 2 , 7 + 2 , 7 @ @ package com . github . dreamhead . moco . runner ; 
 
 import com . github . dreamhead . moco . runner . watcher . ShutdownMocoRunnerWatcher ; 
 
 - public class ShutdownRunner extends WatcherRunner { 
 + public final class ShutdownRunner extends WatcherRunner { 
 private final ShutdownMocoRunnerWatcher monitor ; 
 
 public ShutdownRunner ( final Runner runner ,

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java 
 index 5c13814 . . 0b0e37d 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java 
 @ @ - 18 , 7 + 18 , 7 @ @ public abstract class FileRunner implements Runner { 
 this . runner = newRunner ( ) ; 
 } 
 
 - public void restart ( ) { 
 + public synchronized void restart ( ) { 
 this . runner . stop ( ) ; 
 this . runner = newRunner ( ) ; 
 this . runner . run ( ) ;
