BLEU SCORE: 0.03283637368030199

TEST MSG: added as iterable with two required arguments
GENERATED MSG: moved MocoMonitor to top level for publish

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java <nl> index 82a1c0a . . 9a356d7 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java <nl> @ @ - 26 , 18 + 26 , 12 @ @ import com . google . common . collect . Maps ; <nl> import java . io . File ; <nl> import java . nio . charset . Charset ; <nl> <nl> + import static com . github . dreamhead . moco . util . Iterables . asIterable ; <nl> import static com . google . common . collect . Maps . transformEntries ; <nl> <nl> public class ApiUtils { <nl> public static MocoMonitor mergeMonitor ( final MocoMonitor monitor , final MocoMonitor monitor2 , final MocoMonitor [ ] monitors ) { <nl> - MocoMonitor [ ] targetMonitors = new MocoMonitor [ 2 + monitors . length ] ; <nl> - targetMonitors [ 0 ] = monitor ; <nl> - targetMonitors [ 1 ] = monitor2 ; <nl> - if ( monitors . length > 0 ) { <nl> - System . arraycopy ( monitors , 0 , targetMonitors , 2 , monitors . length ) ; <nl> - } <nl> - <nl> - return new CompositeMonitor ( targetMonitors ) ; <nl> + return new CompositeMonitor ( asIterable ( monitor , monitor2 , monitors ) ) ; <nl> } <nl> <nl> public static Maps . EntryTransformer < String , RequestExtractor < ? > , Variable > toVariable ( ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java <nl> index 2a55a65 . . 1638edd 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java <nl> @ @ - 5 , 9 + 5 , 9 @ @ import com . github . dreamhead . moco . Request ; <nl> import com . github . dreamhead . moco . Response ; <nl> <nl> public class CompositeMonitor implements MocoMonitor { <nl> - private final MocoMonitor [ ] monitors ; <nl> + private final Iterable < MocoMonitor > monitors ; <nl> <nl> - public CompositeMonitor ( final MocoMonitor [ ] monitors ) { <nl> + public CompositeMonitor ( final Iterable < MocoMonitor > monitors ) { <nl> this . monitors = monitors ; <nl> } <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Iterables . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Iterables . java <nl> index ce74882 . . d3e00e7 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Iterables . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Iterables . java <nl> @ @ - 22 , 6 + 22 , 22 @ @ public final class Iterables { <nl> . build ( ) ; <nl> } <nl> <nl> + public static < T > Iterable < T > asIterable ( final T handler , final T handler2 , final T [ ] handlers ) { <nl> + checkNotNull ( handler ) ; <nl> + checkNotNull ( handler2 ) ; <nl> + checkNotNull ( handlers ) ; <nl> + <nl> + if ( handlers . length = = 0 ) { <nl> + return of ( handler , handler2 ) ; <nl> + } <nl> + <nl> + return ImmutableList . < T > builder ( ) <nl> + . add ( handler ) <nl> + . add ( handler2 ) <nl> + . add ( handlers ) <nl> + . build ( ) ; <nl> + } <nl> + <nl> public static < T > T head ( final T [ ] elements ) { <nl> checkNotNull ( elements ) ; <nl> <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> index f9254a3 . . 87272c0 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> @ @ - 24 , 7 + 24 , 6 @ @ import static com . github . dreamhead . moco . Moco . by ; <nl> import static com . github . dreamhead . moco . Moco . context ; <nl> import static com . github . dreamhead . moco . Moco . eq ; <nl> import static com . github . dreamhead . moco . Moco . header ; <nl> - import static com . github . dreamhead . moco . Moco . httpServer ; <nl> import static com . github . dreamhead . moco . Moco . log ; <nl> import static com . github . dreamhead . moco . Moco . query ; <nl> import static com . github . dreamhead . moco . Moco . status ;
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java <nl> new file mode 100644 <nl> index 0000000 . . 4d7cf1b <nl> - - - / dev / null <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + package com . github . dreamhead . moco ; <nl> + <nl> + import com . google . common . eventbus . Subscribe ; <nl> + import io . netty . handler . codec . http . FullHttpRequest ; <nl> + import io . netty . handler . codec . http . FullHttpResponse ; <nl> + <nl> + public interface MocoMonitor { <nl> + @ Subscribe <nl> + void onMessageArrived ( FullHttpRequest request ) ; <nl> + <nl> + @ Subscribe <nl> + void onException ( Exception e ) ; <nl> + <nl> + @ Subscribe <nl> + void onMessageLeave ( FullHttpResponse response ) ; <nl> + } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> index f5f3a4a . . 9a37346 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> @ @ - 1 , 7 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco . internal ; <nl> <nl> import com . github . dreamhead . moco . * ; <nl> - import com . github . dreamhead . moco . monitor . MocoMonitor ; <nl> import com . github . dreamhead . moco . monitor . QuietMonitor ; <nl> import com . github . dreamhead . moco . monitor . Slf4jMonitor ; <nl> import com . github . dreamhead . moco . setting . BaseSetting ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / MocoMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / MocoMonitor . java <nl> deleted file mode 100644 <nl> index 7607224 . . 0000000 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / MocoMonitor . java <nl> + + + / dev / null <nl> @ @ - 1 , 16 + 0 , 0 @ @ <nl> - package com . github . dreamhead . moco . monitor ; <nl> - <nl> - import com . google . common . eventbus . Subscribe ; <nl> - import io . netty . handler . codec . http . FullHttpRequest ; <nl> - import io . netty . handler . codec . http . FullHttpResponse ; <nl> - <nl> - public interface MocoMonitor { <nl> - @ Subscribe <nl> - void onMessageArrived ( FullHttpRequest request ) ; <nl> - <nl> - @ Subscribe <nl> - void onException ( Exception e ) ; <nl> - <nl> - @ Subscribe <nl> - void onMessageLeave ( FullHttpResponse response ) ; <nl> - } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java <nl> index ba6868b . . 8b2c25a 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco . monitor ; <nl> <nl> + import com . github . dreamhead . moco . MocoMonitor ; <nl> import io . netty . handler . codec . http . FullHttpRequest ; <nl> import io . netty . handler . codec . http . FullHttpResponse ; <nl> import org . slf4j . Logger ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java <nl> index fe77249 . . 8d8c968 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco . monitor ; <nl> <nl> + import com . github . dreamhead . moco . MocoMonitor ; <nl> import com . github . dreamhead . moco . dumper . Dumper ; <nl> import com . github . dreamhead . moco . dumper . HttpRequestDumper ; <nl> import com . github . dreamhead . moco . dumper . HttpResponseDumper ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java 
 index 82a1c0a . . 9a356d7 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java 
 @ @ - 26 , 18 + 26 , 12 @ @ import com . google . common . collect . Maps ; 
 import java . io . File ; 
 import java . nio . charset . Charset ; 
 
 + import static com . github . dreamhead . moco . util . Iterables . asIterable ; 
 import static com . google . common . collect . Maps . transformEntries ; 
 
 public class ApiUtils { 
 public static MocoMonitor mergeMonitor ( final MocoMonitor monitor , final MocoMonitor monitor2 , final MocoMonitor [ ] monitors ) { 
 - MocoMonitor [ ] targetMonitors = new MocoMonitor [ 2 + monitors . length ] ; 
 - targetMonitors [ 0 ] = monitor ; 
 - targetMonitors [ 1 ] = monitor2 ; 
 - if ( monitors . length > 0 ) { 
 - System . arraycopy ( monitors , 0 , targetMonitors , 2 , monitors . length ) ; 
 - } 
 - 
 - return new CompositeMonitor ( targetMonitors ) ; 
 + return new CompositeMonitor ( asIterable ( monitor , monitor2 , monitors ) ) ; 
 } 
 
 public static Maps . EntryTransformer < String , RequestExtractor < ? > , Variable > toVariable ( ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java 
 index 2a55a65 . . 1638edd 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java 
 @ @ - 5 , 9 + 5 , 9 @ @ import com . github . dreamhead . moco . Request ; 
 import com . github . dreamhead . moco . Response ; 
 
 public class CompositeMonitor implements MocoMonitor { 
 - private final MocoMonitor [ ] monitors ; 
 + private final Iterable < MocoMonitor > monitors ; 
 
 - public CompositeMonitor ( final MocoMonitor [ ] monitors ) { 
 + public CompositeMonitor ( final Iterable < MocoMonitor > monitors ) { 
 this . monitors = monitors ; 
 } 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Iterables . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Iterables . java 
 index ce74882 . . d3e00e7 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Iterables . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Iterables . java 
 @ @ - 22 , 6 + 22 , 22 @ @ public final class Iterables { 
 . build ( ) ; 
 } 
 
 + public static < T > Iterable < T > asIterable ( final T handler , final T handler2 , final T [ ] handlers ) { 
 + checkNotNull ( handler ) ; 
 + checkNotNull ( handler2 ) ; 
 + checkNotNull ( handlers ) ; 
 + 
 + if ( handlers . length = = 0 ) { 
 + return of ( handler , handler2 ) ; 
 + } 
 + 
 + return ImmutableList . < T > builder ( ) 
 + . add ( handler ) 
 + . add ( handler2 ) 
 + . add ( handlers ) 
 + . build ( ) ; 
 + } 
 + 
 public static < T > T head ( final T [ ] elements ) { 
 checkNotNull ( elements ) ; 
 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 index f9254a3 . . 87272c0 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 @ @ - 24 , 7 + 24 , 6 @ @ import static com . github . dreamhead . moco . Moco . by ; 
 import static com . github . dreamhead . moco . Moco . context ; 
 import static com . github . dreamhead . moco . Moco . eq ; 
 import static com . github . dreamhead . moco . Moco . header ; 
 - import static com . github . dreamhead . moco . Moco . httpServer ; 
 import static com . github . dreamhead . moco . Moco . log ; 
 import static com . github . dreamhead . moco . Moco . query ; 
 import static com . github . dreamhead . moco . Moco . status ;

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java 
 new file mode 100644 
 index 0000000 . . 4d7cf1b 
 - - - / dev / null 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + package com . github . dreamhead . moco ; 
 + 
 + import com . google . common . eventbus . Subscribe ; 
 + import io . netty . handler . codec . http . FullHttpRequest ; 
 + import io . netty . handler . codec . http . FullHttpResponse ; 
 + 
 + public interface MocoMonitor { 
 + @ Subscribe 
 + void onMessageArrived ( FullHttpRequest request ) ; 
 + 
 + @ Subscribe 
 + void onException ( Exception e ) ; 
 + 
 + @ Subscribe 
 + void onMessageLeave ( FullHttpResponse response ) ; 
 + } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 index f5f3a4a . . 9a37346 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 @ @ - 1 , 7 + 1 , 6 @ @ 
 package com . github . dreamhead . moco . internal ; 
 
 import com . github . dreamhead . moco . * ; 
 - import com . github . dreamhead . moco . monitor . MocoMonitor ; 
 import com . github . dreamhead . moco . monitor . QuietMonitor ; 
 import com . github . dreamhead . moco . monitor . Slf4jMonitor ; 
 import com . github . dreamhead . moco . setting . BaseSetting ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / MocoMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / MocoMonitor . java 
 deleted file mode 100644 
 index 7607224 . . 0000000 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / MocoMonitor . java 
 + + + / dev / null 
 @ @ - 1 , 16 + 0 , 0 @ @ 
 - package com . github . dreamhead . moco . monitor ; 
 - 
 - import com . google . common . eventbus . Subscribe ; 
 - import io . netty . handler . codec . http . FullHttpRequest ; 
 - import io . netty . handler . codec . http . FullHttpResponse ; 
 - 
 - public interface MocoMonitor { 
 - @ Subscribe 
 - void onMessageArrived ( FullHttpRequest request ) ; 
 - 
 - @ Subscribe 
 - void onException ( Exception e ) ; 
 - 
 - @ Subscribe 
 - void onMessageLeave ( FullHttpResponse response ) ; 
 - } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java 
 index ba6868b . . 8b2c25a 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package com . github . dreamhead . moco . monitor ; 
 
 + import com . github . dreamhead . moco . MocoMonitor ; 
 import io . netty . handler . codec . http . FullHttpRequest ; 
 import io . netty . handler . codec . http . FullHttpResponse ; 
 import org . slf4j . Logger ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java 
 index fe77249 . . 8d8c968 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package com . github . dreamhead . moco . monitor ; 
 
 + import com . github . dreamhead . moco . MocoMonitor ; 
 import com . github . dreamhead . moco . dumper . Dumper ; 
 import com . github . dreamhead . moco . dumper . HttpRequestDumper ; 
 import com . github . dreamhead . moco . dumper . HttpResponseDumper ;
