BLEU SCORE: 0.08116697886877475

TEST MSG: removed redundant final from moco monitor
GENERATED MSG: created thread safe monitor

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java <nl> index 2184999 . . ed31f79 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java <nl> @ @ - 4 , 14 + 4 , 14 @ @ import com . google . common . eventbus . Subscribe ; <nl> <nl> public interface MocoMonitor { <nl> @ Subscribe <nl> - void onMessageArrived ( final Request request ) ; <nl> + void onMessageArrived ( Request request ) ; <nl> <nl> @ Subscribe <nl> - void onException ( final Throwable t ) ; <nl> + void onException ( Throwable t ) ; <nl> <nl> @ Subscribe <nl> - void onMessageLeave ( final Response response ) ; <nl> + void onMessageLeave ( Response response ) ; <nl> <nl> @ Subscribe <nl> - void onUnexpectedMessage ( final Request request ) ; <nl> + void onUnexpectedMessage ( Request request ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> index 25450a6 . . fab5297 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> @ @ - 8 , 6 + 8 , 7 @ @ import com . github . dreamhead . moco . dumper . HttpRequestDumper ; <nl> import com . github . dreamhead . moco . dumper . HttpResponseDumper ; <nl> import com . github . dreamhead . moco . monitor . QuietMonitor ; <nl> import com . github . dreamhead . moco . monitor . Slf4jMonitor ; <nl> + import com . github . dreamhead . moco . monitor . ThreadSafeMonitor ; <nl> import com . github . dreamhead . moco . setting . HttpSetting ; <nl> import com . google . common . base . Optional ; <nl> <nl> @ @ - 46 , 7 + 47 , 8 @ @ public class ActualHttpServer extends HttpConfiguration < ActualHttpServer > { <nl> public static ActualHttpServer createHttpServerWithMonitor ( final Optional < Integer > port , <nl> final MocoMonitor monitor , <nl> final MocoConfig . . . configs ) { <nl> - return new ActualHttpServer ( port , Optional . < HttpsCertificate > absent ( ) , monitor , configs ) ; <nl> + return new ActualHttpServer ( port , Optional . < HttpsCertificate > absent ( ) , <nl> + new ThreadSafeMonitor ( monitor ) , configs ) ; <nl> } <nl> <nl> public static ActualHttpServer createLogServer ( final Optional < Integer > port , final MocoConfig . . . configs ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java <nl> index 7f1b134 . . 1d3aa89 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java <nl> @ @ - 17 , 12 + 17 , 12 @ @ public class DefaultRequestHit extends AbstractMonitor implements RequestHit { <nl> private List < Request > requests = newArrayList ( ) ; <nl> <nl> @ Override <nl> - public synchronized void onMessageArrived ( final Request request ) { <nl> + public void onMessageArrived ( final Request request ) { <nl> this . requests . add ( request ) ; <nl> } <nl> <nl> @ Override <nl> - public synchronized void onUnexpectedMessage ( final Request request ) { <nl> + public void onUnexpectedMessage ( final Request request ) { <nl> this . unexpectedRequests . add ( request ) ; <nl> } <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java <nl> new file mode 100644 <nl> index 0000000 . . 1c7d96c <nl> - - - / dev / null <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java <nl> @ @ - 0 , 0 + 1 , 35 @ @ <nl> + package com . github . dreamhead . moco . monitor ; <nl> + <nl> + import com . github . dreamhead . moco . MocoMonitor ; <nl> + import com . github . dreamhead . moco . Request ; <nl> + import com . github . dreamhead . moco . Response ; <nl> + <nl> + public class ThreadSafeMonitor implements MocoMonitor { <nl> + private MocoMonitor monitor ; <nl> + <nl> + public ThreadSafeMonitor ( MocoMonitor monitor ) { <nl> + this . monitor = monitor ; <nl> + } <nl> + <nl> + @ Override <nl> + public synchronized void onMessageArrived ( Request request ) { <nl> + this . monitor . onMessageArrived ( request ) ; <nl> + <nl> + } <nl> + <nl> + @ Override <nl> + public synchronized void onException ( Throwable t ) { <nl> + this . monitor . onException ( t ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void onMessageLeave ( Response response ) { <nl> + this . monitor . onMessageLeave ( response ) ; <nl> + <nl> + } <nl> + <nl> + @ Override <nl> + public void onUnexpectedMessage ( Request request ) { <nl> + this . monitor . onUnexpectedMessage ( request ) ; <nl> + } <nl> + }

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java 
 index 2184999 . . ed31f79 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java 
 @ @ - 4 , 14 + 4 , 14 @ @ import com . google . common . eventbus . Subscribe ; 
 
 public interface MocoMonitor { 
 @ Subscribe 
 - void onMessageArrived ( final Request request ) ; 
 + void onMessageArrived ( Request request ) ; 
 
 @ Subscribe 
 - void onException ( final Throwable t ) ; 
 + void onException ( Throwable t ) ; 
 
 @ Subscribe 
 - void onMessageLeave ( final Response response ) ; 
 + void onMessageLeave ( Response response ) ; 
 
 @ Subscribe 
 - void onUnexpectedMessage ( final Request request ) ; 
 + void onUnexpectedMessage ( Request request ) ; 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 index 25450a6 . . fab5297 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 @ @ - 8 , 6 + 8 , 7 @ @ import com . github . dreamhead . moco . dumper . HttpRequestDumper ; 
 import com . github . dreamhead . moco . dumper . HttpResponseDumper ; 
 import com . github . dreamhead . moco . monitor . QuietMonitor ; 
 import com . github . dreamhead . moco . monitor . Slf4jMonitor ; 
 + import com . github . dreamhead . moco . monitor . ThreadSafeMonitor ; 
 import com . github . dreamhead . moco . setting . HttpSetting ; 
 import com . google . common . base . Optional ; 
 
 @ @ - 46 , 7 + 47 , 8 @ @ public class ActualHttpServer extends HttpConfiguration < ActualHttpServer > { 
 public static ActualHttpServer createHttpServerWithMonitor ( final Optional < Integer > port , 
 final MocoMonitor monitor , 
 final MocoConfig . . . configs ) { 
 - return new ActualHttpServer ( port , Optional . < HttpsCertificate > absent ( ) , monitor , configs ) ; 
 + return new ActualHttpServer ( port , Optional . < HttpsCertificate > absent ( ) , 
 + new ThreadSafeMonitor ( monitor ) , configs ) ; 
 } 
 
 public static ActualHttpServer createLogServer ( final Optional < Integer > port , final MocoConfig . . . configs ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java 
 index 7f1b134 . . 1d3aa89 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java 
 @ @ - 17 , 12 + 17 , 12 @ @ public class DefaultRequestHit extends AbstractMonitor implements RequestHit { 
 private List < Request > requests = newArrayList ( ) ; 
 
 @ Override 
 - public synchronized void onMessageArrived ( final Request request ) { 
 + public void onMessageArrived ( final Request request ) { 
 this . requests . add ( request ) ; 
 } 
 
 @ Override 
 - public synchronized void onUnexpectedMessage ( final Request request ) { 
 + public void onUnexpectedMessage ( final Request request ) { 
 this . unexpectedRequests . add ( request ) ; 
 } 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java 
 new file mode 100644 
 index 0000000 . . 1c7d96c 
 - - - / dev / null 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java 
 @ @ - 0 , 0 + 1 , 35 @ @ 
 + package com . github . dreamhead . moco . monitor ; 
 + 
 + import com . github . dreamhead . moco . MocoMonitor ; 
 + import com . github . dreamhead . moco . Request ; 
 + import com . github . dreamhead . moco . Response ; 
 + 
 + public class ThreadSafeMonitor implements MocoMonitor { 
 + private MocoMonitor monitor ; 
 + 
 + public ThreadSafeMonitor ( MocoMonitor monitor ) { 
 + this . monitor = monitor ; 
 + } 
 + 
 + @ Override 
 + public synchronized void onMessageArrived ( Request request ) { 
 + this . monitor . onMessageArrived ( request ) ; 
 + 
 + } 
 + 
 + @ Override 
 + public synchronized void onException ( Throwable t ) { 
 + this . monitor . onException ( t ) ; 
 + } 
 + 
 + @ Override 
 + public void onMessageLeave ( Response response ) { 
 + this . monitor . onMessageLeave ( response ) ; 
 + 
 + } 
 + 
 + @ Override 
 + public void onUnexpectedMessage ( Request request ) { 
 + this . monitor . onUnexpectedMessage ( request ) ; 
 + } 
 + }
