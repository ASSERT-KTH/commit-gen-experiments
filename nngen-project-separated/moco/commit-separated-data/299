BLEU SCORE: 0.027611988917697356

TEST MSG: moved fileds in watcher service to its place
GENERATED MSG: removed final from variable which is variable

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java <nl> index 06a6547 . . 202bd33 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java <nl> @ @ - 36 , 6 + 36 , 8 @ @ public class WatcherService { <nl> private boolean running ; <nl> private Multimap < WatchKey , Path > keys = HashMultimap . create ( ) ; <nl> private Multimap < Path , Function < File , Void > > listeners = HashMultimap . create ( ) ; <nl> + private Multimap < Path , Path > directoryToFiles = HashMultimap . create ( ) ; <nl> + private Map < Path , WatchKey > directoryToKey = newHashMap ( ) ; <nl> private Future < ? > result ; <nl> <nl> public synchronized void start ( ) throws IOException { <nl> @ @ - 64 , 8 + 66 , 8 @ @ public class WatcherService { <nl> private void doStop ( ) { <nl> this . listeners . clear ( ) ; <nl> this . keys . clear ( ) ; <nl> - directoryToFiles . clear ( ) ; <nl> - directoryToKey . clear ( ) ; <nl> + this . directoryToFiles . clear ( ) ; <nl> + this . directoryToKey . clear ( ) ; <nl> } <nl> <nl> private void loop ( ) { <nl> @ @ - 104 , 9 + 106 , 6 @ @ public class WatcherService { <nl> } <nl> } <nl> <nl> - private Multimap < Path , Path > directoryToFiles = HashMultimap . create ( ) ; <nl> - private Map < Path , WatchKey > directoryToKey = newHashMap ( ) ; <nl> - <nl> public void register ( final File file , final Function < File , Void > listener ) throws IOException { <nl> Path directory = Files . directoryOf ( file ) . toPath ( ) ; <nl> WatchKey key = directory . register ( service , new WatchEvent . Kind [ ] { ENTRY _ MODIFY } , HIGH ) ;
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java <nl> index 2c8084c . . 29d7177 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java <nl> @ @ - 28 , 8 + 28 , 8 @ @ public class WatcherService { <nl> private ExecutorService executor = Executors . newFixedThreadPool ( 5 ) ; <nl> private WatchService service ; <nl> private boolean running ; <nl> - private final Multimap < WatchKey , Path > keys = HashMultimap . create ( ) ; <nl> - private final Multimap < Path , Function < File , Void > > listeners = HashMultimap . create ( ) ; <nl> + private Multimap < WatchKey , Path > keys = HashMultimap . create ( ) ; <nl> + private Multimap < Path , Function < File , Void > > listeners = HashMultimap . create ( ) ; <nl> <nl> public synchronized void start ( ) throws IOException { <nl> if ( running ) {

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java 
 index 06a6547 . . 202bd33 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java 
 @ @ - 36 , 6 + 36 , 8 @ @ public class WatcherService { 
 private boolean running ; 
 private Multimap < WatchKey , Path > keys = HashMultimap . create ( ) ; 
 private Multimap < Path , Function < File , Void > > listeners = HashMultimap . create ( ) ; 
 + private Multimap < Path , Path > directoryToFiles = HashMultimap . create ( ) ; 
 + private Map < Path , WatchKey > directoryToKey = newHashMap ( ) ; 
 private Future < ? > result ; 
 
 public synchronized void start ( ) throws IOException { 
 @ @ - 64 , 8 + 66 , 8 @ @ public class WatcherService { 
 private void doStop ( ) { 
 this . listeners . clear ( ) ; 
 this . keys . clear ( ) ; 
 - directoryToFiles . clear ( ) ; 
 - directoryToKey . clear ( ) ; 
 + this . directoryToFiles . clear ( ) ; 
 + this . directoryToKey . clear ( ) ; 
 } 
 
 private void loop ( ) { 
 @ @ - 104 , 9 + 106 , 6 @ @ public class WatcherService { 
 } 
 } 
 
 - private Multimap < Path , Path > directoryToFiles = HashMultimap . create ( ) ; 
 - private Map < Path , WatchKey > directoryToKey = newHashMap ( ) ; 
 - 
 public void register ( final File file , final Function < File , Void > listener ) throws IOException { 
 Path directory = Files . directoryOf ( file ) . toPath ( ) ; 
 WatchKey key = directory . register ( service , new WatchEvent . Kind [ ] { ENTRY _ MODIFY } , HIGH ) ;

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java 
 index 2c8084c . . 29d7177 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java 
 @ @ - 28 , 8 + 28 , 8 @ @ public class WatcherService { 
 private ExecutorService executor = Executors . newFixedThreadPool ( 5 ) ; 
 private WatchService service ; 
 private boolean running ; 
 - private final Multimap < WatchKey , Path > keys = HashMultimap . create ( ) ; 
 - private final Multimap < Path , Function < File , Void > > listeners = HashMultimap . create ( ) ; 
 + private Multimap < WatchKey , Path > keys = HashMultimap . create ( ) ; 
 + private Multimap < Path , Function < File , Void > > listeners = HashMultimap . create ( ) ; 
 
 public synchronized void start ( ) throws IOException { 
 if ( running ) {
