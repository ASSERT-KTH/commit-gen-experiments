BLEU SCORE: 0.14058533129758727

TEST MSG: introduced random as template function
GENERATED MSG: introduced now function to template

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> index 8886ff7 . . cc8237b 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ import java . nio . charset . Charset ; <nl> import java . text . SimpleDateFormat ; <nl> import java . util . Date ; <nl> import java . util . List ; <nl> + import java . util . Random ; <nl> <nl> import static com . github . dreamhead . moco . model . MessageContent . content ; <nl> import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; <nl> @ @ - 40 , 7 + 41 , 7 @ @ import static com . google . common . collect . ImmutableMap . copyOf ; <nl> public class TemplateResourceReader implements ContentResourceReader { <nl> private static final Version CURRENT _ VERSION = Configuration . getVersion ( ) ; <nl> private static final String TEMPLATE _ NAME = " template " ; <nl> - private static final List < String > RESERVED _ NAME = ImmutableList . of ( " req " , " now " ) ; <nl> + private static final List < String > RESERVED _ NAME = ImmutableList . of ( " req " , " now " , " random " ) ; <nl> <nl> private static Logger logger = LoggerFactory . getLogger ( TemplateResourceReader . class ) ; <nl> <nl> @ @ - 114 , 6 + 115 , 7 @ @ public class TemplateResourceReader implements ContentResourceReader { <nl> return ImmutableMap . < String , Object > builder ( ) <nl> . putAll ( toVariableString ( request ) ) <nl> . put ( " now " , new NowMethod ( ) ) <nl> + . put ( " random " , new RandomMethod ( ) ) <nl> . put ( " req " , toTemplateRequest ( request ) ) <nl> . build ( ) ; <nl> } <nl> @ @ - 144 , 4 + 146 , 13 @ @ public class TemplateResourceReader implements ContentResourceReader { <nl> return format . format ( date ) ; <nl> } <nl> } <nl> + <nl> + private static class RandomMethod implements TemplateMethodModelEx { <nl> + private Random random = new Random ( ) ; <nl> + <nl> + @ Override <nl> + public Object exec ( List arguments ) { <nl> + return random . nextDouble ( ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> index b27a600 . . 3c65685 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> @ @ - 28 , 6 + 28 , 7 @ @ import static com . google . common . collect . ImmutableMap . of ; <nl> import static com . google . common . io . Files . toByteArray ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> import static org . junit . Assert . assertThat ; <nl> + import static org . junit . Assert . fail ; <nl> <nl> public class MocoTemplateTest extends AbstractMocoHttpTest { <nl> @ Test <nl> @ @ - 426 , 4 + 427 , 21 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { <nl> } <nl> } ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ generate _ response _ with _ random ( ) throws Exception { <nl> + server . request ( by ( uri ( " / random " ) ) ) . response ( template ( " $ { random ( ) } " ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + String response = helper . get ( remoteUrl ( " / random " ) ) ; <nl> + try { <nl> + Double . parseDouble ( response ) ; <nl> + } catch ( NumberFormatException e ) { <nl> + fail ( ) ; <nl> + } <nl> + } <nl> + } ) ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> index db87d26 . . b6ac842 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> @ @ - 17 , 6 + 17 , 8 @ @ import freemarker . template . Configuration ; <nl> import freemarker . template . DefaultObjectWrapperBuilder ; <nl> import freemarker . template . Template ; <nl> import freemarker . template . TemplateException ; <nl> + import freemarker . template . TemplateMethodModelEx ; <nl> + import freemarker . template . TemplateModelException ; <nl> import freemarker . template . Version ; <nl> import jdk . nashorn . internal . ir . annotations . Immutable ; <nl> import org . slf4j . Logger ; <nl> @ @ - 27 , 6 + 29 , 8 @ @ import java . io . IOException ; <nl> import java . io . OutputStreamWriter ; <nl> import java . io . Writer ; <nl> import java . nio . charset . Charset ; <nl> + import java . text . SimpleDateFormat ; <nl> + import java . util . Date ; <nl> import java . util . List ; <nl> <nl> import static com . github . dreamhead . moco . model . MessageContent . content ; <nl> @ @ - 36 , 6 + 40 , 7 @ @ import static com . google . common . collect . ImmutableMap . copyOf ; <nl> public class TemplateResourceReader implements ContentResourceReader { <nl> private static final Version CURRENT _ VERSION = Configuration . getVersion ( ) ; <nl> private static final String TEMPLATE _ NAME = " template " ; <nl> + private static final List < String > RESERVED _ NAME = ImmutableList . of ( " req " , " now " ) ; <nl> <nl> private static Logger logger = LoggerFactory . getLogger ( TemplateResourceReader . class ) ; <nl> <nl> @ @ - 46 , 7 + 51 , 7 @ @ public class TemplateResourceReader implements ContentResourceReader { <nl> <nl> private final ContentResource template ; <nl> private final ImmutableMap < String , ? extends Variable > variables ; <nl> - private static final List < String > RESERVED _ NAME = ImmutableList . of ( " req " ) ; <nl> + <nl> <nl> public static String checkValidVariableName ( final String name ) { <nl> if ( ! RESERVED _ NAME . contains ( <nl> @ @ - 108 , 6 + 113 , 7 @ @ public class TemplateResourceReader implements ContentResourceReader { <nl> private ImmutableMap < String , Object > variables ( final Request request ) { <nl> return ImmutableMap . < String , Object > builder ( ) <nl> . putAll ( toVariableString ( request ) ) <nl> + . put ( " now " , new NowMethod ( ) ) <nl> . put ( " req " , toTemplateRequest ( request ) ) <nl> . build ( ) ; <nl> } <nl> @ @ - 129 , 4 + 135 , 14 @ @ public class TemplateResourceReader implements ContentResourceReader { <nl> public MediaType getContentType ( final HttpRequest request ) { <nl> return template . getContentType ( request ) ; <nl> } <nl> + <nl> + private static class NowMethod implements TemplateMethodModelEx { <nl> + <nl> + @ Override <nl> + public Object exec ( final List arguments ) { <nl> + Date date = new Date ( ) ; <nl> + SimpleDateFormat format = new SimpleDateFormat ( arguments . get ( 0 ) . toString ( ) ) ; <nl> + return format . format ( date ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> index 3d0b031 . . b27a600 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> @ @ - 16 , 6 + 16 , 9 @ @ import java . io . IOException ; <nl> import java . io . InputStream ; <nl> import java . net . URL ; <nl> import java . nio . charset . Charset ; <nl> + import java . text . SimpleDateFormat ; <nl> + import java . time . format . DateTimeFormatter ; <nl> + import java . util . Date ; <nl> <nl> import static com . github . dreamhead . moco . Moco . * ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> @ @ - 409 , 4 + 412 , 18 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { <nl> } <nl> } ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ generate _ response _ with _ now ( ) throws Exception { <nl> + server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { now ( ' yyyy - MM - dd ' ) } " ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + Date date = new Date ( ) ; <nl> + SimpleDateFormat format = new SimpleDateFormat ( " yyyy - MM - dd " ) ; <nl> + assertThat ( helper . get ( remoteUrl ( " / template " ) ) , is ( format . format ( date ) ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 index 8886ff7 . . cc8237b 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 @ @ - 32 , 6 + 32 , 7 @ @ import java . nio . charset . Charset ; 
 import java . text . SimpleDateFormat ; 
 import java . util . Date ; 
 import java . util . List ; 
 + import java . util . Random ; 
 
 import static com . github . dreamhead . moco . model . MessageContent . content ; 
 import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; 
 @ @ - 40 , 7 + 41 , 7 @ @ import static com . google . common . collect . ImmutableMap . copyOf ; 
 public class TemplateResourceReader implements ContentResourceReader { 
 private static final Version CURRENT _ VERSION = Configuration . getVersion ( ) ; 
 private static final String TEMPLATE _ NAME = " template " ; 
 - private static final List < String > RESERVED _ NAME = ImmutableList . of ( " req " , " now " ) ; 
 + private static final List < String > RESERVED _ NAME = ImmutableList . of ( " req " , " now " , " random " ) ; 
 
 private static Logger logger = LoggerFactory . getLogger ( TemplateResourceReader . class ) ; 
 
 @ @ - 114 , 6 + 115 , 7 @ @ public class TemplateResourceReader implements ContentResourceReader { 
 return ImmutableMap . < String , Object > builder ( ) 
 . putAll ( toVariableString ( request ) ) 
 . put ( " now " , new NowMethod ( ) ) 
 + . put ( " random " , new RandomMethod ( ) ) 
 . put ( " req " , toTemplateRequest ( request ) ) 
 . build ( ) ; 
 } 
 @ @ - 144 , 4 + 146 , 13 @ @ public class TemplateResourceReader implements ContentResourceReader { 
 return format . format ( date ) ; 
 } 
 } 
 + 
 + private static class RandomMethod implements TemplateMethodModelEx { 
 + private Random random = new Random ( ) ; 
 + 
 + @ Override 
 + public Object exec ( List arguments ) { 
 + return random . nextDouble ( ) ; 
 + } 
 + } 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 index b27a600 . . 3c65685 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 @ @ - 28 , 6 + 28 , 7 @ @ import static com . google . common . collect . ImmutableMap . of ; 
 import static com . google . common . io . Files . toByteArray ; 
 import static org . hamcrest . CoreMatchers . is ; 
 import static org . junit . Assert . assertThat ; 
 + import static org . junit . Assert . fail ; 
 
 public class MocoTemplateTest extends AbstractMocoHttpTest { 
 @ Test 
 @ @ - 426 , 4 + 427 , 21 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { 
 } 
 } ) ; 
 } 
 + 
 + @ Test 
 + public void should _ generate _ response _ with _ random ( ) throws Exception { 
 + server . request ( by ( uri ( " / random " ) ) ) . response ( template ( " $ { random ( ) } " ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + String response = helper . get ( remoteUrl ( " / random " ) ) ; 
 + try { 
 + Double . parseDouble ( response ) ; 
 + } catch ( NumberFormatException e ) { 
 + fail ( ) ; 
 + } 
 + } 
 + } ) ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 index db87d26 . . b6ac842 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 @ @ - 17 , 6 + 17 , 8 @ @ import freemarker . template . Configuration ; 
 import freemarker . template . DefaultObjectWrapperBuilder ; 
 import freemarker . template . Template ; 
 import freemarker . template . TemplateException ; 
 + import freemarker . template . TemplateMethodModelEx ; 
 + import freemarker . template . TemplateModelException ; 
 import freemarker . template . Version ; 
 import jdk . nashorn . internal . ir . annotations . Immutable ; 
 import org . slf4j . Logger ; 
 @ @ - 27 , 6 + 29 , 8 @ @ import java . io . IOException ; 
 import java . io . OutputStreamWriter ; 
 import java . io . Writer ; 
 import java . nio . charset . Charset ; 
 + import java . text . SimpleDateFormat ; 
 + import java . util . Date ; 
 import java . util . List ; 
 
 import static com . github . dreamhead . moco . model . MessageContent . content ; 
 @ @ - 36 , 6 + 40 , 7 @ @ import static com . google . common . collect . ImmutableMap . copyOf ; 
 public class TemplateResourceReader implements ContentResourceReader { 
 private static final Version CURRENT _ VERSION = Configuration . getVersion ( ) ; 
 private static final String TEMPLATE _ NAME = " template " ; 
 + private static final List < String > RESERVED _ NAME = ImmutableList . of ( " req " , " now " ) ; 
 
 private static Logger logger = LoggerFactory . getLogger ( TemplateResourceReader . class ) ; 
 
 @ @ - 46 , 7 + 51 , 7 @ @ public class TemplateResourceReader implements ContentResourceReader { 
 
 private final ContentResource template ; 
 private final ImmutableMap < String , ? extends Variable > variables ; 
 - private static final List < String > RESERVED _ NAME = ImmutableList . of ( " req " ) ; 
 + 
 
 public static String checkValidVariableName ( final String name ) { 
 if ( ! RESERVED _ NAME . contains ( 
 @ @ - 108 , 6 + 113 , 7 @ @ public class TemplateResourceReader implements ContentResourceReader { 
 private ImmutableMap < String , Object > variables ( final Request request ) { 
 return ImmutableMap . < String , Object > builder ( ) 
 . putAll ( toVariableString ( request ) ) 
 + . put ( " now " , new NowMethod ( ) ) 
 . put ( " req " , toTemplateRequest ( request ) ) 
 . build ( ) ; 
 } 
 @ @ - 129 , 4 + 135 , 14 @ @ public class TemplateResourceReader implements ContentResourceReader { 
 public MediaType getContentType ( final HttpRequest request ) { 
 return template . getContentType ( request ) ; 
 } 
 + 
 + private static class NowMethod implements TemplateMethodModelEx { 
 + 
 + @ Override 
 + public Object exec ( final List arguments ) { 
 + Date date = new Date ( ) ; 
 + SimpleDateFormat format = new SimpleDateFormat ( arguments . get ( 0 ) . toString ( ) ) ; 
 + return format . format ( date ) ; 
 + } 
 + } 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 index 3d0b031 . . b27a600 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 @ @ - 16 , 6 + 16 , 9 @ @ import java . io . IOException ; 
 import java . io . InputStream ; 
 import java . net . URL ; 
 import java . nio . charset . Charset ; 
 + import java . text . SimpleDateFormat ; 
 + import java . time . format . DateTimeFormatter ; 
 + import java . util . Date ; 
 
 import static com . github . dreamhead . moco . Moco . * ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 @ @ - 409 , 4 + 412 , 18 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { 
 } 
 } ) ; 
 } 
 + 
 + @ Test 
 + public void should _ generate _ response _ with _ now ( ) throws Exception { 
 + server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { now ( ' yyyy - MM - dd ' ) } " ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + Date date = new Date ( ) ; 
 + SimpleDateFormat format = new SimpleDateFormat ( " yyyy - MM - dd " ) ; 
 + assertThat ( helper . get ( remoteUrl ( " / template " ) ) , is ( format . format ( date ) ) ) ; 
 + } 
 + } ) ; 
 + } 
 }
