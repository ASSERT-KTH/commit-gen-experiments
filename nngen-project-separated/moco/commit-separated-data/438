BLEU SCORE: 0.041961149062965476

TEST MSG: extracted text resource from resource in dynamic response handler factory
GENERATED MSG: applied as template resource to version

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> index fbfbcfe . . 47bfda2 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> @ @ - 176 , 6 + 176 , 10 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> return fileResource ( name , FileContainer . class . cast ( container ) ) ; <nl> } <nl> <nl> + return textResource ( name , container ) ; <nl> + } <nl> + <nl> + private Resource textResource ( final String name , final TextContainer container ) { <nl> if ( container . isRawText ( ) ) { <nl> return invokeTarget ( name , container . getText ( ) , Resource . class ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> index f782f11 . . 29fdd8e 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> @ @ - 181 , 7 + 181 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> <nl> if ( container . isForTemplate ( ) ) { <nl> if ( " version " . equalsIgnoreCase ( name ) ) { <nl> - return version ( template ( container . getText ( ) ) ) ; <nl> + return version ( container . asTemplateResource ( ) ) ; <nl> } <nl> <nl> return container . asTemplateResource ( name ) ;

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 index fbfbcfe . . 47bfda2 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 @ @ - 176 , 6 + 176 , 10 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 return fileResource ( name , FileContainer . class . cast ( container ) ) ; 
 } 
 
 + return textResource ( name , container ) ; 
 + } 
 + 
 + private Resource textResource ( final String name , final TextContainer container ) { 
 if ( container . isRawText ( ) ) { 
 return invokeTarget ( name , container . getText ( ) , Resource . class ) ; 
 }

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 index f782f11 . . 29fdd8e 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 @ @ - 181 , 7 + 181 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 
 if ( container . isForTemplate ( ) ) { 
 if ( " version " . equalsIgnoreCase ( name ) ) { 
 - return version ( template ( container . getText ( ) ) ) ; 
 + return version ( container . asTemplateResource ( ) ) ; 
 } 
 
 return container . asTemplateResource ( name ) ;
