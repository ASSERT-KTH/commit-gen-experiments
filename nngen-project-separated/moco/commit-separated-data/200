BLEU SCORE: 0.04767707020457096

TEST MSG: moved suppress warnings to method in file config applier
GENERATED MSG: correct header resource to cookie resource

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java <nl> index 5f5ccaa . . 89f5097 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java <nl> @ @ - 51 , 10 + 51 , 10 @ @ public final class ResourceConfigApplierFactory { <nl> } ; <nl> } <nl> <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public static ResourceConfigApplier uriConfigApplier ( final String id , final String uri ) { <nl> return new SelfResourceConfigApplier ( id ) { <nl> @ Override <nl> + @ SuppressWarnings ( " unchecked " ) <nl> protected Resource newResource ( final MocoConfig config ) { <nl> return uriResource ( ( String ) config . apply ( uri ) ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index f40f6f4 . . 0a60450 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 95 , 9 + 95 , 7 @ @ public class Moco { <nl> } <nl> <nl> public static ResponseHandler header ( final String name , final String value ) { <nl> - return new HeaderResponseHandler ( <nl> - checkNotNull ( name , " Null header name is not allowed " ) , <nl> - text ( checkNotNull ( value , " Null header value is not allowed " ) ) ) ; <nl> + return header ( name , text ( value ) ) ; <nl> } <nl> <nl> public static ResponseHandler header ( final String name , final Resource value ) { <nl> @ @ - 119 , 7 + 117 , 7 @ @ public class Moco { <nl> } <nl> <nl> public static ResponseHandler cookie ( final String key , final Resource resource ) { <nl> - return header ( " Set - Cookie " , headerResource ( <nl> + return header ( " Set - Cookie " , cookieResource ( <nl> checkNotNull ( key , " Null cookie key is not allowed " ) , <nl> checkNotNull ( resource , " Null cookie value is not allowed " ) ) ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / IdFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / IdFactory . java <nl> index 5c55c9a . . c20ab74 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / IdFactory . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / IdFactory . java <nl> @ @ - 10 , 14 + 10 , 5 @ @ public class IdFactory { <nl> } ; <nl> } <nl> <nl> - public static Identifiable id ( final Resource resource ) { <nl> - return new Identifiable ( ) { <nl> - @ Override <nl> - public String id ( ) { <nl> - return resource . id ( ) ; <nl> - } <nl> - } ; <nl> - } <nl> - <nl> private IdFactory ( ) { } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java <nl> index 59b213e . . 2984582 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java <nl> @ @ - 20 , 12 + 20 , 12 @ @ public class ResourceConfigApplierFactory { <nl> } ; <nl> } <nl> <nl> - public static ResourceConfigApplier headerConfigApplier ( final String key , final Resource headerResource ) { <nl> + public static ResourceConfigApplier cookieConfigApplier ( final String key , final Resource headerResource ) { <nl> return new ResourceConfigApplier ( ) { <nl> @ Override <nl> public Resource apply ( MocoConfig config , Resource resource ) { <nl> if ( config . isFor ( headerResource . id ( ) ) ) { <nl> - return headerResource ( key , resource . apply ( config ) ) ; <nl> + return cookieResource ( key , resource . apply ( config ) ) ; <nl> } <nl> <nl> return resource ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java <nl> index cf68202 . . f3a203b 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java <nl> @ @ - 55 , 8 + 55 , 8 @ @ public class ResourceFactory { <nl> } ) ; <nl> } <nl> <nl> - public static Resource headerResource ( final String key , final Resource resource ) { <nl> - return resource ( id ( resource . id ( ) ) , headerConfigApplier ( key , resource ) , new ResourceReader ( ) { <nl> + public static Resource cookieResource ( final String key , final Resource resource ) { <nl> + return resource ( id ( " cookie " ) , cookieConfigApplier ( key , resource ) , new ResourceReader ( ) { <nl> @ Override <nl> public byte [ ] readFor ( HttpRequest request ) { <nl> return new Cookies ( ) . encodeCookie ( key , new String ( resource . readFor ( request ) ) ) . getBytes ( ) ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java 
 index 5f5ccaa . . 89f5097 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java 
 @ @ - 51 , 10 + 51 , 10 @ @ public final class ResourceConfigApplierFactory { 
 } ; 
 } 
 
 - @ SuppressWarnings ( " unchecked " ) 
 public static ResourceConfigApplier uriConfigApplier ( final String id , final String uri ) { 
 return new SelfResourceConfigApplier ( id ) { 
 @ Override 
 + @ SuppressWarnings ( " unchecked " ) 
 protected Resource newResource ( final MocoConfig config ) { 
 return uriResource ( ( String ) config . apply ( uri ) ) ; 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index f40f6f4 . . 0a60450 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 95 , 9 + 95 , 7 @ @ public class Moco { 
 } 
 
 public static ResponseHandler header ( final String name , final String value ) { 
 - return new HeaderResponseHandler ( 
 - checkNotNull ( name , " Null header name is not allowed " ) , 
 - text ( checkNotNull ( value , " Null header value is not allowed " ) ) ) ; 
 + return header ( name , text ( value ) ) ; 
 } 
 
 public static ResponseHandler header ( final String name , final Resource value ) { 
 @ @ - 119 , 7 + 117 , 7 @ @ public class Moco { 
 } 
 
 public static ResponseHandler cookie ( final String key , final Resource resource ) { 
 - return header ( " Set - Cookie " , headerResource ( 
 + return header ( " Set - Cookie " , cookieResource ( 
 checkNotNull ( key , " Null cookie key is not allowed " ) , 
 checkNotNull ( resource , " Null cookie value is not allowed " ) ) ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / IdFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / IdFactory . java 
 index 5c55c9a . . c20ab74 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / IdFactory . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / IdFactory . java 
 @ @ - 10 , 14 + 10 , 5 @ @ public class IdFactory { 
 } ; 
 } 
 
 - public static Identifiable id ( final Resource resource ) { 
 - return new Identifiable ( ) { 
 - @ Override 
 - public String id ( ) { 
 - return resource . id ( ) ; 
 - } 
 - } ; 
 - } 
 - 
 private IdFactory ( ) { } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java 
 index 59b213e . . 2984582 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java 
 @ @ - 20 , 12 + 20 , 12 @ @ public class ResourceConfigApplierFactory { 
 } ; 
 } 
 
 - public static ResourceConfigApplier headerConfigApplier ( final String key , final Resource headerResource ) { 
 + public static ResourceConfigApplier cookieConfigApplier ( final String key , final Resource headerResource ) { 
 return new ResourceConfigApplier ( ) { 
 @ Override 
 public Resource apply ( MocoConfig config , Resource resource ) { 
 if ( config . isFor ( headerResource . id ( ) ) ) { 
 - return headerResource ( key , resource . apply ( config ) ) ; 
 + return cookieResource ( key , resource . apply ( config ) ) ; 
 } 
 
 return resource ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java 
 index cf68202 . . f3a203b 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java 
 @ @ - 55 , 8 + 55 , 8 @ @ public class ResourceFactory { 
 } ) ; 
 } 
 
 - public static Resource headerResource ( final String key , final Resource resource ) { 
 - return resource ( id ( resource . id ( ) ) , headerConfigApplier ( key , resource ) , new ResourceReader ( ) { 
 + public static Resource cookieResource ( final String key , final Resource resource ) { 
 + return resource ( id ( " cookie " ) , cookieConfigApplier ( key , resource ) , new ResourceReader ( ) { 
 @ Override 
 public byte [ ] readFor ( HttpRequest request ) { 
 return new Cookies ( ) . encodeCookie ( key , new String ( resource . readFor ( request ) ) ) . getBytes ( ) ;
