BLEU SCORE: 0.17747405280050269

TEST MSG: added exception handler for doRemoteUrl in proxy response handler
GENERATED MSG: introduced supplier to proxy response handler

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java <nl> index 8c38e01 . . d92855e 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java <nl> @ @ - 9 , 6 + 9 , 7 @ @ import com . google . common . base . Supplier ; <nl> <nl> import java . net . URL ; <nl> <nl> + import static com . google . common . base . Optional . absent ; <nl> import static com . google . common . base . Optional . of ; <nl> <nl> public class ProxyResponseHandler extends AbstractProxyResponseHandler implements ResponseHandler { <nl> @ @ - 21 , 7 + 22 , 10 @ @ public class ProxyResponseHandler extends AbstractProxyResponseHandler implement <nl> <nl> @ Override <nl> protected Optional < String > doRemoteUrl ( final HttpRequest request ) { <nl> - <nl> - return of ( url . apply ( request ) . toString ( ) ) ; <nl> + try { <nl> + return of ( url . apply ( request ) . toString ( ) ) ; <nl> + } catch ( IllegalArgumentException e ) { <nl> + return absent ( ) ; <nl> + } <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index 03bac91 . . 5029179 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 63 , 9 + 63 , 11 @ @ import static com . github . dreamhead . moco . resource . ResourceFactory . textResource ; <nl> import static com . github . dreamhead . moco . resource . ResourceFactory . uriResource ; <nl> import static com . github . dreamhead . moco . resource . ResourceFactory . versionResource ; <nl> import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; <nl> + import static com . github . dreamhead . moco . util . URLs . toUrl ; <nl> import static com . google . common . base . Optional . of ; <nl> import static com . google . common . base . Preconditions . checkArgument ; <nl> import static com . google . common . base . Preconditions . checkNotNull ; <nl> + import static com . google . common . base . Suppliers . ofInstance ; <nl> import static com . google . common . collect . ImmutableList . copyOf ; <nl> import static com . google . common . net . HttpHeaders . SET _ COOKIE ; <nl> import static java . lang . String . format ; <nl> @ @ - 423 , 7 + 425 , 7 @ @ public final class Moco { <nl> } <nl> <nl> public static ResponseHandler proxy ( final String url , final Failover failover ) { <nl> - return new ProxyResponseHandler ( URLs . toUrl ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , <nl> + return new ProxyResponseHandler ( ofInstance ( toUrl ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) ) , <nl> checkNotNull ( failover , " Failover should not be null " ) ) ; <nl> } <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java <nl> index 31e2f7a . . c2fd4e9 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java <nl> @ @ - 3 , 21 + 3 , 22 @ @ package com . github . dreamhead . moco . handler ; <nl> import com . github . dreamhead . moco . ResponseHandler ; <nl> import com . github . dreamhead . moco . handler . failover . Failover ; <nl> import com . google . common . base . Optional ; <nl> + import com . google . common . base . Supplier ; <nl> <nl> import java . net . URL ; <nl> <nl> import static com . google . common . base . Optional . of ; <nl> <nl> public class ProxyResponseHandler extends AbstractProxyResponseHandler implements ResponseHandler { <nl> - private final URL url ; <nl> + private final Supplier < URL > url ; <nl> <nl> - public ProxyResponseHandler ( final URL url , final Failover failover ) { <nl> + public ProxyResponseHandler ( final Supplier < URL > url , final Failover failover ) { <nl> super ( failover ) ; <nl> this . url = url ; <nl> } <nl> <nl> @ Override <nl> protected Optional < String > remoteUrl ( final String uri ) { <nl> - return of ( this . url . toString ( ) ) ; <nl> + return of ( this . url . get ( ) . toString ( ) ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java 
 index 8c38e01 . . d92855e 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import com . google . common . base . Supplier ; 
 
 import java . net . URL ; 
 
 + import static com . google . common . base . Optional . absent ; 
 import static com . google . common . base . Optional . of ; 
 
 public class ProxyResponseHandler extends AbstractProxyResponseHandler implements ResponseHandler { 
 @ @ - 21 , 7 + 22 , 10 @ @ public class ProxyResponseHandler extends AbstractProxyResponseHandler implement 
 
 @ Override 
 protected Optional < String > doRemoteUrl ( final HttpRequest request ) { 
 - 
 - return of ( url . apply ( request ) . toString ( ) ) ; 
 + try { 
 + return of ( url . apply ( request ) . toString ( ) ) ; 
 + } catch ( IllegalArgumentException e ) { 
 + return absent ( ) ; 
 + } 
 } 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index 03bac91 . . 5029179 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 63 , 9 + 63 , 11 @ @ import static com . github . dreamhead . moco . resource . ResourceFactory . textResource ; 
 import static com . github . dreamhead . moco . resource . ResourceFactory . uriResource ; 
 import static com . github . dreamhead . moco . resource . ResourceFactory . versionResource ; 
 import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; 
 + import static com . github . dreamhead . moco . util . URLs . toUrl ; 
 import static com . google . common . base . Optional . of ; 
 import static com . google . common . base . Preconditions . checkArgument ; 
 import static com . google . common . base . Preconditions . checkNotNull ; 
 + import static com . google . common . base . Suppliers . ofInstance ; 
 import static com . google . common . collect . ImmutableList . copyOf ; 
 import static com . google . common . net . HttpHeaders . SET _ COOKIE ; 
 import static java . lang . String . format ; 
 @ @ - 423 , 7 + 425 , 7 @ @ public final class Moco { 
 } 
 
 public static ResponseHandler proxy ( final String url , final Failover failover ) { 
 - return new ProxyResponseHandler ( URLs . toUrl ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , 
 + return new ProxyResponseHandler ( ofInstance ( toUrl ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) ) , 
 checkNotNull ( failover , " Failover should not be null " ) ) ; 
 } 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java 
 index 31e2f7a . . c2fd4e9 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java 
 @ @ - 3 , 21 + 3 , 22 @ @ package com . github . dreamhead . moco . handler ; 
 import com . github . dreamhead . moco . ResponseHandler ; 
 import com . github . dreamhead . moco . handler . failover . Failover ; 
 import com . google . common . base . Optional ; 
 + import com . google . common . base . Supplier ; 
 
 import java . net . URL ; 
 
 import static com . google . common . base . Optional . of ; 
 
 public class ProxyResponseHandler extends AbstractProxyResponseHandler implements ResponseHandler { 
 - private final URL url ; 
 + private final Supplier < URL > url ; 
 
 - public ProxyResponseHandler ( final URL url , final Failover failover ) { 
 + public ProxyResponseHandler ( final Supplier < URL > url , final Failover failover ) { 
 super ( failover ) ; 
 this . url = url ; 
 } 
 
 @ Override 
 protected Optional < String > remoteUrl ( final String uri ) { 
 - return of ( this . url . toString ( ) ) ; 
 + return of ( this . url . get ( ) . toString ( ) ) ; 
 } 
 }
