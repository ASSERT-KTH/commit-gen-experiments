BLEU SCORE: 0.06567274736060397

TEST MSG: handled template first in text container deserializer
GENERATED MSG: cleaned up deserializer code

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java <nl> index 4a5b419 . . f464003 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java <nl> @ @ - 33 , 15 + 33 , 15 @ @ public class TextContainerDeserializerHelper { <nl> String operation = jp . getText ( ) . trim ( ) ; <nl> builder . withOperation ( operation ) ; <nl> JsonToken token = jp . nextToken ( ) ; <nl> + if ( isForTemplate ( operation ) & & token = = JsonToken . START _ OBJECT ) { <nl> + return template ( jp , builder ) ; <nl> + } <nl> + <nl> if ( token = = JsonToken . VALUE _ STRING ) { <nl> String text = jp . getText ( ) . trim ( ) ; <nl> jp . nextToken ( ) ; <nl> return builder . withText ( text ) . build ( ) ; <nl> } <nl> - <nl> - if ( isForTemplate ( operation ) & & token = = JsonToken . START _ OBJECT ) { <nl> - return template ( jp , builder ) ; <nl> - } <nl> } <nl> <nl> return ( TextContainer ) ctxt . handleUnexpectedToken ( TextContainer . class , jp ) ;
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> index 3267b1c . . 7daeffd 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> @ @ - 18 , 7 + 18 , 9 @ @ public class ProxyContainerDeserializer extends JsonDeserializer < ProxyContainer > <nl> JsonToken currentToken = jp . getCurrentToken ( ) ; <nl> if ( currentToken = = JsonToken . VALUE _ STRING ) { <nl> return builder ( ) . withUrl ( jp . getText ( ) . trim ( ) ) . build ( ) ; <nl> - } else if ( currentToken = = JsonToken . START _ OBJECT ) { <nl> + } <nl> + <nl> + if ( currentToken = = JsonToken . START _ OBJECT ) { <nl> InternalProxyContainer container = get ( jp . readValuesAs ( InternalProxyContainer . class ) , 0 ) ; <nl> return container . toProxyContainer ( ) ; <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java <nl> index 37b993d . . 69d98fe 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java <nl> @ @ - 22 , 7 + 22 , 9 @ @ public class TextContainerDeserializer extends JsonDeserializer < TextContainer > { <nl> JsonToken currentToken = jp . getCurrentToken ( ) ; <nl> if ( currentToken = = JsonToken . VALUE _ STRING ) { <nl> return text ( jp ) ; <nl> - } else if ( currentToken = = JsonToken . START _ OBJECT ) { <nl> + } <nl> + <nl> + if ( currentToken = = JsonToken . START _ OBJECT ) { <nl> jp . nextToken ( ) ; <nl> return textContainer ( jp , ctxt ) ; <nl> }

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java 
 index 4a5b419 . . f464003 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java 
 @ @ - 33 , 15 + 33 , 15 @ @ public class TextContainerDeserializerHelper { 
 String operation = jp . getText ( ) . trim ( ) ; 
 builder . withOperation ( operation ) ; 
 JsonToken token = jp . nextToken ( ) ; 
 + if ( isForTemplate ( operation ) & & token = = JsonToken . START _ OBJECT ) { 
 + return template ( jp , builder ) ; 
 + } 
 + 
 if ( token = = JsonToken . VALUE _ STRING ) { 
 String text = jp . getText ( ) . trim ( ) ; 
 jp . nextToken ( ) ; 
 return builder . withText ( text ) . build ( ) ; 
 } 
 - 
 - if ( isForTemplate ( operation ) & & token = = JsonToken . START _ OBJECT ) { 
 - return template ( jp , builder ) ; 
 - } 
 } 
 
 return ( TextContainer ) ctxt . handleUnexpectedToken ( TextContainer . class , jp ) ;

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 index 3267b1c . . 7daeffd 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 @ @ - 18 , 7 + 18 , 9 @ @ public class ProxyContainerDeserializer extends JsonDeserializer < ProxyContainer > 
 JsonToken currentToken = jp . getCurrentToken ( ) ; 
 if ( currentToken = = JsonToken . VALUE _ STRING ) { 
 return builder ( ) . withUrl ( jp . getText ( ) . trim ( ) ) . build ( ) ; 
 - } else if ( currentToken = = JsonToken . START _ OBJECT ) { 
 + } 
 + 
 + if ( currentToken = = JsonToken . START _ OBJECT ) { 
 InternalProxyContainer container = get ( jp . readValuesAs ( InternalProxyContainer . class ) , 0 ) ; 
 return container . toProxyContainer ( ) ; 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java 
 index 37b993d . . 69d98fe 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java 
 @ @ - 22 , 7 + 22 , 9 @ @ public class TextContainerDeserializer extends JsonDeserializer < TextContainer > { 
 JsonToken currentToken = jp . getCurrentToken ( ) ; 
 if ( currentToken = = JsonToken . VALUE _ STRING ) { 
 return text ( jp ) ; 
 - } else if ( currentToken = = JsonToken . START _ OBJECT ) { 
 + } 
 + 
 + if ( currentToken = = JsonToken . START _ OBJECT ) { 
 jp . nextToken ( ) ; 
 return textContainer ( jp , ctxt ) ; 
 }
