BLEU SCORE: 0.07495553473355841

TEST MSG: introduced file parameter to prepare target session in default failover executor
GENERATED MSG: decoupled full http response from failover executor

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> index a954717 . . 6def1ac 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> @ @ - 39 , 23 + 39 , 23 @ @ public class DefaultFailoverExecutor implements FailoverExecutor { <nl> } <nl> <nl> @ Override <nl> - public void onCompleteResponse ( final HttpRequest request , final HttpResponse httpResponse ) { <nl> + public void onCompleteResponse ( final HttpRequest request , final HttpResponse response ) { <nl> try { <nl> ObjectWriter writer = mapper . writerWithDefaultPrettyPrinter ( ) ; <nl> - Session targetSession = Session . newSession ( request , httpResponse ) ; <nl> - writer . writeValue ( this . file , prepareTargetSessions ( targetSession ) ) ; <nl> + Session targetSession = Session . newSession ( request , response ) ; <nl> + writer . writeValue ( this . file , prepareTargetSessions ( this . file , targetSession ) ) ; <nl> } catch ( IOException e ) { <nl> throw new MocoException ( e ) ; <nl> } <nl> } <nl> <nl> - private ImmutableList < Session > prepareTargetSessions ( final Session targetSession ) { <nl> + private ImmutableList < Session > prepareTargetSessions ( final File file , final Session targetSession ) { <nl> if ( file . length ( ) = = 0 ) { <nl> return of ( targetSession ) ; <nl> } <nl> <nl> return ImmutableList . < Session > builder ( ) <nl> - . addAll ( toUniqueSessions ( targetSession , restoreSessions ( this . file ) ) ) <nl> + . addAll ( toUniqueSessions ( targetSession , restoreSessions ( file ) ) ) <nl> . add ( targetSession ) <nl> . build ( ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java <nl> index 5c8a914 . . 60e2767 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java <nl> @ @ - 19 , 8 + 19 , 8 @ @ public class Failover { <nl> return executor . failover ( request ) ; <nl> } <nl> <nl> - public void onCompleteResponse ( final HttpRequest request , final HttpResponse httpResponse ) { <nl> - executor . onCompleteResponse ( request , httpResponse ) ; <nl> + public void onCompleteResponse ( final HttpRequest request , final HttpResponse response ) { <nl> + executor . onCompleteResponse ( request , response ) ; <nl> } <nl> <nl> public boolean isPlayback ( ) {
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> index a62ba30 . . b20b37b 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> @ @ - 11 , 7 + 11 , 6 @ @ import com . github . dreamhead . moco . model . Session ; <nl> import com . google . common . base . Optional ; <nl> import com . google . common . base . Predicate ; <nl> import com . google . common . collect . ImmutableList ; <nl> - import io . netty . handler . codec . http . FullHttpResponse ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> @ @ - 19 , 7 + 18 , 6 @ @ import java . io . File ; <nl> import java . io . IOException ; <nl> import java . util . List ; <nl> <nl> - import static com . github . dreamhead . moco . model . MessageFactory . writeResponse ; <nl> import static com . google . common . base . Predicates . not ; <nl> import static com . google . common . collect . FluentIterable . from ; <nl> import static com . google . common . collect . ImmutableList . copyOf ; <nl> @ @ - 77 , 11 + 75 , 7 @ @ public class DefaultFailoverExecutor implements FailoverExecutor { <nl> } <nl> <nl> @ Override <nl> - public void failover ( HttpRequest request , FullHttpResponse response ) { <nl> - writeResponse ( response , failoverResponse ( request ) ) ; <nl> - } <nl> - <nl> - private HttpResponse failoverResponse ( HttpRequest request ) { <nl> + public HttpResponse failover ( HttpRequest request ) { <nl> ImmutableList < Session > sessions = restoreSessions ( this . file ) ; <nl> final Optional < Session > session = tryFind ( sessions , isForRequest ( request ) ) ; <nl> if ( session . isPresent ( ) ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java <nl> index bf4188a . . da77ca7 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java <nl> @ @ - 4 , 6 + 4 , 8 @ @ import com . github . dreamhead . moco . HttpRequest ; <nl> import com . github . dreamhead . moco . HttpResponse ; <nl> import io . netty . handler . codec . http . FullHttpResponse ; <nl> <nl> + import static com . github . dreamhead . moco . model . MessageFactory . writeResponse ; <nl> + <nl> public class Failover { <nl> public static final Failover DEFAULT _ FAILOVER = new Failover ( FailoverExecutor . EMPTY _ FAILOVER , FailoverStrategy . FAILOVER ) ; <nl> <nl> @ @ - 20 , 7 + 22 , 11 @ @ public class Failover { <nl> } <nl> <nl> public void failover ( HttpRequest request , FullHttpResponse response ) { <nl> - executor . failover ( request , response ) ; <nl> + writeResponse ( response , failover ( request ) ) ; <nl> + } <nl> + <nl> + public HttpResponse failover ( HttpRequest request ) { <nl> + return executor . failover ( request ) ; <nl> } <nl> <nl> public void onCompleteResponse ( HttpRequest request , HttpResponse httpResponse ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java <nl> index a57cc27 . . 3403f60 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java <nl> @ @ - 2 , 11 + 2 , 10 @ @ package com . github . dreamhead . moco . handler . failover ; <nl> <nl> import com . github . dreamhead . moco . HttpRequest ; <nl> import com . github . dreamhead . moco . HttpResponse ; <nl> - import io . netty . handler . codec . http . FullHttpResponse ; <nl> <nl> public interface FailoverExecutor { <nl> void onCompleteResponse ( HttpRequest request , HttpResponse response ) ; <nl> - void failover ( HttpRequest request , FullHttpResponse response ) ; <nl> + HttpResponse failover ( HttpRequest request ) ; <nl> <nl> FailoverExecutor EMPTY _ FAILOVER = new FailoverExecutor ( ) { <nl> @ Override <nl> @ @ - 14 , 7 + 13 , 7 @ @ public interface FailoverExecutor { <nl> } <nl> <nl> @ Override <nl> - public void failover ( HttpRequest request , FullHttpResponse response ) { <nl> + public HttpResponse failover ( HttpRequest request ) { <nl> throw new RuntimeException ( " no failover response found " ) ; <nl> } <nl> } ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 index a954717 . . 6def1ac 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 @ @ - 39 , 23 + 39 , 23 @ @ public class DefaultFailoverExecutor implements FailoverExecutor { 
 } 
 
 @ Override 
 - public void onCompleteResponse ( final HttpRequest request , final HttpResponse httpResponse ) { 
 + public void onCompleteResponse ( final HttpRequest request , final HttpResponse response ) { 
 try { 
 ObjectWriter writer = mapper . writerWithDefaultPrettyPrinter ( ) ; 
 - Session targetSession = Session . newSession ( request , httpResponse ) ; 
 - writer . writeValue ( this . file , prepareTargetSessions ( targetSession ) ) ; 
 + Session targetSession = Session . newSession ( request , response ) ; 
 + writer . writeValue ( this . file , prepareTargetSessions ( this . file , targetSession ) ) ; 
 } catch ( IOException e ) { 
 throw new MocoException ( e ) ; 
 } 
 } 
 
 - private ImmutableList < Session > prepareTargetSessions ( final Session targetSession ) { 
 + private ImmutableList < Session > prepareTargetSessions ( final File file , final Session targetSession ) { 
 if ( file . length ( ) = = 0 ) { 
 return of ( targetSession ) ; 
 } 
 
 return ImmutableList . < Session > builder ( ) 
 - . addAll ( toUniqueSessions ( targetSession , restoreSessions ( this . file ) ) ) 
 + . addAll ( toUniqueSessions ( targetSession , restoreSessions ( file ) ) ) 
 . add ( targetSession ) 
 . build ( ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java 
 index 5c8a914 . . 60e2767 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java 
 @ @ - 19 , 8 + 19 , 8 @ @ public class Failover { 
 return executor . failover ( request ) ; 
 } 
 
 - public void onCompleteResponse ( final HttpRequest request , final HttpResponse httpResponse ) { 
 - executor . onCompleteResponse ( request , httpResponse ) ; 
 + public void onCompleteResponse ( final HttpRequest request , final HttpResponse response ) { 
 + executor . onCompleteResponse ( request , response ) ; 
 } 
 
 public boolean isPlayback ( ) {

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 index a62ba30 . . b20b37b 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 @ @ - 11 , 7 + 11 , 6 @ @ import com . github . dreamhead . moco . model . Session ; 
 import com . google . common . base . Optional ; 
 import com . google . common . base . Predicate ; 
 import com . google . common . collect . ImmutableList ; 
 - import io . netty . handler . codec . http . FullHttpResponse ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 @ @ - 19 , 7 + 18 , 6 @ @ import java . io . File ; 
 import java . io . IOException ; 
 import java . util . List ; 
 
 - import static com . github . dreamhead . moco . model . MessageFactory . writeResponse ; 
 import static com . google . common . base . Predicates . not ; 
 import static com . google . common . collect . FluentIterable . from ; 
 import static com . google . common . collect . ImmutableList . copyOf ; 
 @ @ - 77 , 11 + 75 , 7 @ @ public class DefaultFailoverExecutor implements FailoverExecutor { 
 } 
 
 @ Override 
 - public void failover ( HttpRequest request , FullHttpResponse response ) { 
 - writeResponse ( response , failoverResponse ( request ) ) ; 
 - } 
 - 
 - private HttpResponse failoverResponse ( HttpRequest request ) { 
 + public HttpResponse failover ( HttpRequest request ) { 
 ImmutableList < Session > sessions = restoreSessions ( this . file ) ; 
 final Optional < Session > session = tryFind ( sessions , isForRequest ( request ) ) ; 
 if ( session . isPresent ( ) ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java 
 index bf4188a . . da77ca7 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / Failover . java 
 @ @ - 4 , 6 + 4 , 8 @ @ import com . github . dreamhead . moco . HttpRequest ; 
 import com . github . dreamhead . moco . HttpResponse ; 
 import io . netty . handler . codec . http . FullHttpResponse ; 
 
 + import static com . github . dreamhead . moco . model . MessageFactory . writeResponse ; 
 + 
 public class Failover { 
 public static final Failover DEFAULT _ FAILOVER = new Failover ( FailoverExecutor . EMPTY _ FAILOVER , FailoverStrategy . FAILOVER ) ; 
 
 @ @ - 20 , 7 + 22 , 11 @ @ public class Failover { 
 } 
 
 public void failover ( HttpRequest request , FullHttpResponse response ) { 
 - executor . failover ( request , response ) ; 
 + writeResponse ( response , failover ( request ) ) ; 
 + } 
 + 
 + public HttpResponse failover ( HttpRequest request ) { 
 + return executor . failover ( request ) ; 
 } 
 
 public void onCompleteResponse ( HttpRequest request , HttpResponse httpResponse ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java 
 index a57cc27 . . 3403f60 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java 
 @ @ - 2 , 11 + 2 , 10 @ @ package com . github . dreamhead . moco . handler . failover ; 
 
 import com . github . dreamhead . moco . HttpRequest ; 
 import com . github . dreamhead . moco . HttpResponse ; 
 - import io . netty . handler . codec . http . FullHttpResponse ; 
 
 public interface FailoverExecutor { 
 void onCompleteResponse ( HttpRequest request , HttpResponse response ) ; 
 - void failover ( HttpRequest request , FullHttpResponse response ) ; 
 + HttpResponse failover ( HttpRequest request ) ; 
 
 FailoverExecutor EMPTY _ FAILOVER = new FailoverExecutor ( ) { 
 @ Override 
 @ @ - 14 , 7 + 13 , 7 @ @ public interface FailoverExecutor { 
 } 
 
 @ Override 
 - public void failover ( HttpRequest request , FullHttpResponse response ) { 
 + public HttpResponse failover ( HttpRequest request ) { 
 throw new RuntimeException ( " no failover response found " ) ; 
 } 
 } ;
