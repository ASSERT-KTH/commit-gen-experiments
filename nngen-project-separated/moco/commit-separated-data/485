BLEU SCORE: 0.049900497019368314

TEST MSG: added missing final to json rest runner for junit rule
GENERATED MSG: fixed typo in moco junit runner

TEST DIFF (one line): diff - - git a / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java b / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java <nl> index c7b6f68 . . bddf1a9 100644 <nl> - - - a / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java <nl> + + + b / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java <nl> @ @ - 61 , 13 + 61 , 13 @ @ public final class MocoJunitRunner extends ExternalResource { <nl> return new MocoJunitRunner ( runner ( server ) ) ; <nl> } <nl> <nl> - public static MocoJunitRunner jsonRestRunner ( int port , String filename ) { <nl> + public static MocoJunitRunner jsonRestRunner ( final int port , final String filename ) { <nl> checkArgument ( port > 0 , " Port must be greater than zero " ) ; <nl> checkNotNullOrEmpty ( filename , " Filename should not be null " ) ; <nl> return jsonRestRunner ( port , file ( filename ) ) ; <nl> } <nl> <nl> - public static MocoJunitRunner jsonRestRunner ( int port , Resource file ) { <nl> + public static MocoJunitRunner jsonRestRunner ( final int port , final Resource file ) { <nl> checkArgument ( port > 0 , " Port must be greater than zero " ) ; <nl> checkNotNull ( file , " File should not be null " ) ; <nl> return jsonHttpRunner ( port , file ) ;
NEAREST DIFF (one line): diff - - git a / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java b / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java <nl> index ff59833 . . c7b6f68 100644 <nl> - - - a / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java <nl> + + + b / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java <nl> @ @ - 50 , 10 + 50 , 10 @ @ public final class MocoJunitRunner extends ExternalResource { <nl> return jsonSocketRunner ( port , file ( filename ) ) ; <nl> } <nl> <nl> - public static MocoJunitRunner jsonSocketRunner ( final int port , final Resource filename ) { <nl> + public static MocoJunitRunner jsonSocketRunner ( final int port , final Resource file ) { <nl> checkArgument ( port > 0 , " Port must be greater than zero " ) ; <nl> - checkNotNull ( filename , " Filename should not be null " ) ; <nl> - return new MocoJunitRunner ( runner ( jsonSocketServer ( port , filename ) ) ) ; <nl> + checkNotNull ( file , " File should not be null " ) ; <nl> + return new MocoJunitRunner ( runner ( jsonSocketServer ( port , file ) ) ) ; <nl> } <nl> <nl> public static MocoJunitRunner socketRunner ( final SocketServer server ) { <nl> @ @ - 67 , 10 + 67 , 10 @ @ public final class MocoJunitRunner extends ExternalResource { <nl> return jsonRestRunner ( port , file ( filename ) ) ; <nl> } <nl> <nl> - public static MocoJunitRunner jsonRestRunner ( int port , Resource filename ) { <nl> + public static MocoJunitRunner jsonRestRunner ( int port , Resource file ) { <nl> checkArgument ( port > 0 , " Port must be greater than zero " ) ; <nl> - checkNotNull ( filename , " Filename should not be null " ) ; <nl> - return jsonHttpRunner ( port , filename ) ; <nl> + checkNotNull ( file , " File should not be null " ) ; <nl> + return jsonHttpRunner ( port , file ) ; <nl> } <nl> <nl> @ Override

TEST DIFF:
diff - - git a / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java b / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java 
 index c7b6f68 . . bddf1a9 100644 
 - - - a / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java 
 + + + b / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java 
 @ @ - 61 , 13 + 61 , 13 @ @ public final class MocoJunitRunner extends ExternalResource { 
 return new MocoJunitRunner ( runner ( server ) ) ; 
 } 
 
 - public static MocoJunitRunner jsonRestRunner ( int port , String filename ) { 
 + public static MocoJunitRunner jsonRestRunner ( final int port , final String filename ) { 
 checkArgument ( port > 0 , " Port must be greater than zero " ) ; 
 checkNotNullOrEmpty ( filename , " Filename should not be null " ) ; 
 return jsonRestRunner ( port , file ( filename ) ) ; 
 } 
 
 - public static MocoJunitRunner jsonRestRunner ( int port , Resource file ) { 
 + public static MocoJunitRunner jsonRestRunner ( final int port , final Resource file ) { 
 checkArgument ( port > 0 , " Port must be greater than zero " ) ; 
 checkNotNull ( file , " File should not be null " ) ; 
 return jsonHttpRunner ( port , file ) ;

NEAREST DIFF:
diff - - git a / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java b / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java 
 index ff59833 . . c7b6f68 100644 
 - - - a / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java 
 + + + b / moco - junit / src / main / java / com / github / dreamhead / moco / junit / MocoJunitRunner . java 
 @ @ - 50 , 10 + 50 , 10 @ @ public final class MocoJunitRunner extends ExternalResource { 
 return jsonSocketRunner ( port , file ( filename ) ) ; 
 } 
 
 - public static MocoJunitRunner jsonSocketRunner ( final int port , final Resource filename ) { 
 + public static MocoJunitRunner jsonSocketRunner ( final int port , final Resource file ) { 
 checkArgument ( port > 0 , " Port must be greater than zero " ) ; 
 - checkNotNull ( filename , " Filename should not be null " ) ; 
 - return new MocoJunitRunner ( runner ( jsonSocketServer ( port , filename ) ) ) ; 
 + checkNotNull ( file , " File should not be null " ) ; 
 + return new MocoJunitRunner ( runner ( jsonSocketServer ( port , file ) ) ) ; 
 } 
 
 public static MocoJunitRunner socketRunner ( final SocketServer server ) { 
 @ @ - 67 , 10 + 67 , 10 @ @ public final class MocoJunitRunner extends ExternalResource { 
 return jsonRestRunner ( port , file ( filename ) ) ; 
 } 
 
 - public static MocoJunitRunner jsonRestRunner ( int port , Resource filename ) { 
 + public static MocoJunitRunner jsonRestRunner ( int port , Resource file ) { 
 checkArgument ( port > 0 , " Port must be greater than zero " ) ; 
 - checkNotNull ( filename , " Filename should not be null " ) ; 
 - return jsonHttpRunner ( port , filename ) ; 
 + checkNotNull ( file , " File should not be null " ) ; 
 + return jsonHttpRunner ( port , file ) ; 
 } 
 
 @ Override
