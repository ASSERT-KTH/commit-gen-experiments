BLEU SCORE: 0.03283637368030199

TEST MSG: replaced start task subclass with static method
GENERATED MSG: inlined server type in tasks

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java <nl> index a8783fa . . d962dad 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java <nl> @ @ - 1 , 10 + 1 , 8 @ @ <nl> package com . github . dreamhead . moco . bootstrap ; <nl> <nl> import com . github . dreamhead . moco . bootstrap . arg . StartArgs ; <nl> - import com . github . dreamhead . moco . bootstrap . tasks . HttpTask ; <nl> - import com . github . dreamhead . moco . bootstrap . tasks . HttpsTask ; <nl> import com . github . dreamhead . moco . bootstrap . tasks . ShutdownTask ; <nl> - import com . github . dreamhead . moco . bootstrap . tasks . SocketTask ; <nl> + import com . github . dreamhead . moco . bootstrap . tasks . StartTask ; <nl> import com . github . dreamhead . moco . bootstrap . tasks . VersionTask ; <nl> import com . google . common . collect . ImmutableMap ; <nl> import org . slf4j . Logger ; <nl> @ @ - 15 , 11 + 13 , 11 @ @ public class Bootstrap implements BootstrapTask { <nl> private static final String DEFAULT _ SHUTDOWN _ KEY = " _ SHUTDOWN _ MOCO _ KEY " ; <nl> <nl> private final ImmutableMap < String , BootstrapTask > tasks = ImmutableMap . < String , BootstrapTask > builder ( ) <nl> - . put ( " start " , new HttpTask ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> + . put ( " start " , StartTask . http ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> . put ( " shutdown " , new ShutdownTask ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> - . put ( " http " , new HttpTask ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> - . put ( " https " , new HttpsTask ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> - . put ( " socket " , new SocketTask ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> + . put ( " http " , StartTask . http ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> + . put ( " https " , StartTask . https ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> + . put ( " socket " , StartTask . socket ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> . put ( " version " , new VersionTask ( ) ) <nl> . build ( ) ; <nl> <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java <nl> deleted file mode 100644 <nl> index e6a5998 . . 0000000 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java <nl> + + + / dev / null <nl> @ @ - 1 , 9 + 0 , 0 @ @ <nl> - package com . github . dreamhead . moco . bootstrap . tasks ; <nl> - <nl> - import com . github . dreamhead . moco . bootstrap . parser . HttpArgsParser ; <nl> - <nl> - public final class HttpTask extends StartTask { <nl> - public HttpTask ( final String shutdownKey ) { <nl> - super ( shutdownKey , new HttpArgsParser ( ) ) ; <nl> - } <nl> - } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java <nl> deleted file mode 100644 <nl> index 95922e3 . . 0000000 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java <nl> + + + / dev / null <nl> @ @ - 1 , 9 + 0 , 0 @ @ <nl> - package com . github . dreamhead . moco . bootstrap . tasks ; <nl> - <nl> - import com . github . dreamhead . moco . bootstrap . parser . HttpsArgsParser ; <nl> - <nl> - public final class HttpsTask extends StartTask { <nl> - public HttpsTask ( final String shutdownKey ) { <nl> - super ( shutdownKey , new HttpsArgsParser ( ) ) ; <nl> - } <nl> - } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java <nl> deleted file mode 100644 <nl> index b323205 . . 0000000 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java <nl> + + + / dev / null <nl> @ @ - 1 , 9 + 0 , 0 @ @ <nl> - package com . github . dreamhead . moco . bootstrap . tasks ; <nl> - <nl> - import com . github . dreamhead . moco . bootstrap . parser . SocketArgsParser ; <nl> - <nl> - public final class SocketTask extends StartTask { <nl> - public SocketTask ( final String shutdownKey ) { <nl> - super ( shutdownKey , new SocketArgsParser ( ) ) ; <nl> - } <nl> - } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java <nl> index 9d210ab . . 653b543 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java <nl> @ @ - 2 , 6 + 2 , 9 @ @ package com . github . dreamhead . moco . bootstrap . tasks ; <nl> <nl> import com . github . dreamhead . moco . bootstrap . BootstrapTask ; <nl> import com . github . dreamhead . moco . bootstrap . arg . StartArgs ; <nl> + import com . github . dreamhead . moco . bootstrap . parser . HttpArgsParser ; <nl> + import com . github . dreamhead . moco . bootstrap . parser . HttpsArgsParser ; <nl> + import com . github . dreamhead . moco . bootstrap . parser . SocketArgsParser ; <nl> import com . github . dreamhead . moco . bootstrap . parser . StartArgsParser ; <nl> import com . github . dreamhead . moco . runner . Runner ; <nl> import com . github . dreamhead . moco . runner . RunnerFactory ; <nl> @ @ - 9 , 12 + 12 , 12 @ @ import com . google . common . base . Stopwatch ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> - public abstract class StartTask implements BootstrapTask { <nl> + public final class StartTask implements BootstrapTask { <nl> private Logger logger = LoggerFactory . getLogger ( StartTask . class ) ; <nl> private final StartArgsParser startArgsParser ; <nl> private final RunnerFactory factory ; <nl> <nl> - protected StartTask ( final String shutdownKey , final StartArgsParser startArgsParser ) { <nl> + private StartTask ( final String shutdownKey , final StartArgsParser startArgsParser ) { <nl> this . startArgsParser = startArgsParser ; <nl> this . factory = new RunnerFactory ( shutdownKey ) ; <nl> } <nl> @ @ - 40 , 4 + 43 , 16 @ @ public abstract class StartTask implements BootstrapTask { <nl> StartArgs startArgs = startArgsParser . parse ( args ) ; <nl> return factory . createRunner ( startArgs ) ; <nl> } <nl> + <nl> + public static BootstrapTask http ( final String shutdownKey ) { <nl> + return new StartTask ( shutdownKey , new HttpArgsParser ( ) ) ; <nl> + } <nl> + <nl> + public static BootstrapTask https ( final String shutdownKey ) { <nl> + return new StartTask ( shutdownKey , new HttpsArgsParser ( ) ) ; <nl> + } <nl> + <nl> + public static BootstrapTask socket ( final String shutdownKey ) { <nl> + return new StartTask ( shutdownKey , new SocketArgsParser ( ) ) ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java <nl> index bce834e . . c270bb6 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java <nl> @ @ - 10 , 7 + 10 , 7 @ @ public class Bootstrap implements BootstrapTask { <nl> private static final String DEFAULT _ SHUTDOWN _ KEY = " _ SHUTDOWN _ MOCO _ KEY " ; <nl> <nl> private final ImmutableMap < String , BootstrapTask > tasks = ImmutableMap . < String , BootstrapTask > builder ( ) <nl> - . put ( " start " , new StartTask ( DEFAULT _ SHUTDOWN _ KEY , ServerType . HTTP ) ) <nl> + . put ( " start " , new StartTask ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> . put ( " shutdown " , new ShutdownTask ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> . put ( " http " , new HttpTask ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> . put ( " https " , new HttpsTask ( DEFAULT _ SHUTDOWN _ KEY ) ) <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java <nl> index ba356ed . . bdb34a9 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java <nl> @ @ - 8 , 12 + 8 , 12 @ @ import static com . github . dreamhead . moco . bootstrap . StartArgs . parse ; <nl> <nl> public class HttpTask extends StartTask { <nl> public HttpTask ( String shutdownKey ) { <nl> - super ( shutdownKey , ServerType . HTTP ) ; <nl> + super ( shutdownKey ) ; <nl> } <nl> <nl> @ Override <nl> protected Runner createRunner ( String [ ] args ) { <nl> - StartArgs startArgs = parse ( type , args ) ; <nl> + StartArgs startArgs = parse ( ServerType . HTTP , args ) ; <nl> return factory . createRunner ( startArgs ) ; <nl> } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java <nl> index 77a8ec6 . . 8ef6cc5 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java <nl> @ @ - 1 , 9 + 1 , 19 @ @ <nl> package com . github . dreamhead . moco . bootstrap . tasks ; <nl> <nl> import com . github . dreamhead . moco . bootstrap . ServerType ; <nl> + import com . github . dreamhead . moco . bootstrap . StartArgs ; <nl> + import com . github . dreamhead . moco . runner . Runner ; <nl> + <nl> + import static com . github . dreamhead . moco . bootstrap . StartArgs . parse ; <nl> <nl> public class HttpsTask extends StartTask { <nl> public HttpsTask ( String shutdownKey ) { <nl> - super ( shutdownKey , ServerType . HTTPS ) ; <nl> + super ( shutdownKey ) ; <nl> + } <nl> + <nl> + @ Override <nl> + protected Runner createRunner ( String [ ] args ) { <nl> + StartArgs startArgs = parse ( ServerType . HTTPS , args ) ; <nl> + return factory . createRunner ( startArgs ) ; <nl> } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java <nl> index 79d1547 . . 07540b0 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java <nl> @ @ - 1 , 9 + 1 , 19 @ @ <nl> package com . github . dreamhead . moco . bootstrap . tasks ; <nl> <nl> import com . github . dreamhead . moco . bootstrap . ServerType ; <nl> + import com . github . dreamhead . moco . bootstrap . StartArgs ; <nl> + import com . github . dreamhead . moco . runner . Runner ; <nl> + <nl> + import static com . github . dreamhead . moco . bootstrap . StartArgs . parse ; <nl> <nl> public class SocketTask extends StartTask { <nl> public SocketTask ( String shutdownKey ) { <nl> - super ( shutdownKey , ServerType . SOCKET ) ; <nl> + super ( shutdownKey ) ; <nl> + } <nl> + <nl> + @ Override <nl> + protected Runner createRunner ( String [ ] args ) { <nl> + StartArgs startArgs = parse ( ServerType . SOCKET , args ) ; <nl> + return factory . createRunner ( startArgs ) ; <nl> } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java <nl> index 2ba2709 . . bb61d75 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java <nl> @ @ - 14 , 11 + 14 , 9 @ @ import static com . github . dreamhead . moco . bootstrap . StartArgs . parse ; <nl> public class StartTask implements BootstrapTask { <nl> private Logger logger = LoggerFactory . getLogger ( StartTask . class ) ; <nl> protected final RunnerFactory factory ; <nl> - protected final ServerType type ; <nl> <nl> - public StartTask ( String shutdownKey , ServerType type ) { <nl> + public StartTask ( String shutdownKey ) { <nl> this . factory = new RunnerFactory ( shutdownKey ) ; <nl> - this . type = type ; <nl> } <nl> <nl> @ Override <nl> @ @ - 39 , 7 + 37 , 7 @ @ public class StartTask implements BootstrapTask { <nl> } <nl> <nl> protected Runner createRunner ( String [ ] args ) { <nl> - StartArgs startArgs = parse ( type , args ) ; <nl> + StartArgs startArgs = parse ( ServerType . HTTP , args ) ; <nl> return factory . createRunner ( startArgs ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java 
 index a8783fa . . d962dad 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java 
 @ @ - 1 , 10 + 1 , 8 @ @ 
 package com . github . dreamhead . moco . bootstrap ; 
 
 import com . github . dreamhead . moco . bootstrap . arg . StartArgs ; 
 - import com . github . dreamhead . moco . bootstrap . tasks . HttpTask ; 
 - import com . github . dreamhead . moco . bootstrap . tasks . HttpsTask ; 
 import com . github . dreamhead . moco . bootstrap . tasks . ShutdownTask ; 
 - import com . github . dreamhead . moco . bootstrap . tasks . SocketTask ; 
 + import com . github . dreamhead . moco . bootstrap . tasks . StartTask ; 
 import com . github . dreamhead . moco . bootstrap . tasks . VersionTask ; 
 import com . google . common . collect . ImmutableMap ; 
 import org . slf4j . Logger ; 
 @ @ - 15 , 11 + 13 , 11 @ @ public class Bootstrap implements BootstrapTask { 
 private static final String DEFAULT _ SHUTDOWN _ KEY = " _ SHUTDOWN _ MOCO _ KEY " ; 
 
 private final ImmutableMap < String , BootstrapTask > tasks = ImmutableMap . < String , BootstrapTask > builder ( ) 
 - . put ( " start " , new HttpTask ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 + . put ( " start " , StartTask . http ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 . put ( " shutdown " , new ShutdownTask ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 - . put ( " http " , new HttpTask ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 - . put ( " https " , new HttpsTask ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 - . put ( " socket " , new SocketTask ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 + . put ( " http " , StartTask . http ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 + . put ( " https " , StartTask . https ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 + . put ( " socket " , StartTask . socket ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 . put ( " version " , new VersionTask ( ) ) 
 . build ( ) ; 
 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java 
 deleted file mode 100644 
 index e6a5998 . . 0000000 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java 
 + + + / dev / null 
 @ @ - 1 , 9 + 0 , 0 @ @ 
 - package com . github . dreamhead . moco . bootstrap . tasks ; 
 - 
 - import com . github . dreamhead . moco . bootstrap . parser . HttpArgsParser ; 
 - 
 - public final class HttpTask extends StartTask { 
 - public HttpTask ( final String shutdownKey ) { 
 - super ( shutdownKey , new HttpArgsParser ( ) ) ; 
 - } 
 - } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java 
 deleted file mode 100644 
 index 95922e3 . . 0000000 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java 
 + + + / dev / null 
 @ @ - 1 , 9 + 0 , 0 @ @ 
 - package com . github . dreamhead . moco . bootstrap . tasks ; 
 - 
 - import com . github . dreamhead . moco . bootstrap . parser . HttpsArgsParser ; 
 - 
 - public final class HttpsTask extends StartTask { 
 - public HttpsTask ( final String shutdownKey ) { 
 - super ( shutdownKey , new HttpsArgsParser ( ) ) ; 
 - } 
 - } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java 
 deleted file mode 100644 
 index b323205 . . 0000000 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java 
 + + + / dev / null 
 @ @ - 1 , 9 + 0 , 0 @ @ 
 - package com . github . dreamhead . moco . bootstrap . tasks ; 
 - 
 - import com . github . dreamhead . moco . bootstrap . parser . SocketArgsParser ; 
 - 
 - public final class SocketTask extends StartTask { 
 - public SocketTask ( final String shutdownKey ) { 
 - super ( shutdownKey , new SocketArgsParser ( ) ) ; 
 - } 
 - } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java 
 index 9d210ab . . 653b543 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java 
 @ @ - 2 , 6 + 2 , 9 @ @ package com . github . dreamhead . moco . bootstrap . tasks ; 
 
 import com . github . dreamhead . moco . bootstrap . BootstrapTask ; 
 import com . github . dreamhead . moco . bootstrap . arg . StartArgs ; 
 + import com . github . dreamhead . moco . bootstrap . parser . HttpArgsParser ; 
 + import com . github . dreamhead . moco . bootstrap . parser . HttpsArgsParser ; 
 + import com . github . dreamhead . moco . bootstrap . parser . SocketArgsParser ; 
 import com . github . dreamhead . moco . bootstrap . parser . StartArgsParser ; 
 import com . github . dreamhead . moco . runner . Runner ; 
 import com . github . dreamhead . moco . runner . RunnerFactory ; 
 @ @ - 9 , 12 + 12 , 12 @ @ import com . google . common . base . Stopwatch ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 - public abstract class StartTask implements BootstrapTask { 
 + public final class StartTask implements BootstrapTask { 
 private Logger logger = LoggerFactory . getLogger ( StartTask . class ) ; 
 private final StartArgsParser startArgsParser ; 
 private final RunnerFactory factory ; 
 
 - protected StartTask ( final String shutdownKey , final StartArgsParser startArgsParser ) { 
 + private StartTask ( final String shutdownKey , final StartArgsParser startArgsParser ) { 
 this . startArgsParser = startArgsParser ; 
 this . factory = new RunnerFactory ( shutdownKey ) ; 
 } 
 @ @ - 40 , 4 + 43 , 16 @ @ public abstract class StartTask implements BootstrapTask { 
 StartArgs startArgs = startArgsParser . parse ( args ) ; 
 return factory . createRunner ( startArgs ) ; 
 } 
 + 
 + public static BootstrapTask http ( final String shutdownKey ) { 
 + return new StartTask ( shutdownKey , new HttpArgsParser ( ) ) ; 
 + } 
 + 
 + public static BootstrapTask https ( final String shutdownKey ) { 
 + return new StartTask ( shutdownKey , new HttpsArgsParser ( ) ) ; 
 + } 
 + 
 + public static BootstrapTask socket ( final String shutdownKey ) { 
 + return new StartTask ( shutdownKey , new SocketArgsParser ( ) ) ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java 
 index bce834e . . c270bb6 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java 
 @ @ - 10 , 7 + 10 , 7 @ @ public class Bootstrap implements BootstrapTask { 
 private static final String DEFAULT _ SHUTDOWN _ KEY = " _ SHUTDOWN _ MOCO _ KEY " ; 
 
 private final ImmutableMap < String , BootstrapTask > tasks = ImmutableMap . < String , BootstrapTask > builder ( ) 
 - . put ( " start " , new StartTask ( DEFAULT _ SHUTDOWN _ KEY , ServerType . HTTP ) ) 
 + . put ( " start " , new StartTask ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 . put ( " shutdown " , new ShutdownTask ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 . put ( " http " , new HttpTask ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 . put ( " https " , new HttpsTask ( DEFAULT _ SHUTDOWN _ KEY ) ) 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java 
 index ba356ed . . bdb34a9 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpTask . java 
 @ @ - 8 , 12 + 8 , 12 @ @ import static com . github . dreamhead . moco . bootstrap . StartArgs . parse ; 
 
 public class HttpTask extends StartTask { 
 public HttpTask ( String shutdownKey ) { 
 - super ( shutdownKey , ServerType . HTTP ) ; 
 + super ( shutdownKey ) ; 
 } 
 
 @ Override 
 protected Runner createRunner ( String [ ] args ) { 
 - StartArgs startArgs = parse ( type , args ) ; 
 + StartArgs startArgs = parse ( ServerType . HTTP , args ) ; 
 return factory . createRunner ( startArgs ) ; 
 } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java 
 index 77a8ec6 . . 8ef6cc5 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / HttpsTask . java 
 @ @ - 1 , 9 + 1 , 19 @ @ 
 package com . github . dreamhead . moco . bootstrap . tasks ; 
 
 import com . github . dreamhead . moco . bootstrap . ServerType ; 
 + import com . github . dreamhead . moco . bootstrap . StartArgs ; 
 + import com . github . dreamhead . moco . runner . Runner ; 
 + 
 + import static com . github . dreamhead . moco . bootstrap . StartArgs . parse ; 
 
 public class HttpsTask extends StartTask { 
 public HttpsTask ( String shutdownKey ) { 
 - super ( shutdownKey , ServerType . HTTPS ) ; 
 + super ( shutdownKey ) ; 
 + } 
 + 
 + @ Override 
 + protected Runner createRunner ( String [ ] args ) { 
 + StartArgs startArgs = parse ( ServerType . HTTPS , args ) ; 
 + return factory . createRunner ( startArgs ) ; 
 } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java 
 index 79d1547 . . 07540b0 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / SocketTask . java 
 @ @ - 1 , 9 + 1 , 19 @ @ 
 package com . github . dreamhead . moco . bootstrap . tasks ; 
 
 import com . github . dreamhead . moco . bootstrap . ServerType ; 
 + import com . github . dreamhead . moco . bootstrap . StartArgs ; 
 + import com . github . dreamhead . moco . runner . Runner ; 
 + 
 + import static com . github . dreamhead . moco . bootstrap . StartArgs . parse ; 
 
 public class SocketTask extends StartTask { 
 public SocketTask ( String shutdownKey ) { 
 - super ( shutdownKey , ServerType . SOCKET ) ; 
 + super ( shutdownKey ) ; 
 + } 
 + 
 + @ Override 
 + protected Runner createRunner ( String [ ] args ) { 
 + StartArgs startArgs = parse ( ServerType . SOCKET , args ) ; 
 + return factory . createRunner ( startArgs ) ; 
 } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java 
 index 2ba2709 . . bb61d75 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / tasks / StartTask . java 
 @ @ - 14 , 11 + 14 , 9 @ @ import static com . github . dreamhead . moco . bootstrap . StartArgs . parse ; 
 public class StartTask implements BootstrapTask { 
 private Logger logger = LoggerFactory . getLogger ( StartTask . class ) ; 
 protected final RunnerFactory factory ; 
 - protected final ServerType type ; 
 
 - public StartTask ( String shutdownKey , ServerType type ) { 
 + public StartTask ( String shutdownKey ) { 
 this . factory = new RunnerFactory ( shutdownKey ) ; 
 - this . type = type ; 
 } 
 
 @ Override 
 @ @ - 39 , 7 + 37 , 7 @ @ public class StartTask implements BootstrapTask { 
 } 
 
 protected Runner createRunner ( String [ ] args ) { 
 - StartArgs startArgs = parse ( type , args ) ; 
 + StartArgs startArgs = parse ( ServerType . HTTP , args ) ; 
 return factory . createRunner ( startArgs ) ; 
 } 
 }
