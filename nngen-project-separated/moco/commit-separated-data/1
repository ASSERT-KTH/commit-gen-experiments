BLEU SCORE: 0.09535414040914189

TEST MSG: removed optional from certificate field in actual http server
GENERATED MSG: introduced port to merge http server

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> index e1968f4 . . aec3637 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> @ @ - 15 , 30 + 15 , 38 @ @ import com . google . common . base . Optional ; <nl> import static com . google . common . base . Optional . of ; <nl> <nl> public class ActualHttpServer extends HttpConfiguration < ActualHttpServer > { <nl> - private final Optional < HttpsCertificate > certificate ; <nl> + private final HttpsCertificate certificate ; <nl> <nl> protected ActualHttpServer ( final Optional < Integer > port , <nl> final Optional < HttpsCertificate > certificate , <nl> final MocoMonitor monitor , final MocoConfig . . . configs ) { <nl> super ( port , monitor , configs ) ; <nl> - this . certificate = certificate ; <nl> + this . certificate = certificate . orNull ( ) ; <nl> } <nl> <nl> public final boolean isSecure ( ) { <nl> - return certificate . isPresent ( ) ; <nl> + return certificate ! = null ; <nl> } <nl> <nl> public final Optional < HttpsCertificate > getCertificate ( ) { <nl> - return certificate ; <nl> + return Optional . fromNullable ( certificate ) ; <nl> } <nl> <nl> protected final ActualHttpServer createMergeServer ( final ActualHttpServer thatServer ) { <nl> - return newBaseServer ( this . getPort ( ) . or ( thatServer . getPort ( ) ) , this . certificate . or ( thatServer . certificate ) ) ; <nl> + return newBaseServer ( this . getPort ( ) . or ( thatServer . getPort ( ) ) , mergedCertificate ( this . certificate , thatServer . certificate ) ) ; <nl> } <nl> <nl> - private ActualHttpServer newBaseServer ( final Optional < Integer > port , final Optional < HttpsCertificate > certificate ) { <nl> - if ( certificate . isPresent ( ) ) { <nl> - return createHttpsLogServer ( port , certificate . get ( ) ) ; <nl> + private HttpsCertificate mergedCertificate ( final HttpsCertificate one , final HttpsCertificate other ) { <nl> + if ( one ! = null ) { <nl> + return one ; <nl> + } <nl> + <nl> + return other ; <nl> + } <nl> + <nl> + private ActualHttpServer newBaseServer ( final Optional < Integer > port , final HttpsCertificate certificate ) { <nl> + if ( certificate ! = null ) { <nl> + return createHttpsLogServer ( port , certificate ) ; <nl> } <nl> <nl> return createLogServer ( port ) ;
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> index 00598c5 . . 999b9dd 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> @ @ - 33 , 7 + 33 , 7 @ @ public class ActualHttpServer extends HttpConfiguration { <nl> } <nl> <nl> public ActualHttpServer mergeHttpServer ( final ActualHttpServer thatServer ) { <nl> - ActualHttpServer newServer = newBaseServer ( newServerCertificate ( thatServer . certificate ) ) ; <nl> + ActualHttpServer newServer = newBaseServer ( newPort ( thatServer . getPort ( ) ) , newServerCertificate ( thatServer . certificate ) ) ; <nl> newServer . addSettings ( this . getSettings ( ) ) ; <nl> newServer . addSettings ( thatServer . getSettings ( ) ) ; <nl> <nl> @ @ - 46 , 6 + 46 , 18 @ @ public class ActualHttpServer extends HttpConfiguration { <nl> return newServer ; <nl> } <nl> <nl> + private Optional < Integer > newPort ( final Optional < Integer > port ) { <nl> + if ( this . getPort ( ) . isPresent ( ) ) { <nl> + return this . getPort ( ) ; <nl> + } <nl> + <nl> + if ( port . isPresent ( ) ) { <nl> + return port ; <nl> + } <nl> + <nl> + return absent ( ) ; <nl> + } <nl> + <nl> private Optional < HttpsCertificate > newServerCertificate ( final Optional < HttpsCertificate > certificate ) { <nl> if ( this . isSecure ( ) ) { <nl> return this . certificate ; <nl> @ @ - 58 , 12 + 70 , 12 @ @ public class ActualHttpServer extends HttpConfiguration { <nl> return absent ( ) ; <nl> } <nl> <nl> - private ActualHttpServer newBaseServer ( final Optional < HttpsCertificate > certificate ) { <nl> + private ActualHttpServer newBaseServer ( final Optional < Integer > port , final Optional < HttpsCertificate > certificate ) { <nl> if ( certificate . isPresent ( ) ) { <nl> - return createHttpsLogServer ( getPort ( ) , certificate . get ( ) ) ; <nl> + return createHttpsLogServer ( port , certificate . get ( ) ) ; <nl> } <nl> <nl> - return createLogServer ( getPort ( ) ) ; <nl> + return createLogServer ( port ) ; <nl> } <nl> <nl> public static ActualHttpServer createHttpServerWithMonitor ( final Optional < Integer > port ,

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 index e1968f4 . . aec3637 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 @ @ - 15 , 30 + 15 , 38 @ @ import com . google . common . base . Optional ; 
 import static com . google . common . base . Optional . of ; 
 
 public class ActualHttpServer extends HttpConfiguration < ActualHttpServer > { 
 - private final Optional < HttpsCertificate > certificate ; 
 + private final HttpsCertificate certificate ; 
 
 protected ActualHttpServer ( final Optional < Integer > port , 
 final Optional < HttpsCertificate > certificate , 
 final MocoMonitor monitor , final MocoConfig . . . configs ) { 
 super ( port , monitor , configs ) ; 
 - this . certificate = certificate ; 
 + this . certificate = certificate . orNull ( ) ; 
 } 
 
 public final boolean isSecure ( ) { 
 - return certificate . isPresent ( ) ; 
 + return certificate ! = null ; 
 } 
 
 public final Optional < HttpsCertificate > getCertificate ( ) { 
 - return certificate ; 
 + return Optional . fromNullable ( certificate ) ; 
 } 
 
 protected final ActualHttpServer createMergeServer ( final ActualHttpServer thatServer ) { 
 - return newBaseServer ( this . getPort ( ) . or ( thatServer . getPort ( ) ) , this . certificate . or ( thatServer . certificate ) ) ; 
 + return newBaseServer ( this . getPort ( ) . or ( thatServer . getPort ( ) ) , mergedCertificate ( this . certificate , thatServer . certificate ) ) ; 
 } 
 
 - private ActualHttpServer newBaseServer ( final Optional < Integer > port , final Optional < HttpsCertificate > certificate ) { 
 - if ( certificate . isPresent ( ) ) { 
 - return createHttpsLogServer ( port , certificate . get ( ) ) ; 
 + private HttpsCertificate mergedCertificate ( final HttpsCertificate one , final HttpsCertificate other ) { 
 + if ( one ! = null ) { 
 + return one ; 
 + } 
 + 
 + return other ; 
 + } 
 + 
 + private ActualHttpServer newBaseServer ( final Optional < Integer > port , final HttpsCertificate certificate ) { 
 + if ( certificate ! = null ) { 
 + return createHttpsLogServer ( port , certificate ) ; 
 } 
 
 return createLogServer ( port ) ;

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 index 00598c5 . . 999b9dd 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 @ @ - 33 , 7 + 33 , 7 @ @ public class ActualHttpServer extends HttpConfiguration { 
 } 
 
 public ActualHttpServer mergeHttpServer ( final ActualHttpServer thatServer ) { 
 - ActualHttpServer newServer = newBaseServer ( newServerCertificate ( thatServer . certificate ) ) ; 
 + ActualHttpServer newServer = newBaseServer ( newPort ( thatServer . getPort ( ) ) , newServerCertificate ( thatServer . certificate ) ) ; 
 newServer . addSettings ( this . getSettings ( ) ) ; 
 newServer . addSettings ( thatServer . getSettings ( ) ) ; 
 
 @ @ - 46 , 6 + 46 , 18 @ @ public class ActualHttpServer extends HttpConfiguration { 
 return newServer ; 
 } 
 
 + private Optional < Integer > newPort ( final Optional < Integer > port ) { 
 + if ( this . getPort ( ) . isPresent ( ) ) { 
 + return this . getPort ( ) ; 
 + } 
 + 
 + if ( port . isPresent ( ) ) { 
 + return port ; 
 + } 
 + 
 + return absent ( ) ; 
 + } 
 + 
 private Optional < HttpsCertificate > newServerCertificate ( final Optional < HttpsCertificate > certificate ) { 
 if ( this . isSecure ( ) ) { 
 return this . certificate ; 
 @ @ - 58 , 12 + 70 , 12 @ @ public class ActualHttpServer extends HttpConfiguration { 
 return absent ( ) ; 
 } 
 
 - private ActualHttpServer newBaseServer ( final Optional < HttpsCertificate > certificate ) { 
 + private ActualHttpServer newBaseServer ( final Optional < Integer > port , final Optional < HttpsCertificate > certificate ) { 
 if ( certificate . isPresent ( ) ) { 
 - return createHttpsLogServer ( getPort ( ) , certificate . get ( ) ) ; 
 + return createHttpsLogServer ( port , certificate . get ( ) ) ; 
 } 
 
 - return createLogServer ( getPort ( ) ) ; 
 + return createLogServer ( port ) ; 
 } 
 
 public static ActualHttpServer createHttpServerWithMonitor ( final Optional < Integer > port ,
