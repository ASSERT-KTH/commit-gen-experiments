BLEU SCORE: 0.16233395773754944

TEST MSG: added missing final to cycle handler
GENERATED MSG: fixed typo in cycle handler

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java <nl> index c9375f6 . . 2037ad0 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java <nl> @ @ - 5 , 7 + 5 , 7 @ @ import com . google . common . collect . Iterables ; <nl> <nl> import static com . google . common . base . Preconditions . checkArgument ; <nl> <nl> - public class CycleHandler extends CollectionHandler { <nl> + public final class CycleHandler extends CollectionHandler { <nl> private CycleHandler ( final Iterable < ResponseHandler > handlers ) { <nl> super ( handlers ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java <nl> index 07a31a9 . . c9375f6 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java <nl> @ @ - 11 , 7 + 11 , 7 @ @ public class CycleHandler extends CollectionHandler { <nl> } <nl> <nl> public static ResponseHandler newCycle ( final Iterable < ResponseHandler > handlers ) { <nl> - checkArgument ( Iterables . size ( handlers ) > 0 , " Sequence contents should not be null " ) ; <nl> + checkArgument ( ! Iterables . isEmpty ( handlers ) , " Cycle contents should not be null " ) ; <nl> return new CycleHandler ( handlers ) ; <nl> } <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / SequenceHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / SequenceHandler . java <nl> index 02ce4b1 . . 964dc3c 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / SequenceHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / SequenceHandler . java <nl> @ @ - 11 , 7 + 11 , 7 @ @ public final class SequenceHandler extends CollectionHandler { <nl> } <nl> <nl> public static ResponseHandler newSeq ( final Iterable < ResponseHandler > handlers ) { <nl> - checkArgument ( Iterables . size ( handlers ) > 0 , " Sequence contents should not be null " ) ; <nl> + checkArgument ( ! Iterables . isEmpty ( handlers ) , " Sequence contents should not be null " ) ; <nl> return new SequenceHandler ( handlers ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java 
 index c9375f6 . . 2037ad0 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java 
 @ @ - 5 , 7 + 5 , 7 @ @ import com . google . common . collect . Iterables ; 
 
 import static com . google . common . base . Preconditions . checkArgument ; 
 
 - public class CycleHandler extends CollectionHandler { 
 + public final class CycleHandler extends CollectionHandler { 
 private CycleHandler ( final Iterable < ResponseHandler > handlers ) { 
 super ( handlers ) ; 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java 
 index 07a31a9 . . c9375f6 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / CycleHandler . java 
 @ @ - 11 , 7 + 11 , 7 @ @ public class CycleHandler extends CollectionHandler { 
 } 
 
 public static ResponseHandler newCycle ( final Iterable < ResponseHandler > handlers ) { 
 - checkArgument ( Iterables . size ( handlers ) > 0 , " Sequence contents should not be null " ) ; 
 + checkArgument ( ! Iterables . isEmpty ( handlers ) , " Cycle contents should not be null " ) ; 
 return new CycleHandler ( handlers ) ; 
 } 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / SequenceHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / SequenceHandler . java 
 index 02ce4b1 . . 964dc3c 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / SequenceHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / SequenceHandler . java 
 @ @ - 11 , 7 + 11 , 7 @ @ public final class SequenceHandler extends CollectionHandler { 
 } 
 
 public static ResponseHandler newSeq ( final Iterable < ResponseHandler > handlers ) { 
 - checkArgument ( Iterables . size ( handlers ) > 0 , " Sequence contents should not be null " ) ; 
 + checkArgument ( ! Iterables . isEmpty ( handlers ) , " Sequence contents should not be null " ) ; 
 return new SequenceHandler ( handlers ) ; 
 } 

