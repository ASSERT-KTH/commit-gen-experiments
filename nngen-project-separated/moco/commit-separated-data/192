BLEU SCORE: 0.11044795567078944

TEST MSG: added missing final to base response setting configuration
GENERATED MSG: merged response interface in response setting

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java <nl> index f83f6e2 . . 7730f56 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java <nl> @ @ - 28 , 7 + 28 , 7 @ @ public abstract class BaseResponseSettingConfiguration < T extends ResponseSetting <nl> } <nl> <nl> @ Override <nl> - public T response ( final ResponseHandler handler , final ResponseHandler . . . handlers ) { <nl> + public final T response ( final ResponseHandler handler , final ResponseHandler . . . handlers ) { <nl> ResponseHandler responseHandler = and ( checkNotNull ( handler , " Handler should not be null " ) , <nl> checkNotNull ( handlers , " Handlers should not be null " ) ) ; <nl> this . handler = targetHandler ( responseHandler ) ; <nl> @ @ - 44 , 7 + 44 , 7 @ @ public abstract class BaseResponseSettingConfiguration < T extends ResponseSetting <nl> } <nl> <nl> @ Override <nl> - public T on ( final MocoEventTrigger trigger ) { <nl> + public final T on ( final MocoEventTrigger trigger ) { <nl> this . eventTriggers . add ( checkNotNull ( trigger , " Trigger should not be null " ) ) ; <nl> return self ( ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java <nl> index df173de . . 347fb74 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java <nl> @ @ - 7 , 11 + 7 , 9 @ @ public interface ResponseSetting < T extends ResponseSetting > { <nl> <nl> T response ( final Resource resource ) ; <nl> <nl> - T response ( final ResponseHandler handler ) ; <nl> - <nl> T response ( final MocoProcedure procedure ) ; <nl> <nl> - T response ( final ResponseHandler . . . handlers ) ; <nl> + T response ( final ResponseHandler handler , final ResponseHandler . . . handlers ) ; <nl> <nl> T on ( final MocoEventTrigger trigger ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java <nl> index 16aa6b6 . . c373f94 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java <nl> @ @ - 47 , 13 + 47 , 10 @ @ public abstract class BaseResponseSettingConfiguration < T extends ResponseSetting <nl> } <nl> <nl> @ Override <nl> - public T response ( final ResponseHandler . . . handlers ) { <nl> - return this . response ( and ( handlers ) ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public T response ( final ResponseHandler handler ) { <nl> - this . handler = targetHandler ( checkNotNull ( handler , " Handler should not be null " ) ) ; <nl> + public T response ( final ResponseHandler handler , final ResponseHandler . . . handlers ) { <nl> + ResponseHandler responseHandler = and ( checkNotNull ( handler , " Handler should not be null " ) , <nl> + checkNotNull ( handlers , " Handlers should not be null " ) ) ; <nl> + this . handler = targetHandler ( responseHandler ) ; <nl> return self ( ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java 
 index f83f6e2 . . 7730f56 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java 
 @ @ - 28 , 7 + 28 , 7 @ @ public abstract class BaseResponseSettingConfiguration < T extends ResponseSetting 
 } 
 
 @ Override 
 - public T response ( final ResponseHandler handler , final ResponseHandler . . . handlers ) { 
 + public final T response ( final ResponseHandler handler , final ResponseHandler . . . handlers ) { 
 ResponseHandler responseHandler = and ( checkNotNull ( handler , " Handler should not be null " ) , 
 checkNotNull ( handlers , " Handlers should not be null " ) ) ; 
 this . handler = targetHandler ( responseHandler ) ; 
 @ @ - 44 , 7 + 44 , 7 @ @ public abstract class BaseResponseSettingConfiguration < T extends ResponseSetting 
 } 
 
 @ Override 
 - public T on ( final MocoEventTrigger trigger ) { 
 + public final T on ( final MocoEventTrigger trigger ) { 
 this . eventTriggers . add ( checkNotNull ( trigger , " Trigger should not be null " ) ) ; 
 return self ( ) ; 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java 
 index df173de . . 347fb74 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java 
 @ @ - 7 , 11 + 7 , 9 @ @ public interface ResponseSetting < T extends ResponseSetting > { 
 
 T response ( final Resource resource ) ; 
 
 - T response ( final ResponseHandler handler ) ; 
 - 
 T response ( final MocoProcedure procedure ) ; 
 
 - T response ( final ResponseHandler . . . handlers ) ; 
 + T response ( final ResponseHandler handler , final ResponseHandler . . . handlers ) ; 
 
 T on ( final MocoEventTrigger trigger ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java 
 index 16aa6b6 . . c373f94 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java 
 @ @ - 47 , 13 + 47 , 10 @ @ public abstract class BaseResponseSettingConfiguration < T extends ResponseSetting 
 } 
 
 @ Override 
 - public T response ( final ResponseHandler . . . handlers ) { 
 - return this . response ( and ( handlers ) ) ; 
 - } 
 - 
 - @ Override 
 - public T response ( final ResponseHandler handler ) { 
 - this . handler = targetHandler ( checkNotNull ( handler , " Handler should not be null " ) ) ; 
 + public T response ( final ResponseHandler handler , final ResponseHandler . . . handlers ) { 
 + ResponseHandler responseHandler = and ( checkNotNull ( handler , " Handler should not be null " ) , 
 + checkNotNull ( handlers , " Handlers should not be null " ) ) ; 
 + this . handler = targetHandler ( responseHandler ) ; 
 return self ( ) ; 
 } 

