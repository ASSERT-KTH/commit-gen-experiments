BLEU SCORE: 0.7259795291154771

TEST MSG: added standalone test for random template function without arg
GENERATED MSG: added standalone test for random template function with format

TEST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> index 2a698cd . . fd48733 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> @ @ - 141 , 4 + 141 , 13 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { <nl> String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; <nl> assertThat ( target . length ( ) , is ( 6 ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ return _ random _ without _ arg _ from _ template ( ) throws IOException { <nl> + runWithConfiguration ( " template _ with _ function . json " ) ; <nl> + String response = helper . get ( remoteUrl ( " / random _ template _ without _ arg " ) ) ; <nl> + double result = Double . parseDouble ( response ) ; <nl> + assertThat ( result , lessThan ( 1d ) ) ; <nl> + assertThat ( result , greaterThan ( 0d ) ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / test / resources / template _ with _ function . json b / moco - runner / src / test / resources / template _ with _ function . json <nl> index b898425 . . 4c1f4aa 100644 <nl> - - - a / moco - runner / src / test / resources / template _ with _ function . json <nl> + + + b / moco - runner / src / test / resources / template _ with _ function . json <nl> @ @ - 38 , 5 + 38 , 15 @ @ <nl> " template " : " $ { random ( \ " # # # . # # # # # # \ " ) } " <nl> } <nl> } <nl> + } , <nl> + { <nl> + " request " : { <nl> + " uri " : " / random _ template _ without _ arg " <nl> + } , <nl> + " response " : { <nl> + " text " : { <nl> + " template " : " $ { random ( ) } " <nl> + } <nl> + } <nl> } <nl> ] <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> index c57166d . . 2a698cd 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> @ @ - 133 , 4 + 133 , 12 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { <nl> assertThat ( result , lessThan ( 100d ) ) ; <nl> assertThat ( result , greaterThan ( 0d ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ return _ random _ with _ format _ from _ template ( ) throws IOException { <nl> + runWithConfiguration ( " template _ with _ function . json " ) ; <nl> + String response = helper . get ( remoteUrl ( " / random _ template _ with _ format " ) ) ; <nl> + String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; <nl> + assertThat ( target . length ( ) , is ( 6 ) ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / test / resources / template _ with _ function . json b / moco - runner / src / test / resources / template _ with _ function . json <nl> index 8e9705e . . b898425 100644 <nl> - - - a / moco - runner / src / test / resources / template _ with _ function . json <nl> + + + b / moco - runner / src / test / resources / template _ with _ function . json <nl> @ @ - 28 , 5 + 28 , 15 @ @ <nl> " template " : " $ { random ( 100 ) } " <nl> } <nl> } <nl> + } , <nl> + { <nl> + " request " : { <nl> + " uri " : " / random _ template _ with _ format " <nl> + } , <nl> + " response " : { <nl> + " text " : { <nl> + " template " : " $ { random ( \ " # # # . # # # # # # \ " ) } " <nl> + } <nl> + } <nl> } <nl> ] <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 index 2a698cd . . fd48733 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 @ @ - 141 , 4 + 141 , 13 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { 
 String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; 
 assertThat ( target . length ( ) , is ( 6 ) ) ; 
 } 
 + 
 + @ Test 
 + public void should _ return _ random _ without _ arg _ from _ template ( ) throws IOException { 
 + runWithConfiguration ( " template _ with _ function . json " ) ; 
 + String response = helper . get ( remoteUrl ( " / random _ template _ without _ arg " ) ) ; 
 + double result = Double . parseDouble ( response ) ; 
 + assertThat ( result , lessThan ( 1d ) ) ; 
 + assertThat ( result , greaterThan ( 0d ) ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / test / resources / template _ with _ function . json b / moco - runner / src / test / resources / template _ with _ function . json 
 index b898425 . . 4c1f4aa 100644 
 - - - a / moco - runner / src / test / resources / template _ with _ function . json 
 + + + b / moco - runner / src / test / resources / template _ with _ function . json 
 @ @ - 38 , 5 + 38 , 15 @ @ 
 " template " : " $ { random ( \ " # # # . # # # # # # \ " ) } " 
 } 
 } 
 + } , 
 + { 
 + " request " : { 
 + " uri " : " / random _ template _ without _ arg " 
 + } , 
 + " response " : { 
 + " text " : { 
 + " template " : " $ { random ( ) } " 
 + } 
 + } 
 } 
 ] 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 index c57166d . . 2a698cd 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 @ @ - 133 , 4 + 133 , 12 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { 
 assertThat ( result , lessThan ( 100d ) ) ; 
 assertThat ( result , greaterThan ( 0d ) ) ; 
 } 
 + 
 + @ Test 
 + public void should _ return _ random _ with _ format _ from _ template ( ) throws IOException { 
 + runWithConfiguration ( " template _ with _ function . json " ) ; 
 + String response = helper . get ( remoteUrl ( " / random _ template _ with _ format " ) ) ; 
 + String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; 
 + assertThat ( target . length ( ) , is ( 6 ) ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / test / resources / template _ with _ function . json b / moco - runner / src / test / resources / template _ with _ function . json 
 index 8e9705e . . b898425 100644 
 - - - a / moco - runner / src / test / resources / template _ with _ function . json 
 + + + b / moco - runner / src / test / resources / template _ with _ function . json 
 @ @ - 28 , 5 + 28 , 15 @ @ 
 " template " : " $ { random ( 100 ) } " 
 } 
 } 
 + } , 
 + { 
 + " request " : { 
 + " uri " : " / random _ template _ with _ format " 
 + } , 
 + " response " : { 
 + " text " : { 
 + " template " : " $ { random ( \ " # # # . # # # # # # \ " ) } " 
 + } 
 + } 
 } 
 ] 
 \ No newline at end of file
