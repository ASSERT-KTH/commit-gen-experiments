BLEU SCORE: 0.08745825313180632

TEST MSG: added missing final to rest
GENERATED MSG: final moco and some util classes

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / ActualRestServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / ActualRestServer . java <nl> index fb0a5d0 . . 03d4471 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / ActualRestServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / ActualRestServer . java <nl> @ @ - 14 , 7 + 14 , 7 @ @ import static com . github . dreamhead . moco . util . Iterables . asIterable ; <nl> import static com . github . dreamhead . moco . util . URLs . resourceRoot ; <nl> import static com . google . common . base . Preconditions . checkNotNull ; <nl> <nl> - public class ActualRestServer extends ActualHttpServer implements RestServer { <nl> + public final class ActualRestServer extends ActualHttpServer implements RestServer { <nl> public ActualRestServer ( final Optional < Integer > port , <nl> final Optional < HttpsCertificate > certificate , <nl> final MocoMonitor monitor , <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / CompositeRestSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / CompositeRestSetting . java <nl> index c945986 . . 2c5a0e9 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / CompositeRestSetting . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / CompositeRestSetting . java <nl> @ @ - 6 , 7 + 6 , 7 @ @ import com . github . dreamhead . moco . RestIdMatcher ; <nl> import com . github . dreamhead . moco . RestSetting ; <nl> import com . google . common . base . Optional ; <nl> <nl> - public class CompositeRestSetting < T extends SimpleRestSetting > implements RestSetting { <nl> + public final class CompositeRestSetting < T extends SimpleRestSetting > implements RestSetting { <nl> private final Iterable < T > settings ; <nl> <nl> public CompositeRestSetting ( final Iterable < T > settings ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestAllSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestAllSetting . java <nl> index 255dee5 . . f6bc17e 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestAllSetting . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestAllSetting . java <nl> @ @ - 10 , 7 + 10 , 7 @ @ import static com . github . dreamhead . moco . Moco . by ; <nl> import static com . github . dreamhead . moco . Moco . uri ; <nl> import static com . github . dreamhead . moco . util . URLs . resourceRoot ; <nl> <nl> - public class RestAllSetting extends SimpleRestSetting { <nl> + public final class RestAllSetting extends SimpleRestSetting { <nl> public RestAllSetting ( final HttpMethod method , <nl> final Optional < RequestMatcher > matcher , <nl> final ResponseHandler handler ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java <nl> index 2b98aff . . cf0dfab 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java <nl> @ @ - 9 , 7 + 9 , 7 @ @ import com . github . dreamhead . moco . handler . AbstractHttpResponseHandler ; <nl> import com . github . dreamhead . moco . internal . SessionContext ; <nl> import com . google . common . base . Optional ; <nl> <nl> - public class RestHandler extends AbstractHttpResponseHandler { <nl> + public final class RestHandler extends AbstractHttpResponseHandler { <nl> private final RestRequestDispatcher dispatcher ; <nl> private final String name ; <nl> private final Iterable < RestSetting > settings ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestSingleSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestSingleSetting . java <nl> index 0b60b9e . . 1d5e59b 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestSingleSetting . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestSingleSetting . java <nl> @ @ - 6 , 7 + 6 , 7 @ @ import com . github . dreamhead . moco . ResponseHandler ; <nl> import com . github . dreamhead . moco . RestIdMatcher ; <nl> import com . google . common . base . Optional ; <nl> <nl> - public class RestSingleSetting extends SimpleRestSetting { <nl> + public final class RestSingleSetting extends SimpleRestSetting { <nl> private final RestIdMatcher id ; <nl> <nl> public RestSingleSetting ( final HttpMethod method , final RestIdMatcher id , <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / SubResourceSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / SubResourceSetting . java <nl> index 00d237c . . 380a8d0 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / SubResourceSetting . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / SubResourceSetting . java <nl> @ @ - 8 , 7 + 8 , 7 @ @ import com . google . common . base . Optional ; <nl> <nl> import static com . github . dreamhead . moco . util . URLs . join ; <nl> <nl> - public class SubResourceSetting implements RestSetting { <nl> + public final class SubResourceSetting implements RestSetting { <nl> private final RestIdMatcher id ; <nl> private final String name ; <nl> private final Iterable < RestSetting > settings ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / builder / ActualSubResourceSettingBuilder . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / builder / ActualSubResourceSettingBuilder . java <nl> index 317cfdc . . 145f838 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / builder / ActualSubResourceSettingBuilder . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / builder / ActualSubResourceSettingBuilder . java <nl> @ @ - 8 , 7 + 8 , 7 @ @ import static com . github . dreamhead . moco . rest . RestIds . checkResourceName ; <nl> import static com . github . dreamhead . moco . util . Iterables . asIterable ; <nl> import static com . google . common . base . Preconditions . checkNotNull ; <nl> <nl> - public class ActualSubResourceSettingBuilder implements SubResourceSettingBuilder , NamedSubResourceSettingBuilder { <nl> + public final class ActualSubResourceSettingBuilder implements SubResourceSettingBuilder , NamedSubResourceSettingBuilder { <nl> private final RestIdMatcher id ; <nl> private String name ; <nl>
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index e3659d4 . . fb0b853 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 46 , 7 + 46 , 7 @ @ import static com . google . common . collect . Maps . transformEntries ; <nl> import static com . google . common . net . HttpHeaders . SET _ COOKIE ; <nl> import static java . lang . String . format ; <nl> <nl> - public class Moco { <nl> + public final class Moco { <nl> public static HttpServer httpServer ( final int port , final MocoConfig . . . configs ) { <nl> checkArgument ( port > 0 , " Port must be greater than zero " ) ; <nl> return ActualHttpServer . createQuietServer ( of ( port ) , configs ) ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Configs . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Configs . java <nl> index eb28de9 . . eaf9fd4 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Configs . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Configs . java <nl> @ @ - 9 , 7 + 9 , 7 @ @ import java . util . List ; <nl> <nl> import static com . google . common . collect . FluentIterable . from ; <nl> <nl> - public class Configs { <nl> + public final class Configs { <nl> public static < T extends ConfigApplier < T > > T configItem ( T source , MocoConfig . . . configs ) { <nl> if ( source = = null ) { <nl> return null ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Cookies . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Cookies . java <nl> index 792ae22 . . a7eebac 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Cookies . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Cookies . java <nl> @ @ - 4 , 8 + 4 , 7 @ @ import io . netty . handler . codec . http . cookie . ServerCookieEncoder ; <nl> import io . netty . handler . codec . http . cookie . Cookie ; <nl> import io . netty . handler . codec . http . cookie . DefaultCookie ; <nl> <nl> - <nl> - public class Cookies { <nl> + public final class Cookies { <nl> public String encodeCookie ( String key , String value ) { <nl> Cookie cookie = new DefaultCookie ( key , value ) ; <nl> cookie . setPath ( " / " ) ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / FileContentType . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / FileContentType . java <nl> index b7c839f . . 78b190b 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / FileContentType . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / FileContentType . java <nl> @ @ - 11 , 7 + 11 , 7 @ @ import static com . google . common . base . Optional . absent ; <nl> import static com . google . common . base . Optional . fromNullable ; <nl> import static com . google . common . base . Optional . of ; <nl> <nl> - public class FileContentType { <nl> + public final class FileContentType { <nl> public static final String DEFAULT _ CONTENT _ TYPE _ WITH _ CHARSET = " text / plain ; charset = UTF - 8 " ; <nl> private static final String DEFAULT _ CONTENT _ TYPE = " text / plain " ; <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Files . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Files . java <nl> index 9206dd0 . . db5733f 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Files . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Files . java <nl> @ @ - 4 , 7 + 4 , 7 @ @ import java . io . File ; <nl> <nl> import static com . google . common . base . Preconditions . checkNotNull ; <nl> <nl> - public class Files { <nl> + public final class Files { <nl> public static String join ( String path1 , String path2 , String . . . paths ) { <nl> String finalPath = actualJoin ( path1 , path2 ) ; <nl> for ( String path : paths ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Idles . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Idles . java <nl> index 4dbd370 . . 45f0b00 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Idles . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Idles . java <nl> @ @ - 2 , 7 + 2 , 7 @ @ package com . github . dreamhead . moco . util ; <nl> <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> - public class Idles { <nl> + public final class Idles { <nl> public static void idle ( long duration , TimeUnit unit ) { <nl> try { <nl> unit . sleep ( duration ) ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Preconditions . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Preconditions . java <nl> index 7431aa3 . . 2277554 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Preconditions . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Preconditions . java <nl> @ @ - 2 , 7 + 2 , 7 @ @ package com . github . dreamhead . moco . util ; <nl> <nl> import static com . google . common . base . Strings . isNullOrEmpty ; <nl> <nl> - public class Preconditions { <nl> + public final class Preconditions { <nl> public static String checkNotNullOrEmpty ( final String reference , final Object errorMessage ) { <nl> if ( isNullOrEmpty ( reference ) ) { <nl> throw new IllegalArgumentException ( String . valueOf ( errorMessage ) ) ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / util / Jsons . java b / moco - runner / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> index 5d92e55 . . 2702453 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> @ @ - 3 , 7 + 3 , 7 @ @ package com . github . dreamhead . moco . util ; <nl> import com . fasterxml . jackson . core . JsonProcessingException ; <nl> import com . fasterxml . jackson . databind . ObjectMapper ; <nl> <nl> - public class Jsons { <nl> + public final class Jsons { <nl> public static String toJson ( Object value ) { <nl> ObjectMapper mapper = new ObjectMapper ( ) ; <nl> try {

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / ActualRestServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / ActualRestServer . java 
 index fb0a5d0 . . 03d4471 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / ActualRestServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / ActualRestServer . java 
 @ @ - 14 , 7 + 14 , 7 @ @ import static com . github . dreamhead . moco . util . Iterables . asIterable ; 
 import static com . github . dreamhead . moco . util . URLs . resourceRoot ; 
 import static com . google . common . base . Preconditions . checkNotNull ; 
 
 - public class ActualRestServer extends ActualHttpServer implements RestServer { 
 + public final class ActualRestServer extends ActualHttpServer implements RestServer { 
 public ActualRestServer ( final Optional < Integer > port , 
 final Optional < HttpsCertificate > certificate , 
 final MocoMonitor monitor , 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / CompositeRestSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / CompositeRestSetting . java 
 index c945986 . . 2c5a0e9 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / CompositeRestSetting . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / CompositeRestSetting . java 
 @ @ - 6 , 7 + 6 , 7 @ @ import com . github . dreamhead . moco . RestIdMatcher ; 
 import com . github . dreamhead . moco . RestSetting ; 
 import com . google . common . base . Optional ; 
 
 - public class CompositeRestSetting < T extends SimpleRestSetting > implements RestSetting { 
 + public final class CompositeRestSetting < T extends SimpleRestSetting > implements RestSetting { 
 private final Iterable < T > settings ; 
 
 public CompositeRestSetting ( final Iterable < T > settings ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestAllSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestAllSetting . java 
 index 255dee5 . . f6bc17e 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestAllSetting . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestAllSetting . java 
 @ @ - 10 , 7 + 10 , 7 @ @ import static com . github . dreamhead . moco . Moco . by ; 
 import static com . github . dreamhead . moco . Moco . uri ; 
 import static com . github . dreamhead . moco . util . URLs . resourceRoot ; 
 
 - public class RestAllSetting extends SimpleRestSetting { 
 + public final class RestAllSetting extends SimpleRestSetting { 
 public RestAllSetting ( final HttpMethod method , 
 final Optional < RequestMatcher > matcher , 
 final ResponseHandler handler ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java 
 index 2b98aff . . cf0dfab 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java 
 @ @ - 9 , 7 + 9 , 7 @ @ import com . github . dreamhead . moco . handler . AbstractHttpResponseHandler ; 
 import com . github . dreamhead . moco . internal . SessionContext ; 
 import com . google . common . base . Optional ; 
 
 - public class RestHandler extends AbstractHttpResponseHandler { 
 + public final class RestHandler extends AbstractHttpResponseHandler { 
 private final RestRequestDispatcher dispatcher ; 
 private final String name ; 
 private final Iterable < RestSetting > settings ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestSingleSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestSingleSetting . java 
 index 0b60b9e . . 1d5e59b 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestSingleSetting . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestSingleSetting . java 
 @ @ - 6 , 7 + 6 , 7 @ @ import com . github . dreamhead . moco . ResponseHandler ; 
 import com . github . dreamhead . moco . RestIdMatcher ; 
 import com . google . common . base . Optional ; 
 
 - public class RestSingleSetting extends SimpleRestSetting { 
 + public final class RestSingleSetting extends SimpleRestSetting { 
 private final RestIdMatcher id ; 
 
 public RestSingleSetting ( final HttpMethod method , final RestIdMatcher id , 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / SubResourceSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / SubResourceSetting . java 
 index 00d237c . . 380a8d0 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / SubResourceSetting . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / SubResourceSetting . java 
 @ @ - 8 , 7 + 8 , 7 @ @ import com . google . common . base . Optional ; 
 
 import static com . github . dreamhead . moco . util . URLs . join ; 
 
 - public class SubResourceSetting implements RestSetting { 
 + public final class SubResourceSetting implements RestSetting { 
 private final RestIdMatcher id ; 
 private final String name ; 
 private final Iterable < RestSetting > settings ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / builder / ActualSubResourceSettingBuilder . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / builder / ActualSubResourceSettingBuilder . java 
 index 317cfdc . . 145f838 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / builder / ActualSubResourceSettingBuilder . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / builder / ActualSubResourceSettingBuilder . java 
 @ @ - 8 , 7 + 8 , 7 @ @ import static com . github . dreamhead . moco . rest . RestIds . checkResourceName ; 
 import static com . github . dreamhead . moco . util . Iterables . asIterable ; 
 import static com . google . common . base . Preconditions . checkNotNull ; 
 
 - public class ActualSubResourceSettingBuilder implements SubResourceSettingBuilder , NamedSubResourceSettingBuilder { 
 + public final class ActualSubResourceSettingBuilder implements SubResourceSettingBuilder , NamedSubResourceSettingBuilder { 
 private final RestIdMatcher id ; 
 private String name ; 


NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index e3659d4 . . fb0b853 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 46 , 7 + 46 , 7 @ @ import static com . google . common . collect . Maps . transformEntries ; 
 import static com . google . common . net . HttpHeaders . SET _ COOKIE ; 
 import static java . lang . String . format ; 
 
 - public class Moco { 
 + public final class Moco { 
 public static HttpServer httpServer ( final int port , final MocoConfig . . . configs ) { 
 checkArgument ( port > 0 , " Port must be greater than zero " ) ; 
 return ActualHttpServer . createQuietServer ( of ( port ) , configs ) ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Configs . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Configs . java 
 index eb28de9 . . eaf9fd4 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Configs . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Configs . java 
 @ @ - 9 , 7 + 9 , 7 @ @ import java . util . List ; 
 
 import static com . google . common . collect . FluentIterable . from ; 
 
 - public class Configs { 
 + public final class Configs { 
 public static < T extends ConfigApplier < T > > T configItem ( T source , MocoConfig . . . configs ) { 
 if ( source = = null ) { 
 return null ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Cookies . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Cookies . java 
 index 792ae22 . . a7eebac 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Cookies . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Cookies . java 
 @ @ - 4 , 8 + 4 , 7 @ @ import io . netty . handler . codec . http . cookie . ServerCookieEncoder ; 
 import io . netty . handler . codec . http . cookie . Cookie ; 
 import io . netty . handler . codec . http . cookie . DefaultCookie ; 
 
 - 
 - public class Cookies { 
 + public final class Cookies { 
 public String encodeCookie ( String key , String value ) { 
 Cookie cookie = new DefaultCookie ( key , value ) ; 
 cookie . setPath ( " / " ) ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / FileContentType . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / FileContentType . java 
 index b7c839f . . 78b190b 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / FileContentType . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / FileContentType . java 
 @ @ - 11 , 7 + 11 , 7 @ @ import static com . google . common . base . Optional . absent ; 
 import static com . google . common . base . Optional . fromNullable ; 
 import static com . google . common . base . Optional . of ; 
 
 - public class FileContentType { 
 + public final class FileContentType { 
 public static final String DEFAULT _ CONTENT _ TYPE _ WITH _ CHARSET = " text / plain ; charset = UTF - 8 " ; 
 private static final String DEFAULT _ CONTENT _ TYPE = " text / plain " ; 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Files . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Files . java 
 index 9206dd0 . . db5733f 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Files . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Files . java 
 @ @ - 4 , 7 + 4 , 7 @ @ import java . io . File ; 
 
 import static com . google . common . base . Preconditions . checkNotNull ; 
 
 - public class Files { 
 + public final class Files { 
 public static String join ( String path1 , String path2 , String . . . paths ) { 
 String finalPath = actualJoin ( path1 , path2 ) ; 
 for ( String path : paths ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Idles . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Idles . java 
 index 4dbd370 . . 45f0b00 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Idles . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Idles . java 
 @ @ - 2 , 7 + 2 , 7 @ @ package com . github . dreamhead . moco . util ; 
 
 import java . util . concurrent . TimeUnit ; 
 
 - public class Idles { 
 + public final class Idles { 
 public static void idle ( long duration , TimeUnit unit ) { 
 try { 
 unit . sleep ( duration ) ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Preconditions . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Preconditions . java 
 index 7431aa3 . . 2277554 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Preconditions . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Preconditions . java 
 @ @ - 2 , 7 + 2 , 7 @ @ package com . github . dreamhead . moco . util ; 
 
 import static com . google . common . base . Strings . isNullOrEmpty ; 
 
 - public class Preconditions { 
 + public final class Preconditions { 
 public static String checkNotNullOrEmpty ( final String reference , final Object errorMessage ) { 
 if ( isNullOrEmpty ( reference ) ) { 
 throw new IllegalArgumentException ( String . valueOf ( errorMessage ) ) ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / util / Jsons . java b / moco - runner / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 index 5d92e55 . . 2702453 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 @ @ - 3 , 7 + 3 , 7 @ @ package com . github . dreamhead . moco . util ; 
 import com . fasterxml . jackson . core . JsonProcessingException ; 
 import com . fasterxml . jackson . databind . ObjectMapper ; 
 
 - public class Jsons { 
 + public final class Jsons { 
 public static String toJson ( Object value ) { 
 ObjectMapper mapper = new ObjectMapper ( ) ; 
 try {
