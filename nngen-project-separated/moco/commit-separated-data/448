BLEU SCORE: 0.24446151121745052

TEST MSG: extracted as template resource in text container
GENERATED MSG: inlined text and props in text container

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java <nl> index 496b951 . . 931ac01 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java <nl> @ @ - 36 , 16 + 36 , 20 @ @ public class TextContainer { <nl> } <nl> <nl> if ( isForTemplate ( ) ) { <nl> - if ( hasProperties ( ) ) { <nl> - return template ( this . text , toVariables ( this . props ) ) ; <nl> - } <nl> - <nl> - return template ( this . text ) ; <nl> + return asTemplateResource ( ) ; <nl> } <nl> <nl> return invokeTarget ( getMethodName ( ) , this . text , ContentResource . class ) ; <nl> } <nl> <nl> + private ContentResource asTemplateResource ( ) { <nl> + if ( hasProperties ( ) ) { <nl> + return template ( this . text , toVariables ( this . props ) ) ; <nl> + } <nl> + <nl> + return template ( this . text ) ; <nl> + } <nl> + <nl> private String getMethodName ( ) { <nl> if ( this . operation . equalsIgnoreCase ( " path _ resource " ) ) { <nl> return " pathResource " ; <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java <nl> index 8e0f651 . . 2a09d0e 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java <nl> @ @ - 89 , 5 + 89 , 4 @ @ public class MocoEventStandaloneTest extends AbstractMocoStandaloneTest { <nl> <nl> assertThat ( Files . toString ( file , Charset . defaultCharset ( ) ) , containsString ( " 0XCAFEBABE " ) ) ; <nl> } <nl> - <nl> }
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java <nl> index cdcb8a8 . . 4362ea9 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java <nl> @ @ - 31 , 15 + 31 , 15 @ @ public class TextContainer { <nl> <nl> public ContentResource asResource ( ) { <nl> if ( isRawText ( ) ) { <nl> - return text ( getText ( ) ) ; <nl> + return text ( this . text ) ; <nl> } <nl> <nl> if ( isForTemplate ( ) ) { <nl> if ( hasProperties ( ) ) { <nl> - return template ( getText ( ) , toVariables ( getProps ( ) ) ) ; <nl> + return template ( this . text , toVariables ( this . props ) ) ; <nl> } <nl> <nl> - return template ( getText ( ) ) ; <nl> + return template ( text ) ; <nl> } <nl> <nl> throw new IllegalArgumentException ( " Unknown " + this + " for event action setting " ) ;

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java 
 index 496b951 . . 931ac01 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java 
 @ @ - 36 , 16 + 36 , 20 @ @ public class TextContainer { 
 } 
 
 if ( isForTemplate ( ) ) { 
 - if ( hasProperties ( ) ) { 
 - return template ( this . text , toVariables ( this . props ) ) ; 
 - } 
 - 
 - return template ( this . text ) ; 
 + return asTemplateResource ( ) ; 
 } 
 
 return invokeTarget ( getMethodName ( ) , this . text , ContentResource . class ) ; 
 } 
 
 + private ContentResource asTemplateResource ( ) { 
 + if ( hasProperties ( ) ) { 
 + return template ( this . text , toVariables ( this . props ) ) ; 
 + } 
 + 
 + return template ( this . text ) ; 
 + } 
 + 
 private String getMethodName ( ) { 
 if ( this . operation . equalsIgnoreCase ( " path _ resource " ) ) { 
 return " pathResource " ; 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java 
 index 8e0f651 . . 2a09d0e 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java 
 @ @ - 89 , 5 + 89 , 4 @ @ public class MocoEventStandaloneTest extends AbstractMocoStandaloneTest { 
 
 assertThat ( Files . toString ( file , Charset . defaultCharset ( ) ) , containsString ( " 0XCAFEBABE " ) ) ; 
 } 
 - 
 }

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java 
 index cdcb8a8 . . 4362ea9 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java 
 @ @ - 31 , 15 + 31 , 15 @ @ public class TextContainer { 
 
 public ContentResource asResource ( ) { 
 if ( isRawText ( ) ) { 
 - return text ( getText ( ) ) ; 
 + return text ( this . text ) ; 
 } 
 
 if ( isForTemplate ( ) ) { 
 if ( hasProperties ( ) ) { 
 - return template ( getText ( ) , toVariables ( getProps ( ) ) ) ; 
 + return template ( this . text , toVariables ( this . props ) ) ; 
 } 
 
 - return template ( getText ( ) ) ; 
 + return template ( text ) ; 
 } 
 
 throw new IllegalArgumentException ( " Unknown " + this + " for event action setting " ) ;
