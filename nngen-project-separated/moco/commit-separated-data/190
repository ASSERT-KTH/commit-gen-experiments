BLEU SCORE: 0.11044795567078944

TEST MSG: added missing final to json path request extractor
GENERATED MSG: used request extractor interface for content extractor

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java <nl> index 14eee11 . . 2e6c9b9 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java <nl> @ @ - 15 , 7 + 15 , 7 @ @ import java . util . List ; <nl> import static com . google . common . base . Optional . absent ; <nl> import static com . google . common . base . Optional . of ; <nl> <nl> - public class JsonPathRequestExtractor extends HttpRequestExtractor < Object > { <nl> + public final class JsonPathRequestExtractor extends HttpRequestExtractor < Object > { <nl> private final ContentRequestExtractor extractor = new ContentRequestExtractor ( ) ; <nl> private final JsonPath jsonPath ; <nl>
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java <nl> index 711c5c0 . . 9a394d5 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java <nl> @ @ - 1 , 8 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> import com . github . dreamhead . moco . internal . SessionContext ; <nl> - import io . netty . handler . codec . http . FullHttpRequest ; <nl> - import io . netty . handler . codec . http . FullHttpResponse ; <nl> <nl> public interface ResponseHandler extends ConfigApplier < ResponseHandler > { <nl> void writeToResponse ( final SessionContext context ) ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java <nl> index 08390ce . . 708392d 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java <nl> @ @ - 1 , 15 + 1 , 15 @ @ <nl> package com . github . dreamhead . moco . extractor ; <nl> <nl> - import com . github . dreamhead . moco . HttpRequest ; <nl> - import com . github . dreamhead . moco . HttpRequestExtractor ; <nl> + import com . github . dreamhead . moco . Request ; <nl> + import com . github . dreamhead . moco . RequestExtractor ; <nl> import com . google . common . base . Optional ; <nl> <nl> import static com . google . common . base . Optional . of ; <nl> import static com . google . common . base . Strings . isNullOrEmpty ; <nl> <nl> - public class ContentRequestExtractor extends HttpRequestExtractor < String > { <nl> + public class ContentRequestExtractor implements RequestExtractor < String > { <nl> @ Override <nl> - protected Optional < String > doExtract ( HttpRequest request ) { <nl> + public Optional < String > extract ( final Request request ) { <nl> String content = request . getContent ( ) ; <nl> return isNullOrEmpty ( content ) ? Optional . < String > absent ( ) : of ( content ) ; <nl> }

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java 
 index 14eee11 . . 2e6c9b9 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java 
 @ @ - 15 , 7 + 15 , 7 @ @ import java . util . List ; 
 import static com . google . common . base . Optional . absent ; 
 import static com . google . common . base . Optional . of ; 
 
 - public class JsonPathRequestExtractor extends HttpRequestExtractor < Object > { 
 + public final class JsonPathRequestExtractor extends HttpRequestExtractor < Object > { 
 private final ContentRequestExtractor extractor = new ContentRequestExtractor ( ) ; 
 private final JsonPath jsonPath ; 


NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java 
 index 711c5c0 . . 9a394d5 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java 
 @ @ - 1 , 8 + 1 , 6 @ @ 
 package com . github . dreamhead . moco ; 
 
 import com . github . dreamhead . moco . internal . SessionContext ; 
 - import io . netty . handler . codec . http . FullHttpRequest ; 
 - import io . netty . handler . codec . http . FullHttpResponse ; 
 
 public interface ResponseHandler extends ConfigApplier < ResponseHandler > { 
 void writeToResponse ( final SessionContext context ) ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java 
 index 08390ce . . 708392d 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java 
 @ @ - 1 , 15 + 1 , 15 @ @ 
 package com . github . dreamhead . moco . extractor ; 
 
 - import com . github . dreamhead . moco . HttpRequest ; 
 - import com . github . dreamhead . moco . HttpRequestExtractor ; 
 + import com . github . dreamhead . moco . Request ; 
 + import com . github . dreamhead . moco . RequestExtractor ; 
 import com . google . common . base . Optional ; 
 
 import static com . google . common . base . Optional . of ; 
 import static com . google . common . base . Strings . isNullOrEmpty ; 
 
 - public class ContentRequestExtractor extends HttpRequestExtractor < String > { 
 + public class ContentRequestExtractor implements RequestExtractor < String > { 
 @ Override 
 - protected Optional < String > doExtract ( HttpRequest request ) { 
 + public Optional < String > extract ( final Request request ) { 
 String content = request . getContent ( ) ; 
 return isNullOrEmpty ( content ) ? Optional . < String > absent ( ) : of ( content ) ; 
 }
