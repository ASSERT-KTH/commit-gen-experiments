BLEU SCORE: 0.027611988917697356

TEST MSG: upgraded gradle to 4 . 4 . 1
GENERATED MSG: added missing toString for cookie container

TEST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index 67e86c1 . . 6f2fd74 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 146 , 5 + 146 , 5 @ @ subprojects { <nl> } <nl> <nl> task wrapper ( type : Wrapper ) { <nl> - gradleVersion = ' 4 . 4 ' <nl> + gradleVersion = ' 4 . 4 . 1 ' <nl> } <nl> diff - - git a / gradle / wrapper / gradle - wrapper . properties b / gradle / wrapper / gradle - wrapper . properties <nl> index 933b647 . . 2c2bbe5 100644 <nl> - - - a / gradle / wrapper / gradle - wrapper . properties <nl> + + + b / gradle / wrapper / gradle - wrapper . properties <nl> @ @ - 2 , 4 + 2 , 4 @ @ distributionBase = GRADLE _ USER _ HOME <nl> distributionPath = wrapper / dists <nl> zipStoreBase = GRADLE _ USER _ HOME <nl> zipStorePath = wrapper / dists <nl> - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 4 . 4 - bin . zip <nl> + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 4 . 4 . 1 - bin . zip <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java <nl> index dcc28ed . . 00cd30f 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java <nl> @ @ - 24 , 7 + 24 , 7 @ @ public class SeqContainerDeserializer extends JsonDeserializer < SeqContainer > { <nl> return ( SeqContainer ) ctx . handleUnexpectedToken ( TextContainer . class , jp ) ; <nl> } <nl> <nl> - private List < ResponseSetting > getSeqSettings ( final JsonParser jp ) throws IOException { <nl> + private Iterable < ResponseSetting > getSeqSettings ( final JsonParser jp ) throws IOException { <nl> TypeReference < List < ResponseSetting > > reference = new TypeReference < List < ResponseSetting > > ( ) { } ; <nl> return jp . readValueAs ( reference ) ; <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java <nl> index d76124c . . d39f6fd 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java <nl> @ @ - 6 , 15 + 6 , 13 @ @ import com . github . dreamhead . moco . parser . deserializer . SeqContainerDeserializer ; <nl> import com . google . common . base . Function ; <nl> import com . google . common . base . MoreObjects ; <nl> <nl> - import java . util . List ; <nl> - <nl> import static com . google . common . collect . FluentIterable . from ; <nl> <nl> @ JsonDeserialize ( using = SeqContainerDeserializer . class ) <nl> public class SeqContainer implements Container { <nl> - private List < ResponseSetting > sequence ; <nl> + private Iterable < ResponseSetting > sequence ; <nl> <nl> - public SeqContainer ( final List < ResponseSetting > sequence ) { <nl> + public SeqContainer ( final Iterable < ResponseSetting > sequence ) { <nl> this . sequence = sequence ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java <nl> index e5a0fd5 . . dcc28ed 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java <nl> @ @ - 13 , 16 + 13 , 15 @ @ import java . io . IOException ; <nl> import java . util . List ; <nl> <nl> public class SeqContainerDeserializer extends JsonDeserializer < SeqContainer > { <nl> - <nl> @ Override <nl> - public SeqContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { <nl> + public SeqContainer deserialize ( final JsonParser jp , final DeserializationContext ctx ) throws IOException { <nl> JsonToken currentToken = jp . getCurrentToken ( ) ; <nl> <nl> if ( currentToken = = JsonToken . START _ ARRAY ) { <nl> return new SeqContainer ( getSeqSettings ( jp ) ) ; <nl> } <nl> <nl> - return ( SeqContainer ) ctxt . handleUnexpectedToken ( TextContainer . class , jp ) ; <nl> + return ( SeqContainer ) ctx . handleUnexpectedToken ( TextContainer . class , jp ) ; <nl> } <nl> <nl> private List < ResponseSetting > getSeqSettings ( final JsonParser jp ) throws IOException { <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java <nl> index 7134239 . . 3dae266 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java <nl> @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; <nl> import com . fasterxml . jackson . databind . annotation . JsonDeserialize ; <nl> import com . github . dreamhead . moco . CookieAttribute ; <nl> import com . github . dreamhead . moco . parser . deserializer . CookieContainerDeserializer ; <nl> + import com . google . common . base . MoreObjects ; <nl> <nl> import java . util . List ; <nl> <nl> @ @ - 75 , 4 + 76 , 19 @ @ public class CookieContainer implements Container { <nl> <nl> return options . toArray ( new CookieAttribute [ options . size ( ) ] ) ; <nl> } <nl> - } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return MoreObjects . toStringHelper ( this ) <nl> + . omitNullValues ( ) <nl> + . add ( " value " , value ) <nl> + . add ( " path " , path ) <nl> + . add ( " domain " , domain ) <nl> + . add ( " max age " , maxAge ) <nl> + . add ( " secure " , secure ) <nl> + . add ( " HTTP only " , httpOnly ) <nl> + . add ( " template " , template ) <nl> + . toString ( ) ; <nl> + <nl> + } <nl> + } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index 67e86c1 . . 6f2fd74 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 146 , 5 + 146 , 5 @ @ subprojects { 
 } 
 
 task wrapper ( type : Wrapper ) { 
 - gradleVersion = ' 4 . 4 ' 
 + gradleVersion = ' 4 . 4 . 1 ' 
 } 
 diff - - git a / gradle / wrapper / gradle - wrapper . properties b / gradle / wrapper / gradle - wrapper . properties 
 index 933b647 . . 2c2bbe5 100644 
 - - - a / gradle / wrapper / gradle - wrapper . properties 
 + + + b / gradle / wrapper / gradle - wrapper . properties 
 @ @ - 2 , 4 + 2 , 4 @ @ distributionBase = GRADLE _ USER _ HOME 
 distributionPath = wrapper / dists 
 zipStoreBase = GRADLE _ USER _ HOME 
 zipStorePath = wrapper / dists 
 - distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 4 . 4 - bin . zip 
 + distributionUrl = https \ : / / services . gradle . org / distributions / gradle - 4 . 4 . 1 - bin . zip 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java 
 index dcc28ed . . 00cd30f 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java 
 @ @ - 24 , 7 + 24 , 7 @ @ public class SeqContainerDeserializer extends JsonDeserializer < SeqContainer > { 
 return ( SeqContainer ) ctx . handleUnexpectedToken ( TextContainer . class , jp ) ; 
 } 
 
 - private List < ResponseSetting > getSeqSettings ( final JsonParser jp ) throws IOException { 
 + private Iterable < ResponseSetting > getSeqSettings ( final JsonParser jp ) throws IOException { 
 TypeReference < List < ResponseSetting > > reference = new TypeReference < List < ResponseSetting > > ( ) { } ; 
 return jp . readValueAs ( reference ) ; 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java 
 index d76124c . . d39f6fd 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java 
 @ @ - 6 , 15 + 6 , 13 @ @ import com . github . dreamhead . moco . parser . deserializer . SeqContainerDeserializer ; 
 import com . google . common . base . Function ; 
 import com . google . common . base . MoreObjects ; 
 
 - import java . util . List ; 
 - 
 import static com . google . common . collect . FluentIterable . from ; 
 
 @ JsonDeserialize ( using = SeqContainerDeserializer . class ) 
 public class SeqContainer implements Container { 
 - private List < ResponseSetting > sequence ; 
 + private Iterable < ResponseSetting > sequence ; 
 
 - public SeqContainer ( final List < ResponseSetting > sequence ) { 
 + public SeqContainer ( final Iterable < ResponseSetting > sequence ) { 
 this . sequence = sequence ; 
 } 


NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java 
 index e5a0fd5 . . dcc28ed 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java 
 @ @ - 13 , 16 + 13 , 15 @ @ import java . io . IOException ; 
 import java . util . List ; 
 
 public class SeqContainerDeserializer extends JsonDeserializer < SeqContainer > { 
 - 
 @ Override 
 - public SeqContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { 
 + public SeqContainer deserialize ( final JsonParser jp , final DeserializationContext ctx ) throws IOException { 
 JsonToken currentToken = jp . getCurrentToken ( ) ; 
 
 if ( currentToken = = JsonToken . START _ ARRAY ) { 
 return new SeqContainer ( getSeqSettings ( jp ) ) ; 
 } 
 
 - return ( SeqContainer ) ctxt . handleUnexpectedToken ( TextContainer . class , jp ) ; 
 + return ( SeqContainer ) ctx . handleUnexpectedToken ( TextContainer . class , jp ) ; 
 } 
 
 private List < ResponseSetting > getSeqSettings ( final JsonParser jp ) throws IOException { 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java 
 index 7134239 . . 3dae266 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; 
 import com . fasterxml . jackson . databind . annotation . JsonDeserialize ; 
 import com . github . dreamhead . moco . CookieAttribute ; 
 import com . github . dreamhead . moco . parser . deserializer . CookieContainerDeserializer ; 
 + import com . google . common . base . MoreObjects ; 
 
 import java . util . List ; 
 
 @ @ - 75 , 4 + 76 , 19 @ @ public class CookieContainer implements Container { 
 
 return options . toArray ( new CookieAttribute [ options . size ( ) ] ) ; 
 } 
 - } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return MoreObjects . toStringHelper ( this ) 
 + . omitNullValues ( ) 
 + . add ( " value " , value ) 
 + . add ( " path " , path ) 
 + . add ( " domain " , domain ) 
 + . add ( " max age " , maxAge ) 
 + . add ( " secure " , secure ) 
 + . add ( " HTTP only " , httpOnly ) 
 + . add ( " template " , template ) 
 + . toString ( ) ; 
 + 
 + } 
 + } 
 \ No newline at end of file
