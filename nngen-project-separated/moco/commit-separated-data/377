BLEU SCORE: 0.11044795567078944

TEST MSG: renamed text field in plain extractor to object
GENERATED MSG: made plain extractor generic

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java <nl> index 5094263 . . d89ab68 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java <nl> @ @ - 7 , 14 + 7 , 14 @ @ import com . google . common . base . Optional ; <nl> import static com . google . common . base . Optional . of ; <nl> <nl> public class PlainExtractor < T > implements RequestExtractor < T > { <nl> - private final T text ; <nl> + private final T object ; <nl> <nl> - public PlainExtractor ( final T text ) { <nl> - this . text = text ; <nl> + public PlainExtractor ( final T object ) { <nl> + this . object = object ; <nl> } <nl> <nl> @ Override <nl> public Optional < T > extract ( final Request request ) { <nl> - return of ( this . text ) ; <nl> + return of ( this . object ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index bb1b144 . . 84a4148 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 536 , 7 + 536 , 7 @ @ public final class Moco { <nl> } <nl> <nl> public static RequestExtractor < Object > var ( final Object text ) { <nl> - return new PlainExtractor ( checkNotNull ( text , " Template variable should not be null or empty " ) ) ; <nl> + return new PlainExtractor < Object > ( checkNotNull ( text , " Template variable should not be null or empty " ) ) ; <nl> } <nl> <nl> public static Failover failover ( final String file ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java <nl> index daaeccd . . 5094263 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java <nl> @ @ - 6 , 15 + 6 , 15 @ @ import com . google . common . base . Optional ; <nl> <nl> import static com . google . common . base . Optional . of ; <nl> <nl> - public class PlainExtractor implements RequestExtractor < Object > { <nl> - private final Object text ; <nl> + public class PlainExtractor < T > implements RequestExtractor < T > { <nl> + private final T text ; <nl> <nl> - public PlainExtractor ( final Object text ) { <nl> + public PlainExtractor ( final T text ) { <nl> this . text = text ; <nl> } <nl> <nl> @ Override <nl> - public Optional < Object > extract ( final Request request ) { <nl> + public Optional < T > extract ( final Request request ) { <nl> return of ( this . text ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java 
 index 5094263 . . d89ab68 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java 
 @ @ - 7 , 14 + 7 , 14 @ @ import com . google . common . base . Optional ; 
 import static com . google . common . base . Optional . of ; 
 
 public class PlainExtractor < T > implements RequestExtractor < T > { 
 - private final T text ; 
 + private final T object ; 
 
 - public PlainExtractor ( final T text ) { 
 - this . text = text ; 
 + public PlainExtractor ( final T object ) { 
 + this . object = object ; 
 } 
 
 @ Override 
 public Optional < T > extract ( final Request request ) { 
 - return of ( this . text ) ; 
 + return of ( this . object ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index bb1b144 . . 84a4148 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 536 , 7 + 536 , 7 @ @ public final class Moco { 
 } 
 
 public static RequestExtractor < Object > var ( final Object text ) { 
 - return new PlainExtractor ( checkNotNull ( text , " Template variable should not be null or empty " ) ) ; 
 + return new PlainExtractor < Object > ( checkNotNull ( text , " Template variable should not be null or empty " ) ) ; 
 } 
 
 public static Failover failover ( final String file ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java 
 index daaeccd . . 5094263 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / PlainExtractor . java 
 @ @ - 6 , 15 + 6 , 15 @ @ import com . google . common . base . Optional ; 
 
 import static com . google . common . base . Optional . of ; 
 
 - public class PlainExtractor implements RequestExtractor < Object > { 
 - private final Object text ; 
 + public class PlainExtractor < T > implements RequestExtractor < T > { 
 + private final T text ; 
 
 - public PlainExtractor ( final Object text ) { 
 + public PlainExtractor ( final T text ) { 
 this . text = text ; 
 } 
 
 @ Override 
 - public Optional < Object > extract ( final Request request ) { 
 + public Optional < T > extract ( final Request request ) { 
 return of ( this . text ) ; 
 } 
 }
