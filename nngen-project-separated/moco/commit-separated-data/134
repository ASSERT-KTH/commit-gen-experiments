BLEU SCORE: 0.11737849637633067

TEST MSG: added standalone test for now template function
GENERATED MSG: added json test for req . json in template

TEST DIFF (one line): diff - - git a / moco - doc / apis . md b / moco - doc / apis . md <nl> index 78ea4d6 . . e1b1f4a 100644 <nl> - - - a / moco - doc / apis . md <nl> + + + b / moco - doc / apis . md <nl> @ @ - 2160 , 7 + 2160 , 7 @ @ server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { now ( ' yyyy - MM - dd ' ) } " ) ) ; <nl> } , <nl> " response " : { <nl> " text " : { <nl> - " template " : " $ { now ( ' yyyy - MM - dd ' ) } " <nl> + " template " : " $ { now ( \ " yyyy - MM - dd \ " ) } " <nl> } <nl> } <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> index a7d788e . . e3f09c0 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> @ @ - 8 , 6 + 8 , 8 @ @ import org . apache . http . message . BasicNameValuePair ; <nl> import org . junit . Test ; <nl> <nl> import java . io . IOException ; <nl> + import java . text . SimpleDateFormat ; <nl> + import java . util . Date ; <nl> <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . remoteUrl ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; <nl> @ @ - 100 , 4 + 102 , 12 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { <nl> String content = helper . postContent ( remoteUrl ( " / json _ template " ) , " { \ " foo \ " : \ " bar \ " } " ) ; <nl> assertThat ( content , is ( " bar " ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ return _ now _ from _ template ( ) throws IOException { <nl> + runWithConfiguration ( " template _ with _ function . json " ) ; <nl> + Date date = new Date ( ) ; <nl> + SimpleDateFormat format = new SimpleDateFormat ( " yyyy - MM - dd " ) ; <nl> + assertThat ( helper . get ( remoteUrl ( " / now _ template " ) ) , is ( format . format ( date ) ) ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / test / resources / template _ with _ function . json b / moco - runner / src / test / resources / template _ with _ function . json <nl> new file mode 100644 <nl> index 0000000 . . 74c8c90 <nl> - - - / dev / null <nl> + + + b / moco - runner / src / test / resources / template _ with _ function . json <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + [ <nl> + { <nl> + " request " : { <nl> + " uri " : " / now _ template " <nl> + } , <nl> + " response " : { <nl> + " text " : { <nl> + " template " : " $ { now ( \ " yyyy - MM - dd \ " ) } " <nl> + } <nl> + } <nl> + } <nl> + ] <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> index 7b54553 . . a7d788e 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> @ @ - 93 , 4 + 93 , 11 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { <nl> runWithConfiguration ( " response _ with _ template _ name . json " ) ; <nl> assertThat ( helper . get ( root ( ) ) , is ( " foo . response " ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ return _ json _ field _ from _ template ( ) throws IOException { <nl> + runWithConfiguration ( " template . json " ) ; <nl> + String content = helper . postContent ( remoteUrl ( " / json _ template " ) , " { \ " foo \ " : \ " bar \ " } " ) ; <nl> + assertThat ( content , is ( " bar " ) ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / test / resources / template . json b / moco - runner / src / test / resources / template . json <nl> index e6180aa . . 3693102 100644 <nl> - - - a / moco - runner / src / test / resources / template . json <nl> + + + b / moco - runner / src / test / resources / template . json <nl> @ @ - 96 , 5 + 96 , 15 @ @ <nl> " template " : " $ { req . queries [ ' foo ' ] } " <nl> } <nl> } <nl> + } , <nl> + { <nl> + " request " : { <nl> + " uri " : " / json _ template " <nl> + } , <nl> + " response " : { <nl> + " text " : { <nl> + " template " : " $ { req . json . foo } " <nl> + } <nl> + } <nl> } <nl> ] <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / moco - doc / apis . md b / moco - doc / apis . md 
 index 78ea4d6 . . e1b1f4a 100644 
 - - - a / moco - doc / apis . md 
 + + + b / moco - doc / apis . md 
 @ @ - 2160 , 7 + 2160 , 7 @ @ server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { now ( ' yyyy - MM - dd ' ) } " ) ) ; 
 } , 
 " response " : { 
 " text " : { 
 - " template " : " $ { now ( ' yyyy - MM - dd ' ) } " 
 + " template " : " $ { now ( \ " yyyy - MM - dd \ " ) } " 
 } 
 } 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 index a7d788e . . e3f09c0 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 @ @ - 8 , 6 + 8 , 8 @ @ import org . apache . http . message . BasicNameValuePair ; 
 import org . junit . Test ; 
 
 import java . io . IOException ; 
 + import java . text . SimpleDateFormat ; 
 + import java . util . Date ; 
 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . remoteUrl ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; 
 @ @ - 100 , 4 + 102 , 12 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { 
 String content = helper . postContent ( remoteUrl ( " / json _ template " ) , " { \ " foo \ " : \ " bar \ " } " ) ; 
 assertThat ( content , is ( " bar " ) ) ; 
 } 
 + 
 + @ Test 
 + public void should _ return _ now _ from _ template ( ) throws IOException { 
 + runWithConfiguration ( " template _ with _ function . json " ) ; 
 + Date date = new Date ( ) ; 
 + SimpleDateFormat format = new SimpleDateFormat ( " yyyy - MM - dd " ) ; 
 + assertThat ( helper . get ( remoteUrl ( " / now _ template " ) ) , is ( format . format ( date ) ) ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / test / resources / template _ with _ function . json b / moco - runner / src / test / resources / template _ with _ function . json 
 new file mode 100644 
 index 0000000 . . 74c8c90 
 - - - / dev / null 
 + + + b / moco - runner / src / test / resources / template _ with _ function . json 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + [ 
 + { 
 + " request " : { 
 + " uri " : " / now _ template " 
 + } , 
 + " response " : { 
 + " text " : { 
 + " template " : " $ { now ( \ " yyyy - MM - dd \ " ) } " 
 + } 
 + } 
 + } 
 + ] 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 index 7b54553 . . a7d788e 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 @ @ - 93 , 4 + 93 , 11 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { 
 runWithConfiguration ( " response _ with _ template _ name . json " ) ; 
 assertThat ( helper . get ( root ( ) ) , is ( " foo . response " ) ) ; 
 } 
 + 
 + @ Test 
 + public void should _ return _ json _ field _ from _ template ( ) throws IOException { 
 + runWithConfiguration ( " template . json " ) ; 
 + String content = helper . postContent ( remoteUrl ( " / json _ template " ) , " { \ " foo \ " : \ " bar \ " } " ) ; 
 + assertThat ( content , is ( " bar " ) ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / test / resources / template . json b / moco - runner / src / test / resources / template . json 
 index e6180aa . . 3693102 100644 
 - - - a / moco - runner / src / test / resources / template . json 
 + + + b / moco - runner / src / test / resources / template . json 
 @ @ - 96 , 5 + 96 , 15 @ @ 
 " template " : " $ { req . queries [ ' foo ' ] } " 
 } 
 } 
 + } , 
 + { 
 + " request " : { 
 + " uri " : " / json _ template " 
 + } , 
 + " response " : { 
 + " text " : { 
 + " template " : " $ { req . json . foo } " 
 + } 
 + } 
 } 
 ] 
 \ No newline at end of file
