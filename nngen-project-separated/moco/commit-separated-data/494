BLEU SCORE: 0.35084396956386854

TEST MSG: replaced exception with illegal argument exception in dynamic request matcher factory
GENERATED MSG: removed unused unchecked warning in dynamic request matcher factory

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> index dbb5d78 . . 9fb066d 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> @ @ - 158 , 7 + 158 , 7 @ @ public class DynamicRequestMatcherFactory extends Dynamics implements RequestMat <nl> return not ( exist ( extractor ) ) ; <nl> } <nl> <nl> - throw new RuntimeException ( String . format ( " Unknown exist parameter : [ % s ] " , text ) ) ; <nl> + throw new IllegalArgumentException ( String . format ( " Unknown exist parameter : [ % s ] " , text ) ) ; <nl> } <nl> <nl> private static RequestMatcher wrapRequestMatcher ( final RequestSetting request ,
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> index dbb5d78 . . a05ecf3 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> @ @ - 113 , 7 + 113 , 6 @ @ public class DynamicRequestMatcherFactory extends Dynamics implements RequestMat <nl> private Function < Map . Entry < String , Object > , RequestMatcher > toTargetMatcher ( final Method extractorMethod ) { <nl> return new Function < Map . Entry < String , Object > , RequestMatcher > ( ) { <nl> @ Override <nl> - @ SuppressWarnings ( " unchecked " ) <nl> public RequestMatcher apply ( final Map . Entry < String , Object > pair ) { <nl> RequestExtractor extractor = createRequestExtractor ( extractorMethod , pair . getKey ( ) ) ; <nl> return createRequestMatcher ( extractor , pair . getValue ( ) ) ;

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 index dbb5d78 . . 9fb066d 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 @ @ - 158 , 7 + 158 , 7 @ @ public class DynamicRequestMatcherFactory extends Dynamics implements RequestMat 
 return not ( exist ( extractor ) ) ; 
 } 
 
 - throw new RuntimeException ( String . format ( " Unknown exist parameter : [ % s ] " , text ) ) ; 
 + throw new IllegalArgumentException ( String . format ( " Unknown exist parameter : [ % s ] " , text ) ) ; 
 } 
 
 private static RequestMatcher wrapRequestMatcher ( final RequestSetting request ,

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 index dbb5d78 . . a05ecf3 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 @ @ - 113 , 7 + 113 , 6 @ @ public class DynamicRequestMatcherFactory extends Dynamics implements RequestMat 
 private Function < Map . Entry < String , Object > , RequestMatcher > toTargetMatcher ( final Method extractorMethod ) { 
 return new Function < Map . Entry < String , Object > , RequestMatcher > ( ) { 
 @ Override 
 - @ SuppressWarnings ( " unchecked " ) 
 public RequestMatcher apply ( final Map . Entry < String , Object > pair ) { 
 RequestExtractor extractor = createRequestExtractor ( extractorMethod , pair . getKey ( ) ) ; 
 return createRequestMatcher ( extractor , pair . getValue ( ) ) ;
