BLEU SCORE: 0.05862502026550899

TEST MSG: removed unused toObject in Jsons
GENERATED MSG: replaced list json object with toObjects in jsons

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> index e38d9cf . . a04fb80 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> @ @ - 52 , 14 + 52 , 6 @ @ public final class Jsons { <nl> } <nl> } <nl> <nl> - public static < T > T toObject ( final String value , final Class < T > clazz ) { <nl> - try { <nl> - return mapper . readValue ( value , clazz ) ; <nl> - } catch ( IOException e ) { <nl> - throw new MocoException ( e ) ; <nl> - } <nl> - } <nl> - <nl> public static < T > ImmutableList < T > toObjects ( final String value , final Class < T > elementClass ) { <nl> return toObjects ( new ByteArrayInputStream ( value . getBytes ( ) ) , elementClass ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> index fefe6b7 . . d246fd3 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ import com . google . common . collect . ImmutableList ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> + import java . io . ByteArrayInputStream ; <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> import java . util . List ; <nl> @ @ - 50 , 7 + 51 , 7 @ @ public final class Jsons { <nl> } <nl> } <nl> <nl> - public static < T > T toObject ( final String value , final TypeReference clazz ) { <nl> + public static < T > T toObject ( final InputStream value , final TypeReference clazz ) { <nl> try { <nl> return mapper . readValue ( value , clazz ) ; <nl> } catch ( IOException e ) { <nl> @ @ - 58 , 15 + 59 , 11 @ @ public final class Jsons { <nl> } <nl> } <nl> <nl> - public static < T > T toObject ( final InputStream value , final TypeReference clazz ) { <nl> - try { <nl> - return mapper . readValue ( value , clazz ) ; <nl> - } catch ( IOException e ) { <nl> - throw new MocoException ( e ) ; <nl> - } <nl> + public static < T > ImmutableList < T > toObjects ( final String value , final Class < T > elementClass ) { <nl> + return toObjects ( new ByteArrayInputStream ( value . getBytes ( ) ) , elementClass ) ; <nl> } <nl> <nl> - public static < T > ImmutableList < T > toList ( final InputStream stream , final Class < T > elementClass ) { <nl> + public static < T > ImmutableList < T > toObjects ( final InputStream stream , final Class < T > elementClass ) { <nl> try { <nl> CollectionType type = factory . constructCollectionType ( List . class , elementClass ) ; <nl> List < T > sessionSettings = mapper . readValue ( stream , type ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> index 24d8d01 . . df302d9 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> @ @ - 1 , 6 + 1 , 5 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> - import com . fasterxml . jackson . core . type . TypeReference ; <nl> import com . github . dreamhead . moco . util . Jsons ; <nl> import com . google . common . collect . ImmutableList ; <nl> import com . google . common . collect . ImmutableMultimap ; <nl> @ @ - 269 , 8 + 268 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> - List < Plain > plains = Jsons . toObject ( helper . get ( remoteUrl ( " / targets ? foo = bar " ) ) , new TypeReference < List < Plain > > ( ) { <nl> - } ) ; <nl> + List < Plain > plains = Jsons . toObjects ( helper . get ( remoteUrl ( " / targets ? foo = bar " ) ) , Plain . class ) ; <nl> assertThat ( plains . size ( ) , is ( 2 ) ) ; <nl> <nl> HttpResponse response = helper . getResponse ( remoteUrl ( " / targets " ) ) ; <nl> @ @ - 839 , 8 + 837 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> <nl> private List < Plain > asPlains ( final HttpResponse response ) throws IOException { <nl> HttpEntity entity = checkJsonResponse ( response ) ; <nl> - return Jsons . toObject ( entity . getContent ( ) , new TypeReference < List < Plain > > ( ) { <nl> - } ) ; <nl> + return Jsons . toObjects ( entity . getContent ( ) , Plain . class ) ; <nl> } <nl> <nl> private HttpEntity checkJsonResponse ( final HttpResponse response ) { <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> index 8409fea . . e7e9dea 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> @ @ - 15 , 7 + 15 , 7 @ @ public abstract class BaseParser < T extends Server > implements Parser < T > { <nl> <nl> public T parseServer ( final InputStream is , final Optional < Integer > port , <nl> final MocoConfig . . . configs ) { <nl> - ImmutableList < SessionSetting > settings = Jsons . toList ( is , SessionSetting . class ) ; <nl> + ImmutableList < SessionSetting > settings = Jsons . toObjects ( is , SessionSetting . class ) ; <nl> return createServer ( settings , port , configs ) ; <nl> } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / GlobalSettingParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / GlobalSettingParser . java <nl> index a56b8ab . . 1469fe1 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / GlobalSettingParser . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / GlobalSettingParser . java <nl> @ @ - 8 , 6 + 8 , 6 @ @ import java . io . InputStream ; <nl> <nl> public class GlobalSettingParser { <nl> public ImmutableList < GlobalSetting > parse ( final InputStream is ) { <nl> - return Jsons . toList ( is , GlobalSetting . class ) ; <nl> + return Jsons . toObjects ( is , GlobalSetting . class ) ; <nl> } <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoRestStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoRestStandaloneTest . java <nl> index 238165f . . 6843a56 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoRestStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoRestStandaloneTest . java <nl> @ @ - 1 , 6 + 1 , 5 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> - import com . fasterxml . jackson . core . type . TypeReference ; <nl> import com . github . dreamhead . moco . util . Jsons ; <nl> import com . google . common . net . HttpHeaders ; <nl> import com . google . common . net . MediaType ; <nl> @ @ - 181 , 8 + 180 , 7 @ @ public class MocoRestStandaloneTest extends AbstractMocoStandaloneTest { <nl> <nl> assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 200 ) ) ; <nl> HttpEntity entity = response . getEntity ( ) ; <nl> - List < Plain > plains = Jsons . toObject ( entity . getContent ( ) , new TypeReference < List < Plain > > ( ) { <nl> - } ) ; <nl> + List < Plain > plains = Jsons . toObjects ( entity . getContent ( ) , Plain . class ) ; <nl> assertThat ( plains . size ( ) , is ( 2 ) ) ; <nl> } <nl> <nl> @ @ - 210 , 7 + 208 , 7 @ @ public class MocoRestStandaloneTest extends AbstractMocoStandaloneTest { <nl> runWithConfiguration ( " rest / rest _ error _ without _ patch _ id . json " ) ; <nl> } <nl> <nl> - private Plain getResource ( String uri ) throws IOException { <nl> + private Plain getResource ( final String uri ) throws IOException { <nl> org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( uri ) ) ; <nl> return asPlain ( response ) ; <nl> }

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 index e38d9cf . . a04fb80 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 @ @ - 52 , 14 + 52 , 6 @ @ public final class Jsons { 
 } 
 } 
 
 - public static < T > T toObject ( final String value , final Class < T > clazz ) { 
 - try { 
 - return mapper . readValue ( value , clazz ) ; 
 - } catch ( IOException e ) { 
 - throw new MocoException ( e ) ; 
 - } 
 - } 
 - 
 public static < T > ImmutableList < T > toObjects ( final String value , final Class < T > elementClass ) { 
 return toObjects ( new ByteArrayInputStream ( value . getBytes ( ) ) , elementClass ) ; 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 index fefe6b7 . . d246fd3 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 @ @ - 12 , 6 + 12 , 7 @ @ import com . google . common . collect . ImmutableList ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 + import java . io . ByteArrayInputStream ; 
 import java . io . IOException ; 
 import java . io . InputStream ; 
 import java . util . List ; 
 @ @ - 50 , 7 + 51 , 7 @ @ public final class Jsons { 
 } 
 } 
 
 - public static < T > T toObject ( final String value , final TypeReference clazz ) { 
 + public static < T > T toObject ( final InputStream value , final TypeReference clazz ) { 
 try { 
 return mapper . readValue ( value , clazz ) ; 
 } catch ( IOException e ) { 
 @ @ - 58 , 15 + 59 , 11 @ @ public final class Jsons { 
 } 
 } 
 
 - public static < T > T toObject ( final InputStream value , final TypeReference clazz ) { 
 - try { 
 - return mapper . readValue ( value , clazz ) ; 
 - } catch ( IOException e ) { 
 - throw new MocoException ( e ) ; 
 - } 
 + public static < T > ImmutableList < T > toObjects ( final String value , final Class < T > elementClass ) { 
 + return toObjects ( new ByteArrayInputStream ( value . getBytes ( ) ) , elementClass ) ; 
 } 
 
 - public static < T > ImmutableList < T > toList ( final InputStream stream , final Class < T > elementClass ) { 
 + public static < T > ImmutableList < T > toObjects ( final InputStream stream , final Class < T > elementClass ) { 
 try { 
 CollectionType type = factory . constructCollectionType ( List . class , elementClass ) ; 
 List < T > sessionSettings = mapper . readValue ( stream , type ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 index 24d8d01 . . df302d9 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 @ @ - 1 , 6 + 1 , 5 @ @ 
 package com . github . dreamhead . moco ; 
 
 - import com . fasterxml . jackson . core . type . TypeReference ; 
 import com . github . dreamhead . moco . util . Jsons ; 
 import com . google . common . collect . ImmutableList ; 
 import com . google . common . collect . ImmutableMultimap ; 
 @ @ - 269 , 8 + 268 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 - List < Plain > plains = Jsons . toObject ( helper . get ( remoteUrl ( " / targets ? foo = bar " ) ) , new TypeReference < List < Plain > > ( ) { 
 - } ) ; 
 + List < Plain > plains = Jsons . toObjects ( helper . get ( remoteUrl ( " / targets ? foo = bar " ) ) , Plain . class ) ; 
 assertThat ( plains . size ( ) , is ( 2 ) ) ; 
 
 HttpResponse response = helper . getResponse ( remoteUrl ( " / targets " ) ) ; 
 @ @ - 839 , 8 + 837 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 
 private List < Plain > asPlains ( final HttpResponse response ) throws IOException { 
 HttpEntity entity = checkJsonResponse ( response ) ; 
 - return Jsons . toObject ( entity . getContent ( ) , new TypeReference < List < Plain > > ( ) { 
 - } ) ; 
 + return Jsons . toObjects ( entity . getContent ( ) , Plain . class ) ; 
 } 
 
 private HttpEntity checkJsonResponse ( final HttpResponse response ) { 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 index 8409fea . . e7e9dea 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 @ @ - 15 , 7 + 15 , 7 @ @ public abstract class BaseParser < T extends Server > implements Parser < T > { 
 
 public T parseServer ( final InputStream is , final Optional < Integer > port , 
 final MocoConfig . . . configs ) { 
 - ImmutableList < SessionSetting > settings = Jsons . toList ( is , SessionSetting . class ) ; 
 + ImmutableList < SessionSetting > settings = Jsons . toObjects ( is , SessionSetting . class ) ; 
 return createServer ( settings , port , configs ) ; 
 } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / GlobalSettingParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / GlobalSettingParser . java 
 index a56b8ab . . 1469fe1 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / GlobalSettingParser . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / GlobalSettingParser . java 
 @ @ - 8 , 6 + 8 , 6 @ @ import java . io . InputStream ; 
 
 public class GlobalSettingParser { 
 public ImmutableList < GlobalSetting > parse ( final InputStream is ) { 
 - return Jsons . toList ( is , GlobalSetting . class ) ; 
 + return Jsons . toObjects ( is , GlobalSetting . class ) ; 
 } 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoRestStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoRestStandaloneTest . java 
 index 238165f . . 6843a56 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoRestStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoRestStandaloneTest . java 
 @ @ - 1 , 6 + 1 , 5 @ @ 
 package com . github . dreamhead . moco ; 
 
 - import com . fasterxml . jackson . core . type . TypeReference ; 
 import com . github . dreamhead . moco . util . Jsons ; 
 import com . google . common . net . HttpHeaders ; 
 import com . google . common . net . MediaType ; 
 @ @ - 181 , 8 + 180 , 7 @ @ public class MocoRestStandaloneTest extends AbstractMocoStandaloneTest { 
 
 assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 200 ) ) ; 
 HttpEntity entity = response . getEntity ( ) ; 
 - List < Plain > plains = Jsons . toObject ( entity . getContent ( ) , new TypeReference < List < Plain > > ( ) { 
 - } ) ; 
 + List < Plain > plains = Jsons . toObjects ( entity . getContent ( ) , Plain . class ) ; 
 assertThat ( plains . size ( ) , is ( 2 ) ) ; 
 } 
 
 @ @ - 210 , 7 + 208 , 7 @ @ public class MocoRestStandaloneTest extends AbstractMocoStandaloneTest { 
 runWithConfiguration ( " rest / rest _ error _ without _ patch _ id . json " ) ; 
 } 
 
 - private Plain getResource ( String uri ) throws IOException { 
 + private Plain getResource ( final String uri ) throws IOException { 
 org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( uri ) ) ; 
 return asPlain ( response ) ; 
 }
