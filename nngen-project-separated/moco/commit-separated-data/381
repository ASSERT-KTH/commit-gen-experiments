BLEU SCORE: 0.06567274736060397

TEST MSG: added missing final to setting runner test
GENERATED MSG: removed unused import from moco standalone test

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java <nl> index 147f470 . . 08c0fed 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java <nl> @ @ - 31 , 7 + 31 , 8 @ @ import static com . github . dreamhead . moco . util . Iterables . asIterable ; <nl> import static com . google . common . collect . Maps . transformEntries ; <nl> <nl> public final class ApiUtils { <nl> - public static MocoMonitor mergeMonitor ( final MocoMonitor monitor , final MocoMonitor monitor2 , final MocoMonitor [ ] monitors ) { <nl> + public static MocoMonitor mergeMonitor ( final MocoMonitor monitor , final MocoMonitor monitor2 , <nl> + final MocoMonitor [ ] monitors ) { <nl> return new CompositeMonitor ( asIterable ( monitor , monitor2 , monitors ) ) ; <nl> } <nl> <nl> @ @ - 45 , 7 + 46 , 8 @ @ public final class ApiUtils { <nl> } ; <nl> } <nl> <nl> - public static ImmutableMap < String , Variable > toVariables ( final ImmutableMap < String , ? extends RequestExtractor < ? > > variables ) { <nl> + public static ImmutableMap < String , Variable > toVariables ( <nl> + final ImmutableMap < String , ? extends RequestExtractor < ? > > variables ) { <nl> return ImmutableMap . copyOf ( transformEntries ( variables , toVariable ( ) ) ) ; <nl> } <nl> <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / AbstractMocoHttpTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / AbstractMocoHttpTest . java <nl> index b6c54fe . . d50cbfc 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / AbstractMocoHttpTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / AbstractMocoHttpTest . java <nl> @ @ - 3 , 7 + 3 , 7 @ @ package com . github . dreamhead . moco ; <nl> import static com . github . dreamhead . moco . Moco . httpServer ; <nl> <nl> public class AbstractMocoHttpTest extends BaseMocoHttpTest < HttpServer > { <nl> - protected HttpServer createServer ( int port ) { <nl> + protected HttpServer createServer ( final int port ) { <nl> return httpServer ( port ) ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / resource / reader / ClasspathFileResourceReaderTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / resource / reader / ClasspathFileResourceReaderTest . java <nl> index 520bfe4 . . f722806 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / resource / reader / ClasspathFileResourceReaderTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / resource / reader / ClasspathFileResourceReaderTest . java <nl> @ @ - 22 , 4 + 22 , 4 @ @ public class ClasspathFileResourceReaderTest { <nl> ClasspathFileResourceReader reader = new ClasspathFileResourceReader ( text ( " unknown . response " ) , Optional . < Charset > absent ( ) ) ; <nl> reader . readFor ( Optional . < Request > absent ( ) ) ; <nl> } <nl> - } <nl> \ No newline at end of file <nl> + } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicConfigurationRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicConfigurationRunnerTest . java <nl> index 6678ad3 . . 9a52250 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicConfigurationRunnerTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicConfigurationRunnerTest . java <nl> @ @ - 20 , 18 + 20 , 22 @ @ public class DynamicConfigurationRunnerTest extends AbstractRunnerTest { <nl> @ Test <nl> public void should _ reload _ configuration ( ) throws IOException , InterruptedException { <nl> final File config = tempFolder . newFile ( ) ; <nl> - changeFileContent ( config , " [ { \ " response \ " : { " + <nl> - " \ " text \ " : \ " foo \ " " + <nl> - " } } ] " ) ; <nl> + changeFileContent ( config , " [ { \ " response \ " : { " <nl> + + " \ " text \ " : \ " foo \ " " <nl> + + " } } ] " ) ; <nl> <nl> RunnerFactory factory = new RunnerFactory ( " SHUTDOWN " ) ; <nl> - runner = factory . createRunner ( httpArgs ( ) . withPort ( port ( ) ) . withShutdownPort ( 9090 ) . withConfigurationFile ( config . getAbsolutePath ( ) ) . build ( ) ) ; <nl> + runner = factory . createRunner ( httpArgs ( ) <nl> + . withPort ( port ( ) ) <nl> + . withShutdownPort ( 9090 ) <nl> + . withConfigurationFile ( config . getAbsolutePath ( ) ) <nl> + . build ( ) ) ; <nl> runner . run ( ) ; <nl> assertThat ( helper . get ( root ( ) ) , is ( " foo " ) ) ; <nl> <nl> - changeFileContent ( config , " [ { \ " response \ " : { " + <nl> - " \ " text \ " : \ " foobar \ " " + <nl> - " } } ] " ) ; <nl> + changeFileContent ( config , " [ { \ " response \ " : { " <nl> + + " \ " text \ " : \ " foobar \ " " <nl> + + " } } ] " ) ; <nl> <nl> waitChangeHappens ( ) ; <nl> <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> index e716a0c . . 5a382f1 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> @ @ - 109 , 11 + 109 , 11 @ @ public class SettingRunnerTest { <nl> helper . get ( remoteUrl ( " / foo " ) ) ; <nl> } <nl> <nl> - private StartArgs createStartArgs ( int port , String env ) { <nl> + private StartArgs createStartArgs ( final int port , final String env ) { <nl> return httpArgs ( ) . withPort ( port ) . withEnv ( env ) . build ( ) ; <nl> } <nl> <nl> - private StartArgs createStartArgs ( int port ) { <nl> + private StartArgs createStartArgs ( final int port ) { <nl> return httpArgs ( ) . withPort ( port ) . build ( ) ; <nl> } <nl> <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java <nl> index 1bcffc8 . . 5e3b763 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java <nl> @ @ - 25 , 7 + 25 , 11 @ @ public class ShutdownMonitorRunnerTest extends AbstractRunnerTest { <nl> @ Before <nl> public void setup ( ) { <nl> RunnerFactory factory = new RunnerFactory ( SHUTDOWN _ MOCO _ KEY ) ; <nl> - runner = factory . createRunner ( httpArgs ( ) . withPort ( port ( ) ) . withShutdownPort ( SHUTDOWN _ PORT ) . withConfigurationFile ( " src / test / resources / foo . json " ) . build ( ) ) ; <nl> + runner = factory . createRunner ( httpArgs ( ) <nl> + . withPort ( port ( ) ) <nl> + . withShutdownPort ( SHUTDOWN _ PORT ) <nl> + . withConfigurationFile ( " src / test / resources / foo . json " ) <nl> + . build ( ) ) ; <nl> } <nl> <nl> @ Test ( expected = HttpHostConnectException . class )
NEAREST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / extractor / XPathRequestExtractorTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / extractor / XPathRequestExtractorTest . java <nl> index 9b560f6 . . 13dd597 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / extractor / XPathRequestExtractorTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / extractor / XPathRequestExtractorTest . java <nl> @ @ - 17 , 5 + 17 , 4 @ @ public class XPathRequestExtractorTest { <nl> Optional < String [ ] > result = unitUnderTest . extract ( request ) ; <nl> assertThat ( result . isPresent ( ) , is ( false ) ) ; <nl> } <nl> - <nl> - } <nl> \ No newline at end of file <nl> + } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / matcher / XmlRequestMatcherTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / matcher / XmlRequestMatcherTest . java <nl> index 99ddb6f . . 698c5dc 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / matcher / XmlRequestMatcherTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / matcher / XmlRequestMatcherTest . java <nl> @ @ - 18 , 4 + 18 , 4 @ @ public class XmlRequestMatcherTest { <nl> HttpRequest request = DefaultHttpRequest . builder ( ) . withContent ( MessageContent . content ( " " ) ) . build ( ) ; <nl> assertThat ( unitUnderTest . match ( request ) , is ( false ) ) ; <nl> } <nl> - } <nl> \ No newline at end of file <nl> + } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> index 9bfa18c . . a78d604 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> @ @ - 1 , 8 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> import com . google . common . net . HttpHeaders ; <nl> - import io . netty . handler . codec . http . cookie . ClientCookieDecoder ; <nl> - import io . netty . handler . codec . http . cookie . Cookie ; <nl> import org . apache . http . HttpResponse ; <nl> import org . apache . http . HttpVersion ; <nl> import org . apache . http . ProtocolVersion ; <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / ShutdownArgsTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / ShutdownArgsTest . java <nl> index dbe6160 . . 823ba76 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / ShutdownArgsTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / ShutdownArgsTest . java <nl> @ @ - 8 , 20 + 8 , 20 @ @ import static org . hamcrest . CoreMatchers . is ; <nl> import static org . junit . Assert . assertThat ; <nl> <nl> public class ShutdownArgsTest { <nl> - 	 @ Test <nl> - 	 public void should _ parse _ shutdown _ arguments ( ) { <nl> - 	 	 ShutdownArgs args = parse ( new String [ ] { " shutdown " , " - s " , " 12305 " } ) ; <nl> - 	 	 assertThat ( 12305 , is ( args . getShutdownPort ( ) . get ( ) ) ) ; <nl> - 	 } <nl> + @ Test <nl> + public void should _ parse _ shutdown _ arguments ( ) { <nl> + ShutdownArgs args = parse ( new String [ ] { " shutdown " , " - s " , " 12305 " } ) ; <nl> + assertThat ( 12305 , is ( args . getShutdownPort ( ) . get ( ) ) ) ; <nl> + } <nl> <nl> - 	 @ Test ( expected = ParseArgException . class ) <nl> - 	 public void should _ parse _ shutdown _ default _ arguments ( ) { <nl> - 	 	 ShutdownArgs args = parse ( new String [ ] { " shutdown " } ) ; <nl> - 	 	 assertThat ( Optional . < Integer > absent ( ) , is ( args . getShutdownPort ( ) ) ) ; <nl> - 	 } <nl> + @ Test ( expected = ParseArgException . class ) <nl> + public void should _ parse _ shutdown _ default _ arguments ( ) { <nl> + ShutdownArgs args = parse ( new String [ ] { " shutdown " } ) ; <nl> + assertThat ( Optional . < Integer > absent ( ) , is ( args . getShutdownPort ( ) ) ) ; <nl> + } <nl> <nl> - 	 @ Test ( expected = ParseArgException . class ) <nl> - 	 public void should _ set _ shutdown _ port ( ) { <nl> - 	 	 parse ( new String [ ] { " shutdown " , " - s " } ) ; <nl> - 	 } <nl> + @ Test ( expected = ParseArgException . class ) <nl> + public void should _ set _ shutdown _ port ( ) { <nl> + parse ( new String [ ] { " shutdown " , " - s " } ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java <nl> index b6ba80a . . 1bcffc8 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java <nl> @ @ - 19 , 8 + 19 , 8 @ @ import static org . junit . Assert . assertThat ; <nl> import static org . junit . Assert . fail ; <nl> <nl> public class ShutdownMonitorRunnerTest extends AbstractRunnerTest { <nl> - private final String SHUTDOWN _ MOCO _ KEY = " _ SHUTDOWN _ MOCO _ KEY " ; <nl> - private final int SHUTDOWN _ PORT = 9527 ; <nl> + private static final String SHUTDOWN _ MOCO _ KEY = " _ SHUTDOWN _ MOCO _ KEY " ; <nl> + private static final int SHUTDOWN _ PORT = 9527 ; <nl> <nl> @ Before <nl> public void setup ( ) {

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java 
 index 147f470 . . 08c0fed 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ApiUtils . java 
 @ @ - 31 , 7 + 31 , 8 @ @ import static com . github . dreamhead . moco . util . Iterables . asIterable ; 
 import static com . google . common . collect . Maps . transformEntries ; 
 
 public final class ApiUtils { 
 - public static MocoMonitor mergeMonitor ( final MocoMonitor monitor , final MocoMonitor monitor2 , final MocoMonitor [ ] monitors ) { 
 + public static MocoMonitor mergeMonitor ( final MocoMonitor monitor , final MocoMonitor monitor2 , 
 + final MocoMonitor [ ] monitors ) { 
 return new CompositeMonitor ( asIterable ( monitor , monitor2 , monitors ) ) ; 
 } 
 
 @ @ - 45 , 7 + 46 , 8 @ @ public final class ApiUtils { 
 } ; 
 } 
 
 - public static ImmutableMap < String , Variable > toVariables ( final ImmutableMap < String , ? extends RequestExtractor < ? > > variables ) { 
 + public static ImmutableMap < String , Variable > toVariables ( 
 + final ImmutableMap < String , ? extends RequestExtractor < ? > > variables ) { 
 return ImmutableMap . copyOf ( transformEntries ( variables , toVariable ( ) ) ) ; 
 } 
 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / AbstractMocoHttpTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / AbstractMocoHttpTest . java 
 index b6c54fe . . d50cbfc 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / AbstractMocoHttpTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / AbstractMocoHttpTest . java 
 @ @ - 3 , 7 + 3 , 7 @ @ package com . github . dreamhead . moco ; 
 import static com . github . dreamhead . moco . Moco . httpServer ; 
 
 public class AbstractMocoHttpTest extends BaseMocoHttpTest < HttpServer > { 
 - protected HttpServer createServer ( int port ) { 
 + protected HttpServer createServer ( final int port ) { 
 return httpServer ( port ) ; 
 } 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / resource / reader / ClasspathFileResourceReaderTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / resource / reader / ClasspathFileResourceReaderTest . java 
 index 520bfe4 . . f722806 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / resource / reader / ClasspathFileResourceReaderTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / resource / reader / ClasspathFileResourceReaderTest . java 
 @ @ - 22 , 4 + 22 , 4 @ @ public class ClasspathFileResourceReaderTest { 
 ClasspathFileResourceReader reader = new ClasspathFileResourceReader ( text ( " unknown . response " ) , Optional . < Charset > absent ( ) ) ; 
 reader . readFor ( Optional . < Request > absent ( ) ) ; 
 } 
 - } 
 \ No newline at end of file 
 + } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicConfigurationRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicConfigurationRunnerTest . java 
 index 6678ad3 . . 9a52250 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicConfigurationRunnerTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicConfigurationRunnerTest . java 
 @ @ - 20 , 18 + 20 , 22 @ @ public class DynamicConfigurationRunnerTest extends AbstractRunnerTest { 
 @ Test 
 public void should _ reload _ configuration ( ) throws IOException , InterruptedException { 
 final File config = tempFolder . newFile ( ) ; 
 - changeFileContent ( config , " [ { \ " response \ " : { " + 
 - " \ " text \ " : \ " foo \ " " + 
 - " } } ] " ) ; 
 + changeFileContent ( config , " [ { \ " response \ " : { " 
 + + " \ " text \ " : \ " foo \ " " 
 + + " } } ] " ) ; 
 
 RunnerFactory factory = new RunnerFactory ( " SHUTDOWN " ) ; 
 - runner = factory . createRunner ( httpArgs ( ) . withPort ( port ( ) ) . withShutdownPort ( 9090 ) . withConfigurationFile ( config . getAbsolutePath ( ) ) . build ( ) ) ; 
 + runner = factory . createRunner ( httpArgs ( ) 
 + . withPort ( port ( ) ) 
 + . withShutdownPort ( 9090 ) 
 + . withConfigurationFile ( config . getAbsolutePath ( ) ) 
 + . build ( ) ) ; 
 runner . run ( ) ; 
 assertThat ( helper . get ( root ( ) ) , is ( " foo " ) ) ; 
 
 - changeFileContent ( config , " [ { \ " response \ " : { " + 
 - " \ " text \ " : \ " foobar \ " " + 
 - " } } ] " ) ; 
 + changeFileContent ( config , " [ { \ " response \ " : { " 
 + + " \ " text \ " : \ " foobar \ " " 
 + + " } } ] " ) ; 
 
 waitChangeHappens ( ) ; 
 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 index e716a0c . . 5a382f1 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 @ @ - 109 , 11 + 109 , 11 @ @ public class SettingRunnerTest { 
 helper . get ( remoteUrl ( " / foo " ) ) ; 
 } 
 
 - private StartArgs createStartArgs ( int port , String env ) { 
 + private StartArgs createStartArgs ( final int port , final String env ) { 
 return httpArgs ( ) . withPort ( port ) . withEnv ( env ) . build ( ) ; 
 } 
 
 - private StartArgs createStartArgs ( int port ) { 
 + private StartArgs createStartArgs ( final int port ) { 
 return httpArgs ( ) . withPort ( port ) . build ( ) ; 
 } 
 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java 
 index 1bcffc8 . . 5e3b763 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java 
 @ @ - 25 , 7 + 25 , 11 @ @ public class ShutdownMonitorRunnerTest extends AbstractRunnerTest { 
 @ Before 
 public void setup ( ) { 
 RunnerFactory factory = new RunnerFactory ( SHUTDOWN _ MOCO _ KEY ) ; 
 - runner = factory . createRunner ( httpArgs ( ) . withPort ( port ( ) ) . withShutdownPort ( SHUTDOWN _ PORT ) . withConfigurationFile ( " src / test / resources / foo . json " ) . build ( ) ) ; 
 + runner = factory . createRunner ( httpArgs ( ) 
 + . withPort ( port ( ) ) 
 + . withShutdownPort ( SHUTDOWN _ PORT ) 
 + . withConfigurationFile ( " src / test / resources / foo . json " ) 
 + . build ( ) ) ; 
 } 
 
 @ Test ( expected = HttpHostConnectException . class )

NEAREST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / extractor / XPathRequestExtractorTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / extractor / XPathRequestExtractorTest . java 
 index 9b560f6 . . 13dd597 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / extractor / XPathRequestExtractorTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / extractor / XPathRequestExtractorTest . java 
 @ @ - 17 , 5 + 17 , 4 @ @ public class XPathRequestExtractorTest { 
 Optional < String [ ] > result = unitUnderTest . extract ( request ) ; 
 assertThat ( result . isPresent ( ) , is ( false ) ) ; 
 } 
 - 
 - } 
 \ No newline at end of file 
 + } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / matcher / XmlRequestMatcherTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / matcher / XmlRequestMatcherTest . java 
 index 99ddb6f . . 698c5dc 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / matcher / XmlRequestMatcherTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / matcher / XmlRequestMatcherTest . java 
 @ @ - 18 , 4 + 18 , 4 @ @ public class XmlRequestMatcherTest { 
 HttpRequest request = DefaultHttpRequest . builder ( ) . withContent ( MessageContent . content ( " " ) ) . build ( ) ; 
 assertThat ( unitUnderTest . match ( request ) , is ( false ) ) ; 
 } 
 - } 
 \ No newline at end of file 
 + } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 index 9bfa18c . . a78d604 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 @ @ - 1 , 8 + 1 , 6 @ @ 
 package com . github . dreamhead . moco ; 
 
 import com . google . common . net . HttpHeaders ; 
 - import io . netty . handler . codec . http . cookie . ClientCookieDecoder ; 
 - import io . netty . handler . codec . http . cookie . Cookie ; 
 import org . apache . http . HttpResponse ; 
 import org . apache . http . HttpVersion ; 
 import org . apache . http . ProtocolVersion ; 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / ShutdownArgsTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / ShutdownArgsTest . java 
 index dbe6160 . . 823ba76 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / ShutdownArgsTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / ShutdownArgsTest . java 
 @ @ - 8 , 20 + 8 , 20 @ @ import static org . hamcrest . CoreMatchers . is ; 
 import static org . junit . Assert . assertThat ; 
 
 public class ShutdownArgsTest { 
 - 	 @ Test 
 - 	 public void should _ parse _ shutdown _ arguments ( ) { 
 - 	 	 ShutdownArgs args = parse ( new String [ ] { " shutdown " , " - s " , " 12305 " } ) ; 
 - 	 	 assertThat ( 12305 , is ( args . getShutdownPort ( ) . get ( ) ) ) ; 
 - 	 } 
 + @ Test 
 + public void should _ parse _ shutdown _ arguments ( ) { 
 + ShutdownArgs args = parse ( new String [ ] { " shutdown " , " - s " , " 12305 " } ) ; 
 + assertThat ( 12305 , is ( args . getShutdownPort ( ) . get ( ) ) ) ; 
 + } 
 
 - 	 @ Test ( expected = ParseArgException . class ) 
 - 	 public void should _ parse _ shutdown _ default _ arguments ( ) { 
 - 	 	 ShutdownArgs args = parse ( new String [ ] { " shutdown " } ) ; 
 - 	 	 assertThat ( Optional . < Integer > absent ( ) , is ( args . getShutdownPort ( ) ) ) ; 
 - 	 } 
 + @ Test ( expected = ParseArgException . class ) 
 + public void should _ parse _ shutdown _ default _ arguments ( ) { 
 + ShutdownArgs args = parse ( new String [ ] { " shutdown " } ) ; 
 + assertThat ( Optional . < Integer > absent ( ) , is ( args . getShutdownPort ( ) ) ) ; 
 + } 
 
 - 	 @ Test ( expected = ParseArgException . class ) 
 - 	 public void should _ set _ shutdown _ port ( ) { 
 - 	 	 parse ( new String [ ] { " shutdown " , " - s " } ) ; 
 - 	 } 
 + @ Test ( expected = ParseArgException . class ) 
 + public void should _ set _ shutdown _ port ( ) { 
 + parse ( new String [ ] { " shutdown " , " - s " } ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java 
 index b6ba80a . . 1bcffc8 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java 
 @ @ - 19 , 8 + 19 , 8 @ @ import static org . junit . Assert . assertThat ; 
 import static org . junit . Assert . fail ; 
 
 public class ShutdownMonitorRunnerTest extends AbstractRunnerTest { 
 - private final String SHUTDOWN _ MOCO _ KEY = " _ SHUTDOWN _ MOCO _ KEY " ; 
 - private final int SHUTDOWN _ PORT = 9527 ; 
 + private static final String SHUTDOWN _ MOCO _ KEY = " _ SHUTDOWN _ MOCO _ KEY " ; 
 + private static final int SHUTDOWN _ PORT = 9527 ; 
 
 @ Before 
 public void setup ( ) {
