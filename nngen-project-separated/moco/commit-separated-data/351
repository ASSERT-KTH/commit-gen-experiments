BLEU SCORE: 0.2777619034011791

TEST MSG: added multi query test for standalone test
GENERATED MSG: added empty query for standalone test

TEST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> index c4a0fcc . . bccd430 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> @ @ - 159 , 6 + 159 , 12 @ @ public class MocoStandaloneTest extends AbstractMocoStandaloneTest { <nl> } <nl> <nl> @ Test <nl> + public void should _ return _ expected _ response _ based _ on _ specified _ multi _ query _ request ( ) throws IOException { <nl> + runWithConfiguration ( " query . json " ) ; <nl> + assertThat ( helper . get ( remoteUrl ( " / multi - query ? param1 = foo & param2 = bar " ) ) , is ( " response _ for _ multi _ query _ request " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void should _ expected _ response _ status _ code ( ) throws IOException { <nl> runWithConfiguration ( " foo . json " ) ; <nl> assertThat ( helper . getForStatus ( remoteUrl ( " / status " ) ) , is ( 200 ) ) ; <nl> diff - - git a / moco - runner / src / test / resources / query . json b / moco - runner / src / test / resources / query . json <nl> index 18afc7c . . 2ea033f 100644 <nl> - - - a / moco - runner / src / test / resources / query . json <nl> + + + b / moco - runner / src / test / resources / query . json <nl> @ @ - 24 , 5 + 24 , 19 @ @ <nl> { <nl> " text " : " response _ for _ empty _ query _ request " <nl> } <nl> + } , <nl> + { <nl> + " request " : <nl> + { <nl> + " uri " : " / multi - query " , <nl> + " queries " : { <nl> + " param1 " : " foo " , <nl> + " param2 " : " bar " <nl> + } <nl> + } , <nl> + " response " : <nl> + { <nl> + " text " : " response _ for _ multi _ query _ request " <nl> + } <nl> } <nl> ] <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> index f2e4569 . . c4a0fcc 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> @ @ - 153 , 6 + 153 , 12 @ @ public class MocoStandaloneTest extends AbstractMocoStandaloneTest { <nl> } <nl> <nl> @ Test <nl> + public void should _ return _ expected _ response _ based _ on _ specified _ empty _ query _ request ( ) throws IOException { <nl> + runWithConfiguration ( " query . json " ) ; <nl> + assertThat ( helper . get ( remoteUrl ( " / empty - query ? param " ) ) , is ( " response _ for _ empty _ query _ request " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void should _ expected _ response _ status _ code ( ) throws IOException { <nl> runWithConfiguration ( " foo . json " ) ; <nl> assertThat ( helper . getForStatus ( remoteUrl ( " / status " ) ) , is ( 200 ) ) ; <nl> diff - - git a / moco - runner / src / test / resources / query . json b / moco - runner / src / test / resources / query . json <nl> index da703f2 . . 18afc7c 100644 <nl> - - - a / moco - runner / src / test / resources / query . json <nl> + + + b / moco - runner / src / test / resources / query . json <nl> @ @ - 11 , 5 + 11 , 18 @ @ <nl> { <nl> " text " : " response _ for _ query _ request " <nl> } <nl> + } , <nl> + { <nl> + " request " : <nl> + { <nl> + " uri " : " / empty - query " , <nl> + " queries " : { <nl> + " param " : " " <nl> + } <nl> + } , <nl> + " response " : <nl> + { <nl> + " text " : " response _ for _ empty _ query _ request " <nl> + } <nl> } <nl> ] <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 index c4a0fcc . . bccd430 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 @ @ - 159 , 6 + 159 , 12 @ @ public class MocoStandaloneTest extends AbstractMocoStandaloneTest { 
 } 
 
 @ Test 
 + public void should _ return _ expected _ response _ based _ on _ specified _ multi _ query _ request ( ) throws IOException { 
 + runWithConfiguration ( " query . json " ) ; 
 + assertThat ( helper . get ( remoteUrl ( " / multi - query ? param1 = foo & param2 = bar " ) ) , is ( " response _ for _ multi _ query _ request " ) ) ; 
 + } 
 + 
 + @ Test 
 public void should _ expected _ response _ status _ code ( ) throws IOException { 
 runWithConfiguration ( " foo . json " ) ; 
 assertThat ( helper . getForStatus ( remoteUrl ( " / status " ) ) , is ( 200 ) ) ; 
 diff - - git a / moco - runner / src / test / resources / query . json b / moco - runner / src / test / resources / query . json 
 index 18afc7c . . 2ea033f 100644 
 - - - a / moco - runner / src / test / resources / query . json 
 + + + b / moco - runner / src / test / resources / query . json 
 @ @ - 24 , 5 + 24 , 19 @ @ 
 { 
 " text " : " response _ for _ empty _ query _ request " 
 } 
 + } , 
 + { 
 + " request " : 
 + { 
 + " uri " : " / multi - query " , 
 + " queries " : { 
 + " param1 " : " foo " , 
 + " param2 " : " bar " 
 + } 
 + } , 
 + " response " : 
 + { 
 + " text " : " response _ for _ multi _ query _ request " 
 + } 
 } 
 ] 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 index f2e4569 . . c4a0fcc 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 @ @ - 153 , 6 + 153 , 12 @ @ public class MocoStandaloneTest extends AbstractMocoStandaloneTest { 
 } 
 
 @ Test 
 + public void should _ return _ expected _ response _ based _ on _ specified _ empty _ query _ request ( ) throws IOException { 
 + runWithConfiguration ( " query . json " ) ; 
 + assertThat ( helper . get ( remoteUrl ( " / empty - query ? param " ) ) , is ( " response _ for _ empty _ query _ request " ) ) ; 
 + } 
 + 
 + @ Test 
 public void should _ expected _ response _ status _ code ( ) throws IOException { 
 runWithConfiguration ( " foo . json " ) ; 
 assertThat ( helper . getForStatus ( remoteUrl ( " / status " ) ) , is ( 200 ) ) ; 
 diff - - git a / moco - runner / src / test / resources / query . json b / moco - runner / src / test / resources / query . json 
 index da703f2 . . 18afc7c 100644 
 - - - a / moco - runner / src / test / resources / query . json 
 + + + b / moco - runner / src / test / resources / query . json 
 @ @ - 11 , 5 + 11 , 18 @ @ 
 { 
 " text " : " response _ for _ query _ request " 
 } 
 + } , 
 + { 
 + " request " : 
 + { 
 + " uri " : " / empty - query " , 
 + " queries " : { 
 + " param " : " " 
 + } 
 + } , 
 + " response " : 
 + { 
 + " text " : " response _ for _ empty _ query _ request " 
 + } 
 } 
 ] 
 \ No newline at end of file
