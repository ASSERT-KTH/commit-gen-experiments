BLEU SCORE: 0.11339582221952

TEST MSG: added standalone test for random template function with range
GENERATED MSG: added json test for req . json in template

TEST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> index 773eb0e . . c57166d 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> @ @ - 124 , 4 + 124 , 13 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { <nl> String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; <nl> assertThat ( target . length ( ) , is ( 6 ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ return _ random _ with _ range _ from _ template ( ) throws IOException { <nl> + runWithConfiguration ( " template _ with _ function . json " ) ; <nl> + String response = helper . get ( remoteUrl ( " / random _ template _ with _ range " ) ) ; <nl> + double result = Double . parseDouble ( response ) ; <nl> + assertThat ( result , lessThan ( 100d ) ) ; <nl> + assertThat ( result , greaterThan ( 0d ) ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / test / resources / template _ with _ function . json b / moco - runner / src / test / resources / template _ with _ function . json <nl> index c4442de . . 8e9705e 100644 <nl> - - - a / moco - runner / src / test / resources / template _ with _ function . json <nl> + + + b / moco - runner / src / test / resources / template _ with _ function . json <nl> @ @ - 18 , 5 + 18 , 15 @ @ <nl> " template " : " $ { random ( 100 , \ " # # # . # # # # # # \ " ) } " <nl> } <nl> } <nl> + } , <nl> + { <nl> + " request " : { <nl> + " uri " : " / random _ template _ with _ range " <nl> + } , <nl> + " response " : { <nl> + " text " : { <nl> + " template " : " $ { random ( 100 ) } " <nl> + } <nl> + } <nl> } <nl> ] <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> index 7b54553 . . a7d788e 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> @ @ - 93 , 4 + 93 , 11 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { <nl> runWithConfiguration ( " response _ with _ template _ name . json " ) ; <nl> assertThat ( helper . get ( root ( ) ) , is ( " foo . response " ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ return _ json _ field _ from _ template ( ) throws IOException { <nl> + runWithConfiguration ( " template . json " ) ; <nl> + String content = helper . postContent ( remoteUrl ( " / json _ template " ) , " { \ " foo \ " : \ " bar \ " } " ) ; <nl> + assertThat ( content , is ( " bar " ) ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / test / resources / template . json b / moco - runner / src / test / resources / template . json <nl> index e6180aa . . 3693102 100644 <nl> - - - a / moco - runner / src / test / resources / template . json <nl> + + + b / moco - runner / src / test / resources / template . json <nl> @ @ - 96 , 5 + 96 , 15 @ @ <nl> " template " : " $ { req . queries [ ' foo ' ] } " <nl> } <nl> } <nl> + } , <nl> + { <nl> + " request " : { <nl> + " uri " : " / json _ template " <nl> + } , <nl> + " response " : { <nl> + " text " : { <nl> + " template " : " $ { req . json . foo } " <nl> + } <nl> + } <nl> } <nl> ] <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 index 773eb0e . . c57166d 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 @ @ - 124 , 4 + 124 , 13 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { 
 String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; 
 assertThat ( target . length ( ) , is ( 6 ) ) ; 
 } 
 + 
 + @ Test 
 + public void should _ return _ random _ with _ range _ from _ template ( ) throws IOException { 
 + runWithConfiguration ( " template _ with _ function . json " ) ; 
 + String response = helper . get ( remoteUrl ( " / random _ template _ with _ range " ) ) ; 
 + double result = Double . parseDouble ( response ) ; 
 + assertThat ( result , lessThan ( 100d ) ) ; 
 + assertThat ( result , greaterThan ( 0d ) ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / test / resources / template _ with _ function . json b / moco - runner / src / test / resources / template _ with _ function . json 
 index c4442de . . 8e9705e 100644 
 - - - a / moco - runner / src / test / resources / template _ with _ function . json 
 + + + b / moco - runner / src / test / resources / template _ with _ function . json 
 @ @ - 18 , 5 + 18 , 15 @ @ 
 " template " : " $ { random ( 100 , \ " # # # . # # # # # # \ " ) } " 
 } 
 } 
 + } , 
 + { 
 + " request " : { 
 + " uri " : " / random _ template _ with _ range " 
 + } , 
 + " response " : { 
 + " text " : { 
 + " template " : " $ { random ( 100 ) } " 
 + } 
 + } 
 } 
 ] 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 index 7b54553 . . a7d788e 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 @ @ - 93 , 4 + 93 , 11 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { 
 runWithConfiguration ( " response _ with _ template _ name . json " ) ; 
 assertThat ( helper . get ( root ( ) ) , is ( " foo . response " ) ) ; 
 } 
 + 
 + @ Test 
 + public void should _ return _ json _ field _ from _ template ( ) throws IOException { 
 + runWithConfiguration ( " template . json " ) ; 
 + String content = helper . postContent ( remoteUrl ( " / json _ template " ) , " { \ " foo \ " : \ " bar \ " } " ) ; 
 + assertThat ( content , is ( " bar " ) ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / test / resources / template . json b / moco - runner / src / test / resources / template . json 
 index e6180aa . . 3693102 100644 
 - - - a / moco - runner / src / test / resources / template . json 
 + + + b / moco - runner / src / test / resources / template . json 
 @ @ - 96 , 5 + 96 , 15 @ @ 
 " template " : " $ { req . queries [ ' foo ' ] } " 
 } 
 } 
 + } , 
 + { 
 + " request " : { 
 + " uri " : " / json _ template " 
 + } , 
 + " response " : { 
 + " text " : { 
 + " template " : " $ { req . json . foo } " 
 + } 
 + } 
 } 
 ] 
 \ No newline at end of file
