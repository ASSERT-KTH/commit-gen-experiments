BLEU SCORE: 0.016074772865287294

TEST MSG: replaced generic with diamond operator for matchers
GENERATED MSG: removed redundant final modifier from matcher , resource , setting and verification

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / ContainMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / ContainMatcher . java <nl> index 0a943ed . . 32c32dd 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / ContainMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / ContainMatcher . java <nl> @ @ - 19 , 6 + 19 , 6 @ @ public class ContainMatcher < T > extends AbstractOperatorMatcher < T > { <nl> <nl> @ Override <nl> protected RequestMatcher newMatcher ( final RequestExtractor < T > extractor , final Resource resource ) { <nl> - return new ContainMatcher < T > ( extractor , resource ) ; <nl> + return new ContainMatcher < > ( extractor , resource ) ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EndsWithMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EndsWithMatcher . java <nl> index 4b4d166 . . 194fe8c 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EndsWithMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EndsWithMatcher . java <nl> @ @ - 19 , 6 + 19 , 6 @ @ public class EndsWithMatcher < T > extends AbstractOperatorMatcher < T > { <nl> <nl> @ Override <nl> protected RequestMatcher newMatcher ( final RequestExtractor < T > extractor , final Resource resource ) { <nl> - return new StartsWithMatcher < T > ( extractor , resource ) ; <nl> + return new StartsWithMatcher < > ( extractor , resource ) ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java <nl> index f0bae96 . . fb074c4 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java <nl> @ @ - 19 , 6 + 19 , 6 @ @ public class EqRequestMatcher < T > extends AbstractOperatorMatcher < T > { <nl> <nl> @ Override <nl> protected RequestMatcher newMatcher ( final RequestExtractor < T > extractor , final Resource resource ) { <nl> - return new EqRequestMatcher < T > ( extractor , resource ) ; <nl> + return new EqRequestMatcher < > ( extractor , resource ) ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / MatchMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / MatchMatcher . java <nl> index a37f48c . . 1940a4c 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / MatchMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / MatchMatcher . java <nl> @ @ - 22 , 6 + 22 , 6 @ @ public class MatchMatcher < T > extends AbstractOperatorMatcher < T > { <nl> <nl> @ Override <nl> protected RequestMatcher newMatcher ( final RequestExtractor < T > extractor , final Resource resource ) { <nl> - return new MatchMatcher < T > ( extractor , resource ) ; <nl> + return new MatchMatcher < > ( extractor , resource ) ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / StartsWithMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / StartsWithMatcher . java <nl> index 91f5594 . . c792af1 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / StartsWithMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / StartsWithMatcher . java <nl> @ @ - 19 , 6 + 19 , 6 @ @ public class StartsWithMatcher < T > extends AbstractOperatorMatcher < T > { <nl> <nl> @ Override <nl> protected RequestMatcher newMatcher ( final RequestExtractor < T > extractor , final Resource resource ) { <nl> - return new StartsWithMatcher < T > ( extractor , resource ) ; <nl> + return new StartsWithMatcher < > ( extractor , resource ) ; <nl> } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> index 715669f . . 4935fe5 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> @ @ - 11 , 7 + 11 , 7 @ @ import java . io . InputStream ; <nl> <nl> public abstract class BaseParser < T extends Server > implements Parser < T > { <nl> protected abstract T createServer ( ImmutableList < SessionSetting > read , <nl> - Optional < Integer > port , final MocoConfig . . . configs ) ; <nl> + Optional < Integer > port , MocoConfig . . . configs ) ; <nl> <nl> public T parseServer ( final ImmutableList < InputStream > streams , final Optional < Integer > port , <nl> final MocoConfig . . . configs ) { <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java <nl> index 066acd5 . . 5d6fdc9 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java <nl> @ @ - 59 , 7 + 59 , 6 @ @ public final class SettingRunner implements Runner { <nl> return new Function < GlobalSetting , RunnerSetting > ( ) { <nl> @ Override <nl> public RunnerSetting apply ( final GlobalSetting setting ) { <nl> - <nl> return aRunnerSetting ( ) <nl> . addStreams ( from ( setting . includes ( ) ) . transform ( toStream ( ) ) . toList ( ) ) <nl> . withContext ( setting . getContext ( ) )
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java <nl> index 8f8b17d . . 781215c 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> public interface ConfigApplier < T > { <nl> - T apply ( final MocoConfig config ) ; <nl> + T apply ( MocoConfig config ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java <nl> index 081c4b4 . . be57504 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java <nl> @ @ - 52 , 5 + 52 , 5 @ @ public abstract class CompositeRequestMatcher extends AbstractRequestMatcher { <nl> return doMatch ( request , matchers ) ; <nl> } <nl> <nl> - protected abstract boolean doMatch ( final Request request , final Iterable < RequestMatcher > matchers ) ; <nl> + protected abstract boolean doMatch ( Request request , Iterable < RequestMatcher > matchers ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java <nl> index 1562117 . . ab52906 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java <nl> @ @ - 4 , 5 + 4 , 5 @ @ import com . github . dreamhead . moco . HttpRequest ; <nl> import com . google . common . net . MediaType ; <nl> <nl> public interface Content { <nl> - MediaType getContentType ( final HttpRequest request ) ; <nl> + MediaType getContentType ( HttpRequest request ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java <nl> index dde1cc2 . . c922685 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java <nl> @ @ - 17 , 9 + 17 , 9 @ @ public abstract class BaseSetting < T extends ResponseSetting < T > > <nl> extends BaseResponseSettingConfiguration < T > implements Setting < T > { <nl> private final RequestMatcher matcher ; <nl> <nl> - protected abstract BaseSetting < T > createSetting ( final RequestMatcher matcher ) ; <nl> + protected abstract BaseSetting < T > createSetting ( RequestMatcher matcher ) ; <nl> <nl> - protected abstract RequestMatcher configMatcher ( final RequestMatcher matcher , final MocoConfig config ) ; <nl> + protected abstract RequestMatcher configMatcher ( RequestMatcher matcher , MocoConfig config ) ; <nl> <nl> protected BaseSetting ( final RequestMatcher matcher ) { <nl> this . matcher = matcher ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java b / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java <nl> index 987cd1a . . 324bfd5 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java <nl> @ @ - 5 , 7 + 5 , 7 @ @ import com . github . dreamhead . moco . VerificationException ; <nl> import com . github . dreamhead . moco . VerificationMode ; <nl> <nl> public abstract class AbstractTimesVerification implements VerificationMode { <nl> - protected abstract boolean meet ( final int size ) ; <nl> + protected abstract boolean meet ( int size ) ; <nl> protected abstract String expectedTip ( ) ; <nl> <nl> @ Override

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / ContainMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / ContainMatcher . java 
 index 0a943ed . . 32c32dd 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / ContainMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / ContainMatcher . java 
 @ @ - 19 , 6 + 19 , 6 @ @ public class ContainMatcher < T > extends AbstractOperatorMatcher < T > { 
 
 @ Override 
 protected RequestMatcher newMatcher ( final RequestExtractor < T > extractor , final Resource resource ) { 
 - return new ContainMatcher < T > ( extractor , resource ) ; 
 + return new ContainMatcher < > ( extractor , resource ) ; 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EndsWithMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EndsWithMatcher . java 
 index 4b4d166 . . 194fe8c 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EndsWithMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EndsWithMatcher . java 
 @ @ - 19 , 6 + 19 , 6 @ @ public class EndsWithMatcher < T > extends AbstractOperatorMatcher < T > { 
 
 @ Override 
 protected RequestMatcher newMatcher ( final RequestExtractor < T > extractor , final Resource resource ) { 
 - return new StartsWithMatcher < T > ( extractor , resource ) ; 
 + return new StartsWithMatcher < > ( extractor , resource ) ; 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java 
 index f0bae96 . . fb074c4 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java 
 @ @ - 19 , 6 + 19 , 6 @ @ public class EqRequestMatcher < T > extends AbstractOperatorMatcher < T > { 
 
 @ Override 
 protected RequestMatcher newMatcher ( final RequestExtractor < T > extractor , final Resource resource ) { 
 - return new EqRequestMatcher < T > ( extractor , resource ) ; 
 + return new EqRequestMatcher < > ( extractor , resource ) ; 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / MatchMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / MatchMatcher . java 
 index a37f48c . . 1940a4c 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / MatchMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / MatchMatcher . java 
 @ @ - 22 , 6 + 22 , 6 @ @ public class MatchMatcher < T > extends AbstractOperatorMatcher < T > { 
 
 @ Override 
 protected RequestMatcher newMatcher ( final RequestExtractor < T > extractor , final Resource resource ) { 
 - return new MatchMatcher < T > ( extractor , resource ) ; 
 + return new MatchMatcher < > ( extractor , resource ) ; 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / StartsWithMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / StartsWithMatcher . java 
 index 91f5594 . . c792af1 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / StartsWithMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / StartsWithMatcher . java 
 @ @ - 19 , 6 + 19 , 6 @ @ public class StartsWithMatcher < T > extends AbstractOperatorMatcher < T > { 
 
 @ Override 
 protected RequestMatcher newMatcher ( final RequestExtractor < T > extractor , final Resource resource ) { 
 - return new StartsWithMatcher < T > ( extractor , resource ) ; 
 + return new StartsWithMatcher < > ( extractor , resource ) ; 
 } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 index 715669f . . 4935fe5 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 @ @ - 11 , 7 + 11 , 7 @ @ import java . io . InputStream ; 
 
 public abstract class BaseParser < T extends Server > implements Parser < T > { 
 protected abstract T createServer ( ImmutableList < SessionSetting > read , 
 - Optional < Integer > port , final MocoConfig . . . configs ) ; 
 + Optional < Integer > port , MocoConfig . . . configs ) ; 
 
 public T parseServer ( final ImmutableList < InputStream > streams , final Optional < Integer > port , 
 final MocoConfig . . . configs ) { 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java 
 index 066acd5 . . 5d6fdc9 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java 
 @ @ - 59 , 7 + 59 , 6 @ @ public final class SettingRunner implements Runner { 
 return new Function < GlobalSetting , RunnerSetting > ( ) { 
 @ Override 
 public RunnerSetting apply ( final GlobalSetting setting ) { 
 - 
 return aRunnerSetting ( ) 
 . addStreams ( from ( setting . includes ( ) ) . transform ( toStream ( ) ) . toList ( ) ) 
 . withContext ( setting . getContext ( ) )

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java 
 index 8f8b17d . . 781215c 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 package com . github . dreamhead . moco ; 
 
 public interface ConfigApplier < T > { 
 - T apply ( final MocoConfig config ) ; 
 + T apply ( MocoConfig config ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java 
 index 081c4b4 . . be57504 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java 
 @ @ - 52 , 5 + 52 , 5 @ @ public abstract class CompositeRequestMatcher extends AbstractRequestMatcher { 
 return doMatch ( request , matchers ) ; 
 } 
 
 - protected abstract boolean doMatch ( final Request request , final Iterable < RequestMatcher > matchers ) ; 
 + protected abstract boolean doMatch ( Request request , Iterable < RequestMatcher > matchers ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java 
 index 1562117 . . ab52906 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java 
 @ @ - 4 , 5 + 4 , 5 @ @ import com . github . dreamhead . moco . HttpRequest ; 
 import com . google . common . net . MediaType ; 
 
 public interface Content { 
 - MediaType getContentType ( final HttpRequest request ) ; 
 + MediaType getContentType ( HttpRequest request ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java 
 index dde1cc2 . . c922685 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java 
 @ @ - 17 , 9 + 17 , 9 @ @ public abstract class BaseSetting < T extends ResponseSetting < T > > 
 extends BaseResponseSettingConfiguration < T > implements Setting < T > { 
 private final RequestMatcher matcher ; 
 
 - protected abstract BaseSetting < T > createSetting ( final RequestMatcher matcher ) ; 
 + protected abstract BaseSetting < T > createSetting ( RequestMatcher matcher ) ; 
 
 - protected abstract RequestMatcher configMatcher ( final RequestMatcher matcher , final MocoConfig config ) ; 
 + protected abstract RequestMatcher configMatcher ( RequestMatcher matcher , MocoConfig config ) ; 
 
 protected BaseSetting ( final RequestMatcher matcher ) { 
 this . matcher = matcher ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java b / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java 
 index 987cd1a . . 324bfd5 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java 
 @ @ - 5 , 7 + 5 , 7 @ @ import com . github . dreamhead . moco . VerificationException ; 
 import com . github . dreamhead . moco . VerificationMode ; 
 
 public abstract class AbstractTimesVerification implements VerificationMode { 
 - protected abstract boolean meet ( final int size ) ; 
 + protected abstract boolean meet ( int size ) ; 
 protected abstract String expectedTip ( ) ; 
 
 @ Override
