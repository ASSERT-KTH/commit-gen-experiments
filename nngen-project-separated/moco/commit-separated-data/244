BLEU SCORE: 0.04844232281716619

TEST MSG: added json config applier
GENERATED MSG: fixed compilation warning in moco class

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java <nl> index 6a1ddb7 . . 5f5ccaa 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java <nl> @ @ - 9 , 6 + 9 , 7 @ @ import java . nio . charset . Charset ; <nl> <nl> import static com . github . dreamhead . moco . resource . ResourceFactory . fileResource ; <nl> import static com . github . dreamhead . moco . resource . ResourceFactory . cookieResource ; <nl> + import static com . github . dreamhead . moco . resource . ResourceFactory . jsonResource ; <nl> import static com . github . dreamhead . moco . resource . ResourceFactory . templateResource ; <nl> import static com . github . dreamhead . moco . resource . ResourceFactory . uriResource ; <nl> <nl> @ @ - 60 , 6 + 61 , 15 @ @ public final class ResourceConfigApplierFactory { <nl> } ; <nl> } <nl> <nl> + public static ResourceConfigApplier jsonConfigApplier ( final Resource resource ) { <nl> + return new EmbeddedResourceConfigApplier ( resource ) { <nl> + @ Override <nl> + protected Resource newResource ( final MocoConfig config ) { <nl> + return jsonResource ( resource . apply ( config ) ) ; <nl> + } <nl> + } ; <nl> + } <nl> + <nl> private abstract static class BaseResourceConfigApplier implements ResourceConfigApplier { <nl> protected abstract Resource newResource ( final MocoConfig config ) ; <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java <nl> index 4bc7181 . . 1ae40b4 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import static com . github . dreamhead . moco . resource . IdFactory . id ; <nl> import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . DO _ NOTHING _ APPLIER ; <nl> import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . cookieConfigApplier ; <nl> import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . fileConfigApplier ; <nl> + import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . jsonConfigApplier ; <nl> import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . templateConfigApplier ; <nl> import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . uriConfigApplier ; <nl> <nl> @ @ - 55 , 7 + 56 , 7 @ @ public final class ResourceFactory { <nl> } <nl> <nl> public static ContentResource jsonResource ( final Resource resource ) { <nl> - return contentResource ( id ( " json " ) , DO _ NOTHING _ APPLIER , resource . reader ( ContentResourceReader . class ) ) ; <nl> + return contentResource ( id ( " json " ) , jsonConfigApplier ( resource ) , resource . reader ( ContentResourceReader . class ) ) ; <nl> } <nl> <nl> public static ContentResource jsonResource ( final Object pojo ) {
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index d8adbdb . . 37af40b 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 6 , 6 + 6 , 7 @ @ import com . github . dreamhead . moco . config . MocoContextConfig ; <nl> import com . github . dreamhead . moco . config . MocoFileRootConfig ; <nl> import com . github . dreamhead . moco . config . MocoRequestConfig ; <nl> import com . github . dreamhead . moco . config . MocoResponseConfig ; <nl> + import com . github . dreamhead . moco . extractor . ContentRequestExtractor ; <nl> import com . github . dreamhead . moco . extractor . CookieRequestExtractor ; <nl> import com . github . dreamhead . moco . extractor . FormRequestExtractor ; <nl> import com . github . dreamhead . moco . extractor . HeaderRequestExtractor ; <nl> @ @ - 368 , 7 + 369 , 7 @ @ public final class Moco { <nl> <nl> public static RequestMatcher xml ( final Resource resource ) { <nl> checkNotNull ( resource , " Resource should not be null " ) ; <nl> - return new XmlRequestMatcher ( ( RequestExtractor < byte [ ] > ) extractor ( resource . id ( ) ) , resource ) ; <nl> + return new XmlRequestMatcher ( ( ContentRequestExtractor ) extractor ( resource . id ( ) ) , resource ) ; <nl> } <nl> <nl> public static RequestMatcher json ( final String jsonText ) { <nl> @ @ - 381 , 7 + 382 , 7 @ @ public final class Moco { <nl> <nl> public static RequestMatcher json ( final Resource resource ) { <nl> checkNotNull ( resource , " Json should not be null " ) ; <nl> - return new JsonRequestMatcher ( ( RequestExtractor < byte [ ] > ) extractor ( resource . id ( ) ) , resource ) ; <nl> + return new JsonRequestMatcher ( ( ContentRequestExtractor ) extractor ( resource . id ( ) ) , resource ) ; <nl> } <nl> <nl> public static ResponseHandler toJson ( final Object pojo ) {

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java 
 index 6a1ddb7 . . 5f5ccaa 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceConfigApplierFactory . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import java . nio . charset . Charset ; 
 
 import static com . github . dreamhead . moco . resource . ResourceFactory . fileResource ; 
 import static com . github . dreamhead . moco . resource . ResourceFactory . cookieResource ; 
 + import static com . github . dreamhead . moco . resource . ResourceFactory . jsonResource ; 
 import static com . github . dreamhead . moco . resource . ResourceFactory . templateResource ; 
 import static com . github . dreamhead . moco . resource . ResourceFactory . uriResource ; 
 
 @ @ - 60 , 6 + 61 , 15 @ @ public final class ResourceConfigApplierFactory { 
 } ; 
 } 
 
 + public static ResourceConfigApplier jsonConfigApplier ( final Resource resource ) { 
 + return new EmbeddedResourceConfigApplier ( resource ) { 
 + @ Override 
 + protected Resource newResource ( final MocoConfig config ) { 
 + return jsonResource ( resource . apply ( config ) ) ; 
 + } 
 + } ; 
 + } 
 + 
 private abstract static class BaseResourceConfigApplier implements ResourceConfigApplier { 
 protected abstract Resource newResource ( final MocoConfig config ) ; 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java 
 index 4bc7181 . . 1ae40b4 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ResourceFactory . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import static com . github . dreamhead . moco . resource . IdFactory . id ; 
 import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . DO _ NOTHING _ APPLIER ; 
 import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . cookieConfigApplier ; 
 import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . fileConfigApplier ; 
 + import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . jsonConfigApplier ; 
 import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . templateConfigApplier ; 
 import static com . github . dreamhead . moco . resource . ResourceConfigApplierFactory . uriConfigApplier ; 
 
 @ @ - 55 , 7 + 56 , 7 @ @ public final class ResourceFactory { 
 } 
 
 public static ContentResource jsonResource ( final Resource resource ) { 
 - return contentResource ( id ( " json " ) , DO _ NOTHING _ APPLIER , resource . reader ( ContentResourceReader . class ) ) ; 
 + return contentResource ( id ( " json " ) , jsonConfigApplier ( resource ) , resource . reader ( ContentResourceReader . class ) ) ; 
 } 
 
 public static ContentResource jsonResource ( final Object pojo ) {

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index d8adbdb . . 37af40b 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 6 , 6 + 6 , 7 @ @ import com . github . dreamhead . moco . config . MocoContextConfig ; 
 import com . github . dreamhead . moco . config . MocoFileRootConfig ; 
 import com . github . dreamhead . moco . config . MocoRequestConfig ; 
 import com . github . dreamhead . moco . config . MocoResponseConfig ; 
 + import com . github . dreamhead . moco . extractor . ContentRequestExtractor ; 
 import com . github . dreamhead . moco . extractor . CookieRequestExtractor ; 
 import com . github . dreamhead . moco . extractor . FormRequestExtractor ; 
 import com . github . dreamhead . moco . extractor . HeaderRequestExtractor ; 
 @ @ - 368 , 7 + 369 , 7 @ @ public final class Moco { 
 
 public static RequestMatcher xml ( final Resource resource ) { 
 checkNotNull ( resource , " Resource should not be null " ) ; 
 - return new XmlRequestMatcher ( ( RequestExtractor < byte [ ] > ) extractor ( resource . id ( ) ) , resource ) ; 
 + return new XmlRequestMatcher ( ( ContentRequestExtractor ) extractor ( resource . id ( ) ) , resource ) ; 
 } 
 
 public static RequestMatcher json ( final String jsonText ) { 
 @ @ - 381 , 7 + 382 , 7 @ @ public final class Moco { 
 
 public static RequestMatcher json ( final Resource resource ) { 
 checkNotNull ( resource , " Json should not be null " ) ; 
 - return new JsonRequestMatcher ( ( RequestExtractor < byte [ ] > ) extractor ( resource . id ( ) ) , resource ) ; 
 + return new JsonRequestMatcher ( ( ContentRequestExtractor ) extractor ( resource . id ( ) ) , resource ) ; 
 } 
 
 public static ResponseHandler toJson ( final Object pojo ) {
