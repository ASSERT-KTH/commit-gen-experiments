BLEU SCORE: 0.034353182138500235

TEST MSG: removed redudant final from failover executor
GENERATED MSG: setup proxy response to mutable http response

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java <nl> index febf9b7 . . f4a387a 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java <nl> @ @ - 5 , 8 + 5 , 8 @ @ import com . github . dreamhead . moco . HttpResponse ; <nl> import com . github . dreamhead . moco . MocoException ; <nl> <nl> public interface FailoverExecutor { <nl> - void onCompleteResponse ( final HttpRequest request , final HttpResponse response ) ; <nl> - HttpResponse failover ( final HttpRequest request ) ; <nl> + void onCompleteResponse ( HttpRequest request , HttpResponse response ) ; <nl> + HttpResponse failover ( HttpRequest request ) ; <nl> <nl> FailoverExecutor EMPTY _ FAILOVER = new FailoverExecutor ( ) { <nl> @ Override
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java <nl> index 5595506 . . 18ab49f 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java <nl> @ @ - 2 , 6 + 2 , 7 @ @ package com . github . dreamhead . moco . handler ; <nl> <nl> import com . github . dreamhead . moco . HttpRequest ; <nl> import com . github . dreamhead . moco . HttpResponse ; <nl> + import com . github . dreamhead . moco . MutableHttpResponse ; <nl> import com . github . dreamhead . moco . handler . failover . Failover ; <nl> import com . github . dreamhead . moco . handler . failover . FailoverStrategy ; <nl> import com . github . dreamhead . moco . internal . SessionContext ; <nl> @ @ - 167 , 7 + 168 , 19 @ @ public abstract class AbstractProxyResponseHandler extends AbstractResponseHandl <nl> return ; <nl> } <nl> <nl> - writeResponse ( context . getResponse ( ) , doProxy ( request , url . get ( ) ) ) ; <nl> + HttpResponse response = doProxy ( request , url . get ( ) ) ; <nl> + writeHttpResponse ( context , response ) ; <nl> + writeResponse ( context . getResponse ( ) , response ) ; <nl> + } <nl> + <nl> + private void writeHttpResponse ( SessionContext context , HttpResponse response ) { <nl> + MutableHttpResponse httpResponse = context . getHttpResponse ( ) ; <nl> + httpResponse . setVersion ( response . getVersion ( ) ) ; <nl> + httpResponse . setStatus ( response . getStatus ( ) ) ; <nl> + for ( Map . Entry < String , String > entry : response . getHeaders ( ) . entrySet ( ) ) { <nl> + httpResponse . addHeader ( entry . getKey ( ) , entry . getValue ( ) ) ; <nl> + } <nl> + httpResponse . setContent ( response . getContent ( ) ) ; <nl> } <nl> <nl> private HttpResponse doProxy ( final HttpRequest request , final URL remoteUrl ) {

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java 
 index febf9b7 . . f4a387a 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / FailoverExecutor . java 
 @ @ - 5 , 8 + 5 , 8 @ @ import com . github . dreamhead . moco . HttpResponse ; 
 import com . github . dreamhead . moco . MocoException ; 
 
 public interface FailoverExecutor { 
 - void onCompleteResponse ( final HttpRequest request , final HttpResponse response ) ; 
 - HttpResponse failover ( final HttpRequest request ) ; 
 + void onCompleteResponse ( HttpRequest request , HttpResponse response ) ; 
 + HttpResponse failover ( HttpRequest request ) ; 
 
 FailoverExecutor EMPTY _ FAILOVER = new FailoverExecutor ( ) { 
 @ Override

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java 
 index 5595506 . . 18ab49f 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java 
 @ @ - 2 , 6 + 2 , 7 @ @ package com . github . dreamhead . moco . handler ; 
 
 import com . github . dreamhead . moco . HttpRequest ; 
 import com . github . dreamhead . moco . HttpResponse ; 
 + import com . github . dreamhead . moco . MutableHttpResponse ; 
 import com . github . dreamhead . moco . handler . failover . Failover ; 
 import com . github . dreamhead . moco . handler . failover . FailoverStrategy ; 
 import com . github . dreamhead . moco . internal . SessionContext ; 
 @ @ - 167 , 7 + 168 , 19 @ @ public abstract class AbstractProxyResponseHandler extends AbstractResponseHandl 
 return ; 
 } 
 
 - writeResponse ( context . getResponse ( ) , doProxy ( request , url . get ( ) ) ) ; 
 + HttpResponse response = doProxy ( request , url . get ( ) ) ; 
 + writeHttpResponse ( context , response ) ; 
 + writeResponse ( context . getResponse ( ) , response ) ; 
 + } 
 + 
 + private void writeHttpResponse ( SessionContext context , HttpResponse response ) { 
 + MutableHttpResponse httpResponse = context . getHttpResponse ( ) ; 
 + httpResponse . setVersion ( response . getVersion ( ) ) ; 
 + httpResponse . setStatus ( response . getStatus ( ) ) ; 
 + for ( Map . Entry < String , String > entry : response . getHeaders ( ) . entrySet ( ) ) { 
 + httpResponse . addHeader ( entry . getKey ( ) , entry . getValue ( ) ) ; 
 + } 
 + httpResponse . setContent ( response . getContent ( ) ) ; 
 } 
 
 private HttpResponse doProxy ( final HttpRequest request , final URL remoteUrl ) {
