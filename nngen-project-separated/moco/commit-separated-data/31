BLEU SCORE: 0.06567274736060397

TEST MSG: used split for splitToList in template test
GENERATED MSG: fixed tests in proguard check

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> index e9b4489 . . 11baf5b 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> @ @ - 2 , 6 + 2 , 7 @ @ package com . github . dreamhead . moco ; <nl> <nl> import com . google . common . base . Splitter ; <nl> import com . google . common . collect . ImmutableMultimap ; <nl> + import com . google . common . collect . Iterables ; <nl> import com . google . common . io . ByteStreams ; <nl> import com . google . common . io . Resources ; <nl> import org . apache . http . Header ; <nl> @ @ - 505 , 7 + 506 , 7 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { <nl> public void run ( ) throws Exception { <nl> String response = helper . get ( remoteUrl ( " / random " ) ) ; <nl> try { <nl> - String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; <nl> + String target = Iterables . get ( Splitter . on ( ' . ' ) . split ( response ) , 1 ) ; <nl> assertThat ( target . length ( ) , is ( 6 ) ) ; <nl> <nl> double result = Double . parseDouble ( response ) ; <nl> @ @ - 529 , 7 + 530 , 7 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { <nl> double result = Double . parseDouble ( response ) ; <nl> assertThat ( result , lessThan ( 100d ) ) ; <nl> assertThat ( result , greaterThan ( 0d ) ) ; <nl> - String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; <nl> + String target = Iterables . get ( Splitter . on ( ' . ' ) . split ( response ) , 1 ) ; <nl> assertThat ( target . length ( ) , lessThanOrEqualTo ( 6 ) ) ; <nl> } catch ( NumberFormatException e ) { <nl> fail ( ) ;
NEAREST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> index bfd8a1c . . de369be 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> import com . google . common . base . Splitter ; <nl> + import com . google . common . collect . Iterables ; <nl> import org . apache . http . Header ; <nl> import org . apache . http . HttpVersion ; <nl> import org . apache . http . ProtocolVersion ; <nl> @ @ - 122 , 7 + 123 , 8 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { <nl> double result = Double . parseDouble ( response ) ; <nl> assertThat ( result , lessThan ( 100d ) ) ; <nl> assertThat ( result , greaterThan ( 0d ) ) ; <nl> - String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; <nl> + <nl> + String target = Iterables . get ( Splitter . on ( ' . ' ) . split ( response ) , 1 ) ; <nl> assertThat ( target . length ( ) , lessThanOrEqualTo ( 6 ) ) ; <nl> } <nl> <nl> @ @ - 139 , 7 + 141 , 7 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { <nl> public void should _ return _ random _ with _ format _ from _ template ( ) throws IOException { <nl> runWithConfiguration ( " template _ with _ function . json " ) ; <nl> String response = helper . get ( remoteUrl ( " / random _ template _ with _ format " ) ) ; <nl> - String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; <nl> + String target = Iterables . get ( Splitter . on ( ' . ' ) . split ( response ) , 1 ) ; <nl> assertThat ( target . length ( ) , lessThanOrEqualTo ( 6 ) ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 index e9b4489 . . 11baf5b 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 @ @ - 2 , 6 + 2 , 7 @ @ package com . github . dreamhead . moco ; 
 
 import com . google . common . base . Splitter ; 
 import com . google . common . collect . ImmutableMultimap ; 
 + import com . google . common . collect . Iterables ; 
 import com . google . common . io . ByteStreams ; 
 import com . google . common . io . Resources ; 
 import org . apache . http . Header ; 
 @ @ - 505 , 7 + 506 , 7 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { 
 public void run ( ) throws Exception { 
 String response = helper . get ( remoteUrl ( " / random " ) ) ; 
 try { 
 - String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; 
 + String target = Iterables . get ( Splitter . on ( ' . ' ) . split ( response ) , 1 ) ; 
 assertThat ( target . length ( ) , is ( 6 ) ) ; 
 
 double result = Double . parseDouble ( response ) ; 
 @ @ - 529 , 7 + 530 , 7 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { 
 double result = Double . parseDouble ( response ) ; 
 assertThat ( result , lessThan ( 100d ) ) ; 
 assertThat ( result , greaterThan ( 0d ) ) ; 
 - String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; 
 + String target = Iterables . get ( Splitter . on ( ' . ' ) . split ( response ) , 1 ) ; 
 assertThat ( target . length ( ) , lessThanOrEqualTo ( 6 ) ) ; 
 } catch ( NumberFormatException e ) { 
 fail ( ) ;

NEAREST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 index bfd8a1c . . de369be 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoTemplateStandaloneTest . java 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 package com . github . dreamhead . moco ; 
 
 import com . google . common . base . Splitter ; 
 + import com . google . common . collect . Iterables ; 
 import org . apache . http . Header ; 
 import org . apache . http . HttpVersion ; 
 import org . apache . http . ProtocolVersion ; 
 @ @ - 122 , 7 + 123 , 8 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { 
 double result = Double . parseDouble ( response ) ; 
 assertThat ( result , lessThan ( 100d ) ) ; 
 assertThat ( result , greaterThan ( 0d ) ) ; 
 - String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; 
 + 
 + String target = Iterables . get ( Splitter . on ( ' . ' ) . split ( response ) , 1 ) ; 
 assertThat ( target . length ( ) , lessThanOrEqualTo ( 6 ) ) ; 
 } 
 
 @ @ - 139 , 7 + 141 , 7 @ @ public class MocoTemplateStandaloneTest extends AbstractMocoStandaloneTest { 
 public void should _ return _ random _ with _ format _ from _ template ( ) throws IOException { 
 runWithConfiguration ( " template _ with _ function . json " ) ; 
 String response = helper . get ( remoteUrl ( " / random _ template _ with _ format " ) ) ; 
 - String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; 
 + String target = Iterables . get ( Splitter . on ( ' . ' ) . split ( response ) , 1 ) ; 
 assertThat ( target . length ( ) , lessThanOrEqualTo ( 6 ) ) ; 
 } 

