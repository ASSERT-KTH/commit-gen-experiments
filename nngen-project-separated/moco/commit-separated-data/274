BLEU SCORE: 0.10682175159905853

TEST MSG: added missing final to monitors
GENERATED MSG: added exception handler

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java <nl> index 1638edd . . d8ffe09 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java <nl> @ @ - 4 , 7 + 4 , 7 @ @ import com . github . dreamhead . moco . MocoMonitor ; <nl> import com . github . dreamhead . moco . Request ; <nl> import com . github . dreamhead . moco . Response ; <nl> <nl> - public class CompositeMonitor implements MocoMonitor { <nl> + public final class CompositeMonitor implements MocoMonitor { <nl> private final Iterable < MocoMonitor > monitors ; <nl> <nl> public CompositeMonitor ( final Iterable < MocoMonitor > monitors ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java <nl> index 8eb6294 . . 2ddbe73 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ import java . io . StringWriter ; <nl> <nl> import static com . google . common . collect . FluentIterable . from ; <nl> <nl> - public class DefaultLogFormatter implements LogFormatter { <nl> + public final class DefaultLogFormatter implements LogFormatter { <nl> private static final ImmutableMap < Class < ? extends Request > , Dumper < Request > > REQUEST _ DUMPERS = ImmutableMap . of ( <nl> HttpRequest . class , new HttpRequestDumper ( ) , <nl> SocketRequest . class , new SocketRequestDumper ( ) <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java <nl> index 1d3aa89 . . 54e3a19 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java <nl> @ @ - 12 , 7 + 12 , 7 @ @ import java . util . List ; <nl> import static com . google . common . base . Preconditions . checkNotNull ; <nl> import static com . google . common . collect . Lists . newArrayList ; <nl> <nl> - public class DefaultRequestHit extends AbstractMonitor implements RequestHit { <nl> + public final class DefaultRequestHit extends AbstractMonitor implements RequestHit { <nl> private List < Request > unexpectedRequests = newArrayList ( ) ; <nl> private List < Request > requests = newArrayList ( ) ; <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / FileLogWriter . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / FileLogWriter . java <nl> index 3ccb26c . . b1d2392 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / FileLogWriter . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / FileLogWriter . java <nl> @ @ - 7 , 7 + 7 , 7 @ @ import com . google . common . io . Files ; <nl> import java . io . File ; <nl> import java . nio . charset . Charset ; <nl> <nl> - public class FileLogWriter implements LogWriter { <nl> + public final class FileLogWriter implements LogWriter { <nl> private final File file ; <nl> private Optional < Charset > charset ; <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java <nl> index 028b07e . . 2681af3 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java <nl> @ @ - 3 , 7 + 3 , 7 @ @ package com . github . dreamhead . moco . monitor ; <nl> import com . github . dreamhead . moco . Request ; <nl> import com . github . dreamhead . moco . Response ; <nl> <nl> - public class LogMonitor extends AbstractMonitor { <nl> + public final class LogMonitor extends AbstractMonitor { <nl> private final LogWriter writer ; <nl> private final LogFormatter formatter ; <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java <nl> index 189f345 . . 9796294 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco . monitor ; <nl> <nl> - public class QuietMonitor extends AbstractMonitor { <nl> + public final class QuietMonitor extends AbstractMonitor { <nl> @ Override <nl> public void onException ( final Throwable t ) { <nl> t . printStackTrace ( System . err ) ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java <nl> index 670de41 . . f64ad0d 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java <nl> @ @ - 6 , 7 + 6 , 7 @ @ import com . github . dreamhead . moco . dumper . Dumper ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> - public class Slf4jMonitor extends AbstractMonitor { <nl> + public final class Slf4jMonitor extends AbstractMonitor { <nl> private static Logger logger = LoggerFactory . getLogger ( Slf4jMonitor . class ) ; <nl> private final Dumper < Request > requestDumper ; <nl> private final Dumper < Response > responseDumper ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / StdLogWriter . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / StdLogWriter . java <nl> index b8c0c4f . . a2e3a07 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / StdLogWriter . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / StdLogWriter . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco . monitor ; <nl> <nl> - public class StdLogWriter implements LogWriter { <nl> + public final class StdLogWriter implements LogWriter { <nl> @ Override <nl> public void write ( final String content ) { <nl> System . out . println ( content ) ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java <nl> index 1ed6e82 . . bebff6f 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java <nl> @ @ - 9 , 7 + 9 , 7 @ @ import java . util . concurrent . locks . ReentrantLock ; <nl> <nl> import static com . github . dreamhead . moco . util . Locks . withLock ; <nl> <nl> - public class ThreadSafeMonitor implements MocoMonitor { <nl> + public final class ThreadSafeMonitor implements MocoMonitor { <nl> private MocoMonitor monitor ; <nl> private Lock lock = new ReentrantLock ( ) ; <nl>
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java <nl> index 73c1b95 . . b5a3c8c 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java <nl> @ @ - 7 , 7 + 7 , 7 @ @ public interface MocoMonitor { <nl> void onMessageArrived ( final Request request ) ; <nl> <nl> @ Subscribe <nl> - void onException ( final Exception e ) ; <nl> + void onException ( final Throwable e ) ; <nl> <nl> @ Subscribe <nl> void onMessageLeave ( final Response response ) ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoHandler . java <nl> index c40e5db . . 95279b4 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoHandler . java <nl> @ @ - 93 , 4 + 93 , 9 @ @ public class MocoHandler extends SimpleChannelInboundHandler < FullHttpRequest > { <nl> setContentLength ( response , response . content ( ) . writerIndex ( ) ) ; <nl> } <nl> } <nl> + <nl> + @ Override <nl> + public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception { <nl> + monitor . onException ( cause ) ; <nl> + } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoSocketHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoSocketHandler . java <nl> index 0d6f73a . . 4982e10 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoSocketHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoSocketHandler . java <nl> @ @ - 47 , 4 + 47 , 9 @ @ public class MocoSocketHandler extends SimpleChannelInboundHandler < String > { <nl> <nl> throw new RuntimeException ( format ( " No handler found for request : % s " , context . getRequest ( ) . getContent ( ) ) ) ; <nl> } <nl> + <nl> + @ Override <nl> + public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception { <nl> + monitor . onException ( cause ) ; <nl> + } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / AbstractMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / AbstractMonitor . java <nl> index bfea931 . . 079dd42 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / AbstractMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / AbstractMonitor . java <nl> @ @ - 10 , 7 + 10 , 7 @ @ public abstract class AbstractMonitor implements MocoMonitor { <nl> } <nl> <nl> @ Override <nl> - public void onException ( final Exception e ) { <nl> + public void onException ( final Throwable e ) { <nl> } <nl> <nl> @ Override <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java <nl> index 47ecedf . . 90195be 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ public class CompositeMonitor implements MocoMonitor { <nl> } <nl> <nl> @ Override <nl> - public void onException ( final Exception e ) { <nl> + public void onException ( final Throwable e ) { <nl> for ( MocoMonitor monitor : monitors ) { <nl> monitor . onException ( e ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java <nl> index 48537ff . . b278c06 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java <nl> @ @ - 24 , 11 + 24 , 11 @ @ public class DefaultLogFormatter implements LogFormatter { <nl> } <nl> <nl> @ Override <nl> - public String format ( final Exception e ) { <nl> + public String format ( final Throwable e ) { <nl> return String . format ( " Exception thrown : \ n \ n % s \ n " , stackTraceToString ( e ) ) ; <nl> } <nl> <nl> - private String stackTraceToString ( Exception e ) { <nl> + private String stackTraceToString ( Throwable e ) { <nl> StringWriter writer = new StringWriter ( ) ; <nl> e . printStackTrace ( new PrintWriter ( writer ) ) ; <nl> return writer . toString ( ) ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogFormatter . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogFormatter . java <nl> index 950f9e1 . . 585255b 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogFormatter . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogFormatter . java <nl> @ @ - 6 , 5 + 6 , 5 @ @ import com . github . dreamhead . moco . Response ; <nl> public interface LogFormatter { <nl> String format ( final Request request ) ; <nl> String format ( final Response response ) ; <nl> - String format ( final Exception e ) ; <nl> + String format ( final Throwable e ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java <nl> index e69c722 . . cb1bd09 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java <nl> @ @ - 18 , 7 + 18 , 7 @ @ public class LogMonitor extends AbstractMonitor { <nl> } <nl> <nl> @ Override <nl> - public void onException ( final Exception e ) { <nl> + public void onException ( final Throwable e ) { <nl> writer . write ( formatter . format ( e ) ) ; <nl> } <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java <nl> index b48c7ae . . d77a6d0 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java <nl> @ @ - 7 , 7 + 7 , 7 @ @ public class QuietMonitor extends AbstractMonitor { <nl> private static Logger logger = LoggerFactory . getLogger ( QuietMonitor . class ) ; <nl> <nl> @ Override <nl> - public void onException ( final Exception e ) { <nl> + public void onException ( final Throwable e ) { <nl> logger . error ( " Exception thrown " , e ) ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java <nl> index b14534a . . c238db0 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java <nl> @ @ - 22 , 7 + 22 , 7 @ @ public class Slf4jMonitor extends AbstractMonitor { <nl> } <nl> <nl> @ Override <nl> - public void onException ( final Exception e ) { <nl> + public void onException ( final Throwable e ) { <nl> logger . error ( " Exception thrown " , e ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java 
 index 1638edd . . d8ffe09 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java 
 @ @ - 4 , 7 + 4 , 7 @ @ import com . github . dreamhead . moco . MocoMonitor ; 
 import com . github . dreamhead . moco . Request ; 
 import com . github . dreamhead . moco . Response ; 
 
 - public class CompositeMonitor implements MocoMonitor { 
 + public final class CompositeMonitor implements MocoMonitor { 
 private final Iterable < MocoMonitor > monitors ; 
 
 public CompositeMonitor ( final Iterable < MocoMonitor > monitors ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java 
 index 8eb6294 . . 2ddbe73 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java 
 @ @ - 20 , 7 + 20 , 7 @ @ import java . io . StringWriter ; 
 
 import static com . google . common . collect . FluentIterable . from ; 
 
 - public class DefaultLogFormatter implements LogFormatter { 
 + public final class DefaultLogFormatter implements LogFormatter { 
 private static final ImmutableMap < Class < ? extends Request > , Dumper < Request > > REQUEST _ DUMPERS = ImmutableMap . of ( 
 HttpRequest . class , new HttpRequestDumper ( ) , 
 SocketRequest . class , new SocketRequestDumper ( ) 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java 
 index 1d3aa89 . . 54e3a19 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultRequestHit . java 
 @ @ - 12 , 7 + 12 , 7 @ @ import java . util . List ; 
 import static com . google . common . base . Preconditions . checkNotNull ; 
 import static com . google . common . collect . Lists . newArrayList ; 
 
 - public class DefaultRequestHit extends AbstractMonitor implements RequestHit { 
 + public final class DefaultRequestHit extends AbstractMonitor implements RequestHit { 
 private List < Request > unexpectedRequests = newArrayList ( ) ; 
 private List < Request > requests = newArrayList ( ) ; 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / FileLogWriter . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / FileLogWriter . java 
 index 3ccb26c . . b1d2392 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / FileLogWriter . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / FileLogWriter . java 
 @ @ - 7 , 7 + 7 , 7 @ @ import com . google . common . io . Files ; 
 import java . io . File ; 
 import java . nio . charset . Charset ; 
 
 - public class FileLogWriter implements LogWriter { 
 + public final class FileLogWriter implements LogWriter { 
 private final File file ; 
 private Optional < Charset > charset ; 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java 
 index 028b07e . . 2681af3 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java 
 @ @ - 3 , 7 + 3 , 7 @ @ package com . github . dreamhead . moco . monitor ; 
 import com . github . dreamhead . moco . Request ; 
 import com . github . dreamhead . moco . Response ; 
 
 - public class LogMonitor extends AbstractMonitor { 
 + public final class LogMonitor extends AbstractMonitor { 
 private final LogWriter writer ; 
 private final LogFormatter formatter ; 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java 
 index 189f345 . . 9796294 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . github . dreamhead . moco . monitor ; 
 
 - public class QuietMonitor extends AbstractMonitor { 
 + public final class QuietMonitor extends AbstractMonitor { 
 @ Override 
 public void onException ( final Throwable t ) { 
 t . printStackTrace ( System . err ) ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java 
 index 670de41 . . f64ad0d 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java 
 @ @ - 6 , 7 + 6 , 7 @ @ import com . github . dreamhead . moco . dumper . Dumper ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 - public class Slf4jMonitor extends AbstractMonitor { 
 + public final class Slf4jMonitor extends AbstractMonitor { 
 private static Logger logger = LoggerFactory . getLogger ( Slf4jMonitor . class ) ; 
 private final Dumper < Request > requestDumper ; 
 private final Dumper < Response > responseDumper ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / StdLogWriter . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / StdLogWriter . java 
 index b8c0c4f . . a2e3a07 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / StdLogWriter . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / StdLogWriter . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . github . dreamhead . moco . monitor ; 
 
 - public class StdLogWriter implements LogWriter { 
 + public final class StdLogWriter implements LogWriter { 
 @ Override 
 public void write ( final String content ) { 
 System . out . println ( content ) ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java 
 index 1ed6e82 . . bebff6f 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / ThreadSafeMonitor . java 
 @ @ - 9 , 7 + 9 , 7 @ @ import java . util . concurrent . locks . ReentrantLock ; 
 
 import static com . github . dreamhead . moco . util . Locks . withLock ; 
 
 - public class ThreadSafeMonitor implements MocoMonitor { 
 + public final class ThreadSafeMonitor implements MocoMonitor { 
 private MocoMonitor monitor ; 
 private Lock lock = new ReentrantLock ( ) ; 


NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java 
 index 73c1b95 . . b5a3c8c 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMonitor . java 
 @ @ - 7 , 7 + 7 , 7 @ @ public interface MocoMonitor { 
 void onMessageArrived ( final Request request ) ; 
 
 @ Subscribe 
 - void onException ( final Exception e ) ; 
 + void onException ( final Throwable e ) ; 
 
 @ Subscribe 
 void onMessageLeave ( final Response response ) ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoHandler . java 
 index c40e5db . . 95279b4 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoHandler . java 
 @ @ - 93 , 4 + 93 , 9 @ @ public class MocoHandler extends SimpleChannelInboundHandler < FullHttpRequest > { 
 setContentLength ( response , response . content ( ) . writerIndex ( ) ) ; 
 } 
 } 
 + 
 + @ Override 
 + public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception { 
 + monitor . onException ( cause ) ; 
 + } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoSocketHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoSocketHandler . java 
 index 0d6f73a . . 4982e10 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoSocketHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoSocketHandler . java 
 @ @ - 47 , 4 + 47 , 9 @ @ public class MocoSocketHandler extends SimpleChannelInboundHandler < String > { 
 
 throw new RuntimeException ( format ( " No handler found for request : % s " , context . getRequest ( ) . getContent ( ) ) ) ; 
 } 
 + 
 + @ Override 
 + public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception { 
 + monitor . onException ( cause ) ; 
 + } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / AbstractMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / AbstractMonitor . java 
 index bfea931 . . 079dd42 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / AbstractMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / AbstractMonitor . java 
 @ @ - 10 , 7 + 10 , 7 @ @ public abstract class AbstractMonitor implements MocoMonitor { 
 } 
 
 @ Override 
 - public void onException ( final Exception e ) { 
 + public void onException ( final Throwable e ) { 
 } 
 
 @ Override 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java 
 index 47ecedf . . 90195be 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / CompositeMonitor . java 
 @ @ - 19 , 7 + 19 , 7 @ @ public class CompositeMonitor implements MocoMonitor { 
 } 
 
 @ Override 
 - public void onException ( final Exception e ) { 
 + public void onException ( final Throwable e ) { 
 for ( MocoMonitor monitor : monitors ) { 
 monitor . onException ( e ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java 
 index 48537ff . . b278c06 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / DefaultLogFormatter . java 
 @ @ - 24 , 11 + 24 , 11 @ @ public class DefaultLogFormatter implements LogFormatter { 
 } 
 
 @ Override 
 - public String format ( final Exception e ) { 
 + public String format ( final Throwable e ) { 
 return String . format ( " Exception thrown : \ n \ n % s \ n " , stackTraceToString ( e ) ) ; 
 } 
 
 - private String stackTraceToString ( Exception e ) { 
 + private String stackTraceToString ( Throwable e ) { 
 StringWriter writer = new StringWriter ( ) ; 
 e . printStackTrace ( new PrintWriter ( writer ) ) ; 
 return writer . toString ( ) ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogFormatter . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogFormatter . java 
 index 950f9e1 . . 585255b 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogFormatter . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogFormatter . java 
 @ @ - 6 , 5 + 6 , 5 @ @ import com . github . dreamhead . moco . Response ; 
 public interface LogFormatter { 
 String format ( final Request request ) ; 
 String format ( final Response response ) ; 
 - String format ( final Exception e ) ; 
 + String format ( final Throwable e ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java 
 index e69c722 . . cb1bd09 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / LogMonitor . java 
 @ @ - 18 , 7 + 18 , 7 @ @ public class LogMonitor extends AbstractMonitor { 
 } 
 
 @ Override 
 - public void onException ( final Exception e ) { 
 + public void onException ( final Throwable e ) { 
 writer . write ( formatter . format ( e ) ) ; 
 } 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java 
 index b48c7ae . . d77a6d0 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / QuietMonitor . java 
 @ @ - 7 , 7 + 7 , 7 @ @ public class QuietMonitor extends AbstractMonitor { 
 private static Logger logger = LoggerFactory . getLogger ( QuietMonitor . class ) ; 
 
 @ Override 
 - public void onException ( final Exception e ) { 
 + public void onException ( final Throwable e ) { 
 logger . error ( " Exception thrown " , e ) ; 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java 
 index b14534a . . c238db0 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / monitor / Slf4jMonitor . java 
 @ @ - 22 , 7 + 22 , 7 @ @ public class Slf4jMonitor extends AbstractMonitor { 
 } 
 
 @ Override 
 - public void onException ( final Exception e ) { 
 + public void onException ( final Throwable e ) { 
 logger . error ( " Exception thrown " , e ) ; 
 } 

