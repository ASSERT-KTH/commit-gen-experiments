BLEU SCORE: 0.18995892141289814

TEST MSG: documented path cookie attribute
GENERATED MSG: documented cookie

TEST DIFF (one line): diff - - git a / moco - doc / apis . md b / moco - doc / apis . md <nl> index b8c1de5 . . b8d519b 100644 <nl> - - - a / moco - doc / apis . md <nl> + + + b / moco - doc / apis . md <nl> @ @ - 1294 , 6 + 1294 , 44 @ @ server . response ( cookie ( " loggedIn " , " true " ) , status ( 302 ) ) ; <nl> } <nl> ` ` ` <nl> <nl> + # # # # Cookie Attributes <nl> + <nl> + Cookie attributes are an important part in cookie usage . <nl> + <nl> + # # # # # Path <nl> + <nl> + Path cookie attribute defines the scope of the cookie . You can add your own ` path ` cookie attribute to your response . <nl> + <nl> + * Java <nl> + <nl> + ` ` ` java <nl> + server . response ( cookie ( " loggedIn " , " true " , path ( " / " ) ) , status ( 302 ) ) ; <nl> + ` ` ` <nl> + <nl> + * JSON <nl> + <nl> + * JSON <nl> + <nl> + ` ` ` json <nl> + { <nl> + " request " : <nl> + { <nl> + " uri " : " / cookie " <nl> + } , <nl> + " response " : <nl> + { <nl> + " cookies " : <nl> + { <nl> + " login " : { <nl> + " value " : " true " , <nl> + " path " : " / " <nl> + } <nl> + } <nl> + } <nl> + } <nl> + ` ` ` <nl> + <nl> + <nl> # # # Attachment <nl> * * @ Since 0 . 10 . 0 * * <nl>
NEAREST DIFF (one line): diff - - git a / README . md b / README . md <nl> index 3ecfc6c . . ab04d15 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 254 , 6 + 254 , 33 @ @ server . request ( eq ( header ( " foo " ) , " bar " ) ) . response ( " blah " ) <nl> } <nl> ` ` ` <nl> <nl> + # # # Cookie <nl> + <nl> + Cookie is widely used in web development . <nl> + <nl> + * API <nl> + ` ` ` java <nl> + server . request ( eq ( cookie ( " loggedIn " ) , " true " ) ) . response ( status ( 200 ) ) ; <nl> + ` ` ` <nl> + <nl> + * JSON <nl> + ` ` ` json <nl> + { <nl> + " request " : <nl> + { <nl> + " uri " : " / cookie " , <nl> + " cookies " : <nl> + { <nl> + " login " : " true " <nl> + } <nl> + } , <nl> + " response " : <nl> + { <nl> + " text " : " success " <nl> + } <nl> + } <nl> + ` ` ` <nl> + <nl> # # # XPath <nl> <nl> XML / HTML is popular format for HTTP server . Moco allows us to match request with XPath . <nl> @ @ - 327 , 7 + 354 , 7 @ @ server . request ( by ( " foo " ) ) . response ( file ( " bar . response " ) ) ; <nl> ` ` ` <nl> <nl> # # # Status Code <nl> - Moco also supports HTTP status codein response . <nl> + Moco also supports HTTP status code response . <nl> <nl> * API <nl> ` ` ` java <nl> @ @ - 365 , 7 + 392 , 8 @ @ server . request ( by ( " foo " ) ) . response ( header ( " content - type " , " application / json " ) ) ; <nl> } , <nl> " response " : <nl> { <nl> - " headers " : { <nl> + " headers " : <nl> + { <nl> " content - type " : " application / json " <nl> } <nl> } <nl> @ @ - 407 , 18 + 435 , 43 @ @ server . get ( by ( uri ( " / redirect " ) ) ) . redirectTo ( " http : / / www . github . com " ) ; <nl> <nl> * JSON <nl> ` ` ` json <nl> - [ <nl> { <nl> " request " : <nl> { <nl> - " uri " : " / redirect " <nl> + " uri " : " / redirect " <nl> } , <nl> <nl> " redirectTo " : " http : / / www . github . com " <nl> } <nl> - ] <nl> ` ` ` <nl> <nl> + # # # Cookie <nl> + <nl> + Cookie can also be in the response . <nl> + <nl> + * API <nl> + ` ` ` java <nl> + server . response ( cookie ( " loggedIn " , " true " ) , status ( 302 ) ) ; <nl> + ` ` ` <nl> + <nl> + * JSON <nl> + ` ` ` json <nl> + { <nl> + " request " : <nl> + { <nl> + " uri " : " / cookie " <nl> + } , <nl> + " response " : <nl> + { <nl> + " cookies " : <nl> + { <nl> + " login " : " true " <nl> + } <nl> + } <nl> + } <nl> + ` ` ` <nl> + <nl> + <nl> # # # Latency <nl> <nl> Sometimes , we need a latency to simulate slow server side operation .

TEST DIFF:
diff - - git a / moco - doc / apis . md b / moco - doc / apis . md 
 index b8c1de5 . . b8d519b 100644 
 - - - a / moco - doc / apis . md 
 + + + b / moco - doc / apis . md 
 @ @ - 1294 , 6 + 1294 , 44 @ @ server . response ( cookie ( " loggedIn " , " true " ) , status ( 302 ) ) ; 
 } 
 ` ` ` 
 
 + # # # # Cookie Attributes 
 + 
 + Cookie attributes are an important part in cookie usage . 
 + 
 + # # # # # Path 
 + 
 + Path cookie attribute defines the scope of the cookie . You can add your own ` path ` cookie attribute to your response . 
 + 
 + * Java 
 + 
 + ` ` ` java 
 + server . response ( cookie ( " loggedIn " , " true " , path ( " / " ) ) , status ( 302 ) ) ; 
 + ` ` ` 
 + 
 + * JSON 
 + 
 + * JSON 
 + 
 + ` ` ` json 
 + { 
 + " request " : 
 + { 
 + " uri " : " / cookie " 
 + } , 
 + " response " : 
 + { 
 + " cookies " : 
 + { 
 + " login " : { 
 + " value " : " true " , 
 + " path " : " / " 
 + } 
 + } 
 + } 
 + } 
 + ` ` ` 
 + 
 + 
 # # # Attachment 
 * * @ Since 0 . 10 . 0 * * 


NEAREST DIFF:
diff - - git a / README . md b / README . md 
 index 3ecfc6c . . ab04d15 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 254 , 6 + 254 , 33 @ @ server . request ( eq ( header ( " foo " ) , " bar " ) ) . response ( " blah " ) 
 } 
 ` ` ` 
 
 + # # # Cookie 
 + 
 + Cookie is widely used in web development . 
 + 
 + * API 
 + ` ` ` java 
 + server . request ( eq ( cookie ( " loggedIn " ) , " true " ) ) . response ( status ( 200 ) ) ; 
 + ` ` ` 
 + 
 + * JSON 
 + ` ` ` json 
 + { 
 + " request " : 
 + { 
 + " uri " : " / cookie " , 
 + " cookies " : 
 + { 
 + " login " : " true " 
 + } 
 + } , 
 + " response " : 
 + { 
 + " text " : " success " 
 + } 
 + } 
 + ` ` ` 
 + 
 # # # XPath 
 
 XML / HTML is popular format for HTTP server . Moco allows us to match request with XPath . 
 @ @ - 327 , 7 + 354 , 7 @ @ server . request ( by ( " foo " ) ) . response ( file ( " bar . response " ) ) ; 
 ` ` ` 
 
 # # # Status Code 
 - Moco also supports HTTP status codein response . 
 + Moco also supports HTTP status code response . 
 
 * API 
 ` ` ` java 
 @ @ - 365 , 7 + 392 , 8 @ @ server . request ( by ( " foo " ) ) . response ( header ( " content - type " , " application / json " ) ) ; 
 } , 
 " response " : 
 { 
 - " headers " : { 
 + " headers " : 
 + { 
 " content - type " : " application / json " 
 } 
 } 
 @ @ - 407 , 18 + 435 , 43 @ @ server . get ( by ( uri ( " / redirect " ) ) ) . redirectTo ( " http : / / www . github . com " ) ; 
 
 * JSON 
 ` ` ` json 
 - [ 
 { 
 " request " : 
 { 
 - " uri " : " / redirect " 
 + " uri " : " / redirect " 
 } , 
 
 " redirectTo " : " http : / / www . github . com " 
 } 
 - ] 
 ` ` ` 
 
 + # # # Cookie 
 + 
 + Cookie can also be in the response . 
 + 
 + * API 
 + ` ` ` java 
 + server . response ( cookie ( " loggedIn " , " true " ) , status ( 302 ) ) ; 
 + ` ` ` 
 + 
 + * JSON 
 + ` ` ` json 
 + { 
 + " request " : 
 + { 
 + " uri " : " / cookie " 
 + } , 
 + " response " : 
 + { 
 + " cookies " : 
 + { 
 + " login " : " true " 
 + } 
 + } 
 + } 
 + ` ` ` 
 + 
 + 
 # # # Latency 
 
 Sometimes , we need a latency to simulate slow server side operation .
