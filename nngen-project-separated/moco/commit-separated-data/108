BLEU SCORE: 0.06567274736060397

TEST MSG: added missing final to form request extractor
GENERATED MSG: extracted cookie via header extractor

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / FormsRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / FormsRequestExtractor . java <nl> index d862840 . . d31d57e 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / FormsRequestExtractor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / FormsRequestExtractor . java <nl> @ @ - 24 , 7 + 24 , 7 @ @ import static com . google . common . base . Optional . of ; <nl> import static com . google . common . collect . ImmutableMap . copyOf ; <nl> import static com . google . common . collect . Maps . newHashMap ; <nl> <nl> - public class FormsRequestExtractor extends HttpRequestExtractor < ImmutableMap < String , String > > { <nl> + public final class FormsRequestExtractor extends HttpRequestExtractor < ImmutableMap < String , String > > { <nl> @ Override <nl> protected Optional < ImmutableMap < String , String > > doExtract ( final HttpRequest request ) { <nl> HttpPostRequestDecoder decoder = null ;
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java <nl> index 006a992 . . 36d67a1 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java <nl> @ @ - 2 , 18 + 2 , 13 @ @ package com . github . dreamhead . moco . extractor ; <nl> <nl> import com . github . dreamhead . moco . HttpRequest ; <nl> import com . github . dreamhead . moco . RequestExtractor ; <nl> - import com . github . dreamhead . moco . model . LazyHttpRequest ; <nl> import com . google . common . base . Optional ; <nl> - import io . netty . handler . codec . http . FullHttpRequest ; <nl> <nl> - import java . nio . charset . Charset ; <nl> - <nl> - import static com . google . common . base . Optional . of ; <nl> + import static com . google . common . base . Optional . fromNullable ; <nl> <nl> public class ContentRequestExtractor implements RequestExtractor < String > { <nl> @ Override <nl> public Optional < String > extract ( HttpRequest request ) { <nl> - FullHttpRequest httpRequest = ( ( LazyHttpRequest ) request ) . getRawRequest ( ) ; <nl> - return of ( httpRequest . content ( ) . toString ( Charset . defaultCharset ( ) ) ) ; <nl> + return fromNullable ( request . getContent ( ) ) ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / CookiesRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / CookiesRequestExtractor . java <nl> index a5538e7 . . 0ab9c0e 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / CookiesRequestExtractor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / CookiesRequestExtractor . java <nl> @ @ - 17 , 13 + 17 , 15 @ @ import static com . google . common . collect . ImmutableMap . copyOf ; <nl> import static com . google . common . collect . Maps . newHashMap ; <nl> <nl> public class CookiesRequestExtractor implements RequestExtractor < ImmutableMap < String , String > > { <nl> + private final RequestExtractor < String > extractor = new HeaderRequestExtractor ( HttpHeaders . Names . COOKIE ) ; <nl> + <nl> public Optional < ImmutableMap < String , String > > extract ( HttpRequest request ) { <nl> - String cookieString = request . getHeaders ( ) . get ( HttpHeaders . Names . COOKIE ) ; <nl> - if ( cookieString = = null ) { <nl> + Optional < String > cookieString = extractor . extract ( request ) ; <nl> + if ( ! cookieString . isPresent ( ) ) { <nl> return absent ( ) ; <nl> } <nl> <nl> - return of ( doExtract ( cookieString ) ) ; <nl> + return of ( doExtract ( cookieString . get ( ) ) ) ; <nl> } <nl> <nl> private static ImmutableMap < String , String > doExtract ( String cookieString ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountPathExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountPathExtractor . java <nl> index 406e995 . . 336872e 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountPathExtractor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountPathExtractor . java <nl> @ @ - 9 , 7 + 9 , 7 @ @ import static com . google . common . base . Optional . of ; <nl> <nl> public class MountPathExtractor implements RequestExtractor { <nl> private final MountTo target ; <nl> - private final UriRequestExtractor extractor = new UriRequestExtractor ( ) ; <nl> + private final RequestExtractor < String > extractor = new UriRequestExtractor ( ) ; <nl> <nl> public MountPathExtractor ( MountTo target ) { <nl> this . target = target ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / FormsRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / FormsRequestExtractor . java 
 index d862840 . . d31d57e 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / FormsRequestExtractor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / FormsRequestExtractor . java 
 @ @ - 24 , 7 + 24 , 7 @ @ import static com . google . common . base . Optional . of ; 
 import static com . google . common . collect . ImmutableMap . copyOf ; 
 import static com . google . common . collect . Maps . newHashMap ; 
 
 - public class FormsRequestExtractor extends HttpRequestExtractor < ImmutableMap < String , String > > { 
 + public final class FormsRequestExtractor extends HttpRequestExtractor < ImmutableMap < String , String > > { 
 @ Override 
 protected Optional < ImmutableMap < String , String > > doExtract ( final HttpRequest request ) { 
 HttpPostRequestDecoder decoder = null ;

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java 
 index 006a992 . . 36d67a1 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / ContentRequestExtractor . java 
 @ @ - 2 , 18 + 2 , 13 @ @ package com . github . dreamhead . moco . extractor ; 
 
 import com . github . dreamhead . moco . HttpRequest ; 
 import com . github . dreamhead . moco . RequestExtractor ; 
 - import com . github . dreamhead . moco . model . LazyHttpRequest ; 
 import com . google . common . base . Optional ; 
 - import io . netty . handler . codec . http . FullHttpRequest ; 
 
 - import java . nio . charset . Charset ; 
 - 
 - import static com . google . common . base . Optional . of ; 
 + import static com . google . common . base . Optional . fromNullable ; 
 
 public class ContentRequestExtractor implements RequestExtractor < String > { 
 @ Override 
 public Optional < String > extract ( HttpRequest request ) { 
 - FullHttpRequest httpRequest = ( ( LazyHttpRequest ) request ) . getRawRequest ( ) ; 
 - return of ( httpRequest . content ( ) . toString ( Charset . defaultCharset ( ) ) ) ; 
 + return fromNullable ( request . getContent ( ) ) ; 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / CookiesRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / CookiesRequestExtractor . java 
 index a5538e7 . . 0ab9c0e 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / CookiesRequestExtractor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / CookiesRequestExtractor . java 
 @ @ - 17 , 13 + 17 , 15 @ @ import static com . google . common . collect . ImmutableMap . copyOf ; 
 import static com . google . common . collect . Maps . newHashMap ; 
 
 public class CookiesRequestExtractor implements RequestExtractor < ImmutableMap < String , String > > { 
 + private final RequestExtractor < String > extractor = new HeaderRequestExtractor ( HttpHeaders . Names . COOKIE ) ; 
 + 
 public Optional < ImmutableMap < String , String > > extract ( HttpRequest request ) { 
 - String cookieString = request . getHeaders ( ) . get ( HttpHeaders . Names . COOKIE ) ; 
 - if ( cookieString = = null ) { 
 + Optional < String > cookieString = extractor . extract ( request ) ; 
 + if ( ! cookieString . isPresent ( ) ) { 
 return absent ( ) ; 
 } 
 
 - return of ( doExtract ( cookieString ) ) ; 
 + return of ( doExtract ( cookieString . get ( ) ) ) ; 
 } 
 
 private static ImmutableMap < String , String > doExtract ( String cookieString ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountPathExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountPathExtractor . java 
 index 406e995 . . 336872e 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountPathExtractor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountPathExtractor . java 
 @ @ - 9 , 7 + 9 , 7 @ @ import static com . google . common . base . Optional . of ; 
 
 public class MountPathExtractor implements RequestExtractor { 
 private final MountTo target ; 
 - private final UriRequestExtractor extractor = new UriRequestExtractor ( ) ; 
 + private final RequestExtractor < String > extractor = new UriRequestExtractor ( ) ; 
 
 public MountPathExtractor ( MountTo target ) { 
 this . target = target ;
