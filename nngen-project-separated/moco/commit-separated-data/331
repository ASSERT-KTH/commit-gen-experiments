BLEU SCORE: 0.16669006580554238

TEST MSG: added test for proxy with charset
GENERATED MSG: added test for json matcher with encoding for # 191

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> index 1cdf1cc . . 3d5ed9f 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> + import com . google . common . io . ByteStreams ; <nl> import com . google . common . io . Files ; <nl> import org . apache . http . HttpResponse ; <nl> import org . apache . http . HttpVersion ; <nl> @ @ - 29 , 9 + 30 , 11 @ @ import static com . github . dreamhead . moco . Moco . file ; <nl> import static com . github . dreamhead . moco . Moco . from ; <nl> import static com . github . dreamhead . moco . Moco . header ; <nl> import static com . github . dreamhead . moco . Moco . httpServer ; <nl> + import static com . github . dreamhead . moco . Moco . json ; <nl> import static com . github . dreamhead . moco . Moco . log ; <nl> import static com . github . dreamhead . moco . Moco . match ; <nl> import static com . github . dreamhead . moco . Moco . method ; <nl> + import static com . github . dreamhead . moco . Moco . pathResource ; <nl> import static com . github . dreamhead . moco . Moco . playback ; <nl> import static com . github . dreamhead . moco . Moco . proxy ; <nl> import static com . github . dreamhead . moco . Moco . query ; <nl> @ @ - 478 , 4 + 481 , 21 @ @ public class MocoProxyTest extends AbstractMocoHttpTest { <nl> } <nl> } ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ forward _ gbk _ request ( ) throws Exception { <nl> + server = httpServer ( port ( ) , log ( ) ) ; <nl> + final Charset gbk = Charset . forName ( " GBK " ) ; <nl> + server . request ( and ( by ( uri ( " / proxy " ) ) , json ( pathResource ( " gbk . json " , gbk ) ) ) ) . response ( " response " ) ; <nl> + server . response ( proxy ( remoteUrl ( " / proxy " ) ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + byte [ ] bytes = ByteStreams . toByteArray ( this . getClass ( ) . getClassLoader ( ) . getResourceAsStream ( " gbk . json " ) ) ; <nl> + String result = helper . postBytes ( root ( ) , bytes , gbk ) ; <nl> + assertThat ( result , is ( " response " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> index abeb4ba . . f524377 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> @ @ - 1 , 19 + 1 , 26 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> import com . github . dreamhead . moco . util . Jsons ; <nl> + import com . google . common . io . ByteStreams ; <nl> import com . google . common . net . MediaType ; <nl> import org . apache . http . HttpEntity ; <nl> import org . apache . http . client . HttpResponseException ; <nl> import org . junit . Test ; <nl> <nl> import java . io . IOException ; <nl> + import java . io . InputStream ; <nl> + import java . nio . charset . Charset ; <nl> <nl> import static com . github . dreamhead . moco . Moco . eq ; <nl> import static com . github . dreamhead . moco . Moco . exist ; <nl> + import static com . github . dreamhead . moco . Moco . httpServer ; <nl> import static com . github . dreamhead . moco . Moco . json ; <nl> import static com . github . dreamhead . moco . Moco . jsonPath ; <nl> + import static com . github . dreamhead . moco . Moco . log ; <nl> + import static com . github . dreamhead . moco . Moco . pathResource ; <nl> import static com . github . dreamhead . moco . Moco . toJson ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> + import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . remoteUrl ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> @ @ - 164 , 6 + 171 , 20 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { <nl> } ) ; <nl> } <nl> <nl> + @ Test <nl> + public void should _ match _ gbk _ request ( ) throws Exception { <nl> + server = httpServer ( port ( ) , log ( ) ) ; <nl> + server . request ( json ( pathResource ( " gbk . json " , Charset . forName ( " GBK " ) ) ) ) . response ( " response " ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + String result = helper . postBytes ( root ( ) , " { \ " message \ " : \ " 请 求 \ " } " . getBytes ( ) ) ; <nl> +

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 index 1cdf1cc . . 3d5ed9f 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package com . github . dreamhead . moco ; 
 
 + import com . google . common . io . ByteStreams ; 
 import com . google . common . io . Files ; 
 import org . apache . http . HttpResponse ; 
 import org . apache . http . HttpVersion ; 
 @ @ - 29 , 9 + 30 , 11 @ @ import static com . github . dreamhead . moco . Moco . file ; 
 import static com . github . dreamhead . moco . Moco . from ; 
 import static com . github . dreamhead . moco . Moco . header ; 
 import static com . github . dreamhead . moco . Moco . httpServer ; 
 + import static com . github . dreamhead . moco . Moco . json ; 
 import static com . github . dreamhead . moco . Moco . log ; 
 import static com . github . dreamhead . moco . Moco . match ; 
 import static com . github . dreamhead . moco . Moco . method ; 
 + import static com . github . dreamhead . moco . Moco . pathResource ; 
 import static com . github . dreamhead . moco . Moco . playback ; 
 import static com . github . dreamhead . moco . Moco . proxy ; 
 import static com . github . dreamhead . moco . Moco . query ; 
 @ @ - 478 , 4 + 481 , 21 @ @ public class MocoProxyTest extends AbstractMocoHttpTest { 
 } 
 } ) ; 
 } 
 + 
 + @ Test 
 + public void should _ forward _ gbk _ request ( ) throws Exception { 
 + server = httpServer ( port ( ) , log ( ) ) ; 
 + final Charset gbk = Charset . forName ( " GBK " ) ; 
 + server . request ( and ( by ( uri ( " / proxy " ) ) , json ( pathResource ( " gbk . json " , gbk ) ) ) ) . response ( " response " ) ; 
 + server . response ( proxy ( remoteUrl ( " / proxy " ) ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + byte [ ] bytes = ByteStreams . toByteArray ( this . getClass ( ) . getClassLoader ( ) . getResourceAsStream ( " gbk . json " ) ) ; 
 + String result = helper . postBytes ( root ( ) , bytes , gbk ) ; 
 + assertThat ( result , is ( " response " ) ) ; 
 + } 
 + } ) ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 index abeb4ba . . f524377 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 @ @ - 1 , 19 + 1 , 26 @ @ 
 package com . github . dreamhead . moco ; 
 
 import com . github . dreamhead . moco . util . Jsons ; 
 + import com . google . common . io . ByteStreams ; 
 import com . google . common . net . MediaType ; 
 import org . apache . http . HttpEntity ; 
 import org . apache . http . client . HttpResponseException ; 
 import org . junit . Test ; 
 
 import java . io . IOException ; 
 + import java . io . InputStream ; 
 + import java . nio . charset . Charset ; 
 
 import static com . github . dreamhead . moco . Moco . eq ; 
 import static com . github . dreamhead . moco . Moco . exist ; 
 + import static com . github . dreamhead . moco . Moco . httpServer ; 
 import static com . github . dreamhead . moco . Moco . json ; 
 import static com . github . dreamhead . moco . Moco . jsonPath ; 
 + import static com . github . dreamhead . moco . Moco . log ; 
 + import static com . github . dreamhead . moco . Moco . pathResource ; 
 import static com . github . dreamhead . moco . Moco . toJson ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 + import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . remoteUrl ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; 
 import static org . hamcrest . CoreMatchers . is ; 
 @ @ - 164 , 6 + 171 , 20 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { 
 } ) ; 
 } 
 
 + @ Test 
 + public void should _ match _ gbk _ request ( ) throws Exception { 
 + server = httpServer ( port ( ) , log ( ) ) ; 
 + server . request ( json ( pathResource ( " gbk . json " , Charset . forName ( " GBK " ) ) ) ) . response ( " response " ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + String result = helper . postBytes ( root ( ) , " { \ " message \ " : \ " 请 求 \ " } " . getBytes ( ) ) ; 
 +
