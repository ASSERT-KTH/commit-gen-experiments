BLEU SCORE: 0.020980574531482755

TEST MSG: fixed create parser signature in base parser for compilation warning
GENERATED MSG: added final to request matcher factory

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> index a751a28 . . 410f6ae 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> @ @ - 10 , 7 + 10 , 7 @ @ import java . io . InputStream ; <nl> <nl> public abstract class BaseParser < T extends Server > implements Parser < T > { <nl> protected abstract T createServer ( final ImmutableList < SessionSetting > read , <nl> - final Optional < Integer > port , final MocoConfig [ ] configs ) ; <nl> + final Optional < Integer > port , final MocoConfig . . . configs ) ; <nl> <nl> private final CollectionReader reader ; <nl>
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / ShutdownPortOption . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / ShutdownPortOption . java <nl> index 27c89e6 . . 65c1b7e 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / ShutdownPortOption . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / ShutdownPortOption . java <nl> @ @ - 4 , 7 + 4 , 7 @ @ import com . google . common . base . Optional ; <nl> import org . apache . commons . cli . Option ; <nl> <nl> public class ShutdownPortOption { <nl> - private Optional < Integer > shutdownPort ; <nl> + private final Optional < Integer > shutdownPort ; <nl> <nl> public ShutdownPortOption ( Integer shutdownPort ) { <nl> this . shutdownPort = Optional . fromNullable ( shutdownPort ) ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java <nl> index 9d697ff . . 9fd74b6 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java <nl> @ @ - 18 , 7 + 18 , 7 @ @ import java . io . InputStream ; <nl> <nl> public class HttpServerParser { <nl> private static Logger logger = LoggerFactory . getLogger ( HttpServer . class ) ; <nl> - private CollectionReader reader ; <nl> + private final CollectionReader reader ; <nl> <nl> public HttpServerParser ( ) { <nl> Module textContainerModule = new SimpleModule ( " TextContainerModule " , <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / RequestMatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / RequestMatcherFactory . java <nl> index c33fcea . . 6287a4d 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / RequestMatcherFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / RequestMatcherFactory . java <nl> @ @ - 4 , 5 + 4 , 5 @ @ import com . github . dreamhead . moco . RequestMatcher ; <nl> import com . github . dreamhead . moco . parser . model . RequestSetting ; <nl> <nl> public interface RequestMatcherFactory { <nl> - RequestMatcher createRequestMatcher ( RequestSetting request ) ; <nl> + RequestMatcher createRequestMatcher ( final RequestSetting request ) ; <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> index 626ec38 . . da90191 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> @ @ - 29 , 7 + 29 , 7 @ @ public class DynamicRequestMatcherFactory extends Dynamics implements RequestMat <nl> 	 	 . put ( " forms " , " form " ) . build ( ) ; <nl> <nl> @ Override <nl> - public RequestMatcher createRequestMatcher ( RequestSetting request ) { <nl> + public RequestMatcher createRequestMatcher ( final RequestSetting request ) { <nl> return wrapRequestMatcher ( request , createRequestMatchers ( request ) ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 index a751a28 . . 410f6ae 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 @ @ - 10 , 7 + 10 , 7 @ @ import java . io . InputStream ; 
 
 public abstract class BaseParser < T extends Server > implements Parser < T > { 
 protected abstract T createServer ( final ImmutableList < SessionSetting > read , 
 - final Optional < Integer > port , final MocoConfig [ ] configs ) ; 
 + final Optional < Integer > port , final MocoConfig . . . configs ) ; 
 
 private final CollectionReader reader ; 


NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / ShutdownPortOption . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / ShutdownPortOption . java 
 index 27c89e6 . . 65c1b7e 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / ShutdownPortOption . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / ShutdownPortOption . java 
 @ @ - 4 , 7 + 4 , 7 @ @ import com . google . common . base . Optional ; 
 import org . apache . commons . cli . Option ; 
 
 public class ShutdownPortOption { 
 - private Optional < Integer > shutdownPort ; 
 + private final Optional < Integer > shutdownPort ; 
 
 public ShutdownPortOption ( Integer shutdownPort ) { 
 this . shutdownPort = Optional . fromNullable ( shutdownPort ) ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java 
 index 9d697ff . . 9fd74b6 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java 
 @ @ - 18 , 7 + 18 , 7 @ @ import java . io . InputStream ; 
 
 public class HttpServerParser { 
 private static Logger logger = LoggerFactory . getLogger ( HttpServer . class ) ; 
 - private CollectionReader reader ; 
 + private final CollectionReader reader ; 
 
 public HttpServerParser ( ) { 
 Module textContainerModule = new SimpleModule ( " TextContainerModule " , 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / RequestMatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / RequestMatcherFactory . java 
 index c33fcea . . 6287a4d 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / RequestMatcherFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / RequestMatcherFactory . java 
 @ @ - 4 , 5 + 4 , 5 @ @ import com . github . dreamhead . moco . RequestMatcher ; 
 import com . github . dreamhead . moco . parser . model . RequestSetting ; 
 
 public interface RequestMatcherFactory { 
 - RequestMatcher createRequestMatcher ( RequestSetting request ) ; 
 + RequestMatcher createRequestMatcher ( final RequestSetting request ) ; 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 index 626ec38 . . da90191 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 @ @ - 29 , 7 + 29 , 7 @ @ public class DynamicRequestMatcherFactory extends Dynamics implements RequestMat 
 	 	 . put ( " forms " , " form " ) . build ( ) ; 
 
 @ Override 
 - public RequestMatcher createRequestMatcher ( RequestSetting request ) { 
 + public RequestMatcher createRequestMatcher ( final RequestSetting request ) { 
 return wrapRequestMatcher ( request , createRequestMatchers ( request ) ) ; 
 } 

