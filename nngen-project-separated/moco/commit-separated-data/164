BLEU SCORE: 0.020980574531482755

TEST MSG: used type token to get real class for generic class
GENERATED MSG: fixed compilation warning in request and response

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractResponseHandler . java <nl> index b6ce7a6 . . 5837fe1 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractResponseHandler . java <nl> @ @ - 6 , 7 + 6 , 7 @ @ import com . github . dreamhead . moco . ResponseHandler ; <nl> public abstract class AbstractResponseHandler implements ResponseHandler { <nl> @ Override <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public final ResponseHandler apply ( final MocoConfig config ) { <nl> + public ResponseHandler apply ( final MocoConfig config ) { <nl> if ( config . isFor ( MocoConfig . RESPONSE _ ID ) ) { <nl> return ( ResponseHandler ) config . apply ( this ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java <nl> index 7730f56 . . 4531136 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ public abstract class BaseResponseSettingConfiguration < T extends ResponseSetting <nl> <nl> @ SuppressWarnings ( " unchecked " ) <nl> protected BaseResponseSettingConfiguration ( ) { <nl> - this . clazz = ( Class < T > ) new TypeToken < T > ( getClass ( ) ) { } . getRawType ( ) ; <nl> + this . clazz = ( Class < T > ) TypeToken . of ( getClass ( ) ) . getRawType ( ) ; <nl> } <nl> <nl> private T self ( ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> index ff725d9 . . 322f341 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> @ @ - 4 , 8 + 4 , 8 @ @ import com . github . dreamhead . moco . HttpMessage ; <nl> import com . github . dreamhead . moco . HttpProtocolVersion ; <nl> import com . google . common . collect . ImmutableMap ; <nl> import com . google . common . collect . Iterables ; <nl> + import com . google . common . reflect . TypeToken ; <nl> <nl> - import java . lang . reflect . ParameterizedType ; <nl> import java . util . ArrayList ; <nl> import java . util . HashMap ; <nl> import java . util . List ; <nl> @ @ - 90 , 7 + 90 , 7 @ @ public abstract class DefaultHttpMessage implements HttpMessage { <nl> <nl> @ SuppressWarnings ( " unchecked " ) <nl> private Class < T > getRealClass ( ) { <nl> - return ( Class < T > ) ( ( ( ParameterizedType ) getClass ( ) . getGenericSuperclass ( ) ) . getActualTypeArguments ( ) [ 0 ] ) ; <nl> + return ( Class < T > ) TypeToken . of ( getClass ( ) ) . getRawType ( ) ; <nl> } <nl> <nl> public T withVersion ( final HttpProtocolVersion version ) { <nl> @ @ - 124 , 11 + 124 , 11 @ @ public abstract class DefaultHttpMessage implements HttpMessage { <nl> <nl> Object value = Iterables . getFirst ( headers . entrySet ( ) , null ) . getValue ( ) ; <nl> if ( value instanceof String ) { <nl> - return simpleValueToArray ( ( Map < String , String > ) headers ) ; <nl> + return simpleValueToArray ( ( Map < String , String > ) headers ) ; <nl> } <nl> <nl> if ( value instanceof String [ ] ) { <nl> - return ( Map < String , String [ ] > ) headers ; <nl> + return ( Map < String , String [ ] > ) headers ; <nl> } <nl> <nl> if ( value instanceof Iterable ) {
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java <nl> index 12a3f1e . . b79bda3 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java <nl> @ @ - 114 , 6 + 114 , 7 @ @ public abstract class AbstractProxyResponseHandler extends AbstractHttpResponseH <nl> return remoteRequest ; <nl> } <nl> <nl> + @ SuppressWarnings ( " deprecation " ) <nl> private RequestConfig createRequestConfig ( ) { <nl> return RequestConfig . custom ( ) <nl> . setRedirectsEnabled ( false ) <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> index 7579deb . . 1056a6b 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> @ @ - 269 , 6 + 269 , 7 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http <nl> return this ; <nl> } <nl> <nl> + @ SuppressWarnings ( " unchecked " ) <nl> private ImmutableMap < String , String [ ] > asHeaders ( final Map < String , ? > headers ) { <nl> Object value = Iterables . getFirst ( headers . entrySet ( ) , null ) . getValue ( ) ; <nl> if ( value instanceof String ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> index 5d927b2 . . 58cac97 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> @ @ - 81 , 14 + 81 , 15 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo <nl> return this ; <nl> } <nl> <nl> + @ SuppressWarnings ( " unchecked " ) <nl> private ImmutableMap < String , String [ ] > asHeaders ( final Map < String , ? > headers ) { <nl> Object value = Iterables . getFirst ( headers . entrySet ( ) , null ) . getValue ( ) ; <nl> if ( value instanceof String ) { <nl> - return simpleValueToArray ( ( Map < String , String > ) headers ) ; <nl> + return simpleValueToArray ( ( Map < String , String > ) headers ) ; <nl> } <nl> <nl> if ( value instanceof String [ ] ) { <nl> - return copyOf ( ( Map < String , String [ ] > ) headers ) ; <nl> + return copyOf ( ( Map < String , String [ ] > ) headers ) ; <nl> } <nl> <nl> if ( value instanceof List ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> index 551bd02 . . 2e8a31d 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java <nl> @ @ - 11 , 7 + 11 , 6 @ @ import com . google . common . base . Function ; <nl> import com . google . common . collect . FluentIterable ; <nl> import com . google . common . collect . ImmutableList ; <nl> import com . google . common . io . CharStreams ; <nl> - import com . sun . xml . internal . messaging . saaj . util . CharReader ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl>

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractResponseHandler . java 
 index b6ce7a6 . . 5837fe1 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractResponseHandler . java 
 @ @ - 6 , 7 + 6 , 7 @ @ import com . github . dreamhead . moco . ResponseHandler ; 
 public abstract class AbstractResponseHandler implements ResponseHandler { 
 @ Override 
 @ SuppressWarnings ( " unchecked " ) 
 - public final ResponseHandler apply ( final MocoConfig config ) { 
 + public ResponseHandler apply ( final MocoConfig config ) { 
 if ( config . isFor ( MocoConfig . RESPONSE _ ID ) ) { 
 return ( ResponseHandler ) config . apply ( this ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java 
 index 7730f56 . . 4531136 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / BaseResponseSettingConfiguration . java 
 @ @ - 20 , 7 + 20 , 7 @ @ public abstract class BaseResponseSettingConfiguration < T extends ResponseSetting 
 
 @ SuppressWarnings ( " unchecked " ) 
 protected BaseResponseSettingConfiguration ( ) { 
 - this . clazz = ( Class < T > ) new TypeToken < T > ( getClass ( ) ) { } . getRawType ( ) ; 
 + this . clazz = ( Class < T > ) TypeToken . of ( getClass ( ) ) . getRawType ( ) ; 
 } 
 
 private T self ( ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 index ff725d9 . . 322f341 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 @ @ - 4 , 8 + 4 , 8 @ @ import com . github . dreamhead . moco . HttpMessage ; 
 import com . github . dreamhead . moco . HttpProtocolVersion ; 
 import com . google . common . collect . ImmutableMap ; 
 import com . google . common . collect . Iterables ; 
 + import com . google . common . reflect . TypeToken ; 
 
 - import java . lang . reflect . ParameterizedType ; 
 import java . util . ArrayList ; 
 import java . util . HashMap ; 
 import java . util . List ; 
 @ @ - 90 , 7 + 90 , 7 @ @ public abstract class DefaultHttpMessage implements HttpMessage { 
 
 @ SuppressWarnings ( " unchecked " ) 
 private Class < T > getRealClass ( ) { 
 - return ( Class < T > ) ( ( ( ParameterizedType ) getClass ( ) . getGenericSuperclass ( ) ) . getActualTypeArguments ( ) [ 0 ] ) ; 
 + return ( Class < T > ) TypeToken . of ( getClass ( ) ) . getRawType ( ) ; 
 } 
 
 public T withVersion ( final HttpProtocolVersion version ) { 
 @ @ - 124 , 11 + 124 , 11 @ @ public abstract class DefaultHttpMessage implements HttpMessage { 
 
 Object value = Iterables . getFirst ( headers . entrySet ( ) , null ) . getValue ( ) ; 
 if ( value instanceof String ) { 
 - return simpleValueToArray ( ( Map < String , String > ) headers ) ; 
 + return simpleValueToArray ( ( Map < String , String > ) headers ) ; 
 } 
 
 if ( value instanceof String [ ] ) { 
 - return ( Map < String , String [ ] > ) headers ; 
 + return ( Map < String , String [ ] > ) headers ; 
 } 
 
 if ( value instanceof Iterable ) {

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java 
 index 12a3f1e . . b79bda3 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java 
 @ @ - 114 , 6 + 114 , 7 @ @ public abstract class AbstractProxyResponseHandler extends AbstractHttpResponseH 
 return remoteRequest ; 
 } 
 
 + @ SuppressWarnings ( " deprecation " ) 
 private RequestConfig createRequestConfig ( ) { 
 return RequestConfig . custom ( ) 
 . setRedirectsEnabled ( false ) 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 index 7579deb . . 1056a6b 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 @ @ - 269 , 6 + 269 , 7 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http 
 return this ; 
 } 
 
 + @ SuppressWarnings ( " unchecked " ) 
 private ImmutableMap < String , String [ ] > asHeaders ( final Map < String , ? > headers ) { 
 Object value = Iterables . getFirst ( headers . entrySet ( ) , null ) . getValue ( ) ; 
 if ( value instanceof String ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 index 5d927b2 . . 58cac97 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 @ @ - 81 , 14 + 81 , 15 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo 
 return this ; 
 } 
 
 + @ SuppressWarnings ( " unchecked " ) 
 private ImmutableMap < String , String [ ] > asHeaders ( final Map < String , ? > headers ) { 
 Object value = Iterables . getFirst ( headers . entrySet ( ) , null ) . getValue ( ) ; 
 if ( value instanceof String ) { 
 - return simpleValueToArray ( ( Map < String , String > ) headers ) ; 
 + return simpleValueToArray ( ( Map < String , String > ) headers ) ; 
 } 
 
 if ( value instanceof String [ ] ) { 
 - return copyOf ( ( Map < String , String [ ] > ) headers ) ; 
 + return copyOf ( ( Map < String , String [ ] > ) headers ) ; 
 } 
 
 if ( value instanceof List ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 index 551bd02 . . 2e8a31d 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Jsons . java 
 @ @ - 11 , 7 + 11 , 6 @ @ import com . google . common . base . Function ; 
 import com . google . common . collect . FluentIterable ; 
 import com . google . common . collect . ImmutableList ; 
 import com . google . common . io . CharStreams ; 
 - import com . sun . xml . internal . messaging . saaj . util . CharReader ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 

