BLEU SCORE: 0.10552670315936319

TEST MSG: introduced port to socket server when merging socket servers
GENERATED MSG: added socket server without port in publish api

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java <nl> index 1ea0857 . . 5ab4518 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ public final class ActualSocketServer extends BaseActualServer < SocketResponseSet <nl> } <nl> <nl> public SocketServer mergeHttpServer ( final ActualSocketServer thatServer ) { <nl> - ActualSocketServer newServer = newBaseServer ( ) ; <nl> + ActualSocketServer newServer = newBaseServer ( this . getPort ( ) ) ; <nl> newServer . addSettings ( this . getSettings ( ) ) ; <nl> newServer . addSettings ( thatServer . getSettings ( ) ) ; <nl> <nl> @ @ - 44 , 8 + 44 , 8 @ @ public final class ActualSocketServer extends BaseActualServer < SocketResponseSet <nl> return newServer ; <nl> } <nl> <nl> - private ActualSocketServer newBaseServer ( ) { <nl> - return createLogServer ( this . getPort ( ) ) ; <nl> + private ActualSocketServer newBaseServer ( final Optional < Integer > thisPort ) { <nl> + return createLogServer ( thisPort ) ; <nl> } <nl> <nl> public static ActualSocketServer createQuietServer ( final Optional < Integer > port ) { <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> index 3084fee . . e3cc0b4 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> @ @ - 144 , 7 + 144 , 6 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> } ) ; <nl> } <nl> <nl> - <nl> @ Test <nl> public void should _ merge _ http _ server _ with _ same _ port ( ) throws Exception { <nl> httpServer = httpServer ( 12306 , context ( " / foo " ) ) ;
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index 389921a . . f6f136d 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 146 , 6 + 146 , 10 @ @ public final class Moco { <nl> mergeMonitor ( monitor , monitor2 , monitors ) ) ; <nl> } <nl> <nl> + public static SocketServer socketServer ( ) { <nl> + return ActualSocketServer . createQuietServer ( Optional . < Integer > absent ( ) ) ; <nl> + } <nl> + <nl> public static SocketServer socketServer ( int port ) { <nl> return ActualSocketServer . createQuietServer ( of ( port ) ) ; <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java <nl> index d7d360a . . 53da54f 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ public class MocoPortTest { <nl> } <nl> <nl> @ Test <nl> - public void should _ create _ server _ without _ specific _ port ( ) throws Exception { <nl> + public void should _ create _ http _ server _ without _ specific _ port ( ) throws Exception { <nl> final HttpServer server = httpServer ( ) ; <nl> server . response ( " foo " ) ; <nl> <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java <nl> index bdf4ba7 . . 7c51067 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java <nl> @ @ - 117 , 6 + 117 , 22 @ @ public class MocoSocketTest { <nl> hit . verify ( by ( " 0XCAFE " ) , once ( ) ) ; <nl> } <nl> <nl> + @ Test <nl> + public void should _ create _ socket _ server _ without _ specific _ port ( ) throws Exception { <nl> + final SocketServer server = socketServer ( ) ; <nl> + server . request ( by ( " foo " ) ) . response ( line ( " bar " ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + helper = new MocoSocketHelper ( local ( ) , server . port ( ) ) ; <nl> + helper . connect ( ) ; <nl> + assertThat ( helper . send ( " foo " ) , is ( " bar " ) ) ; <nl> + helper . close ( ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> private String times ( String base , int times ) { <nl> StringBuilder sb = new StringBuilder ( ) ; <nl> for ( int i = 0 ; i < times ; i + + ) {

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java 
 index 1ea0857 . . 5ab4518 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java 
 @ @ - 31 , 7 + 31 , 7 @ @ public final class ActualSocketServer extends BaseActualServer < SocketResponseSet 
 } 
 
 public SocketServer mergeHttpServer ( final ActualSocketServer thatServer ) { 
 - ActualSocketServer newServer = newBaseServer ( ) ; 
 + ActualSocketServer newServer = newBaseServer ( this . getPort ( ) ) ; 
 newServer . addSettings ( this . getSettings ( ) ) ; 
 newServer . addSettings ( thatServer . getSettings ( ) ) ; 
 
 @ @ - 44 , 8 + 44 , 8 @ @ public final class ActualSocketServer extends BaseActualServer < SocketResponseSet 
 return newServer ; 
 } 
 
 - private ActualSocketServer newBaseServer ( ) { 
 - return createLogServer ( this . getPort ( ) ) ; 
 + private ActualSocketServer newBaseServer ( final Optional < Integer > thisPort ) { 
 + return createLogServer ( thisPort ) ; 
 } 
 
 public static ActualSocketServer createQuietServer ( final Optional < Integer > port ) { 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 index 3084fee . . e3cc0b4 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 @ @ - 144 , 7 + 144 , 6 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 } ) ; 
 } 
 
 - 
 @ Test 
 public void should _ merge _ http _ server _ with _ same _ port ( ) throws Exception { 
 httpServer = httpServer ( 12306 , context ( " / foo " ) ) ;

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index 389921a . . f6f136d 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 146 , 6 + 146 , 10 @ @ public final class Moco { 
 mergeMonitor ( monitor , monitor2 , monitors ) ) ; 
 } 
 
 + public static SocketServer socketServer ( ) { 
 + return ActualSocketServer . createQuietServer ( Optional . < Integer > absent ( ) ) ; 
 + } 
 + 
 public static SocketServer socketServer ( int port ) { 
 return ActualSocketServer . createQuietServer ( of ( port ) ) ; 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java 
 index d7d360a . . 53da54f 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java 
 @ @ - 20 , 7 + 20 , 7 @ @ public class MocoPortTest { 
 } 
 
 @ Test 
 - public void should _ create _ server _ without _ specific _ port ( ) throws Exception { 
 + public void should _ create _ http _ server _ without _ specific _ port ( ) throws Exception { 
 final HttpServer server = httpServer ( ) ; 
 server . response ( " foo " ) ; 
 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java 
 index bdf4ba7 . . 7c51067 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java 
 @ @ - 117 , 6 + 117 , 22 @ @ public class MocoSocketTest { 
 hit . verify ( by ( " 0XCAFE " ) , once ( ) ) ; 
 } 
 
 + @ Test 
 + public void should _ create _ socket _ server _ without _ specific _ port ( ) throws Exception { 
 + final SocketServer server = socketServer ( ) ; 
 + server . request ( by ( " foo " ) ) . response ( line ( " bar " ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + helper = new MocoSocketHelper ( local ( ) , server . port ( ) ) ; 
 + helper . connect ( ) ; 
 + assertThat ( helper . send ( " foo " ) , is ( " bar " ) ) ; 
 + helper . close ( ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 private String times ( String base , int times ) { 
 StringBuilder sb = new StringBuilder ( ) ; 
 for ( int i = 0 ; i < times ; i + + ) {
