BLEU SCORE: 0.06567274736060397

TEST MSG: removed redundant final from reset id matcher
GENERATED MSG: privated method in composite request matcher

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / RestIdMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / RestIdMatcher . java <nl> index fe5ab16 . . ba28a8c 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / RestIdMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / RestIdMatcher . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> public interface RestIdMatcher { <nl> - RequestMatcher matcher ( final RestIdMatcher resourceName ) ; <nl> + RequestMatcher matcher ( RestIdMatcher resourceName ) ; <nl> String resourceUri ( ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / HeaderRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / HeaderRequestExtractor . java <nl> index 3b7becb . . 61bfcf4 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / HeaderRequestExtractor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / HeaderRequestExtractor . java <nl> @ @ - 22 , 7 + 22 , 7 @ @ public class HeaderRequestExtractor extends HttpRequestExtractor < String [ ] > { <nl> <nl> @ Override <nl> protected Optional < String [ ] > doExtract ( final HttpRequest request ) { <nl> - final ImmutableMap < String , String > headers = request . getHeaders ( ) ; <nl> + final ImmutableMap < String , String > headers = request . getHeaders ( ) ; <nl> String [ ] extractedValues = from ( headers . entrySet ( ) ) . filter ( isForName ( name ) ) . transform ( toValue ( ) ) . toArray ( String . class ) ; <nl> if ( extractedValues . length > 0 ) { <nl> return of ( extractedValues ) ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java <nl> index 55b8f4d . . 2ddc289 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java <nl> @ @ - 16 , 7 + 16 , 7 @ @ public abstract class CompositeRequestMatcher extends AbstractRequestMatcher { <nl> this . matchers = matchers ; <nl> } <nl> <nl> - protected Iterable < RequestMatcher > applyToMatchers ( final MocoConfig config ) { <nl> + private Iterable < RequestMatcher > applyToMatchers ( final MocoConfig config ) { <nl> FluentIterable < RequestMatcher > appliedMatchers = from ( matchers ) . transform ( applyConfig ( config ) ) ; <nl> if ( matchers . equals ( appliedMatchers ) ) { <nl> return this . matchers ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / FileResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / FileResourceReader . java <nl> index c8f459d . . 8a0e6ca 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / FileResourceReader . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / FileResourceReader . java <nl> @ @ - 2 , 7 + 2 , 6 @ @ package com . github . dreamhead . moco . resource . reader ; <nl> <nl> import com . github . dreamhead . moco . MocoConfig ; <nl> import com . github . dreamhead . moco . Request ; <nl> - import com . github . dreamhead . moco . model . MessageContent ; <nl> import com . github . dreamhead . moco . resource . Resource ; <nl> import com . google . common . base . Optional ; <nl>

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / RestIdMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / RestIdMatcher . java 
 index fe5ab16 . . ba28a8c 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / RestIdMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / RestIdMatcher . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . github . dreamhead . moco ; 
 
 public interface RestIdMatcher { 
 - RequestMatcher matcher ( final RestIdMatcher resourceName ) ; 
 + RequestMatcher matcher ( RestIdMatcher resourceName ) ; 
 String resourceUri ( ) ; 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / HeaderRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / HeaderRequestExtractor . java 
 index 3b7becb . . 61bfcf4 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / HeaderRequestExtractor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / HeaderRequestExtractor . java 
 @ @ - 22 , 7 + 22 , 7 @ @ public class HeaderRequestExtractor extends HttpRequestExtractor < String [ ] > { 
 
 @ Override 
 protected Optional < String [ ] > doExtract ( final HttpRequest request ) { 
 - final ImmutableMap < String , String > headers = request . getHeaders ( ) ; 
 + final ImmutableMap < String , String > headers = request . getHeaders ( ) ; 
 String [ ] extractedValues = from ( headers . entrySet ( ) ) . filter ( isForName ( name ) ) . transform ( toValue ( ) ) . toArray ( String . class ) ; 
 if ( extractedValues . length > 0 ) { 
 return of ( extractedValues ) ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java 
 index 55b8f4d . . 2ddc289 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java 
 @ @ - 16 , 7 + 16 , 7 @ @ public abstract class CompositeRequestMatcher extends AbstractRequestMatcher { 
 this . matchers = matchers ; 
 } 
 
 - protected Iterable < RequestMatcher > applyToMatchers ( final MocoConfig config ) { 
 + private Iterable < RequestMatcher > applyToMatchers ( final MocoConfig config ) { 
 FluentIterable < RequestMatcher > appliedMatchers = from ( matchers ) . transform ( applyConfig ( config ) ) ; 
 if ( matchers . equals ( appliedMatchers ) ) { 
 return this . matchers ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / FileResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / FileResourceReader . java 
 index c8f459d . . 8a0e6ca 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / FileResourceReader . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / FileResourceReader . java 
 @ @ - 2 , 7 + 2 , 6 @ @ package com . github . dreamhead . moco . resource . reader ; 
 
 import com . github . dreamhead . moco . MocoConfig ; 
 import com . github . dreamhead . moco . Request ; 
 - import com . github . dreamhead . moco . model . MessageContent ; 
 import com . github . dreamhead . moco . resource . Resource ; 
 import com . google . common . base . Optional ; 

