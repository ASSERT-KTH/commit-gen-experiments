BLEU SCORE: 0.09287528999566796

TEST MSG: added test for random template function with range and format
GENERATED MSG: added redirect test for any response

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> index 7bc3a7c . . fb61acd 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> @ @ - 517 , 6 + 517 , 27 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { <nl> } <nl> <nl> @ Test <nl> + public void should _ generate _ response _ with _ random _ with _ range _ and _ data _ format ( ) throws Exception { <nl> + server . request ( by ( uri ( " / random " ) ) ) . response ( template ( " $ { random ( 100 , ' # # # . # # # # # # ' ) } " ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + String response = helper . get ( remoteUrl ( " / random " ) ) ; <nl> + try { <nl> + double result = Double . parseDouble ( response ) ; <nl> + assertThat ( result , lessThan ( 100d ) ) ; <nl> + assertThat ( result , greaterThan ( 0d ) ) ; <nl> + String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; <nl> + assertThat ( target . length ( ) , is ( 6 ) ) ; <nl> + } catch ( NumberFormatException e ) { <nl> + fail ( ) ; <nl> + } <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void should _ throw _ exception _ for _ random _ with _ range _ less _ than _ 0 ( ) throws Exception { <nl> server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { random ( - 10 ) } " ) ) ; <nl>
NEAREST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java <nl> index 37c4ee0 . . 4e097b1 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java <nl> @ @ - 67 , 6 + 67 , 20 @ @ public class MocoWebTest extends AbstractMocoHttpTest { <nl> } <nl> <nl> @ Test <nl> + public void should _ redirect _ for _ any _ response ( ) throws Exception { <nl> + server . get ( by ( uri ( " / " ) ) ) . response ( " foo " ) ; <nl> + server . redirectTo ( root ( ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws IOException { <nl> + assertThat ( helper . get ( remoteUrl ( " / redirectTo " ) ) , is ( " foo " ) ) ; <nl> + } <nl> + } ) ; <nl> + <nl> + } <nl> + <nl> + @ Test <nl> public void should _ download _ attachment ( ) throws Exception { <nl> server . get ( by ( uri ( " / " ) ) ) . response ( attachment ( " foo . txt " , file ( " src / test / resources / foo . response " ) ) ) ; <nl>

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 index 7bc3a7c . . fb61acd 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 @ @ - 517 , 6 + 517 , 27 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { 
 } 
 
 @ Test 
 + public void should _ generate _ response _ with _ random _ with _ range _ and _ data _ format ( ) throws Exception { 
 + server . request ( by ( uri ( " / random " ) ) ) . response ( template ( " $ { random ( 100 , ' # # # . # # # # # # ' ) } " ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + String response = helper . get ( remoteUrl ( " / random " ) ) ; 
 + try { 
 + double result = Double . parseDouble ( response ) ; 
 + assertThat ( result , lessThan ( 100d ) ) ; 
 + assertThat ( result , greaterThan ( 0d ) ) ; 
 + String target = Splitter . on ( ' . ' ) . splitToList ( response ) . get ( 1 ) ; 
 + assertThat ( target . length ( ) , is ( 6 ) ) ; 
 + } catch ( NumberFormatException e ) { 
 + fail ( ) ; 
 + } 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Test 
 public void should _ throw _ exception _ for _ random _ with _ range _ less _ than _ 0 ( ) throws Exception { 
 server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { random ( - 10 ) } " ) ) ; 


NEAREST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java 
 index 37c4ee0 . . 4e097b1 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java 
 @ @ - 67 , 6 + 67 , 20 @ @ public class MocoWebTest extends AbstractMocoHttpTest { 
 } 
 
 @ Test 
 + public void should _ redirect _ for _ any _ response ( ) throws Exception { 
 + server . get ( by ( uri ( " / " ) ) ) . response ( " foo " ) ; 
 + server . redirectTo ( root ( ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws IOException { 
 + assertThat ( helper . get ( remoteUrl ( " / redirectTo " ) ) , is ( " foo " ) ) ; 
 + } 
 + } ) ; 
 + 
 + } 
 + 
 + @ Test 
 public void should _ download _ attachment ( ) throws Exception { 
 server . get ( by ( uri ( " / " ) ) ) . response ( attachment ( " foo . txt " , file ( " src / test / resources / foo . response " ) ) ) ; 

