BLEU SCORE: 0.03283637368030199

TEST MSG: renamed toJson resource with object to json
GENERATED MSG: added rest post setting

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index 8262faf . . 78a2bab 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 342 , 7 + 342 , 7 @ @ public final class Moco { <nl> return new JsonRequestMatcher ( resource , ContentRequestExtractor . class . cast ( extractor ( " json " ) ) ) ; <nl> } <nl> <nl> - public static ContentResource toJson ( final Object pojo ) { <nl> + public static ContentResource json ( final Object pojo ) { <nl> return jsonResource ( checkNotNull ( pojo , " Json object should not be null " ) ) ; <nl> } <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestRequestDispatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestRequestDispatcher . java <nl> index 73cdd22 . . 89b1cb7 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestRequestDispatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestRequestDispatcher . java <nl> @ @ - 166 , 7 + 166 , 7 @ @ public final class RestRequestDispatcher { <nl> ImmutableList < Object > objects = settings <nl> . transform ( toJsonHandler ( ) ) <nl> . transform ( toPojo ( ) ) . toList ( ) ; <nl> - return of ( with ( Moco . toJson ( objects ) ) ) ; <nl> + return of ( with ( Moco . json ( objects ) ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> index 4f1f95d . . 07441ed 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> @ @ - 22 , 7 + 22 , 7 @ @ import static com . github . dreamhead . moco . Moco . jsonPath ; <nl> import static com . github . dreamhead . moco . Moco . log ; <nl> import static com . github . dreamhead . moco . Moco . pathResource ; <nl> import static com . github . dreamhead . moco . Moco . post ; <nl> - import static com . github . dreamhead . moco . Moco . toJson ; <nl> + import static com . github . dreamhead . moco . Moco . json ; <nl> import static com . github . dreamhead . moco . Moco . uri ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; <nl> @ @ - 120 , 7 + 120 , 7 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { <nl> PlainA pojo = new PlainA ( ) ; <nl> pojo . code = 1 ; <nl> pojo . message = " message " ; <nl> - server . request ( by ( toJson ( pojo ) ) ) . response ( " foo " ) ; <nl> + server . request ( by ( Moco . json ( pojo ) ) ) . response ( " foo " ) ; <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws IOException { <nl> @ @ - 134 , 7 + 134 , 7 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { <nl> PlainA pojo = new PlainA ( ) ; <nl> pojo . code = 1 ; <nl> pojo . message = " message " ; <nl> - server . request ( by ( toJson ( pojo ) ) ) . response ( " foo " ) ; <nl> + server . request ( by ( Moco . json ( pojo ) ) ) . response ( " foo " ) ; <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws IOException { <nl> @ @ - 160 , 7 + 160 , 7 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { <nl> PlainA pojo = new PlainA ( ) ; <nl> pojo . code = 1 ; <nl> pojo . message = " message " ; <nl> - server . response ( toJson ( pojo ) ) ; <nl> + server . response ( Moco . json ( pojo ) ) ; <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 181 , 7 + 181 , 7 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { <nl> PlainA pojo = new PlainA ( ) ; <nl> pojo . code = 1 ; <nl> pojo . message = " 消 息 " ; <nl> - server . response ( toJson ( pojo ) ) ; <nl> + server . response ( Moco . json ( pojo ) ) ; <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 230 , 8 + 230 , 8 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { <nl> pojo . message = " message " ; <nl> <nl> ResponseHandler handler = mock ( ResponseHandler . class ) ; <nl> - server . request ( and ( by ( uri ( " / target " ) ) , by ( toJson ( pojo ) ) ) ) . response ( handler ) ; <nl> - server . request ( by ( uri ( " / event " ) ) ) . response ( " event " ) . on ( complete ( post ( remoteUrl ( " / target " ) , toJson ( pojo ) ) ) ) ; <nl> + server . request ( and ( by ( uri ( " / target " ) ) , by ( Moco . json ( pojo ) ) ) ) . response ( handler ) ; <nl> + server . request ( by ( uri ( " / event " ) ) ) . response ( " event " ) . on ( complete ( post ( remoteUrl ( " / target " ) , Moco . json ( pojo ) ) ) ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> index df302d9 . . c6b9bcd 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> @ @ - 27 , 7 + 27 , 7 @ @ import static com . github . dreamhead . moco . Moco . log ; <nl> import static com . github . dreamhead . moco . Moco . query ; <nl> import static com . github . dreamhead . moco . Moco . status ; <nl> import static com . github . dreamhead . moco . Moco . text ; <nl> - import static com . github . dreamhead . moco . Moco . toJson ; <nl> + import static com . github . dreamhead . moco . Moco . json ; <nl> import static com . github . dreamhead . moco . Moco . uri ; <nl> import static com . github . dreamhead . moco . Moco . with ; <nl> import static com . github . dreamhead . moco . MocoRequestHit . requestHit ; <nl> @ @ - 69 , 8 + 69 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - get ( " 1 " ) . response ( toJson ( resource1 ) ) , <nl> - get ( " 2 " ) . response ( toJson ( resource2 ) ) <nl> + get ( " 1 " ) . response ( json ( resource1 ) ) , <nl> + get ( " 2 " ) . response ( json ( resource2 ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 98 , 7 + 98 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - get ( ) . response ( toJson ( ImmutableList . of ( resource1 , resource2 ) ) ) <nl> + get ( ) . response ( json ( ImmutableList . of ( resource1 , resource2 ) ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 122 , 8 + 122 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - get ( " 1 " ) . response ( toJson ( resource1 ) ) , <nl> - get ( " 2 " ) . response ( toJson ( resource2 ) ) <nl> + get ( " 1 " ) . response ( json ( resource1 ) ) , <nl> + get ( " 2 " ) . response ( json ( resource2 ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 161 , 8 + 161 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - get ( " 1 " ) . response ( toJson ( resource1 ) ) , <nl> - get ( " 2 " ) . response ( toJson ( resource2 ) ) <nl> + get ( " 1 " ) . response ( json ( resource1 ) ) , <nl> + get ( " 2 " ) . response ( json ( resource2 ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 195 , 8 + 195 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " 0XBABE " ; <nl> <nl> server . resource ( " targets " , <nl> - get ( " 1 " ) . response ( toJson ( resource1 ) ) , <nl> - get ( " 2 " ) . response ( toJson ( resource2 ) ) <nl> + get ( " 1 " ) . response ( json ( resource1 ) ) , <nl> + get ( " 2 " ) . response ( json ( resource2 ) ) <nl> ) ; <nl> <nl> File file = folder . newFile ( ) ; <nl> @ @ - 225 , 8 + 225 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - get ( " 1 " ) . request ( eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) ) . response ( toJson ( resource1 ) ) , <nl> - get ( " 2 " ) . request ( eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) ) . response ( toJson ( resource2 ) ) <nl> + get ( " 1 " ) . request ( eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) ) . response ( json ( resource1 ) ) , <nl> + get ( " 2 " ) . request ( eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) ) . response ( json ( resource2 ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 262 , 7 + 262 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - get ( ) . request ( eq ( query ( " foo " ) , " bar " ) ) . response ( toJson ( ImmutableList . of ( resource1 , resource2 ) ) ) <nl> + get ( ) . request ( eq ( query ( " foo " ) , " bar " ) ) . response ( json ( ImmutableList . of ( resource1 , resource2 ) ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 284 , 7 + 284 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource . message = " hello " ; <nl> <nl> server . resource ( " targets " , <nl> - get ( anyId ( ) ) . response ( toJson ( resource ) ) <nl> + get ( anyId ( ) ) . response ( json ( resource ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 698 , 8 + 698 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> <nl> server . resource ( " targets " , <nl> id ( " 1 " ) . name ( " sub " ) . settings ( <nl> - get ( " 1 " ) . response ( toJson ( resource1 ) ) , <nl> - get ( " 2 " ) . response ( toJson ( resource2 ) ) <nl> + get ( " 1 " ) . response ( json ( resource1 ) ) , <nl> + get ( " 2 " ) . response ( json ( resource2 ) ) <nl> ) <nl> ) ; <nl> <nl> @ @ - 729 , 8 + 729 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> <nl> server . resource ( " targets " , <nl> id ( anyId ( ) ) . name ( " sub " ) . settings ( <nl> - get ( " 1 " ) . response ( toJson ( resource1 ) ) , <nl> - get ( " 2 " ) . response ( toJson ( resource2 ) ) <nl> + get ( " 1 " ) . response ( json ( resource1 ) ) , <nl> + get ( " 2 " ) . response ( json ( resource2 ) ) <nl> ) <nl> ) ; <nl> <nl> @ @ - 764 , 8 + 764 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - get ( " 1 " ) . response ( toJson ( resource1 ) ) , <nl> - get ( " 2 " ) . response ( toJson ( resource2 ) ) <nl> + get ( " 1 " ) . response ( json ( resource1 ) ) , <nl> + get ( " 2 " ) . response ( json ( resource2 ) ) <nl> ) ; <nl> <nl> server . response ( " hello " ) ; <nl> @ @ - 799 , 8 + 799 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> final RequestHit hit = requestHit ( ) ; <nl> final RestServer server = restServer ( port ( ) , hit , log ( ) ) ; <nl> server . resource ( " targets " , <nl> - get ( " 1 " ) . response ( toJson ( resource1 ) ) , <nl> - get ( " 2 " ) . response ( toJson ( resource2 ) ) <nl> + get ( " 1 " ) . response ( json ( resource1 ) ) , <nl> + get ( " 2 " ) . response ( json ( resource2 ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> index 07c1906 . . 7c64038 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ import static com . github . dreamhead . moco . Moco . eq ; <nl> import static com . github . dreamhead . moco . Moco . exist ; <nl> import static com . github . dreamhead . moco . Moco . json ; <nl> import static com . github . dreamhead . moco . Moco . not ; <nl> - import static com . github . dreamhead . moco . Moco . toJson ; <nl> + import static com . github . dreamhead . moco . Moco . json ; <nl> import static com . google . common . collect . FluentIterable . from ; <nl> <nl> public class DynamicRequestMatcherFactory extends Dynamics implements RequestMatcherFactory { <nl> @ @ - 52 , 7 + 52 , 7 @ @ public class DynamicRequestMatcherFactory extends Dynamics implements RequestMat <nl> <nl> private RequestMatcher createRequestMatcherFromValue ( final String name , final Object value ) { <nl> if ( " json " . equalsIgnoreCase ( name ) ) { <nl> - return by ( toJson ( value ) ) ; <nl> + return by ( Moco . json ( value ) ) ; <nl> } <nl> <nl> if ( Map . class . isInstance ( value ) ) { <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> index d30eb6c . . 04ffe15 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> @ @ - 22 , 7 + 22 , 7 @ @ import static com . github . dreamhead . moco . Moco . attachment ; <nl> import static com . github . dreamhead . moco . Moco . status ; <nl> import static com . github . dreamhead . moco . Moco . template ; <nl> import static com . github . dreamhead . moco . Moco . text ; <nl> - import static com . github . dreamhead . moco . Moco . toJson ; <nl> + import static com . github . dreamhead . moco . Moco . json ; <nl> import static com . github . dreamhead . moco . Moco . var ; <nl> import static com . github . dreamhead . moco . Moco . version ; <nl> import static com . github . dreamhead . moco . Moco . with ; <nl> @ @ - 75 , 7 + 75 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> <nl> private ResponseHandler createResponseHandler ( final String name , final Object value ) { <nl> if ( " json " . equalsIgnoreCase ( name ) ) { <nl> - return with ( toJson ( value ) ) ; <nl> + return with ( json ( value ) ) ; <nl> } <nl> <nl> if ( isResource ( name ) & & TextContainer . class . isInstance ( value ) ) {
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoRest . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoRest . java <nl> index fe59571 . . 3c4a160 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoRest . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoRest . java <nl> @ @ - 1 , 9 + 1 , 11 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> + import com . github . dreamhead . moco . handler . AndResponseHandler ; <nl> import com . github . dreamhead . moco . monitor . QuietMonitor ; <nl> import com . github . dreamhead . moco . rest . ActualRestServer ; <nl> import com . github . dreamhead . moco . rest . GetAllRestSetting ; <nl> import com . github . dreamhead . moco . rest . GetSingleRestSetting ; <nl> + import com . github . dreamhead . moco . rest . PostRestSetting ; <nl> import com . google . common . base . Optional ; <nl> <nl> import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; <nl> @ @ - 42 , 6 + 44 , 11 @ @ public final class MocoRest { <nl> checkNotNull ( handler , " Get response handler should not be null " ) ) ; <nl> } <nl> <nl> + public static RestSetting post ( final ResponseHandler . . . handler ) { <nl> + return new PostRestSetting ( AndResponseHandler . and ( handler ) ) ; <nl> + } <nl> + <nl> + <nl> private MocoRest ( ) { <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / PostRestSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / PostRestSetting . java <nl> new file mode 100644 <nl> index 0000000 . . f7a051d <nl> - - - / dev / null <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / PostRestSetting . java <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + package com . github . dreamhead . moco . rest ; <nl> + <nl> + import com . github . dreamhead . moco . ResponseHandler ; <nl> + import com . github . dreamhead . moco . RestSetting ; <nl> + <nl> + public class PostRestSetting extends RestSetting { <nl> + public PostRestSetting ( final ResponseHandler handler ) { <nl> + super ( handler ) ; <nl> + } <nl> + } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java <nl> index 9e83add . . 6eb4da0 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ public class RestHandler extends AbstractHttpResponseHandler { <nl> private final ResponseHandler notFoundHandler ; <nl> private final FluentIterable < GetAllRestSetting > getAllSettings ; <nl> private final FluentIterable < GetSingleRestSetting > getSingleSettings ; <nl> + private final FluentIterable < PostRestSetting > postSettings ; <nl> <nl> public RestHandler ( final String name , final RestSetting . . . settings ) { <nl> this . name = name ; <nl> @ @ - 38 , 6 + 39 , 9 @ @ public class RestHandler extends AbstractHttpResponseHandler { <nl> this . getSingleSettings = FluentIterable . of ( settings ) <nl> . filter ( GetSingleRestSetting . class ) <nl> . transform ( toInstance ( GetSingleRestSetting . class ) ) ; <nl> + this . postSettings = FluentIterable . of ( settings ) <nl> + . filter ( PostRestSetting . class ) <nl> + . transform ( toInstance ( PostRestSetting . class ) ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 47 , 9 + 51 , 26 @ @ public class RestHandler extends AbstractHttpResponseHandler { <nl> return ; <nl> } <nl> <nl> + if ( " post " . equalsIgnoreCase ( httpRequest . getMethod ( ) ) ) { <nl> + Optional < ResponseHandler > postHandler = getPostHandler ( httpRequest ) ; <nl> + if ( postHandler . isPresent ( ) ) { <nl> + postHandler . get ( ) . writeToResponse ( new SessionContext ( httpRequest , httpResponse ) ) ; <nl> + return ; <nl> + } <nl> + } <nl> + <nl> throw new UnsupportedOperationException ( " Unsupported REST request " ) ; <nl> } <nl> <nl> + private Optional < ResponseHandler > getPostHandler ( final HttpRequest httpRequest ) { <nl> + Optional < PostRestSetting > first = postSettings . first ( ) ; <nl> + if ( first . isPresent ( ) ) { <nl> + return Optional . of ( first . get ( ) . getHandler ( ) ) ; <nl> + } <nl> + return Optional . absent ( ) ; <nl> + <nl> + } <nl> + <nl> @ Override <nl> @ SuppressWarnings ( " unchecked " ) <nl> public ResponseHandler apply ( final MocoConfig config ) { <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> index 71cc230 . . b018f6e 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> @ @ - 24 , 7 + 24 , 10 @ @ import static com . github . dreamhead . moco . Moco . eq ; <nl> import static com . github . dreamhead . moco . Moco . header ; <nl> import static com . github . dreamhead . moco . Moco . log ; <nl> import static com . github . dreamhead . moco . Moco . query ; <nl> + import static com . github . dreamhead . moco . Moco . status ; <nl> import static com . github . dreamhead . moco . Moco . toJson ; <nl> + import static com . github . dreamhead . moco . MocoRest . get ; <nl> + import static com . github . dreamhead . moco . MocoRest . post ; <nl> import static com . github . dreamhead . moco . MocoRest . restServer ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; <nl> @ @ - 56 , 8 + 59 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - MocoRest . get ( " 1 " , toJson ( resource1 ) ) , <nl> - MocoRest . get ( " 2 " , toJson ( resource2 ) ) <nl> + get ( " 1 " , toJson ( resource1 ) ) , <nl> + get ( " 2 " , toJson ( resource2 ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 85 , 8 + 88 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - MocoRest . get ( " 1 " , toJson ( resource1 ) ) , <nl> - MocoRest . get ( " 2 " , toJson ( resource2 ) ) <nl> + get ( " 1 " , toJson ( resource1 ) ) , <nl> + get ( " 2 " , toJson ( resource2 ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 128 , 8 + 131 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - MocoRest . get ( " 1 " , toJson ( resource1 ) ) , <nl> - MocoRest . get ( " 2 " , toJson ( resource2 ) ) <nl> + get ( " 1 " , toJson ( resource1 ) ) , <nl> + get ( " 2 " , toJson ( resource2 ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 162 , 8 + 165 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " 0XBABE " ; <nl> <nl> server . resource ( " targets " , <nl> - MocoRest . get ( " 1 " , toJson ( resource1 ) ) , <nl> - MocoRest . get ( " 2 " , toJson ( resource2 ) ) <nl> + get ( " 1 " , toJson ( resource1 ) ) , <nl> + get ( " 2 " , toJson ( resource2 ) ) <nl> ) ; <nl> <nl> File file = folder . newFile ( ) ; <nl> @ @ - 192 , 8 + 195 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - MocoRest . get ( " 1 " , eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) , toJson ( resource1 ) ) , <nl> - MocoRest . get ( " 2 " , eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) , toJson ( resource2 ) ) <nl> + get ( " 1 " , eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) , toJson ( resource1 ) ) , <nl> + get ( " 2 " , eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) , toJson ( resource2 ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 220 , 7 + 223 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> <nl> @ Test <nl> public void should _ query _ with _ condition ( ) throws Exception { <nl> - RestServer server = restServer ( 12306 , log ( ) ) ; <nl> + RestServer server = restServer ( 12306 ) ; <nl> Plain resource1 = new Plain ( ) ; <nl> resource1 . code = 1 ; <nl> resource1 . message = " hello " ; <nl> @ @ - 230 , 7 + 233 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> resource2 . message = " world " ; <nl> <nl> server . resource ( " targets " , <nl> - MocoRest . get ( eq ( query ( " foo " ) , " bar " ) , toJson ( ImmutableList . of ( resource1 , resource2 ) ) ) <nl> + get ( eq ( query ( " foo " ) , " bar " ) , toJson ( ImmutableList . of ( resource1 , resource2 ) ) ) <nl> ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ @ - 246 , 6 + 249 , 28 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> } ) ; <nl> } <nl> <nl> + @ Test <nl> + public void should _ post ( ) throws Exception { <nl> + RestServer server = restServer ( 12306 ) ; <nl> + final Plain resource1 = new Plain ( ) ; <nl> + resource1 . code = 1 ; <nl> + resource1 . message = " hello " ; <nl> + <nl> + server . resource ( " targets " , <nl> + post ( status ( 201 ) , header ( " Location " , " / targets / 123 " ) ) <nl> + ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + HttpResponse httpResponse = helper . postForResponse ( remoteUrl ( " / targets " ) , <nl> + mapper . writeValueAsString ( resource1 ) ) ; <nl> + assertThat ( httpResponse . getStatusLine ( ) . getStatusCode ( ) , is ( 201 ) ) ; <nl> + assertThat ( httpResponse . getFirstHeader ( " Location " ) . getValue ( ) , is ( " / targets / 123 " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> private Plain getResource ( String uri ) throws IOException { <nl> org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( uri ) ) ; <nl> return asPlain ( response ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java <nl> index 22b7190 . . 276ce1e 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java <nl> @ @ - 95 , 6 + 95 , 14 @ @ public class MocoTestHelper { <nl> return EXECUTOR . execute ( request ) . returnContent ( ) . asString ( ) ; <nl> } <nl> <nl> + public HttpResponse postForResponse ( final String url , String content ) throws IOException { <nl> + Request request = Request . Post ( url ) <nl> + . addHeader ( CONTENT _ TYPE , PLAIN _ TEXT _ UTF _ 8 . toString ( ) ) <nl> + . bodyByteArray ( content . getBytes ( ) ) ; <nl> + return EXECUTOR . execute ( request ) . returnResponse ( ) ; <nl> + <nl> + } <nl> + <nl> public String postStream ( String url , InputStream stream ) throws IOException { <nl> return postBytes ( url , toByteArray ( stream ) ) ; <nl> }

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index 8262faf . . 78a2bab 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 342 , 7 + 342 , 7 @ @ public final class Moco { 
 return new JsonRequestMatcher ( resource , ContentRequestExtractor . class . cast ( extractor ( " json " ) ) ) ; 
 } 
 
 - public static ContentResource toJson ( final Object pojo ) { 
 + public static ContentResource json ( final Object pojo ) { 
 return jsonResource ( checkNotNull ( pojo , " Json object should not be null " ) ) ; 
 } 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestRequestDispatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestRequestDispatcher . java 
 index 73cdd22 . . 89b1cb7 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestRequestDispatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestRequestDispatcher . java 
 @ @ - 166 , 7 + 166 , 7 @ @ public final class RestRequestDispatcher { 
 ImmutableList < Object > objects = settings 
 . transform ( toJsonHandler ( ) ) 
 . transform ( toPojo ( ) ) . toList ( ) ; 
 - return of ( with ( Moco . toJson ( objects ) ) ) ; 
 + return of ( with ( Moco . json ( objects ) ) ) ; 
 } 
 } 
 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 index 4f1f95d . . 07441ed 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 @ @ - 22 , 7 + 22 , 7 @ @ import static com . github . dreamhead . moco . Moco . jsonPath ; 
 import static com . github . dreamhead . moco . Moco . log ; 
 import static com . github . dreamhead . moco . Moco . pathResource ; 
 import static com . github . dreamhead . moco . Moco . post ; 
 - import static com . github . dreamhead . moco . Moco . toJson ; 
 + import static com . github . dreamhead . moco . Moco . json ; 
 import static com . github . dreamhead . moco . Moco . uri ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; 
 @ @ - 120 , 7 + 120 , 7 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { 
 PlainA pojo = new PlainA ( ) ; 
 pojo . code = 1 ; 
 pojo . message = " message " ; 
 - server . request ( by ( toJson ( pojo ) ) ) . response ( " foo " ) ; 
 + server . request ( by ( Moco . json ( pojo ) ) ) . response ( " foo " ) ; 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws IOException { 
 @ @ - 134 , 7 + 134 , 7 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { 
 PlainA pojo = new PlainA ( ) ; 
 pojo . code = 1 ; 
 pojo . message = " message " ; 
 - server . request ( by ( toJson ( pojo ) ) ) . response ( " foo " ) ; 
 + server . request ( by ( Moco . json ( pojo ) ) ) . response ( " foo " ) ; 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws IOException { 
 @ @ - 160 , 7 + 160 , 7 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { 
 PlainA pojo = new PlainA ( ) ; 
 pojo . code = 1 ; 
 pojo . message = " message " ; 
 - server . response ( toJson ( pojo ) ) ; 
 + server . response ( Moco . json ( pojo ) ) ; 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 181 , 7 + 181 , 7 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { 
 PlainA pojo = new PlainA ( ) ; 
 pojo . code = 1 ; 
 pojo . message = " 消 息 " ; 
 - server . response ( toJson ( pojo ) ) ; 
 + server . response ( Moco . json ( pojo ) ) ; 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 230 , 8 + 230 , 8 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { 
 pojo . message = " message " ; 
 
 ResponseHandler handler = mock ( ResponseHandler . class ) ; 
 - server . request ( and ( by ( uri ( " / target " ) ) , by ( toJson ( pojo ) ) ) ) . response ( handler ) ; 
 - server . request ( by ( uri ( " / event " ) ) ) . response ( " event " ) . on ( complete ( post ( remoteUrl ( " / target " ) , toJson ( pojo ) ) ) ) ; 
 + server . request ( and ( by ( uri ( " / target " ) ) , by ( Moco . json ( pojo ) ) ) ) . response ( handler ) ; 
 + server . request ( by ( uri ( " / event " ) ) ) . response ( " event " ) . on ( complete ( post ( remoteUrl ( " / target " ) , Moco . json ( pojo ) ) ) ) ; 
 
 running ( server , new Runnable ( ) { 
 @ Override 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 index df302d9 . . c6b9bcd 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 @ @ - 27 , 7 + 27 , 7 @ @ import static com . github . dreamhead . moco . Moco . log ; 
 import static com . github . dreamhead . moco . Moco . query ; 
 import static com . github . dreamhead . moco . Moco . status ; 
 import static com . github . dreamhead . moco . Moco . text ; 
 - import static com . github . dreamhead . moco . Moco . toJson ; 
 + import static com . github . dreamhead . moco . Moco . json ; 
 import static com . github . dreamhead . moco . Moco . uri ; 
 import static com . github . dreamhead . moco . Moco . with ; 
 import static com . github . dreamhead . moco . MocoRequestHit . requestHit ; 
 @ @ - 69 , 8 + 69 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - get ( " 1 " ) . response ( toJson ( resource1 ) ) , 
 - get ( " 2 " ) . response ( toJson ( resource2 ) ) 
 + get ( " 1 " ) . response ( json ( resource1 ) ) , 
 + get ( " 2 " ) . response ( json ( resource2 ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 98 , 7 + 98 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - get ( ) . response ( toJson ( ImmutableList . of ( resource1 , resource2 ) ) ) 
 + get ( ) . response ( json ( ImmutableList . of ( resource1 , resource2 ) ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 122 , 8 + 122 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - get ( " 1 " ) . response ( toJson ( resource1 ) ) , 
 - get ( " 2 " ) . response ( toJson ( resource2 ) ) 
 + get ( " 1 " ) . response ( json ( resource1 ) ) , 
 + get ( " 2 " ) . response ( json ( resource2 ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 161 , 8 + 161 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - get ( " 1 " ) . response ( toJson ( resource1 ) ) , 
 - get ( " 2 " ) . response ( toJson ( resource2 ) ) 
 + get ( " 1 " ) . response ( json ( resource1 ) ) , 
 + get ( " 2 " ) . response ( json ( resource2 ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 195 , 8 + 195 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " 0XBABE " ; 
 
 server . resource ( " targets " , 
 - get ( " 1 " ) . response ( toJson ( resource1 ) ) , 
 - get ( " 2 " ) . response ( toJson ( resource2 ) ) 
 + get ( " 1 " ) . response ( json ( resource1 ) ) , 
 + get ( " 2 " ) . response ( json ( resource2 ) ) 
 ) ; 
 
 File file = folder . newFile ( ) ; 
 @ @ - 225 , 8 + 225 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - get ( " 1 " ) . request ( eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) ) . response ( toJson ( resource1 ) ) , 
 - get ( " 2 " ) . request ( eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) ) . response ( toJson ( resource2 ) ) 
 + get ( " 1 " ) . request ( eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) ) . response ( json ( resource1 ) ) , 
 + get ( " 2 " ) . request ( eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) ) . response ( json ( resource2 ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 262 , 7 + 262 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - get ( ) . request ( eq ( query ( " foo " ) , " bar " ) ) . response ( toJson ( ImmutableList . of ( resource1 , resource2 ) ) ) 
 + get ( ) . request ( eq ( query ( " foo " ) , " bar " ) ) . response ( json ( ImmutableList . of ( resource1 , resource2 ) ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 284 , 7 + 284 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource . message = " hello " ; 
 
 server . resource ( " targets " , 
 - get ( anyId ( ) ) . response ( toJson ( resource ) ) 
 + get ( anyId ( ) ) . response ( json ( resource ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 698 , 8 + 698 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 
 server . resource ( " targets " , 
 id ( " 1 " ) . name ( " sub " ) . settings ( 
 - get ( " 1 " ) . response ( toJson ( resource1 ) ) , 
 - get ( " 2 " ) . response ( toJson ( resource2 ) ) 
 + get ( " 1 " ) . response ( json ( resource1 ) ) , 
 + get ( " 2 " ) . response ( json ( resource2 ) ) 
 ) 
 ) ; 
 
 @ @ - 729 , 8 + 729 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 
 server . resource ( " targets " , 
 id ( anyId ( ) ) . name ( " sub " ) . settings ( 
 - get ( " 1 " ) . response ( toJson ( resource1 ) ) , 
 - get ( " 2 " ) . response ( toJson ( resource2 ) ) 
 + get ( " 1 " ) . response ( json ( resource1 ) ) , 
 + get ( " 2 " ) . response ( json ( resource2 ) ) 
 ) 
 ) ; 
 
 @ @ - 764 , 8 + 764 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - get ( " 1 " ) . response ( toJson ( resource1 ) ) , 
 - get ( " 2 " ) . response ( toJson ( resource2 ) ) 
 + get ( " 1 " ) . response ( json ( resource1 ) ) , 
 + get ( " 2 " ) . response ( json ( resource2 ) ) 
 ) ; 
 
 server . response ( " hello " ) ; 
 @ @ - 799 , 8 + 799 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 final RequestHit hit = requestHit ( ) ; 
 final RestServer server = restServer ( port ( ) , hit , log ( ) ) ; 
 server . resource ( " targets " , 
 - get ( " 1 " ) . response ( toJson ( resource1 ) ) , 
 - get ( " 2 " ) . response ( toJson ( resource2 ) ) 
 + get ( " 1 " ) . response ( json ( resource1 ) ) , 
 + get ( " 2 " ) . response ( json ( resource2 ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 index 07c1906 . . 7c64038 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicRequestMatcherFactory . java 
 @ @ - 19 , 7 + 19 , 7 @ @ import static com . github . dreamhead . moco . Moco . eq ; 
 import static com . github . dreamhead . moco . Moco . exist ; 
 import static com . github . dreamhead . moco . Moco . json ; 
 import static com . github . dreamhead . moco . Moco . not ; 
 - import static com . github . dreamhead . moco . Moco . toJson ; 
 + import static com . github . dreamhead . moco . Moco . json ; 
 import static com . google . common . collect . FluentIterable . from ; 
 
 public class DynamicRequestMatcherFactory extends Dynamics implements RequestMatcherFactory { 
 @ @ - 52 , 7 + 52 , 7 @ @ public class DynamicRequestMatcherFactory extends Dynamics implements RequestMat 
 
 private RequestMatcher createRequestMatcherFromValue ( final String name , final Object value ) { 
 if ( " json " . equalsIgnoreCase ( name ) ) { 
 - return by ( toJson ( value ) ) ; 
 + return by ( Moco . json ( value ) ) ; 
 } 
 
 if ( Map . class . isInstance ( value ) ) { 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 index d30eb6c . . 04ffe15 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 @ @ - 22 , 7 + 22 , 7 @ @ import static com . github . dreamhead . moco . Moco . attachment ; 
 import static com . github . dreamhead . moco . Moco . status ; 
 import static com . github . dreamhead . moco . Moco . template ; 
 import static com . github . dreamhead . moco . Moco . text ; 
 - import static com . github . dreamhead . moco . Moco . toJson ; 
 + import static com . github . dreamhead . moco . Moco . json ; 
 import static com . github . dreamhead . moco . Moco . var ; 
 import static com . github . dreamhead . moco . Moco . version ; 
 import static com . github . dreamhead . moco . Moco . with ; 
 @ @ - 75 , 7 + 75 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 
 private ResponseHandler createResponseHandler ( final String name , final Object value ) { 
 if ( " json " . equalsIgnoreCase ( name ) ) { 
 - return with ( toJson ( value ) ) ; 
 + return with ( json ( value ) ) ; 
 } 
 
 if ( isResource ( name ) & & TextContainer . class . isInstance ( value ) ) {

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoRest . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoRest . java 
 index fe59571 . . 3c4a160 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoRest . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoRest . java 
 @ @ - 1 , 9 + 1 , 11 @ @ 
 package com . github . dreamhead . moco ; 
 
 + import com . github . dreamhead . moco . handler . AndResponseHandler ; 
 import com . github . dreamhead . moco . monitor . QuietMonitor ; 
 import com . github . dreamhead . moco . rest . ActualRestServer ; 
 import com . github . dreamhead . moco . rest . GetAllRestSetting ; 
 import com . github . dreamhead . moco . rest . GetSingleRestSetting ; 
 + import com . github . dreamhead . moco . rest . PostRestSetting ; 
 import com . google . common . base . Optional ; 
 
 import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; 
 @ @ - 42 , 6 + 44 , 11 @ @ public final class MocoRest { 
 checkNotNull ( handler , " Get response handler should not be null " ) ) ; 
 } 
 
 + public static RestSetting post ( final ResponseHandler . . . handler ) { 
 + return new PostRestSetting ( AndResponseHandler . and ( handler ) ) ; 
 + } 
 + 
 + 
 private MocoRest ( ) { 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / PostRestSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / PostRestSetting . java 
 new file mode 100644 
 index 0000000 . . f7a051d 
 - - - / dev / null 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / PostRestSetting . java 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + package com . github . dreamhead . moco . rest ; 
 + 
 + import com . github . dreamhead . moco . ResponseHandler ; 
 + import com . github . dreamhead . moco . RestSetting ; 
 + 
 + public class PostRestSetting extends RestSetting { 
 + public PostRestSetting ( final ResponseHandler handler ) { 
 + super ( handler ) ; 
 + } 
 + } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java 
 index 9e83add . . 6eb4da0 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestHandler . java 
 @ @ - 27 , 6 + 27 , 7 @ @ public class RestHandler extends AbstractHttpResponseHandler { 
 private final ResponseHandler notFoundHandler ; 
 private final FluentIterable < GetAllRestSetting > getAllSettings ; 
 private final FluentIterable < GetSingleRestSetting > getSingleSettings ; 
 + private final FluentIterable < PostRestSetting > postSettings ; 
 
 public RestHandler ( final String name , final RestSetting . . . settings ) { 
 this . name = name ; 
 @ @ - 38 , 6 + 39 , 9 @ @ public class RestHandler extends AbstractHttpResponseHandler { 
 this . getSingleSettings = FluentIterable . of ( settings ) 
 . filter ( GetSingleRestSetting . class ) 
 . transform ( toInstance ( GetSingleRestSetting . class ) ) ; 
 + this . postSettings = FluentIterable . of ( settings ) 
 + . filter ( PostRestSetting . class ) 
 + . transform ( toInstance ( PostRestSetting . class ) ) ; 
 } 
 
 @ Override 
 @ @ - 47 , 9 + 51 , 26 @ @ public class RestHandler extends AbstractHttpResponseHandler { 
 return ; 
 } 
 
 + if ( " post " . equalsIgnoreCase ( httpRequest . getMethod ( ) ) ) { 
 + Optional < ResponseHandler > postHandler = getPostHandler ( httpRequest ) ; 
 + if ( postHandler . isPresent ( ) ) { 
 + postHandler . get ( ) . writeToResponse ( new SessionContext ( httpRequest , httpResponse ) ) ; 
 + return ; 
 + } 
 + } 
 + 
 throw new UnsupportedOperationException ( " Unsupported REST request " ) ; 
 } 
 
 + private Optional < ResponseHandler > getPostHandler ( final HttpRequest httpRequest ) { 
 + Optional < PostRestSetting > first = postSettings . first ( ) ; 
 + if ( first . isPresent ( ) ) { 
 + return Optional . of ( first . get ( ) . getHandler ( ) ) ; 
 + } 
 + return Optional . absent ( ) ; 
 + 
 + } 
 + 
 @ Override 
 @ SuppressWarnings ( " unchecked " ) 
 public ResponseHandler apply ( final MocoConfig config ) { 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 index 71cc230 . . b018f6e 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 @ @ - 24 , 7 + 24 , 10 @ @ import static com . github . dreamhead . moco . Moco . eq ; 
 import static com . github . dreamhead . moco . Moco . header ; 
 import static com . github . dreamhead . moco . Moco . log ; 
 import static com . github . dreamhead . moco . Moco . query ; 
 + import static com . github . dreamhead . moco . Moco . status ; 
 import static com . github . dreamhead . moco . Moco . toJson ; 
 + import static com . github . dreamhead . moco . MocoRest . get ; 
 + import static com . github . dreamhead . moco . MocoRest . post ; 
 import static com . github . dreamhead . moco . MocoRest . restServer ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; 
 @ @ - 56 , 8 + 59 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - MocoRest . get ( " 1 " , toJson ( resource1 ) ) , 
 - MocoRest . get ( " 2 " , toJson ( resource2 ) ) 
 + get ( " 1 " , toJson ( resource1 ) ) , 
 + get ( " 2 " , toJson ( resource2 ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 85 , 8 + 88 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - MocoRest . get ( " 1 " , toJson ( resource1 ) ) , 
 - MocoRest . get ( " 2 " , toJson ( resource2 ) ) 
 + get ( " 1 " , toJson ( resource1 ) ) , 
 + get ( " 2 " , toJson ( resource2 ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 128 , 8 + 131 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - MocoRest . get ( " 1 " , toJson ( resource1 ) ) , 
 - MocoRest . get ( " 2 " , toJson ( resource2 ) ) 
 + get ( " 1 " , toJson ( resource1 ) ) , 
 + get ( " 2 " , toJson ( resource2 ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 162 , 8 + 165 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " 0XBABE " ; 
 
 server . resource ( " targets " , 
 - MocoRest . get ( " 1 " , toJson ( resource1 ) ) , 
 - MocoRest . get ( " 2 " , toJson ( resource2 ) ) 
 + get ( " 1 " , toJson ( resource1 ) ) , 
 + get ( " 2 " , toJson ( resource2 ) ) 
 ) ; 
 
 File file = folder . newFile ( ) ; 
 @ @ - 192 , 8 + 195 , 8 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - MocoRest . get ( " 1 " , eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) , toJson ( resource1 ) ) , 
 - MocoRest . get ( " 2 " , eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) , toJson ( resource2 ) ) 
 + get ( " 1 " , eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) , toJson ( resource1 ) ) , 
 + get ( " 2 " , eq ( header ( HttpHeaders . CONTENT _ TYPE ) , " application / json " ) , toJson ( resource2 ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 220 , 7 + 223 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 
 @ Test 
 public void should _ query _ with _ condition ( ) throws Exception { 
 - RestServer server = restServer ( 12306 , log ( ) ) ; 
 + RestServer server = restServer ( 12306 ) ; 
 Plain resource1 = new Plain ( ) ; 
 resource1 . code = 1 ; 
 resource1 . message = " hello " ; 
 @ @ - 230 , 7 + 233 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 resource2 . message = " world " ; 
 
 server . resource ( " targets " , 
 - MocoRest . get ( eq ( query ( " foo " ) , " bar " ) , toJson ( ImmutableList . of ( resource1 , resource2 ) ) ) 
 + get ( eq ( query ( " foo " ) , " bar " ) , toJson ( ImmutableList . of ( resource1 , resource2 ) ) ) 
 ) ; 
 
 running ( server , new Runnable ( ) { 
 @ @ - 246 , 6 + 249 , 28 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 } ) ; 
 } 
 
 + @ Test 
 + public void should _ post ( ) throws Exception { 
 + RestServer server = restServer ( 12306 ) ; 
 + final Plain resource1 = new Plain ( ) ; 
 + resource1 . code = 1 ; 
 + resource1 . message = " hello " ; 
 + 
 + server . resource ( " targets " , 
 + post ( status ( 201 ) , header ( " Location " , " / targets / 123 " ) ) 
 + ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + HttpResponse httpResponse = helper . postForResponse ( remoteUrl ( " / targets " ) , 
 + mapper . writeValueAsString ( resource1 ) ) ; 
 + assertThat ( httpResponse . getStatusLine ( ) . getStatusCode ( ) , is ( 201 ) ) ; 
 + assertThat ( httpResponse . getFirstHeader ( " Location " ) . getValue ( ) , is ( " / targets / 123 " ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 private Plain getResource ( String uri ) throws IOException { 
 org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( uri ) ) ; 
 return asPlain ( response ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java 
 index 22b7190 . . 276ce1e 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java 
 @ @ - 95 , 6 + 95 , 14 @ @ public class MocoTestHelper { 
 return EXECUTOR . execute ( request ) . returnContent ( ) . asString ( ) ; 
 } 
 
 + public HttpResponse postForResponse ( final String url , String content ) throws IOException { 
 + Request request = Request . Post ( url ) 
 + . addHeader ( CONTENT _ TYPE , PLAIN _ TEXT _ UTF _ 8 . toString ( ) ) 
 + . bodyByteArray ( content . getBytes ( ) ) ; 
 + return EXECUTOR . execute ( request ) . returnResponse ( ) ; 
 + 
 + } 
 + 
 public String postStream ( String url , InputStream stream ) throws IOException { 
 return postBytes ( url , toByteArray ( stream ) ) ; 
 }
