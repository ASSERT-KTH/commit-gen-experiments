BLEU SCORE: 0.05341087579952926

TEST MSG: added missing final to watchers
GENERATED MSG: introduced Monitor interface

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CompositeWatcher . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CompositeWatcher . java <nl> index 9f8641e . . 8f8d2e9 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CompositeWatcher . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CompositeWatcher . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco . runner . watcher ; <nl> <nl> - public class CompositeWatcher implements Watcher { <nl> + public final class CompositeWatcher implements Watcher { <nl> private final Iterable < Watcher > watchers ; <nl> <nl> public CompositeWatcher ( final Iterable < Watcher > watchers ) { <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcher . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcher . java <nl> index eacad5c . . dc61621 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcher . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcher . java <nl> @ @ - 4 , 7 + 4 , 7 @ @ import com . google . common . base . Function ; <nl> <nl> import java . io . File ; <nl> <nl> - public class DefaultWatcher implements Watcher { <nl> + public final class DefaultWatcher implements Watcher { <nl> private final WatcherService service ; <nl> private final Function < File , Void > listener ; <nl> private final File file ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcherFactory . java <nl> index 0c7865d . . 09723e0 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcherFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcherFactory . java <nl> @ @ - 8 , 7 + 8 , 7 @ @ import java . io . IOException ; <nl> <nl> import static com . google . common . collect . FluentIterable . from ; <nl> <nl> - public class DefaultWatcherFactory implements FileWatcherFactory { <nl> + public final class DefaultWatcherFactory implements FileWatcherFactory { <nl> private WatcherService service = new WatcherService ( ) ; <nl> <nl> @ Override <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / ShutdownMocoRunnerWatcher . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / ShutdownMocoRunnerWatcher . java <nl> index 858aac1 . . d05f1df 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / ShutdownMocoRunnerWatcher . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / ShutdownMocoRunnerWatcher . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ import java . util . concurrent . Executors ; <nl> import static com . google . common . io . CharSource . wrap ; <nl> import static io . netty . channel . ChannelHandler . Sharable ; <nl> <nl> - public class ShutdownMocoRunnerWatcher implements Watcher { <nl> + public final class ShutdownMocoRunnerWatcher implements Watcher { <nl> private static Logger logger = LoggerFactory . getLogger ( ShutdownMocoRunnerWatcher . class ) ; <nl> private final MocoServer server = new MocoServer ( ) ; <nl> private final Optional < Integer > shutdownPort ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherFactory . java <nl> index a9713c6 . . 776669f 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherFactory . java <nl> @ @ - 10 , 7 + 10 , 7 @ @ import org . slf4j . LoggerFactory ; <nl> <nl> import java . io . File ; <nl> <nl> - public class WatcherFactory { <nl> + public final class WatcherFactory { <nl> private static Logger logger = LoggerFactory . getLogger ( WatcherFactory . class ) ; <nl> <nl> private FileWatcherFactory factory = new DefaultWatcherFactory ( ) ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java <nl> index 2c3147c . . 9a93205 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ import static com . google . common . collect . Maps . newHashMap ; <nl> import static com . sun . nio . file . SensitivityWatchEventModifier . HIGH ; <nl> import static java . nio . file . StandardWatchEventKinds . ENTRY _ MODIFY ; <nl> <nl> - public class WatcherService { <nl> + public final class WatcherService { <nl> private static Logger logger = LoggerFactory . getLogger ( WatcherService . class ) ; <nl> private static final long REGISTER _ INTERVAL = 1000 ; <nl> <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java <nl> index bee2d6e . . db1558f 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco . runner . watcher ; <nl> <nl> - public class Watchers { <nl> + public final class Watchers { <nl> public static Watcher threadSafe ( final Watcher watcher ) { <nl> return new ThreadSafeWatcher ( watcher ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java <nl> index dbbb363 . . e8d273e 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java <nl> @ @ - 9 , 7 + 9 , 7 @ @ import org . slf4j . LoggerFactory ; <nl> import java . io . File ; <nl> import java . io . FileFilter ; <nl> <nl> - public class FileMonitor { <nl> + public class FileMonitor implements Monitor { <nl> public static final int INTERVAL = 1000 ; <nl> private static Logger logger = LoggerFactory . getLogger ( FileMonitor . class ) ; <nl> <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java <nl> new file mode 100644 <nl> index 0000000 . . 33e9ace <nl> - - - / dev / null <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + package com . github . dreamhead . moco . runner ; <nl> + <nl> + public interface Monitor { <nl> + void startMonitor ( ) ; <nl> + void stopMonitor ( ) ; <nl> + } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java <nl> index 4741816 . . 7b60e20 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java <nl> @ @ - 11 , 7 + 11 , 7 @ @ import java . io . Reader ; <nl> import java . io . StringReader ; <nl> import java . nio . charset . Charset ; <nl> <nl> - public class ShutdownMonitor { <nl> + public class ShutdownMonitor implements Monitor { <nl> private final MocoServer server = new MocoServer ( ) ; <nl> private final int shutdownPort ; <nl> private final String shutdownKey ;

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CompositeWatcher . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CompositeWatcher . java 
 index 9f8641e . . 8f8d2e9 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CompositeWatcher . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CompositeWatcher . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . github . dreamhead . moco . runner . watcher ; 
 
 - public class CompositeWatcher implements Watcher { 
 + public final class CompositeWatcher implements Watcher { 
 private final Iterable < Watcher > watchers ; 
 
 public CompositeWatcher ( final Iterable < Watcher > watchers ) { 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcher . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcher . java 
 index eacad5c . . dc61621 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcher . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcher . java 
 @ @ - 4 , 7 + 4 , 7 @ @ import com . google . common . base . Function ; 
 
 import java . io . File ; 
 
 - public class DefaultWatcher implements Watcher { 
 + public final class DefaultWatcher implements Watcher { 
 private final WatcherService service ; 
 private final Function < File , Void > listener ; 
 private final File file ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcherFactory . java 
 index 0c7865d . . 09723e0 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcherFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / DefaultWatcherFactory . java 
 @ @ - 8 , 7 + 8 , 7 @ @ import java . io . IOException ; 
 
 import static com . google . common . collect . FluentIterable . from ; 
 
 - public class DefaultWatcherFactory implements FileWatcherFactory { 
 + public final class DefaultWatcherFactory implements FileWatcherFactory { 
 private WatcherService service = new WatcherService ( ) ; 
 
 @ Override 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / ShutdownMocoRunnerWatcher . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / ShutdownMocoRunnerWatcher . java 
 index 858aac1 . . d05f1df 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / ShutdownMocoRunnerWatcher . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / ShutdownMocoRunnerWatcher . java 
 @ @ - 19 , 7 + 19 , 7 @ @ import java . util . concurrent . Executors ; 
 import static com . google . common . io . CharSource . wrap ; 
 import static io . netty . channel . ChannelHandler . Sharable ; 
 
 - public class ShutdownMocoRunnerWatcher implements Watcher { 
 + public final class ShutdownMocoRunnerWatcher implements Watcher { 
 private static Logger logger = LoggerFactory . getLogger ( ShutdownMocoRunnerWatcher . class ) ; 
 private final MocoServer server = new MocoServer ( ) ; 
 private final Optional < Integer > shutdownPort ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherFactory . java 
 index a9713c6 . . 776669f 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherFactory . java 
 @ @ - 10 , 7 + 10 , 7 @ @ import org . slf4j . LoggerFactory ; 
 
 import java . io . File ; 
 
 - public class WatcherFactory { 
 + public final class WatcherFactory { 
 private static Logger logger = LoggerFactory . getLogger ( WatcherFactory . class ) ; 
 
 private FileWatcherFactory factory = new DefaultWatcherFactory ( ) ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java 
 index 2c3147c . . 9a93205 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / WatcherService . java 
 @ @ - 30 , 7 + 30 , 7 @ @ import static com . google . common . collect . Maps . newHashMap ; 
 import static com . sun . nio . file . SensitivityWatchEventModifier . HIGH ; 
 import static java . nio . file . StandardWatchEventKinds . ENTRY _ MODIFY ; 
 
 - public class WatcherService { 
 + public final class WatcherService { 
 private static Logger logger = LoggerFactory . getLogger ( WatcherService . class ) ; 
 private static final long REGISTER _ INTERVAL = 1000 ; 
 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java 
 index bee2d6e . . db1558f 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package com . github . dreamhead . moco . runner . watcher ; 
 
 - public class Watchers { 
 + public final class Watchers { 
 public static Watcher threadSafe ( final Watcher watcher ) { 
 return new ThreadSafeWatcher ( watcher ) ; 
 }

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java 
 index dbbb363 . . e8d273e 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java 
 @ @ - 9 , 7 + 9 , 7 @ @ import org . slf4j . LoggerFactory ; 
 import java . io . File ; 
 import java . io . FileFilter ; 
 
 - public class FileMonitor { 
 + public class FileMonitor implements Monitor { 
 public static final int INTERVAL = 1000 ; 
 private static Logger logger = LoggerFactory . getLogger ( FileMonitor . class ) ; 
 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java 
 new file mode 100644 
 index 0000000 . . 33e9ace 
 - - - / dev / null 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + package com . github . dreamhead . moco . runner ; 
 + 
 + public interface Monitor { 
 + void startMonitor ( ) ; 
 + void stopMonitor ( ) ; 
 + } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java 
 index 4741816 . . 7b60e20 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java 
 @ @ - 11 , 7 + 11 , 7 @ @ import java . io . Reader ; 
 import java . io . StringReader ; 
 import java . nio . charset . Charset ; 
 
 - public class ShutdownMonitor { 
 + public class ShutdownMonitor implements Monitor { 
 private final MocoServer server = new MocoServer ( ) ; 
 private final int shutdownPort ; 
 private final String shutdownKey ;
