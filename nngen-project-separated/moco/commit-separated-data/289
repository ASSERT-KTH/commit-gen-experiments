BLEU SCORE: 0.10682175159905853

TEST MSG: returned streams from runner setting
GENERATED MSG: tried to parse streams

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> index 025bd95 . . 6e96b1e 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> @ @ - 58 , 7 + 58 , 7 @ @ public final class JsonRunner implements Runner { <nl> final StartArgs startArgs ) { <nl> SocketServer socketServer = ActualSocketServer . createLogServer ( startArgs . getPort ( ) ) ; <nl> for ( RunnerSetting setting : settings ) { <nl> - SocketServer parsedServer = socketParser . parseServer ( of ( setting . getStream ( ) ) , startArgs . getPort ( ) , <nl> + SocketServer parsedServer = socketParser . parseServer ( setting . getStreams ( ) , startArgs . getPort ( ) , <nl> toConfigs ( setting ) ) ; <nl> socketServer = mergeServer ( socketServer , parsedServer ) ; <nl> } <nl> @ @ - 83 , 7 + 83 , 7 @ @ public final class JsonRunner implements Runner { <nl> HttpServer targetServer = createHttpServer ( startArgs ) ; <nl> <nl> for ( RunnerSetting setting : settings ) { <nl> - HttpServer parsedServer = httpParser . parseServer ( of ( setting . getStream ( ) ) , <nl> + HttpServer parsedServer = httpParser . parseServer ( setting . getStreams ( ) , <nl> startArgs . getPort ( ) , toConfigs ( setting ) ) ; <nl> targetServer = mergeServer ( targetServer , parsedServer ) ; <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java <nl> index 2dd43a0 . . 36e7d3a 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java <nl> @ @ - 5 , 6 + 5 , 7 @ @ import com . github . dreamhead . moco . MocoConfig ; <nl> import com . github . dreamhead . moco . parser . model . RequestSetting ; <nl> import com . github . dreamhead . moco . parser . model . ResponseSetting ; <nl> import com . google . common . base . Optional ; <nl> + import com . google . common . collect . ImmutableList ; <nl> <nl> import java . io . InputStream ; <nl> <nl> @ @ - 28 , 8 + 29 , 8 @ @ public final class RunnerSetting { <nl> this . fileRoot = fromNullable ( fileRoot ) ; <nl> } <nl> <nl> - public InputStream getStream ( ) { <nl> - return stream ; <nl> + public ImmutableList < InputStream > getStreams ( ) { <nl> + return ImmutableList . of ( stream ) ; <nl> } <nl> <nl> public Optional < MocoConfig > context ( ) {
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java <nl> index d9064a0 . . de5ba8a 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java <nl> @ @ - 5 , 6 + 5 , 7 @ @ import com . github . dreamhead . moco . parser . HttpServerParser ; <nl> import com . github . dreamhead . moco . parser . SocketServerParser ; <nl> import com . github . dreamhead . moco . resource . Resource ; <nl> import com . google . common . base . Optional ; <nl> + import com . google . common . collect . ImmutableList ; <nl> <nl> import java . io . InputStream ; <nl> <nl> @ @ - 52 , 11 + 53 , 11 @ @ public final class MocoJsonRunner { <nl> <nl> private static SocketServer jsonSocketServer ( final Resource resource , final Optional < Integer > port ) { <nl> SocketServerParser parser = new SocketServerParser ( ) ; <nl> - return parser . parseServer ( toStream ( checkNotNull ( resource , " resource should not be null " ) ) , port ) ; <nl> + return parser . parseServer ( ImmutableList . of ( toStream ( checkNotNull ( resource , " resource should not be null " ) ) ) , port ) ; <nl> } <nl> <nl> private static HttpServer parseHttpServer ( final Resource resource , final Optional < Integer > port ) { <nl> - return parser . parseServer ( toStream ( resource ) , port ) ; <nl> + return parser . parseServer ( ImmutableList . of ( toStream ( resource ) ) , port ) ; <nl> } <nl> <nl> private static InputStream toStream ( final Resource resource ) { <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> index e7e9dea . . 7c37a18 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java <nl> @ @ - 13 , 9 + 13 , 9 @ @ public abstract class BaseParser < T extends Server > implements Parser < T > { <nl> protected abstract T createServer ( final ImmutableList < SessionSetting > read , <nl> final Optional < Integer > port , final MocoConfig . . . configs ) ; <nl> <nl> - public T parseServer ( final InputStream is , final Optional < Integer > port , <nl> + public T parseServer ( final ImmutableList < InputStream > streams , final Optional < Integer > port , <nl> final MocoConfig . . . configs ) { <nl> - ImmutableList < SessionSetting > settings = Jsons . toObjects ( is , SessionSetting . class ) ; <nl> + ImmutableList < SessionSetting > settings = Jsons . toObjects ( streams , SessionSetting . class ) ; <nl> return createServer ( settings , port , configs ) ; <nl> } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / Parser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / Parser . java <nl> index c30e35e . . 9df474f 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / Parser . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / Parser . java <nl> @ @ - 7 , 5 + 7 , 4 @ @ import com . google . common . base . Optional ; <nl> import java . io . InputStream ; <nl> <nl> public interface Parser < T extends Server > { <nl> - T parseServer ( final InputStream is , final Optional < Integer > port , final MocoConfig . . . configs ) ; <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> index 88c5abd . . 025bd95 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ import static com . github . dreamhead . moco . Moco . uri ; <nl> import static com . github . dreamhead . moco . Moco . with ; <nl> import static com . github . dreamhead . moco . runner . RunnerSetting . aRunnerSetting ; <nl> import static com . google . common . collect . FluentIterable . from ; <nl> + import static com . google . common . collect . ImmutableList . of ; <nl> import static com . google . common . collect . Iterables . toArray ; <nl> <nl> public final class JsonRunner implements Runner { <nl> @ @ - 57 , 7 + 58 , 7 @ @ public final class JsonRunner implements Runner { <nl> final StartArgs startArgs ) { <nl> SocketServer socketServer = ActualSocketServer . createLogServer ( startArgs . getPort ( ) ) ; <nl> for ( RunnerSetting setting : settings ) { <nl> - SocketServer parsedServer = socketParser . parseServer ( setting . getStream ( ) , startArgs . getPort ( ) , <nl> + SocketServer parsedServer = socketParser . parseServer ( of ( setting . getStream ( ) ) , startArgs . getPort ( ) , <nl> toConfigs ( setting ) ) ; <nl> socketServer = mergeServer ( socketServer , parsedServer ) ; <nl> } <nl> @ @ - 82 , 7 + 83 , 7 @ @ public final class JsonRunner implements Runner { <nl> HttpServer targetServer = createHttpServer ( startArgs ) ; <nl> <nl> for ( RunnerSetting setting : settings ) { <nl> - HttpServer parsedServer = httpParser . parseServer ( setting . getStream ( ) , <nl> + HttpServer parsedServer = httpParser . parseServer ( of ( setting . getStream ( ) ) , <nl> startArgs . getPort ( ) , toConfigs ( setting ) ) ; <nl> targetServer = mergeServer ( targetServer , parsedServer ) ; <nl> }

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 index 025bd95 . . 6e96b1e 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 @ @ - 58 , 7 + 58 , 7 @ @ public final class JsonRunner implements Runner { 
 final StartArgs startArgs ) { 
 SocketServer socketServer = ActualSocketServer . createLogServer ( startArgs . getPort ( ) ) ; 
 for ( RunnerSetting setting : settings ) { 
 - SocketServer parsedServer = socketParser . parseServer ( of ( setting . getStream ( ) ) , startArgs . getPort ( ) , 
 + SocketServer parsedServer = socketParser . parseServer ( setting . getStreams ( ) , startArgs . getPort ( ) , 
 toConfigs ( setting ) ) ; 
 socketServer = mergeServer ( socketServer , parsedServer ) ; 
 } 
 @ @ - 83 , 7 + 83 , 7 @ @ public final class JsonRunner implements Runner { 
 HttpServer targetServer = createHttpServer ( startArgs ) ; 
 
 for ( RunnerSetting setting : settings ) { 
 - HttpServer parsedServer = httpParser . parseServer ( of ( setting . getStream ( ) ) , 
 + HttpServer parsedServer = httpParser . parseServer ( setting . getStreams ( ) , 
 startArgs . getPort ( ) , toConfigs ( setting ) ) ; 
 targetServer = mergeServer ( targetServer , parsedServer ) ; 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java 
 index 2dd43a0 . . 36e7d3a 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java 
 @ @ - 5 , 6 + 5 , 7 @ @ import com . github . dreamhead . moco . MocoConfig ; 
 import com . github . dreamhead . moco . parser . model . RequestSetting ; 
 import com . github . dreamhead . moco . parser . model . ResponseSetting ; 
 import com . google . common . base . Optional ; 
 + import com . google . common . collect . ImmutableList ; 
 
 import java . io . InputStream ; 
 
 @ @ - 28 , 8 + 29 , 8 @ @ public final class RunnerSetting { 
 this . fileRoot = fromNullable ( fileRoot ) ; 
 } 
 
 - public InputStream getStream ( ) { 
 - return stream ; 
 + public ImmutableList < InputStream > getStreams ( ) { 
 + return ImmutableList . of ( stream ) ; 
 } 
 
 public Optional < MocoConfig > context ( ) {

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java 
 index d9064a0 . . de5ba8a 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java 
 @ @ - 5 , 6 + 5 , 7 @ @ import com . github . dreamhead . moco . parser . HttpServerParser ; 
 import com . github . dreamhead . moco . parser . SocketServerParser ; 
 import com . github . dreamhead . moco . resource . Resource ; 
 import com . google . common . base . Optional ; 
 + import com . google . common . collect . ImmutableList ; 
 
 import java . io . InputStream ; 
 
 @ @ - 52 , 11 + 53 , 11 @ @ public final class MocoJsonRunner { 
 
 private static SocketServer jsonSocketServer ( final Resource resource , final Optional < Integer > port ) { 
 SocketServerParser parser = new SocketServerParser ( ) ; 
 - return parser . parseServer ( toStream ( checkNotNull ( resource , " resource should not be null " ) ) , port ) ; 
 + return parser . parseServer ( ImmutableList . of ( toStream ( checkNotNull ( resource , " resource should not be null " ) ) ) , port ) ; 
 } 
 
 private static HttpServer parseHttpServer ( final Resource resource , final Optional < Integer > port ) { 
 - return parser . parseServer ( toStream ( resource ) , port ) ; 
 + return parser . parseServer ( ImmutableList . of ( toStream ( resource ) ) , port ) ; 
 } 
 
 private static InputStream toStream ( final Resource resource ) { 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 index e7e9dea . . 7c37a18 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / BaseParser . java 
 @ @ - 13 , 9 + 13 , 9 @ @ public abstract class BaseParser < T extends Server > implements Parser < T > { 
 protected abstract T createServer ( final ImmutableList < SessionSetting > read , 
 final Optional < Integer > port , final MocoConfig . . . configs ) ; 
 
 - public T parseServer ( final InputStream is , final Optional < Integer > port , 
 + public T parseServer ( final ImmutableList < InputStream > streams , final Optional < Integer > port , 
 final MocoConfig . . . configs ) { 
 - ImmutableList < SessionSetting > settings = Jsons . toObjects ( is , SessionSetting . class ) ; 
 + ImmutableList < SessionSetting > settings = Jsons . toObjects ( streams , SessionSetting . class ) ; 
 return createServer ( settings , port , configs ) ; 
 } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / Parser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / Parser . java 
 index c30e35e . . 9df474f 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / Parser . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / Parser . java 
 @ @ - 7 , 5 + 7 , 4 @ @ import com . google . common . base . Optional ; 
 import java . io . InputStream ; 
 
 public interface Parser < T extends Server > { 
 - T parseServer ( final InputStream is , final Optional < Integer > port , final MocoConfig . . . configs ) ; 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 index 88c5abd . . 025bd95 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 @ @ - 24 , 6 + 24 , 7 @ @ import static com . github . dreamhead . moco . Moco . uri ; 
 import static com . github . dreamhead . moco . Moco . with ; 
 import static com . github . dreamhead . moco . runner . RunnerSetting . aRunnerSetting ; 
 import static com . google . common . collect . FluentIterable . from ; 
 + import static com . google . common . collect . ImmutableList . of ; 
 import static com . google . common . collect . Iterables . toArray ; 
 
 public final class JsonRunner implements Runner { 
 @ @ - 57 , 7 + 58 , 7 @ @ public final class JsonRunner implements Runner { 
 final StartArgs startArgs ) { 
 SocketServer socketServer = ActualSocketServer . createLogServer ( startArgs . getPort ( ) ) ; 
 for ( RunnerSetting setting : settings ) { 
 - SocketServer parsedServer = socketParser . parseServer ( setting . getStream ( ) , startArgs . getPort ( ) , 
 + SocketServer parsedServer = socketParser . parseServer ( of ( setting . getStream ( ) ) , startArgs . getPort ( ) , 
 toConfigs ( setting ) ) ; 
 socketServer = mergeServer ( socketServer , parsedServer ) ; 
 } 
 @ @ - 82 , 7 + 83 , 7 @ @ public final class JsonRunner implements Runner { 
 HttpServer targetServer = createHttpServer ( startArgs ) ; 
 
 for ( RunnerSetting setting : settings ) { 
 - HttpServer parsedServer = httpParser . parseServer ( setting . getStream ( ) , 
 + HttpServer parsedServer = httpParser . parseServer ( of ( setting . getStream ( ) ) , 
 startArgs . getPort ( ) , toConfigs ( setting ) ) ; 
 targetServer = mergeServer ( targetServer , parsedServer ) ; 
 }
