BLEU SCORE: 0.09535414040914189

TEST MSG: replaced wildcard with glob in Java 7 for mount
GENERATED MSG: added precondition check for mount

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java <nl> index ffd07a5 . . 983b51e 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java <nl> @ @ - 3 , 9 + 3 , 12 @ @ package com . github . dreamhead . moco ; <nl> import com . github . dreamhead . moco . mount . MountPredicate ; <nl> import com . github . dreamhead . moco . mount . MountTo ; <nl> <nl> + import java . nio . file . FileSystems ; <nl> + import java . nio . file . PathMatcher ; <nl> + import java . nio . file . Paths ; <nl> + <nl> import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; <nl> import static com . google . common . base . Preconditions . checkNotNull ; <nl> - import static org . apache . commons . io . FilenameUtils . wildcardMatch ; <nl> <nl> public final class MocoMount { <nl> public static MountTo to ( final String target ) { <nl> @ @ - 14 , 10 + 17 , 12 @ @ public final class MocoMount { <nl> <nl> public static MountPredicate include ( final String wildcard ) { <nl> checkNotNullOrEmpty ( wildcard , " Wildcard should not be null " ) ; <nl> + final PathMatcher matcher = FileSystems . getDefault ( ) . getPathMatcher ( " glob : " + wildcard ) ; <nl> + <nl> return new MountPredicate ( ) { <nl> @ Override <nl> public boolean apply ( final String filename ) { <nl> - return wildcardMatch ( filename , wildcard ) ; <nl> + return matcher . matches ( Paths . get ( filename ) ) ; <nl> } <nl> } ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java <nl> index e1f788f . . cf7ac39 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java <nl> @ @ - 3 , 14 + 3 , 17 @ @ package com . github . dreamhead . moco ; <nl> import com . github . dreamhead . moco . mount . MountPredicate ; <nl> import com . github . dreamhead . moco . mount . MountTo ; <nl> <nl> + import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; <nl> + import static com . google . common . base . Preconditions . checkNotNull ; <nl> import static org . apache . commons . io . FilenameUtils . wildcardMatch ; <nl> <nl> public class MocoMount { <nl> public static MountTo to ( final String target ) { <nl> - return new MountTo ( target ) ; <nl> + return new MountTo ( checkNotNullOrEmpty ( target , " Target should not be null " ) ) ; <nl> } <nl> <nl> public static MountPredicate include ( final String wildcard ) { <nl> + checkNotNullOrEmpty ( wildcard , " Wildcard should not be null " ) ; <nl> return new MountPredicate ( ) { <nl> @ Override <nl> public boolean apply ( String filename ) { <nl> @ @ - 20 , 10 + 23 , 11 @ @ public class MocoMount { <nl> } <nl> <nl> public static MountPredicate exclude ( final String wildcard ) { <nl> - return not ( include ( wildcard ) ) ; <nl> + return not ( include ( checkNotNullOrEmpty ( wildcard , " Wildcard should not be null " ) ) ) ; <nl> } <nl> <nl> private static MountPredicate not ( final MountPredicate predicate ) { <nl> + checkNotNull ( predicate ) ; <nl> return new MountPredicate ( ) { <nl> @ Override <nl> public boolean apply ( String filename ) {

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java 
 index ffd07a5 . . 983b51e 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java 
 @ @ - 3 , 9 + 3 , 12 @ @ package com . github . dreamhead . moco ; 
 import com . github . dreamhead . moco . mount . MountPredicate ; 
 import com . github . dreamhead . moco . mount . MountTo ; 
 
 + import java . nio . file . FileSystems ; 
 + import java . nio . file . PathMatcher ; 
 + import java . nio . file . Paths ; 
 + 
 import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; 
 import static com . google . common . base . Preconditions . checkNotNull ; 
 - import static org . apache . commons . io . FilenameUtils . wildcardMatch ; 
 
 public final class MocoMount { 
 public static MountTo to ( final String target ) { 
 @ @ - 14 , 10 + 17 , 12 @ @ public final class MocoMount { 
 
 public static MountPredicate include ( final String wildcard ) { 
 checkNotNullOrEmpty ( wildcard , " Wildcard should not be null " ) ; 
 + final PathMatcher matcher = FileSystems . getDefault ( ) . getPathMatcher ( " glob : " + wildcard ) ; 
 + 
 return new MountPredicate ( ) { 
 @ Override 
 public boolean apply ( final String filename ) { 
 - return wildcardMatch ( filename , wildcard ) ; 
 + return matcher . matches ( Paths . get ( filename ) ) ; 
 } 
 } ; 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java 
 index e1f788f . . cf7ac39 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java 
 @ @ - 3 , 14 + 3 , 17 @ @ package com . github . dreamhead . moco ; 
 import com . github . dreamhead . moco . mount . MountPredicate ; 
 import com . github . dreamhead . moco . mount . MountTo ; 
 
 + import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; 
 + import static com . google . common . base . Preconditions . checkNotNull ; 
 import static org . apache . commons . io . FilenameUtils . wildcardMatch ; 
 
 public class MocoMount { 
 public static MountTo to ( final String target ) { 
 - return new MountTo ( target ) ; 
 + return new MountTo ( checkNotNullOrEmpty ( target , " Target should not be null " ) ) ; 
 } 
 
 public static MountPredicate include ( final String wildcard ) { 
 + checkNotNullOrEmpty ( wildcard , " Wildcard should not be null " ) ; 
 return new MountPredicate ( ) { 
 @ Override 
 public boolean apply ( String filename ) { 
 @ @ - 20 , 10 + 23 , 11 @ @ public class MocoMount { 
 } 
 
 public static MountPredicate exclude ( final String wildcard ) { 
 - return not ( include ( wildcard ) ) ; 
 + return not ( include ( checkNotNullOrEmpty ( wildcard , " Wildcard should not be null " ) ) ) ; 
 } 
 
 private static MountPredicate not ( final MountPredicate predicate ) { 
 + checkNotNull ( predicate ) ; 
 return new MountPredicate ( ) { 
 @ Override 
 public boolean apply ( String filename ) {
