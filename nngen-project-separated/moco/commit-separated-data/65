BLEU SCORE: 0.06870636427700047

TEST MSG: added missing final to runner setting
GENERATED MSG: replaced stream with list in running setting

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java <nl> index a500f75 . . d1f0557 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java <nl> @ @ - 76 , 37 + 76 , 37 @ @ public final class RunnerSetting { <nl> private String context ; <nl> private String fileRoot ; <nl> <nl> - public Builder addStream ( final InputStream stream ) { <nl> + public final Builder addStream ( final InputStream stream ) { <nl> this . streams . add ( stream ) ; <nl> return this ; <nl> } <nl> <nl> - public Builder addStreams ( final ImmutableList < InputStream > streams ) { <nl> + public final Builder addStreams ( final ImmutableList < InputStream > streams ) { <nl> this . streams . addAll ( streams ) ; <nl> return this ; <nl> } <nl> <nl> - public Builder withRequest ( final RequestSetting request ) { <nl> + public final Builder withRequest ( final RequestSetting request ) { <nl> this . request = request ; <nl> return this ; <nl> } <nl> <nl> - public Builder withResponse ( final ResponseSetting response ) { <nl> + public final Builder withResponse ( final ResponseSetting response ) { <nl> this . response = response ; <nl> return this ; <nl> } <nl> <nl> - public Builder withContext ( final String context ) { <nl> + public final Builder withContext ( final String context ) { <nl> this . context = context ; <nl> return this ; <nl> } <nl> <nl> - public Builder withFileRoot ( final String fileRoot ) { <nl> + public final Builder withFileRoot ( final String fileRoot ) { <nl> this . fileRoot = fileRoot ; <nl> return this ; <nl> } <nl> <nl> - public RunnerSetting build ( ) { <nl> + public final RunnerSetting build ( ) { <nl> return new RunnerSetting ( streams . build ( ) , context , fileRoot , request , response ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java <nl> index 36e7d3a . . a913233 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java <nl> @ @ - 14 , 15 + 14 , 15 @ @ import static com . google . common . base . Optional . fromNullable ; <nl> import static com . google . common . base . Optional . of ; <nl> <nl> public final class RunnerSetting { <nl> - private InputStream stream ; <nl> + private final ImmutableList < InputStream > streams ; <nl> private final Optional < RequestSetting > request ; <nl> private final Optional < ResponseSetting > response ; <nl> private final Optional < String > context ; <nl> private final Optional < String > fileRoot ; <nl> <nl> - private RunnerSetting ( final InputStream stream , final String context , final String fileRoot , <nl> + private RunnerSetting ( final ImmutableList < InputStream > streams , final String context , final String fileRoot , <nl> final RequestSetting requestSetting , final ResponseSetting response ) { <nl> - this . stream = stream ; <nl> + this . streams = streams ; <nl> this . request = fromNullable ( requestSetting ) ; <nl> this . response = fromNullable ( response ) ; <nl> this . context = fromNullable ( context ) ; <nl> @ @ - 30 , 7 + 30 , 7 @ @ public final class RunnerSetting { <nl> } <nl> <nl> public ImmutableList < InputStream > getStreams ( ) { <nl> - return ImmutableList . of ( stream ) ; <nl> + return streams ; <nl> } <nl> <nl> public Optional < MocoConfig > context ( ) { <nl> @ @ - 102 , 7 + 102 , 7 @ @ public final class RunnerSetting { <nl> } <nl> <nl> public RunnerSetting build ( ) { <nl> - return new RunnerSetting ( stream , context , fileRoot , request , response ) ; <nl> + return new RunnerSetting ( ImmutableList . of ( stream ) , context , fileRoot , request , response ) ; <nl> } <nl> <nl> }

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java 
 index a500f75 . . d1f0557 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java 
 @ @ - 76 , 37 + 76 , 37 @ @ public final class RunnerSetting { 
 private String context ; 
 private String fileRoot ; 
 
 - public Builder addStream ( final InputStream stream ) { 
 + public final Builder addStream ( final InputStream stream ) { 
 this . streams . add ( stream ) ; 
 return this ; 
 } 
 
 - public Builder addStreams ( final ImmutableList < InputStream > streams ) { 
 + public final Builder addStreams ( final ImmutableList < InputStream > streams ) { 
 this . streams . addAll ( streams ) ; 
 return this ; 
 } 
 
 - public Builder withRequest ( final RequestSetting request ) { 
 + public final Builder withRequest ( final RequestSetting request ) { 
 this . request = request ; 
 return this ; 
 } 
 
 - public Builder withResponse ( final ResponseSetting response ) { 
 + public final Builder withResponse ( final ResponseSetting response ) { 
 this . response = response ; 
 return this ; 
 } 
 
 - public Builder withContext ( final String context ) { 
 + public final Builder withContext ( final String context ) { 
 this . context = context ; 
 return this ; 
 } 
 
 - public Builder withFileRoot ( final String fileRoot ) { 
 + public final Builder withFileRoot ( final String fileRoot ) { 
 this . fileRoot = fileRoot ; 
 return this ; 
 } 
 
 - public RunnerSetting build ( ) { 
 + public final RunnerSetting build ( ) { 
 return new RunnerSetting ( streams . build ( ) , context , fileRoot , request , response ) ; 
 } 


NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java 
 index 36e7d3a . . a913233 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerSetting . java 
 @ @ - 14 , 15 + 14 , 15 @ @ import static com . google . common . base . Optional . fromNullable ; 
 import static com . google . common . base . Optional . of ; 
 
 public final class RunnerSetting { 
 - private InputStream stream ; 
 + private final ImmutableList < InputStream > streams ; 
 private final Optional < RequestSetting > request ; 
 private final Optional < ResponseSetting > response ; 
 private final Optional < String > context ; 
 private final Optional < String > fileRoot ; 
 
 - private RunnerSetting ( final InputStream stream , final String context , final String fileRoot , 
 + private RunnerSetting ( final ImmutableList < InputStream > streams , final String context , final String fileRoot , 
 final RequestSetting requestSetting , final ResponseSetting response ) { 
 - this . stream = stream ; 
 + this . streams = streams ; 
 this . request = fromNullable ( requestSetting ) ; 
 this . response = fromNullable ( response ) ; 
 this . context = fromNullable ( context ) ; 
 @ @ - 30 , 7 + 30 , 7 @ @ public final class RunnerSetting { 
 } 
 
 public ImmutableList < InputStream > getStreams ( ) { 
 - return ImmutableList . of ( stream ) ; 
 + return streams ; 
 } 
 
 public Optional < MocoConfig > context ( ) { 
 @ @ - 102 , 7 + 102 , 7 @ @ public final class RunnerSetting { 
 } 
 
 public RunnerSetting build ( ) { 
 - return new RunnerSetting ( stream , context , fileRoot , request , response ) ; 
 + return new RunnerSetting ( ImmutableList . of ( stream ) , context , fileRoot , request , response ) ; 
 } 
 
 }
