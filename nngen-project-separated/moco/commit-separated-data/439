BLEU SCORE: 0.05816635421147513

TEST MSG: tried to split file container from text container for resource in dynamic response handler factory
GENERATED MSG: inlined file resource with file container interface

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> index 7a40773 . . 7fde1b9 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> @ @ - 18 , 9 + 18 , 7 @ @ import java . nio . charset . Charset ; <nl> import java . util . Map ; <nl> <nl> import static com . github . dreamhead . moco . Moco . attachment ; <nl> - import static com . github . dreamhead . moco . Moco . file ; <nl> import static com . github . dreamhead . moco . Moco . latency ; <nl> - import static com . github . dreamhead . moco . Moco . proxy ; <nl> import static com . github . dreamhead . moco . Moco . status ; <nl> import static com . github . dreamhead . moco . Moco . template ; <nl> import static com . github . dreamhead . moco . Moco . toJson ; <nl> @ @ - 174 , 6 + 172 , 13 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> } <nl> <nl> private Resource resourceFrom ( final String name , final TextContainer container ) { <nl> + if ( container . isFileContainer ( ) ) { <nl> + Optional < Resource > resource = fileResource ( name , FileContainer . class . cast ( container ) ) ; <nl> + if ( resource . isPresent ( ) ) { <nl> + return resource . get ( ) ; <nl> + } <nl> + } <nl> + <nl> if ( container . isRawText ( ) ) { <nl> return invokeTarget ( name , container . getText ( ) , Resource . class ) ; <nl> } <nl> @ @ - 186 , 17 + 191 , 18 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> return container . asTemplateResource ( name ) ; <nl> } <nl> <nl> - if ( container . isFileContainer ( ) ) { <nl> - Optional < Resource > resource = fileResource ( name , FileContainer . class . cast ( container ) ) ; <nl> - if ( resource . isPresent ( ) ) { <nl> - return resource . get ( ) ; <nl> - } <nl> - } <nl> - <nl> throw new IllegalArgumentException ( format ( " unknown operation [ % s ] " , container . getOperation ( ) ) ) ; <nl> } <nl> <nl> private Optional < Resource > fileResource ( final String name , final FileContainer fileContainer ) { <nl> + if ( fileContainer . isForTemplate ( ) ) { <nl> + if ( " version " . equalsIgnoreCase ( name ) ) { <nl> + return Optional . of ( version ( fileContainer . asTemplateResource ( ) ) ) ; <nl> + } <nl> + <nl> + return Optional . < Resource > of ( fileContainer . asTemplateResource ( name ) ) ; <nl> + } <nl> + <nl> TextContainer filename = fileContainer . getName ( ) ; <nl> if ( filename . isRawText ( ) ) { <nl> return Optional . of ( asResource ( name , fileContainer ) ) ;
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> index 37a15de . . 7a40773 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> @ @ - 187 , 7 + 187 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> } <nl> <nl> if ( container . isFileContainer ( ) ) { <nl> - Optional < Resource > resource = fileResource ( name , container ) ; <nl> + Optional < Resource > resource = fileResource ( name , FileContainer . class . cast ( container ) ) ; <nl> if ( resource . isPresent ( ) ) { <nl> return resource . get ( ) ; <nl> } <nl> @ @ - 196 , 8 + 196 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> throw new IllegalArgumentException ( format ( " unknown operation [ % s ] " , container . getOperation ( ) ) ) ; <nl> } <nl> <nl> - private Optional < Resource > fileResource ( final String name , final TextContainer container ) { <nl> - FileContainer fileContainer = FileContainer . class . cast ( container ) ; <nl> + private Optional < Resource > fileResource ( final String name , final FileContainer fileContainer ) { <nl> TextContainer filename = fileContainer . getName ( ) ; <nl> if ( filename . isRawText ( ) ) { <nl> return Optional . of ( asResource ( name , fileContainer ) ) ;

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 index 7a40773 . . 7fde1b9 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 @ @ - 18 , 9 + 18 , 7 @ @ import java . nio . charset . Charset ; 
 import java . util . Map ; 
 
 import static com . github . dreamhead . moco . Moco . attachment ; 
 - import static com . github . dreamhead . moco . Moco . file ; 
 import static com . github . dreamhead . moco . Moco . latency ; 
 - import static com . github . dreamhead . moco . Moco . proxy ; 
 import static com . github . dreamhead . moco . Moco . status ; 
 import static com . github . dreamhead . moco . Moco . template ; 
 import static com . github . dreamhead . moco . Moco . toJson ; 
 @ @ - 174 , 6 + 172 , 13 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 } 
 
 private Resource resourceFrom ( final String name , final TextContainer container ) { 
 + if ( container . isFileContainer ( ) ) { 
 + Optional < Resource > resource = fileResource ( name , FileContainer . class . cast ( container ) ) ; 
 + if ( resource . isPresent ( ) ) { 
 + return resource . get ( ) ; 
 + } 
 + } 
 + 
 if ( container . isRawText ( ) ) { 
 return invokeTarget ( name , container . getText ( ) , Resource . class ) ; 
 } 
 @ @ - 186 , 17 + 191 , 18 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 return container . asTemplateResource ( name ) ; 
 } 
 
 - if ( container . isFileContainer ( ) ) { 
 - Optional < Resource > resource = fileResource ( name , FileContainer . class . cast ( container ) ) ; 
 - if ( resource . isPresent ( ) ) { 
 - return resource . get ( ) ; 
 - } 
 - } 
 - 
 throw new IllegalArgumentException ( format ( " unknown operation [ % s ] " , container . getOperation ( ) ) ) ; 
 } 
 
 private Optional < Resource > fileResource ( final String name , final FileContainer fileContainer ) { 
 + if ( fileContainer . isForTemplate ( ) ) { 
 + if ( " version " . equalsIgnoreCase ( name ) ) { 
 + return Optional . of ( version ( fileContainer . asTemplateResource ( ) ) ) ; 
 + } 
 + 
 + return Optional . < Resource > of ( fileContainer . asTemplateResource ( name ) ) ; 
 + } 
 + 
 TextContainer filename = fileContainer . getName ( ) ; 
 if ( filename . isRawText ( ) ) { 
 return Optional . of ( asResource ( name , fileContainer ) ) ;

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 index 37a15de . . 7a40773 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 @ @ - 187 , 7 + 187 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 } 
 
 if ( container . isFileContainer ( ) ) { 
 - Optional < Resource > resource = fileResource ( name , container ) ; 
 + Optional < Resource > resource = fileResource ( name , FileContainer . class . cast ( container ) ) ; 
 if ( resource . isPresent ( ) ) { 
 return resource . get ( ) ; 
 } 
 @ @ - 196 , 8 + 196 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 throw new IllegalArgumentException ( format ( " unknown operation [ % s ] " , container . getOperation ( ) ) ) ; 
 } 
 
 - private Optional < Resource > fileResource ( final String name , final TextContainer container ) { 
 - FileContainer fileContainer = FileContainer . class . cast ( container ) ; 
 + private Optional < Resource > fileResource ( final String name , final FileContainer fileContainer ) { 
 TextContainer filename = fileContainer . getName ( ) ; 
 if ( filename . isRawText ( ) ) { 
 return Optional . of ( asResource ( name , fileContainer ) ) ;
