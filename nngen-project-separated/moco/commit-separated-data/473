BLEU SCORE: 0.04515183688171632

TEST MSG: changed merge server function to merge server to fix typo
GENERATED MSG: fixed context implementation for global setting and http server merge implementation

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> index 313d2b7 . . 1b3adc6 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ public class ActualHttpServer extends HttpConfiguration { <nl> return certificate ; <nl> } <nl> <nl> - public ActualHttpServer mergeHttpServer ( final ActualHttpServer thatServer ) { <nl> + public ActualHttpServer mergeServer ( final ActualHttpServer thatServer ) { <nl> ActualHttpServer newServer = newBaseServer ( this . getPort ( ) . or ( thatServer . getPort ( ) ) , <nl> this . certificate . or ( thatServer . certificate ) ) ; <nl> newServer . addSettings ( this . getSettings ( ) ) ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java <nl> index 4c7b5a4 . . 988b39a 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ public final class ActualSocketServer extends BaseActualServer < SocketResponseSet <nl> return baseSetting ; <nl> } <nl> <nl> - public SocketServer mergeHttpServer ( final ActualSocketServer thatServer ) { <nl> + public SocketServer mergeServer ( final ActualSocketServer thatServer ) { <nl> ActualSocketServer newServer = newBaseServer ( this . getPort ( ) . or ( thatServer . getPort ( ) ) ) ; <nl> newServer . addSettings ( this . getSettings ( ) ) ; <nl> newServer . addSettings ( thatServer . getSettings ( ) ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> index e3cc0b4 . . 1a35c87 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> <nl> @ Test <nl> public void should _ merge _ http _ server _ with _ any _ handler _ one _ side ( ) throws Exception { <nl> - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> <nl> @ Test ( expected = HttpResponseException . class ) <nl> public void should _ throw _ exception _ for _ merging _ http _ server _ with _ any _ handler _ one _ side ( ) throws Exception { <nl> - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 53 , 7 + 53 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> <nl> @ Test <nl> public void should _ merge _ http _ server _ with _ any _ handler _ other _ side ( ) throws Exception { <nl> - HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeHttpServer ( ( ActualHttpServer ) anotherServer ) ; <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeServer ( ( ActualHttpServer ) anotherServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 64 , 7 + 64 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> <nl> @ Test ( expected = HttpResponseException . class ) <nl> public void should _ throw _ for _ merging _ http _ server _ with _ any _ handler _ other _ side ( ) throws Exception { <nl> - HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeHttpServer ( ( ActualHttpServer ) anotherServer ) ; <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeServer ( ( ActualHttpServer ) anotherServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 77 , 7 + 77 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> public void should _ config _ handler _ correctly _ while _ merging ( ) throws Exception { <nl> httpServer = httpServer ( 12306 , fileRoot ( " src / test / resources " ) ) ; <nl> httpServer . response ( file ( " foo . response " ) ) ; <nl> - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; <nl> <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> @ @ - 91 , 7 + 91 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> public void should _ config _ handler _ correctly _ other _ side _ while _ merging ( ) throws Exception { <nl> httpServer = httpServer ( 12306 , fileRoot ( " src / test / resources " ) ) ; <nl> httpServer . response ( file ( " foo . response " ) ) ; <nl> - HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeHttpServer ( ( ActualHttpServer ) anotherServer ) ; <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeServer ( ( ActualHttpServer ) anotherServer ) ; <nl> <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> @ @ - 106 , 7 + 106 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> @ Test <nl> public void should _ merge _ https _ server ( ) throws Exception { <nl> anotherServer = httpsServer ( 12306 , DEFAULT _ CERTIFICATE , context ( " / bar " ) ) ; <nl> - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 121 , 7 + 121 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> httpServer . response ( " foo " ) ; <nl> anotherServer = httpsServer ( 12306 , DEFAULT _ CERTIFICATE , context ( " / bar " ) ) ; <nl> anotherServer . request ( by ( uri ( " / bar " ) ) ) . response ( " bar " ) ; <nl> - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 135 , 7 + 135 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> public void should _ merge _ https _ server _ into _ http _ server ( ) throws Exception { <nl> httpServer = httpsServer ( 12306 , DEFAULT _ CERTIFICATE , context ( " / foo " ) ) ; <nl> httpServer . response ( " foo " ) ; <nl> - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 148 , 7 + 148 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> public void should _ merge _ http _ server _ with _ same _ port ( ) throws Exception { <nl> httpServer = httpServer ( 12306 , context ( " / foo " ) ) ; <nl> anotherServer = httpServer ( 12306 , context ( " / bar " ) ) ; <nl> - final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 161 , 7 + 161 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> public void should _ merge _ http _ server _ with _ different _ port ( ) throws Exception { <nl> httpServer = httpServer ( 12306 , context ( " / foo " ) ) ; <nl> anotherServer = httpServer ( 12307 , context ( " / bar " ) ) ; <nl> - final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 174 , 7 + 174 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> public void should _ merge _ http _ server _ without _ port _ for _ first _ server ( ) throws Exception { <nl> httpServer = httpServer ( 12306 , context ( " / foo " ) ) ; <nl> anotherServer = httpServer ( context ( " / bar " ) ) ; <nl> - final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 187 , 7 + 187 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> public void should _ merge _ http _ server _ without _ port _ for _ second _ server ( ) throws Exception { <nl> httpServer = httpServer ( context ( " / foo " ) ) ; <nl> anotherServer = httpServer ( 12307 , context ( " / bar " ) ) ; <nl> - final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> @ @ - 200 , 7 + 200 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> public void should _ merge _ http _ server _ without _ port _ for _ both _ servers ( ) throws Exception { <nl> httpServer = httpServer ( context ( " / foo " ) ) ; <nl> anotherServer = httpServer ( context ( " / bar " ) ) ; <nl> - final ActualHttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + final ActualHttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; <nl> assertThat ( mergedServer . getPort ( ) . isPresent ( ) , is ( false ) ) ; <nl> } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java <nl> index 37d3e15 . . 9bed046 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ public final class MocoJsonRunner { <nl> final HttpsCertificate certificate ) { <nl> checkNotNull ( certificate , " Certificate should not be null " ) ; <nl> ActualHttpServer httpsServer = ( ActualHttpServer ) Moco . httpsServer ( certificate ) ; <nl> - return httpsServer . mergeHttpServer ( ( ActualHttpServer ) jsonHttpServer ( <nl> + return httpsServer . mergeServer ( ( ActualHttpServer ) jsonHttpServer ( <nl> checkNotNull ( resource , " resource should not be null " ) ) ) ; <nl> } <nl> <nl> @ @ - 35 , 7 + 35 , 7 @ @ public final class MocoJsonRunner { <nl> checkArgument ( port > 0 , " Port must be greater than zero " ) ; <nl> checkNotNull ( certificate , " Certificate should not be null " ) ; <nl> ActualHttpServer httpsServer = ( ActualHttpServer ) Moco . httpsServer ( port , certificate ) ; <nl> - return httpsServer . mergeHttpServer ( ( ActualHttpServer ) jsonHttpServer ( port , <nl> + return httpsServer . mergeServer ( ( ActualHttpServer ) jsonHttpServer ( port , <nl> checkNotNull ( resource , " resource should not be null " ) ) ) ; <nl> } <nl> <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java <nl> index b58b1a7 . . a9528c3 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ public class HttpServerParser extends BaseParser < HttpServer > { <nl> <nl> for ( SessionSetting session : sessionSettings ) { <nl> logger . debug ( " Parse session : { } " , session ) ; <nl> - targetServer = targetServer . mergeHttpServer ( session . newHttpServer ( port , configs ) ) ; <nl> + targetServer = targetServer . mergeServer ( session . newHttpServer ( port , configs ) ) ; <nl> } <nl> <nl> return targetServer ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> index 8c512b0 . . c9d119f 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> @ @ - 67 , 7 + 67 , 7 @ @ public final class JsonRunner implements Runner { <nl> <nl> private SocketServer mergeServer ( final SocketServer socketServer , final SocketServer parsedServer ) { <nl> ActualSocketServer thisServer = ( ActualSocketServer ) socketServer ; <nl> - return thisServer . mergeHttpServer ( ( ActualSocketServer ) parsedServer ) ; <nl> + return thisServer . mergeServer ( ( ActualSocketServer ) parsedServer ) ; <nl> } <nl> <nl> private HttpServer createHttpServer ( final Iterable < ? extends RunnerSetting > settings , final StartArgs startArgs ) { <nl> @ @ - 117 , 7 + 117 , 7 @ @ public final class JsonRunner implements Runner { <nl> <nl> private HttpServer mergeServer ( final HttpServer server , final HttpServer parsedServer ) { <nl> ActualHttpServer thisServer = ( ActualHttpServer ) server ; <nl> - return thisServer . mergeHttpServer ( ( ActualHttpServer ) parsedServer ) ; <nl> + return thisServer . mergeServer ( ( ActualHttpServer ) parsedServer ) ; <nl> } <nl> <nl> public static JsonRunner newJsonRunnerWithStreams ( final Iterable < ? extends InputStream > streams ,
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java <nl> index e18f37a . . c83493e 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java <nl> @ @ - 19 , 6 + 19 , 10 @ @ public abstract class ResponseSetting { <nl> } <nl> <nl> public void response ( ResponseHandler handler ) { <nl> + if ( handler = = null ) { <nl> + return ; <nl> + } <nl> + <nl> if ( this . handler ! = null ) { <nl> throw new RuntimeException ( " handler has already been set " ) ; <nl> } <nl> @ @ - 35 , 6 + 39 , 6 @ @ public abstract class ResponseSetting { <nl> } <nl> <nl> protected static RequestMatcher context ( String context ) { <nl> - return match ( uri ( context + " \ \ w * " ) ) ; <nl> + return match ( uri ( context + " . * " ) ) ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> index 5536707 . . 9811d3a 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> @ @ - 54 , 15 + 54 , 19 @ @ public class ActualHttpServer extends HttpServer { <nl> newServer . addSettings ( settings ) ; <nl> newServer . addSettings ( thatServer . getSettings ( ) ) ; <nl> <nl> - newServer . response ( this . handler ) ; <nl> - newServer . matcher = configItem ( this . matcher , this . configs ) ; <nl> - <nl> - newServer . response ( thatServer . handler ) ; <nl> - newServer . matcher = configItem ( thatServer . matcher , thatServer . configs ) ; <nl> + newServer . anySetting ( configItem ( this . matcher , this . configs ) , this . handler ) ; <nl> + newServer . anySetting ( configItem ( thatServer . matcher , thatServer . configs ) , thatServer . handler ) ; <nl> <nl> return newServer ; <nl> } <nl> <nl> + private void anySetting ( RequestMatcher matcher , ResponseHandler handler ) { <nl> + this . response ( handler ) ; <nl> + if ( handler ! = null ) { <nl> + this . matcher = matcher ; <nl> + } <nl> + } <nl> + <nl> private void addSettings ( List < BaseSetting > thatSettings ) { <nl> for ( BaseSetting thatSetting : thatSettings ) { <nl> addSetting ( thatSetting ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> index 092175d . . fdd42d8 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import com . github . dreamhead . moco . AbstractMocoTest ; <nl> import com . github . dreamhead . moco . HttpServer ; <nl> import com . github . dreamhead . moco . Runnable ; <nl> import org . apache . http . client . HttpResponseException ; <nl> + import org . junit . Before ; <nl> import org . junit . Test ; <nl> <nl> import static com . github . dreamhead . moco . Moco . context ; <nl> @ @ - 14 , 17 + 15 , 57 @ @ import static org . hamcrest . CoreMatchers . is ; <nl> import static org . junit . Assert . assertThat ; <nl> <nl> public class ActualHttpServerTest extends AbstractMocoTest { <nl> - @ Test ( expected = HttpResponseException . class ) <nl> - public void should _ merge _ http _ server _ correctly ( ) throws Exception { <nl> - HttpServer httpServer = httpserver ( 12306 , context ( " / foo " ) ) ; <nl> + private HttpServer httpServer ; <nl> + private HttpServer anotherServer ; <nl> + <nl> + @ Before <nl> + public void setUp ( ) throws Exception { <nl> + super . setUp ( ) ; <nl> + httpServer = httpserver ( 12306 , context ( " / foo " ) ) ; <nl> httpServer . response ( " foo " ) ; <nl> + anotherServer = httpserver ( 12306 , context ( " / bar " ) ) ; <nl> + } <nl> <nl> - HttpServer anotherServer = httpserver ( 12306 , context ( " / bar " ) ) ; <nl> + @ Test <nl> + public void should _ merge _ http _ server _ with _ any _ handler _ one _ side ( ) throws Exception { <nl> HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> running ( mergedServer , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> assertThat ( helper . get ( remoteUrl ( " / foo / anything " ) ) , is ( " foo " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + @ Test ( expected = HttpResponseException . class ) <nl> + public void should _ throw _ exception _ for _ merging _ http _ server _ with _ any _ handler _ one _ side ( ) throws Exception { <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + running ( mergedServer , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + helper . get ( remoteUrl ( " / bar / anything " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + <nl> + @ Test <nl> + public void should _ merge _ http _ server _ with _ any _ handler _ other _ side ( ) throws Exception { <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeHttpServer ( ( ActualHttpServer ) anotherServer ) ; <nl> + running ( mergedServer , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + assertThat ( helper . get ( remoteUrl ( " / foo / anything " ) ) , is ( " foo " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + @ Test ( expected = HttpResponseException . class ) <nl> + public void should _ throw _ for _ merging _ http _ server _ with _ any _ handler _ other _ side ( ) throws Exception { <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeHttpServer ( ( ActualHttpServer ) anotherServer ) ; <nl> + running ( mergedServer , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> helper . get ( remoteUrl ( " / bar / anything " ) ) ; <nl> } <nl> } ) ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 index 313d2b7 . . 1b3adc6 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 @ @ - 30 , 7 + 30 , 7 @ @ public class ActualHttpServer extends HttpConfiguration { 
 return certificate ; 
 } 
 
 - public ActualHttpServer mergeHttpServer ( final ActualHttpServer thatServer ) { 
 + public ActualHttpServer mergeServer ( final ActualHttpServer thatServer ) { 
 ActualHttpServer newServer = newBaseServer ( this . getPort ( ) . or ( thatServer . getPort ( ) ) , 
 this . certificate . or ( thatServer . certificate ) ) ; 
 newServer . addSettings ( this . getSettings ( ) ) ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java 
 index 4c7b5a4 . . 988b39a 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualSocketServer . java 
 @ @ - 30 , 7 + 30 , 7 @ @ public final class ActualSocketServer extends BaseActualServer < SocketResponseSet 
 return baseSetting ; 
 } 
 
 - public SocketServer mergeHttpServer ( final ActualSocketServer thatServer ) { 
 + public SocketServer mergeServer ( final ActualSocketServer thatServer ) { 
 ActualSocketServer newServer = newBaseServer ( this . getPort ( ) . or ( thatServer . getPort ( ) ) ) ; 
 newServer . addSettings ( this . getSettings ( ) ) ; 
 newServer . addSettings ( thatServer . getSettings ( ) ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 index e3cc0b4 . . 1a35c87 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 @ @ - 31 , 7 + 31 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 
 @ Test 
 public void should _ merge _ http _ server _ with _ any _ handler _ one _ side ( ) throws Exception { 
 - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 42 , 7 + 42 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 
 @ Test ( expected = HttpResponseException . class ) 
 public void should _ throw _ exception _ for _ merging _ http _ server _ with _ any _ handler _ one _ side ( ) throws Exception { 
 - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 53 , 7 + 53 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 
 @ Test 
 public void should _ merge _ http _ server _ with _ any _ handler _ other _ side ( ) throws Exception { 
 - HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeHttpServer ( ( ActualHttpServer ) anotherServer ) ; 
 + HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeServer ( ( ActualHttpServer ) anotherServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 64 , 7 + 64 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 
 @ Test ( expected = HttpResponseException . class ) 
 public void should _ throw _ for _ merging _ http _ server _ with _ any _ handler _ other _ side ( ) throws Exception { 
 - HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeHttpServer ( ( ActualHttpServer ) anotherServer ) ; 
 + HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeServer ( ( ActualHttpServer ) anotherServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 77 , 7 + 77 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 public void should _ config _ handler _ correctly _ while _ merging ( ) throws Exception { 
 httpServer = httpServer ( 12306 , fileRoot ( " src / test / resources " ) ) ; 
 httpServer . response ( file ( " foo . response " ) ) ; 
 - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; 
 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 @ @ - 91 , 7 + 91 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 public void should _ config _ handler _ correctly _ other _ side _ while _ merging ( ) throws Exception { 
 httpServer = httpServer ( 12306 , fileRoot ( " src / test / resources " ) ) ; 
 httpServer . response ( file ( " foo . response " ) ) ; 
 - HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeHttpServer ( ( ActualHttpServer ) anotherServer ) ; 
 + HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeServer ( ( ActualHttpServer ) anotherServer ) ; 
 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 @ @ - 106 , 7 + 106 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 @ Test 
 public void should _ merge _ https _ server ( ) throws Exception { 
 anotherServer = httpsServer ( 12306 , DEFAULT _ CERTIFICATE , context ( " / bar " ) ) ; 
 - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 121 , 7 + 121 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 httpServer . response ( " foo " ) ; 
 anotherServer = httpsServer ( 12306 , DEFAULT _ CERTIFICATE , context ( " / bar " ) ) ; 
 anotherServer . request ( by ( uri ( " / bar " ) ) ) . response ( " bar " ) ; 
 - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 135 , 7 + 135 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 public void should _ merge _ https _ server _ into _ http _ server ( ) throws Exception { 
 httpServer = httpsServer ( 12306 , DEFAULT _ CERTIFICATE , context ( " / foo " ) ) ; 
 httpServer . response ( " foo " ) ; 
 - HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 148 , 7 + 148 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 public void should _ merge _ http _ server _ with _ same _ port ( ) throws Exception { 
 httpServer = httpServer ( 12306 , context ( " / foo " ) ) ; 
 anotherServer = httpServer ( 12306 , context ( " / bar " ) ) ; 
 - final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 161 , 7 + 161 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 public void should _ merge _ http _ server _ with _ different _ port ( ) throws Exception { 
 httpServer = httpServer ( 12306 , context ( " / foo " ) ) ; 
 anotherServer = httpServer ( 12307 , context ( " / bar " ) ) ; 
 - final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 174 , 7 + 174 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 public void should _ merge _ http _ server _ without _ port _ for _ first _ server ( ) throws Exception { 
 httpServer = httpServer ( 12306 , context ( " / foo " ) ) ; 
 anotherServer = httpServer ( context ( " / bar " ) ) ; 
 - final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 187 , 7 + 187 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 public void should _ merge _ http _ server _ without _ port _ for _ second _ server ( ) throws Exception { 
 httpServer = httpServer ( context ( " / foo " ) ) ; 
 anotherServer = httpServer ( 12307 , context ( " / bar " ) ) ; 
 - final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 @ @ - 200 , 7 + 200 , 7 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 public void should _ merge _ http _ server _ without _ port _ for _ both _ servers ( ) throws Exception { 
 httpServer = httpServer ( context ( " / foo " ) ) ; 
 anotherServer = httpServer ( context ( " / bar " ) ) ; 
 - final ActualHttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + final ActualHttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeServer ( ( ActualHttpServer ) httpServer ) ; 
 assertThat ( mergedServer . getPort ( ) . isPresent ( ) , is ( false ) ) ; 
 } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java 
 index 37d3e15 . . 9bed046 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / MocoJsonRunner . java 
 @ @ - 26 , 7 + 26 , 7 @ @ public final class MocoJsonRunner { 
 final HttpsCertificate certificate ) { 
 checkNotNull ( certificate , " Certificate should not be null " ) ; 
 ActualHttpServer httpsServer = ( ActualHttpServer ) Moco . httpsServer ( certificate ) ; 
 - return httpsServer . mergeHttpServer ( ( ActualHttpServer ) jsonHttpServer ( 
 + return httpsServer . mergeServer ( ( ActualHttpServer ) jsonHttpServer ( 
 checkNotNull ( resource , " resource should not be null " ) ) ) ; 
 } 
 
 @ @ - 35 , 7 + 35 , 7 @ @ public final class MocoJsonRunner { 
 checkArgument ( port > 0 , " Port must be greater than zero " ) ; 
 checkNotNull ( certificate , " Certificate should not be null " ) ; 
 ActualHttpServer httpsServer = ( ActualHttpServer ) Moco . httpsServer ( port , certificate ) ; 
 - return httpsServer . mergeHttpServer ( ( ActualHttpServer ) jsonHttpServer ( port , 
 + return httpsServer . mergeServer ( ( ActualHttpServer ) jsonHttpServer ( port , 
 checkNotNull ( resource , " resource should not be null " ) ) ) ; 
 } 
 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java 
 index b58b1a7 . . a9528c3 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java 
 @ @ - 20 , 7 + 20 , 7 @ @ public class HttpServerParser extends BaseParser < HttpServer > { 
 
 for ( SessionSetting session : sessionSettings ) { 
 logger . debug ( " Parse session : { } " , session ) ; 
 - targetServer = targetServer . mergeHttpServer ( session . newHttpServer ( port , configs ) ) ; 
 + targetServer = targetServer . mergeServer ( session . newHttpServer ( port , configs ) ) ; 
 } 
 
 return targetServer ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 index 8c512b0 . . c9d119f 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 @ @ - 67 , 7 + 67 , 7 @ @ public final class JsonRunner implements Runner { 
 
 private SocketServer mergeServer ( final SocketServer socketServer , final SocketServer parsedServer ) { 
 ActualSocketServer thisServer = ( ActualSocketServer ) socketServer ; 
 - return thisServer . mergeHttpServer ( ( ActualSocketServer ) parsedServer ) ; 
 + return thisServer . mergeServer ( ( ActualSocketServer ) parsedServer ) ; 
 } 
 
 private HttpServer createHttpServer ( final Iterable < ? extends RunnerSetting > settings , final StartArgs startArgs ) { 
 @ @ - 117 , 7 + 117 , 7 @ @ public final class JsonRunner implements Runner { 
 
 private HttpServer mergeServer ( final HttpServer server , final HttpServer parsedServer ) { 
 ActualHttpServer thisServer = ( ActualHttpServer ) server ; 
 - return thisServer . mergeHttpServer ( ( ActualHttpServer ) parsedServer ) ; 
 + return thisServer . mergeServer ( ( ActualHttpServer ) parsedServer ) ; 
 } 
 
 public static JsonRunner newJsonRunnerWithStreams ( final Iterable < ? extends InputStream > streams ,

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java 
 index e18f37a . . c83493e 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseSetting . java 
 @ @ - 19 , 6 + 19 , 10 @ @ public abstract class ResponseSetting { 
 } 
 
 public void response ( ResponseHandler handler ) { 
 + if ( handler = = null ) { 
 + return ; 
 + } 
 + 
 if ( this . handler ! = null ) { 
 throw new RuntimeException ( " handler has already been set " ) ; 
 } 
 @ @ - 35 , 6 + 39 , 6 @ @ public abstract class ResponseSetting { 
 } 
 
 protected static RequestMatcher context ( String context ) { 
 - return match ( uri ( context + " \ \ w * " ) ) ; 
 + return match ( uri ( context + " . * " ) ) ; 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 index 5536707 . . 9811d3a 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 @ @ - 54 , 15 + 54 , 19 @ @ public class ActualHttpServer extends HttpServer { 
 newServer . addSettings ( settings ) ; 
 newServer . addSettings ( thatServer . getSettings ( ) ) ; 
 
 - newServer . response ( this . handler ) ; 
 - newServer . matcher = configItem ( this . matcher , this . configs ) ; 
 - 
 - newServer . response ( thatServer . handler ) ; 
 - newServer . matcher = configItem ( thatServer . matcher , thatServer . configs ) ; 
 + newServer . anySetting ( configItem ( this . matcher , this . configs ) , this . handler ) ; 
 + newServer . anySetting ( configItem ( thatServer . matcher , thatServer . configs ) , thatServer . handler ) ; 
 
 return newServer ; 
 } 
 
 + private void anySetting ( RequestMatcher matcher , ResponseHandler handler ) { 
 + this . response ( handler ) ; 
 + if ( handler ! = null ) { 
 + this . matcher = matcher ; 
 + } 
 + } 
 + 
 private void addSettings ( List < BaseSetting > thatSettings ) { 
 for ( BaseSetting thatSetting : thatSettings ) { 
 addSetting ( thatSetting ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 index 092175d . . fdd42d8 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import com . github . dreamhead . moco . AbstractMocoTest ; 
 import com . github . dreamhead . moco . HttpServer ; 
 import com . github . dreamhead . moco . Runnable ; 
 import org . apache . http . client . HttpResponseException ; 
 + import org . junit . Before ; 
 import org . junit . Test ; 
 
 import static com . github . dreamhead . moco . Moco . context ; 
 @ @ - 14 , 17 + 15 , 57 @ @ import static org . hamcrest . CoreMatchers . is ; 
 import static org . junit . Assert . assertThat ; 
 
 public class ActualHttpServerTest extends AbstractMocoTest { 
 - @ Test ( expected = HttpResponseException . class ) 
 - public void should _ merge _ http _ server _ correctly ( ) throws Exception { 
 - HttpServer httpServer = httpserver ( 12306 , context ( " / foo " ) ) ; 
 + private HttpServer httpServer ; 
 + private HttpServer anotherServer ; 
 + 
 + @ Before 
 + public void setUp ( ) throws Exception { 
 + super . setUp ( ) ; 
 + httpServer = httpserver ( 12306 , context ( " / foo " ) ) ; 
 httpServer . response ( " foo " ) ; 
 + anotherServer = httpserver ( 12306 , context ( " / bar " ) ) ; 
 + } 
 
 - HttpServer anotherServer = httpserver ( 12306 , context ( " / bar " ) ) ; 
 + @ Test 
 + public void should _ merge _ http _ server _ with _ any _ handler _ one _ side ( ) throws Exception { 
 HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 running ( mergedServer , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 assertThat ( helper . get ( remoteUrl ( " / foo / anything " ) ) , is ( " foo " ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Test ( expected = HttpResponseException . class ) 
 + public void should _ throw _ exception _ for _ merging _ http _ server _ with _ any _ handler _ one _ side ( ) throws Exception { 
 + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + running ( mergedServer , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + helper . get ( remoteUrl ( " / bar / anything " ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + 
 + @ Test 
 + public void should _ merge _ http _ server _ with _ any _ handler _ other _ side ( ) throws Exception { 
 + HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeHttpServer ( ( ActualHttpServer ) anotherServer ) ; 
 + running ( mergedServer , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + assertThat ( helper . get ( remoteUrl ( " / foo / anything " ) ) , is ( " foo " ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Test ( expected = HttpResponseException . class ) 
 + public void should _ throw _ for _ merging _ http _ server _ with _ any _ handler _ other _ side ( ) throws Exception { 
 + HttpServer mergedServer = ( ( ActualHttpServer ) httpServer ) . mergeHttpServer ( ( ActualHttpServer ) anotherServer ) ; 
 + running ( mergedServer , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 helper . get ( remoteUrl ( " / bar / anything " ) ) ; 
 } 
 } ) ;
