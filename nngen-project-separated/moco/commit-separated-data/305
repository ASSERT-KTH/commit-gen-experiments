BLEU SCORE: 0.05341087579952926

TEST MSG: moved interval to its place
GENERATED MSG: introduced Monitor interface

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CommonsIoWatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CommonsIoWatcherFactory . java <nl> index 767add3 . . ebc3552 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CommonsIoWatcherFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CommonsIoWatcherFactory . java <nl> @ @ - 8 , 11 + 8 , 13 @ @ import org . apache . commons . io . monitor . FileAlterationObserver ; <nl> <nl> import java . io . File ; <nl> import java . io . FileFilter ; <nl> + import java . util . concurrent . TimeUnit ; <nl> <nl> - import static com . github . dreamhead . moco . runner . watcher . Watchers . INTERVAL ; <nl> import static com . github . dreamhead . moco . util . Files . directoryOf ; <nl> <nl> public class CommonsIoWatcherFactory extends AbstractWatcherFactory { <nl> + private static final long INTERVAL = TimeUnit . SECONDS . toMillis ( 1 ) ; <nl> + <nl> protected Watcher doCreate ( final File file , final Function < File , Void > listener ) { <nl> return new CommonsIoWatcher ( monitorFile ( file , createListener ( listener ) ) ) ; <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java <nl> index 71ffd69 . . 8faadf6 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java <nl> @ @ - 1 , 10 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco . runner . watcher ; <nl> <nl> - import java . util . concurrent . TimeUnit ; <nl> - <nl> public class Watchers { <nl> - public static final long INTERVAL = TimeUnit . SECONDS . toMillis ( 1 ) ; <nl> - <nl> public static Watcher threadSafe ( final Watcher watcher ) { <nl> return new ThreadSafeRunnerWatcher ( watcher ) ; <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / AbstractRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / AbstractRunnerTest . java <nl> index 648a818 . . 0f729cb 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / AbstractRunnerTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / AbstractRunnerTest . java <nl> @ @ - 15 , 6 + 15 , 8 @ @ import static java . lang . String . format ; <nl> import static org . junit . Assert . fail ; <nl> <nl> public abstract class AbstractRunnerTest { <nl> + private static final long INTERVAL = TimeUnit . SECONDS . toMillis ( 1 ) ; <nl> + <nl> protected final MocoTestHelper helper = new MocoTestHelper ( ) ; <nl> protected Runner runner ; <nl> <nl> @ @ - 27 , 7 + 29 , 7 @ @ public abstract class AbstractRunnerTest { <nl> <nl> protected void waitChangeHappens ( ) { <nl> try { <nl> - idle ( Watchers . INTERVAL * 3 , TimeUnit . MILLISECONDS ) ; <nl> + idle ( INTERVAL * 3 , TimeUnit . MILLISECONDS ) ; <nl> } catch ( Exception e ) { <nl> fail ( format ( " failed to wait change happens : % s " , e . getMessage ( ) ) ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java <nl> index dbbb363 . . e8d273e 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java <nl> @ @ - 9 , 7 + 9 , 7 @ @ import org . slf4j . LoggerFactory ; <nl> import java . io . File ; <nl> import java . io . FileFilter ; <nl> <nl> - public class FileMonitor { <nl> + public class FileMonitor implements Monitor { <nl> public static final int INTERVAL = 1000 ; <nl> private static Logger logger = LoggerFactory . getLogger ( FileMonitor . class ) ; <nl> <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java <nl> new file mode 100644 <nl> index 0000000 . . 33e9ace <nl> - - - / dev / null <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + package com . github . dreamhead . moco . runner ; <nl> + <nl> + public interface Monitor { <nl> + void startMonitor ( ) ; <nl> + void stopMonitor ( ) ; <nl> + } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java <nl> index 4741816 . . 7b60e20 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java <nl> @ @ - 11 , 7 + 11 , 7 @ @ import java . io . Reader ; <nl> import java . io . StringReader ; <nl> import java . nio . charset . Charset ; <nl> <nl> - public class ShutdownMonitor { <nl> + public class ShutdownMonitor implements Monitor { <nl> private final MocoServer server = new MocoServer ( ) ; <nl> private final int shutdownPort ; <nl> private final String shutdownKey ;

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CommonsIoWatcherFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CommonsIoWatcherFactory . java 
 index 767add3 . . ebc3552 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CommonsIoWatcherFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / CommonsIoWatcherFactory . java 
 @ @ - 8 , 11 + 8 , 13 @ @ import org . apache . commons . io . monitor . FileAlterationObserver ; 
 
 import java . io . File ; 
 import java . io . FileFilter ; 
 + import java . util . concurrent . TimeUnit ; 
 
 - import static com . github . dreamhead . moco . runner . watcher . Watchers . INTERVAL ; 
 import static com . github . dreamhead . moco . util . Files . directoryOf ; 
 
 public class CommonsIoWatcherFactory extends AbstractWatcherFactory { 
 + private static final long INTERVAL = TimeUnit . SECONDS . toMillis ( 1 ) ; 
 + 
 protected Watcher doCreate ( final File file , final Function < File , Void > listener ) { 
 return new CommonsIoWatcher ( monitorFile ( file , createListener ( listener ) ) ) ; 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java 
 index 71ffd69 . . 8faadf6 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / watcher / Watchers . java 
 @ @ - 1 , 10 + 1 , 6 @ @ 
 package com . github . dreamhead . moco . runner . watcher ; 
 
 - import java . util . concurrent . TimeUnit ; 
 - 
 public class Watchers { 
 - public static final long INTERVAL = TimeUnit . SECONDS . toMillis ( 1 ) ; 
 - 
 public static Watcher threadSafe ( final Watcher watcher ) { 
 return new ThreadSafeRunnerWatcher ( watcher ) ; 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / AbstractRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / AbstractRunnerTest . java 
 index 648a818 . . 0f729cb 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / AbstractRunnerTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / AbstractRunnerTest . java 
 @ @ - 15 , 6 + 15 , 8 @ @ import static java . lang . String . format ; 
 import static org . junit . Assert . fail ; 
 
 public abstract class AbstractRunnerTest { 
 + private static final long INTERVAL = TimeUnit . SECONDS . toMillis ( 1 ) ; 
 + 
 protected final MocoTestHelper helper = new MocoTestHelper ( ) ; 
 protected Runner runner ; 
 
 @ @ - 27 , 7 + 29 , 7 @ @ public abstract class AbstractRunnerTest { 
 
 protected void waitChangeHappens ( ) { 
 try { 
 - idle ( Watchers . INTERVAL * 3 , TimeUnit . MILLISECONDS ) ; 
 + idle ( INTERVAL * 3 , TimeUnit . MILLISECONDS ) ; 
 } catch ( Exception e ) { 
 fail ( format ( " failed to wait change happens : % s " , e . getMessage ( ) ) ) ; 
 }

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java 
 index dbbb363 . . e8d273e 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java 
 @ @ - 9 , 7 + 9 , 7 @ @ import org . slf4j . LoggerFactory ; 
 import java . io . File ; 
 import java . io . FileFilter ; 
 
 - public class FileMonitor { 
 + public class FileMonitor implements Monitor { 
 public static final int INTERVAL = 1000 ; 
 private static Logger logger = LoggerFactory . getLogger ( FileMonitor . class ) ; 
 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java 
 new file mode 100644 
 index 0000000 . . 33e9ace 
 - - - / dev / null 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + package com . github . dreamhead . moco . runner ; 
 + 
 + public interface Monitor { 
 + void startMonitor ( ) ; 
 + void stopMonitor ( ) ; 
 + } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java 
 index 4741816 . . 7b60e20 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java 
 @ @ - 11 , 7 + 11 , 7 @ @ import java . io . Reader ; 
 import java . io . StringReader ; 
 import java . nio . charset . Charset ; 
 
 - public class ShutdownMonitor { 
 + public class ShutdownMonitor implements Monitor { 
 private final MocoServer server = new MocoServer ( ) ; 
 private final int shutdownPort ; 
 private final String shutdownKey ;
