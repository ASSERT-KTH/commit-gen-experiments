BLEU SCORE: 0.08515289178380434

TEST MSG: cleaned up moco rest test
GENERATED MSG: added test for rest with other configuration

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> index 82fd9dd . . f74ebb6 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> @ @ - 104 , 10 + 104 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( " / targets " ) ) ; <nl> - assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 200 ) ) ; <nl> - HttpEntity entity = response . getEntity ( ) ; <nl> - List < Plain > plains = mapper . readValue ( entity . getContent ( ) , new TypeReference < List < Plain > > ( ) { <nl> - } ) ; <nl> + List < Plain > plains = asPlains ( response ) ; <nl> assertThat ( plains . size ( ) , is ( 2 ) ) ; <nl> } <nl> } ) ; <nl> @ @ - 132 , 10 + 129 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( " / targets " ) ) ; <nl> - assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 200 ) ) ; <nl> - HttpEntity entity = response . getEntity ( ) ; <nl> - List < Plain > plains = mapper . readValue ( entity . getContent ( ) , new TypeReference < List < Plain > > ( ) { <nl> - } ) ; <nl> + List < Plain > plains = asPlains ( response ) ; <nl> assertThat ( plains . size ( ) , is ( 2 ) ) ; <nl> } <nl> } ) ; <nl> @ @ - 799 , 12 + 793 , 23 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> } <nl> <nl> private Plain asPlain ( HttpResponse response ) throws IOException { <nl> + HttpEntity entity = checkJsonResponse ( response ) ; <nl> + return mapper . readValue ( entity . getContent ( ) , Plain . class ) ; <nl> + } <nl> + <nl> + private List < Plain > asPlains ( HttpResponse response ) throws IOException { <nl> + HttpEntity entity = checkJsonResponse ( response ) ; <nl> + return mapper . readValue ( entity . getContent ( ) , new TypeReference < List < Plain > > ( ) { <nl> + } ) ; <nl> + } <nl> + <nl> + private HttpEntity checkJsonResponse ( HttpResponse response ) { <nl> assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 200 ) ) ; <nl> HttpEntity entity = response . getEntity ( ) ; <nl> MediaType mediaType = MediaType . parse ( entity . getContentType ( ) . getValue ( ) ) ; <nl> assertThat ( mediaType . type ( ) , is ( " application " ) ) ; <nl> assertThat ( mediaType . subtype ( ) , is ( " json " ) ) ; <nl> - return mapper . readValue ( entity . getContent ( ) , Plain . class ) ; <nl> + return entity ; <nl> } <nl> <nl> private static class Plain {
NEAREST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> index 817e642 . . a052847 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> @ @ - 745 , 6 + 745 , 39 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> } ) ; <nl> } <nl> <nl> + @ Test <nl> + public void should _ work _ with _ other _ http _ configuration ( ) throws Exception { <nl> + Plain resource1 = new Plain ( ) ; <nl> + resource1 . code = 1 ; <nl> + resource1 . message = " hello " ; <nl> + <nl> + Plain resource2 = new Plain ( ) ; <nl> + resource2 . code = 2 ; <nl> + resource2 . message = " world " ; <nl> + <nl> + server . resource ( " targets " , <nl> + get ( " 1 " ) . response ( toJson ( resource1 ) ) , <nl> + get ( " 2 " ) . response ( toJson ( resource2 ) ) <nl> + ) ; <nl> + <nl> + server . response ( " hello " ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + Plain response1 = getResource ( " / targets / 1 " ) ; <nl> + assertThat ( response1 . code , is ( 1 ) ) ; <nl> + assertThat ( response1 . message , is ( " hello " ) ) ; <nl> + <nl> + Plain response2 = getResource ( " / targets / 2 " ) ; <nl> + assertThat ( response2 . code , is ( 2 ) ) ; <nl> + assertThat ( response2 . message , is ( " world " ) ) ; <nl> + <nl> + assertThat ( helper . get ( remoteUrl ( " / hello " ) ) , is ( " hello " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> private Plain getResource ( String uri ) throws IOException { <nl> org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( uri ) ) ; <nl> return asPlain ( response ) ;

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 index 82fd9dd . . f74ebb6 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 @ @ - 104 , 10 + 104 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 @ Override 
 public void run ( ) throws Exception { 
 org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( " / targets " ) ) ; 
 - assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 200 ) ) ; 
 - HttpEntity entity = response . getEntity ( ) ; 
 - List < Plain > plains = mapper . readValue ( entity . getContent ( ) , new TypeReference < List < Plain > > ( ) { 
 - } ) ; 
 + List < Plain > plains = asPlains ( response ) ; 
 assertThat ( plains . size ( ) , is ( 2 ) ) ; 
 } 
 } ) ; 
 @ @ - 132 , 10 + 129 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 @ Override 
 public void run ( ) throws Exception { 
 org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( " / targets " ) ) ; 
 - assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 200 ) ) ; 
 - HttpEntity entity = response . getEntity ( ) ; 
 - List < Plain > plains = mapper . readValue ( entity . getContent ( ) , new TypeReference < List < Plain > > ( ) { 
 - } ) ; 
 + List < Plain > plains = asPlains ( response ) ; 
 assertThat ( plains . size ( ) , is ( 2 ) ) ; 
 } 
 } ) ; 
 @ @ - 799 , 12 + 793 , 23 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 } 
 
 private Plain asPlain ( HttpResponse response ) throws IOException { 
 + HttpEntity entity = checkJsonResponse ( response ) ; 
 + return mapper . readValue ( entity . getContent ( ) , Plain . class ) ; 
 + } 
 + 
 + private List < Plain > asPlains ( HttpResponse response ) throws IOException { 
 + HttpEntity entity = checkJsonResponse ( response ) ; 
 + return mapper . readValue ( entity . getContent ( ) , new TypeReference < List < Plain > > ( ) { 
 + } ) ; 
 + } 
 + 
 + private HttpEntity checkJsonResponse ( HttpResponse response ) { 
 assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 200 ) ) ; 
 HttpEntity entity = response . getEntity ( ) ; 
 MediaType mediaType = MediaType . parse ( entity . getContentType ( ) . getValue ( ) ) ; 
 assertThat ( mediaType . type ( ) , is ( " application " ) ) ; 
 assertThat ( mediaType . subtype ( ) , is ( " json " ) ) ; 
 - return mapper . readValue ( entity . getContent ( ) , Plain . class ) ; 
 + return entity ; 
 } 
 
 private static class Plain {

NEAREST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 index 817e642 . . a052847 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 @ @ - 745 , 6 + 745 , 39 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 } ) ; 
 } 
 
 + @ Test 
 + public void should _ work _ with _ other _ http _ configuration ( ) throws Exception { 
 + Plain resource1 = new Plain ( ) ; 
 + resource1 . code = 1 ; 
 + resource1 . message = " hello " ; 
 + 
 + Plain resource2 = new Plain ( ) ; 
 + resource2 . code = 2 ; 
 + resource2 . message = " world " ; 
 + 
 + server . resource ( " targets " , 
 + get ( " 1 " ) . response ( toJson ( resource1 ) ) , 
 + get ( " 2 " ) . response ( toJson ( resource2 ) ) 
 + ) ; 
 + 
 + server . response ( " hello " ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + Plain response1 = getResource ( " / targets / 1 " ) ; 
 + assertThat ( response1 . code , is ( 1 ) ) ; 
 + assertThat ( response1 . message , is ( " hello " ) ) ; 
 + 
 + Plain response2 = getResource ( " / targets / 2 " ) ; 
 + assertThat ( response2 . code , is ( 2 ) ) ; 
 + assertThat ( response2 . message , is ( " world " ) ) ; 
 + 
 + assertThat ( helper . get ( remoteUrl ( " / hello " ) ) , is ( " hello " ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 private Plain getResource ( String uri ) throws IOException { 
 org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( uri ) ) ; 
 return asPlain ( response ) ;
