BLEU SCORE: 0.056697911109760024

TEST MSG: added missing final to moco rest and socket test
GENERATED MSG: added socket server without port in publish api

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> index 87272c0 . . 47c75ca 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java <nl> @ @ - 55 , 7 + 55 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { <nl> public TemporaryFolder folder = new TemporaryFolder ( ) ; <nl> <nl> @ Override <nl> - protected RestServer createServer ( int port ) { <nl> + protected RestServer createServer ( final int port ) { <nl> return restServer ( port , log ( ) ) ; <nl> } <nl> <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java <nl> index 0c88e65 . . 63333e4 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java <nl> @ @ - 152 , 7 + 152 , 7 @ @ public class MocoSocketTest { <nl> hit . verify ( by ( " foo " ) , once ( ) ) ; <nl> } <nl> <nl> - private String times ( String base , int times ) { <nl> + private String times ( final String base , final int times ) { <nl> StringBuilder sb = new StringBuilder ( ) ; <nl> for ( int i = 0 ; i < times ; i + + ) { <nl> sb . append ( base ) ; <nl> @ @ - 160 , 7 + 160 , 7 @ @ public class MocoSocketTest { <nl> return sb . toString ( ) ; <nl> } <nl> <nl> - private String line ( String text ) { <nl> + private String line ( final String text ) { <nl> return text + " \ r \ n " ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> index f53da18 . . 24aba1f 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> @ @ - 763 , 4 + 763 , 4 @ @ public class MocoTest extends AbstractMocoHttpTest { <nl> } <nl> } ) ; <nl> } <nl> - } <nl> \ No newline at end of file <nl> + }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index 389921a . . f6f136d 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 146 , 6 + 146 , 10 @ @ public final class Moco { <nl> mergeMonitor ( monitor , monitor2 , monitors ) ) ; <nl> } <nl> <nl> + public static SocketServer socketServer ( ) { <nl> + return ActualSocketServer . createQuietServer ( Optional . < Integer > absent ( ) ) ; <nl> + } <nl> + <nl> public static SocketServer socketServer ( int port ) { <nl> return ActualSocketServer . createQuietServer ( of ( port ) ) ; <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java <nl> index d7d360a . . 53da54f 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ public class MocoPortTest { <nl> } <nl> <nl> @ Test <nl> - public void should _ create _ server _ without _ specific _ port ( ) throws Exception { <nl> + public void should _ create _ http _ server _ without _ specific _ port ( ) throws Exception { <nl> final HttpServer server = httpServer ( ) ; <nl> server . response ( " foo " ) ; <nl> <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java <nl> index bdf4ba7 . . 7c51067 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java <nl> @ @ - 117 , 6 + 117 , 22 @ @ public class MocoSocketTest { <nl> hit . verify ( by ( " 0XCAFE " ) , once ( ) ) ; <nl> } <nl> <nl> + @ Test <nl> + public void should _ create _ socket _ server _ without _ specific _ port ( ) throws Exception { <nl> + final SocketServer server = socketServer ( ) ; <nl> + server . request ( by ( " foo " ) ) . response ( line ( " bar " ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + helper = new MocoSocketHelper ( local ( ) , server . port ( ) ) ; <nl> + helper . connect ( ) ; <nl> + assertThat ( helper . send ( " foo " ) , is ( " bar " ) ) ; <nl> + helper . close ( ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> private String times ( String base , int times ) { <nl> StringBuilder sb = new StringBuilder ( ) ; <nl> for ( int i = 0 ; i < times ; i + + ) {

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 index 87272c0 . . 47c75ca 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRestTest . java 
 @ @ - 55 , 7 + 55 , 7 @ @ public class MocoRestTest extends BaseMocoHttpTest < RestServer > { 
 public TemporaryFolder folder = new TemporaryFolder ( ) ; 
 
 @ Override 
 - protected RestServer createServer ( int port ) { 
 + protected RestServer createServer ( final int port ) { 
 return restServer ( port , log ( ) ) ; 
 } 
 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java 
 index 0c88e65 . . 63333e4 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java 
 @ @ - 152 , 7 + 152 , 7 @ @ public class MocoSocketTest { 
 hit . verify ( by ( " foo " ) , once ( ) ) ; 
 } 
 
 - private String times ( String base , int times ) { 
 + private String times ( final String base , final int times ) { 
 StringBuilder sb = new StringBuilder ( ) ; 
 for ( int i = 0 ; i < times ; i + + ) { 
 sb . append ( base ) ; 
 @ @ - 160 , 7 + 160 , 7 @ @ public class MocoSocketTest { 
 return sb . toString ( ) ; 
 } 
 
 - private String line ( String text ) { 
 + private String line ( final String text ) { 
 return text + " \ r \ n " ; 
 } 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 index f53da18 . . 24aba1f 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 @ @ - 763 , 4 + 763 , 4 @ @ public class MocoTest extends AbstractMocoHttpTest { 
 } 
 } ) ; 
 } 
 - } 
 \ No newline at end of file 
 + }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index 389921a . . f6f136d 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 146 , 6 + 146 , 10 @ @ public final class Moco { 
 mergeMonitor ( monitor , monitor2 , monitors ) ) ; 
 } 
 
 + public static SocketServer socketServer ( ) { 
 + return ActualSocketServer . createQuietServer ( Optional . < Integer > absent ( ) ) ; 
 + } 
 + 
 public static SocketServer socketServer ( int port ) { 
 return ActualSocketServer . createQuietServer ( of ( port ) ) ; 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java 
 index d7d360a . . 53da54f 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoPortTest . java 
 @ @ - 20 , 7 + 20 , 7 @ @ public class MocoPortTest { 
 } 
 
 @ Test 
 - public void should _ create _ server _ without _ specific _ port ( ) throws Exception { 
 + public void should _ create _ http _ server _ without _ specific _ port ( ) throws Exception { 
 final HttpServer server = httpServer ( ) ; 
 server . response ( " foo " ) ; 
 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java 
 index bdf4ba7 . . 7c51067 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoSocketTest . java 
 @ @ - 117 , 6 + 117 , 22 @ @ public class MocoSocketTest { 
 hit . verify ( by ( " 0XCAFE " ) , once ( ) ) ; 
 } 
 
 + @ Test 
 + public void should _ create _ socket _ server _ without _ specific _ port ( ) throws Exception { 
 + final SocketServer server = socketServer ( ) ; 
 + server . request ( by ( " foo " ) ) . response ( line ( " bar " ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + helper = new MocoSocketHelper ( local ( ) , server . port ( ) ) ; 
 + helper . connect ( ) ; 
 + assertThat ( helper . send ( " foo " ) , is ( " bar " ) ) ; 
 + helper . close ( ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 private String times ( String base , int times ) { 
 StringBuilder sb = new StringBuilder ( ) ; 
 for ( int i = 0 ; i < times ; i + + ) {
