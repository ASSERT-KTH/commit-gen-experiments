BLEU SCORE: 0.029859662827819124

TEST MSG: fixed import in moco proxy test
GENERATED MSG: added template resource test for request action for fetching var from request

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> index 3b2253d . . 6184902 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> @ @ - 17 , 15 + 17 , 40 @ @ import java . io . File ; <nl> import java . io . IOException ; <nl> import java . nio . charset . Charset ; <nl> <nl> - import static com . github . dreamhead . moco . HttpProtocolVersion . * ; <nl> - import static com . github . dreamhead . moco . Moco . * ; <nl> + import static com . github . dreamhead . moco . HttpProtocolVersion . VERSION _ 0 _ 9 ; <nl> + import static com . github . dreamhead . moco . HttpProtocolVersion . VERSION _ 1 _ 0 ; <nl> + import static com . github . dreamhead . moco . HttpProtocolVersion . VERSION _ 1 _ 1 ; <nl> + import static com . github . dreamhead . moco . Moco . and ; <nl> + import static com . github . dreamhead . moco . Moco . by ; <nl> + import static com . github . dreamhead . moco . Moco . context ; <nl> + import static com . github . dreamhead . moco . Moco . eq ; <nl> + import static com . github . dreamhead . moco . Moco . failover ; <nl> + import static com . github . dreamhead . moco . Moco . file ; <nl> + import static com . github . dreamhead . moco . Moco . from ; <nl> + import static com . github . dreamhead . moco . Moco . header ; <nl> + import static com . github . dreamhead . moco . Moco . httpServer ; <nl> + import static com . github . dreamhead . moco . Moco . log ; <nl> + import static com . github . dreamhead . moco . Moco . match ; <nl> + import static com . github . dreamhead . moco . Moco . method ; <nl> + import static com . github . dreamhead . moco . Moco . playback ; <nl> + import static com . github . dreamhead . moco . Moco . proxy ; <nl> + import static com . github . dreamhead . moco . Moco . query ; <nl> + import static com . github . dreamhead . moco . Moco . status ; <nl> + import static com . github . dreamhead . moco . Moco . template ; <nl> + import static com . github . dreamhead . moco . Moco . uri ; <nl> + import static com . github . dreamhead . moco . Moco . version ; <nl> + import static com . github . dreamhead . moco . Moco . with ; <nl> import static com . github . dreamhead . moco . MocoRequestHit . once ; <nl> import static com . github . dreamhead . moco . MocoRequestHit . requestHit ; <nl> - import static com . github . dreamhead . moco . helper . RemoteTestUtils . * ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> + import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; <nl> + import static com . github . dreamhead . moco . helper . RemoteTestUtils . remoteUrl ; <nl> + import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; <nl> import static com . google . common . collect . ImmutableMultimap . of ; <nl> import static java . lang . String . format ; <nl> - import static org . hamcrest . CoreMatchers . * ; <nl> + import static org . hamcrest . CoreMatchers . containsString ; <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> + import static org . hamcrest . CoreMatchers . nullValue ; <nl> import static org . junit . Assert . assertThat ; <nl> <nl> public class MocoProxyTest extends AbstractMocoHttpTest { <nl> @ @ - 216 , 7 + 241 , 7 @ @ public class MocoProxyTest extends AbstractMocoHttpTest { <nl> private Matcher < String > countString ( final String substring , final int targetCount ) { <nl> return new SubstringMatcher ( substring ) { <nl> @ Override <nl> - protected boolean evalSubstringOf ( String string ) { <nl> + protected boolean evalSubstringOf ( final String string ) { <nl> int count = 0 ; <nl> int current = 0 ; <nl>
NEAREST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoEventTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoEventTest . java <nl> index 80f9885 . . 5828fe7 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoEventTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoEventTest . java <nl> @ @ - 2 , 18 + 2 , 37 @ @ package com . github . dreamhead . moco ; <nl> <nl> import com . github . dreamhead . moco . internal . SessionContext ; <nl> import com . github . dreamhead . moco . util . Idles ; <nl> + import com . google . common . collect . ImmutableMultimap ; <nl> import org . junit . Test ; <nl> import org . mockito . Matchers ; <nl> import org . mockito . Mockito ; <nl> <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> - import static com . github . dreamhead . moco . Moco . * ; <nl> - import static com . github . dreamhead . moco . helper . RemoteTestUtils . * ; <nl> + import static com . github . dreamhead . moco . Moco . async ; <nl> + import static com . github . dreamhead . moco . Moco . by ; <nl> + import static com . github . dreamhead . moco . Moco . complete ; <nl> + import static com . github . dreamhead . moco . Moco . context ; <nl> + import static com . github . dreamhead . moco . Moco . file ; <nl> + import static com . github . dreamhead . moco . Moco . fileRoot ; <nl> + import static com . github . dreamhead . moco . Moco . get ; <nl> + import static com . github . dreamhead . moco . Moco . httpServer ; <nl> + import static com . github . dreamhead . moco . Moco . latency ; <nl> + import static com . github . dreamhead . moco . Moco . post ; <nl> + import static com . github . dreamhead . moco . Moco . template ; <nl> + import static com . github . dreamhead . moco . Moco . text ; <nl> + import static com . github . dreamhead . moco . Moco . uri ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> + import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; <nl> + import static com . github . dreamhead . moco . helper . RemoteTestUtils . remoteUrl ; <nl> + import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> import static org . junit . Assert . assertThat ; <nl> - import static org . mockito . Mockito . * ; <nl> + import static org . mockito . Mockito . any ; <nl> + import static org . mockito . Mockito . mock ; <nl> + import static org . mockito . Mockito . never ; <nl> + import static org . mockito . Mockito . verify ; <nl> + import static org . mockito . Mockito . when ; <nl> <nl> public class MocoEventTest extends AbstractMocoHttpTest { <nl> @ Test <nl> @ @ - 95 , 6 + 114 , 22 @ @ public class MocoEventTest extends AbstractMocoHttpTest { <nl> } <nl> <nl> @ Test <nl> + public void should _ send _ get _ request _ to _ target _ on _ complete _ with _ template _ fetching _ var _ from _ request ( ) throws Exception { <nl> + ResponseHandler handler = mock ( ResponseHandler . class ) ; <nl> + server . request ( by ( uri ( " / target " ) ) ) . response ( handler ) ; <nl> + server . request ( by ( uri ( " / event " ) ) ) . response ( " event " ) . on ( complete ( get ( template ( " $ { base } / $ { req . headers [ ' foo ' ] } " , " base " , root ( ) ) ) ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + assertThat ( helper . getWithHeader ( remoteUrl ( " / event " ) , ImmutableMultimap . of ( " foo " , " target " ) ) , is ( " event " ) ) ; <nl> + } <nl> + } ) ; <nl> + <nl> + verify ( handler ) . writeToResponse ( Matchers . < SessionContext > anyObject ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void should _ send _ get _ request _ to _ target _ on _ complete _ with _ template ( ) throws Exception { <nl> ResponseHandler handler = mock ( ResponseHandler . class ) ; <nl> server . request ( by ( uri ( " / target " ) ) ) . response ( handler ) ;

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 index 3b2253d . . 6184902 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 @ @ - 17 , 15 + 17 , 40 @ @ import java . io . File ; 
 import java . io . IOException ; 
 import java . nio . charset . Charset ; 
 
 - import static com . github . dreamhead . moco . HttpProtocolVersion . * ; 
 - import static com . github . dreamhead . moco . Moco . * ; 
 + import static com . github . dreamhead . moco . HttpProtocolVersion . VERSION _ 0 _ 9 ; 
 + import static com . github . dreamhead . moco . HttpProtocolVersion . VERSION _ 1 _ 0 ; 
 + import static com . github . dreamhead . moco . HttpProtocolVersion . VERSION _ 1 _ 1 ; 
 + import static com . github . dreamhead . moco . Moco . and ; 
 + import static com . github . dreamhead . moco . Moco . by ; 
 + import static com . github . dreamhead . moco . Moco . context ; 
 + import static com . github . dreamhead . moco . Moco . eq ; 
 + import static com . github . dreamhead . moco . Moco . failover ; 
 + import static com . github . dreamhead . moco . Moco . file ; 
 + import static com . github . dreamhead . moco . Moco . from ; 
 + import static com . github . dreamhead . moco . Moco . header ; 
 + import static com . github . dreamhead . moco . Moco . httpServer ; 
 + import static com . github . dreamhead . moco . Moco . log ; 
 + import static com . github . dreamhead . moco . Moco . match ; 
 + import static com . github . dreamhead . moco . Moco . method ; 
 + import static com . github . dreamhead . moco . Moco . playback ; 
 + import static com . github . dreamhead . moco . Moco . proxy ; 
 + import static com . github . dreamhead . moco . Moco . query ; 
 + import static com . github . dreamhead . moco . Moco . status ; 
 + import static com . github . dreamhead . moco . Moco . template ; 
 + import static com . github . dreamhead . moco . Moco . uri ; 
 + import static com . github . dreamhead . moco . Moco . version ; 
 + import static com . github . dreamhead . moco . Moco . with ; 
 import static com . github . dreamhead . moco . MocoRequestHit . once ; 
 import static com . github . dreamhead . moco . MocoRequestHit . requestHit ; 
 - import static com . github . dreamhead . moco . helper . RemoteTestUtils . * ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 + import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; 
 + import static com . github . dreamhead . moco . helper . RemoteTestUtils . remoteUrl ; 
 + import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; 
 import static com . google . common . collect . ImmutableMultimap . of ; 
 import static java . lang . String . format ; 
 - import static org . hamcrest . CoreMatchers . * ; 
 + import static org . hamcrest . CoreMatchers . containsString ; 
 + import static org . hamcrest . CoreMatchers . is ; 
 + import static org . hamcrest . CoreMatchers . nullValue ; 
 import static org . junit . Assert . assertThat ; 
 
 public class MocoProxyTest extends AbstractMocoHttpTest { 
 @ @ - 216 , 7 + 241 , 7 @ @ public class MocoProxyTest extends AbstractMocoHttpTest { 
 private Matcher < String > countString ( final String substring , final int targetCount ) { 
 return new SubstringMatcher ( substring ) { 
 @ Override 
 - protected boolean evalSubstringOf ( String string ) { 
 + protected boolean evalSubstringOf ( final String string ) { 
 int count = 0 ; 
 int current = 0 ; 


NEAREST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoEventTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoEventTest . java 
 index 80f9885 . . 5828fe7 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoEventTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoEventTest . java 
 @ @ - 2 , 18 + 2 , 37 @ @ package com . github . dreamhead . moco ; 
 
 import com . github . dreamhead . moco . internal . SessionContext ; 
 import com . github . dreamhead . moco . util . Idles ; 
 + import com . google . common . collect . ImmutableMultimap ; 
 import org . junit . Test ; 
 import org . mockito . Matchers ; 
 import org . mockito . Mockito ; 
 
 import java . util . concurrent . TimeUnit ; 
 
 - import static com . github . dreamhead . moco . Moco . * ; 
 - import static com . github . dreamhead . moco . helper . RemoteTestUtils . * ; 
 + import static com . github . dreamhead . moco . Moco . async ; 
 + import static com . github . dreamhead . moco . Moco . by ; 
 + import static com . github . dreamhead . moco . Moco . complete ; 
 + import static com . github . dreamhead . moco . Moco . context ; 
 + import static com . github . dreamhead . moco . Moco . file ; 
 + import static com . github . dreamhead . moco . Moco . fileRoot ; 
 + import static com . github . dreamhead . moco . Moco . get ; 
 + import static com . github . dreamhead . moco . Moco . httpServer ; 
 + import static com . github . dreamhead . moco . Moco . latency ; 
 + import static com . github . dreamhead . moco . Moco . post ; 
 + import static com . github . dreamhead . moco . Moco . template ; 
 + import static com . github . dreamhead . moco . Moco . text ; 
 + import static com . github . dreamhead . moco . Moco . uri ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 + import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; 
 + import static com . github . dreamhead . moco . helper . RemoteTestUtils . remoteUrl ; 
 + import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; 
 import static org . hamcrest . CoreMatchers . is ; 
 import static org . junit . Assert . assertThat ; 
 - import static org . mockito . Mockito . * ; 
 + import static org . mockito . Mockito . any ; 
 + import static org . mockito . Mockito . mock ; 
 + import static org . mockito . Mockito . never ; 
 + import static org . mockito . Mockito . verify ; 
 + import static org . mockito . Mockito . when ; 
 
 public class MocoEventTest extends AbstractMocoHttpTest { 
 @ Test 
 @ @ - 95 , 6 + 114 , 22 @ @ public class MocoEventTest extends AbstractMocoHttpTest { 
 } 
 
 @ Test 
 + public void should _ send _ get _ request _ to _ target _ on _ complete _ with _ template _ fetching _ var _ from _ request ( ) throws Exception { 
 + ResponseHandler handler = mock ( ResponseHandler . class ) ; 
 + server . request ( by ( uri ( " / target " ) ) ) . response ( handler ) ; 
 + server . request ( by ( uri ( " / event " ) ) ) . response ( " event " ) . on ( complete ( get ( template ( " $ { base } / $ { req . headers [ ' foo ' ] } " , " base " , root ( ) ) ) ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + assertThat ( helper . getWithHeader ( remoteUrl ( " / event " ) , ImmutableMultimap . of ( " foo " , " target " ) ) , is ( " event " ) ) ; 
 + } 
 + } ) ; 
 + 
 + verify ( handler ) . writeToResponse ( Matchers . < SessionContext > anyObject ( ) ) ; 
 + } 
 + 
 + @ Test 
 public void should _ send _ get _ request _ to _ target _ on _ complete _ with _ template ( ) throws Exception { 
 ResponseHandler handler = mock ( ResponseHandler . class ) ; 
 server . request ( by ( uri ( " / target " ) ) ) . response ( handler ) ;
