BLEU SCORE: 0.05815868174415823

TEST MSG: ensured some headers as single value
GENERATED MSG: returned multiple headers with same name in response

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> index 7233273 . . c9a2c3c 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> @ @ - 28 , 8 + 28 , 8 @ @ public abstract class DefaultHttpMessage implements HttpMessage { <nl> } <nl> <nl> @ Override <nl> - public String getHeader ( String name ) { <nl> - if ( this . headers . containsKey ( name ) ) { <nl> + public String getHeader ( final String name ) { <nl> + if ( ! this . headers . containsKey ( name ) ) { <nl> return null ; <nl> } <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java <nl> index 1ef06e6 . . 5cee110 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java <nl> @ @ - 5 , 6 + 5 , 7 @ @ import com . github . dreamhead . moco . HttpRequest ; <nl> import com . github . dreamhead . moco . MutableHttpResponse ; <nl> import com . google . common . collect . ImmutableMap ; <nl> import com . google . common . collect . Maps ; <nl> + import com . google . common . net . HttpHeaders ; <nl> import io . netty . handler . codec . http . DefaultFullHttpResponse ; <nl> import io . netty . handler . codec . http . FullHttpResponse ; <nl> import io . netty . handler . codec . http . HttpResponseStatus ; <nl> @ @ - 40 , 8 + 41 , 30 @ @ public final class DefaultMutableHttpResponse implements MutableHttpResponse { <nl> this . content = content ; <nl> } <nl> <nl> + private static String [ ] SINGLE _ VALUE _ HEADERS = new String [ ] { <nl> + HttpHeaders . CONTENT _ TYPE <nl> + } ; <nl> + <nl> @ Override <nl> public void addHeader ( final String name , final Object value ) { <nl> + if ( this . headers . containsKey ( name ) & & isSingleValueHeader ( name ) ) { <nl> + this . headers . remove ( name ) ; <nl> + } <nl> + <nl> + doAddHeader ( name , value ) ; <nl> + } <nl> + <nl> + private boolean isSingleValueHeader ( final String name ) { <nl> + for ( String header : SINGLE _ VALUE _ HEADERS ) { <nl> + if ( header . equalsIgnoreCase ( name ) ) { <nl> + return true ; <nl> + } <nl> + } <nl> + <nl> + return false ; <nl> + } <nl> + <nl> + private void doAddHeader ( final String name , final Object value ) { <nl> this . headers . put ( name , newValues ( name , value ) ) ; <nl> } <nl> <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> index 4056b52 . . cc121ce 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> @ @ - 587 , 6 + 587 , 19 @ @ public class MocoTest extends AbstractMocoHttpTest { <nl> } ) ; <nl> } <nl> <nl> + @ Test <nl> + public void should _ eq _ multiple _ header _ with _ same _ name ( ) throws Exception { <nl> + server . request ( and ( eq ( header ( " foo " ) , " bar " ) ) , eq ( header ( " foo " ) , " bar2 " ) ) <nl> + . response ( " blah " ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws IOException { <nl> + assertThat ( helper . getWithHeader ( root ( ) , of ( " foo " , " bar " , " foo " , " bar2 " ) ) , is ( " blah " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> @ Test ( expected = HttpResponseException . class ) <nl> public void should _ throw _ exception _ without _ specified _ header ( ) throws Exception { <nl> server . request ( eq ( header ( " foo " ) , " bar " ) ) . response ( " blah " ) ;
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MutableHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / MutableHttpResponse . java <nl> index 6fa05f3 . . e84a074 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MutableHttpResponse . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MutableHttpResponse . java <nl> @ @ - 6 , 6 + 6 , 4 @ @ public interface MutableHttpResponse extends HttpResponse , MutableResponse { <nl> void setStatus ( final int status ) ; <nl> <nl> void addHeader ( final String name , final Object value ) ; <nl> - <nl> - void removeHeader ( final String name ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java <nl> index 4c5bd87 . . ebfac87 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java <nl> @ @ - 22 , 10 + 22 , 6 @ @ public class HeaderResponseHandler extends AbstractHttpResponseHandler { <nl> <nl> @ Override <nl> protected void doWriteToResponse ( final HttpRequest httpRequest , final MutableHttpResponse httpResponse ) { <nl> - if ( detector . hasHeader ( httpResponse , name ) ) { <nl> - httpResponse . removeHeader ( name ) ; <nl> - } <nl> - <nl> String value = resource . readFor ( of ( httpRequest ) ) . toString ( ) ; <nl> httpResponse . addHeader ( name , value ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java <nl> index ba562e3 . . 1ef06e6 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java <nl> @ @ - 68 , 11 + 68 , 6 @ @ public final class DefaultMutableHttpResponse implements MutableHttpResponse { <nl> } <nl> <nl> @ Override <nl> - public void removeHeader ( final String name ) { <nl> - this . headers . remove ( name ) ; <nl> - } <nl> - <nl> - @ Override <nl> public HttpProtocolVersion getVersion ( ) { <nl> return this . version ; <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> index d0f8a54 . . 4056b52 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> @ @ - 716 , 6 + 716 , 21 @ @ public class MocoTest extends AbstractMocoHttpTest { <nl> } <nl> <nl> @ Test <nl> + public void should _ return _ multiple _ expected _ header _ with _ same _ name ( ) throws Exception { <nl> + server . response ( header ( " foo " , " bar " ) , header ( " foo " , " moco " ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws IOException { <nl> + Header [ ] headers = helper . getResponse ( root ( ) ) . getHeaders ( " foo " ) ; <nl> + assertThat ( headers . length , is ( 2 ) ) ; <nl> + assertThat ( headers [ 0 ] . getValue ( ) , is ( " bar " ) ) ; <nl> + assertThat ( headers [ 1 ] . getValue ( ) , is ( " moco " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void should _ wait _ for _ awhile ( ) throws Exception { <nl> final long latency = 1000 ; <nl> final long delta = 200 ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 index 7233273 . . c9a2c3c 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 @ @ - 28 , 8 + 28 , 8 @ @ public abstract class DefaultHttpMessage implements HttpMessage { 
 } 
 
 @ Override 
 - public String getHeader ( String name ) { 
 - if ( this . headers . containsKey ( name ) ) { 
 + public String getHeader ( final String name ) { 
 + if ( ! this . headers . containsKey ( name ) ) { 
 return null ; 
 } 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java 
 index 1ef06e6 . . 5cee110 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java 
 @ @ - 5 , 6 + 5 , 7 @ @ import com . github . dreamhead . moco . HttpRequest ; 
 import com . github . dreamhead . moco . MutableHttpResponse ; 
 import com . google . common . collect . ImmutableMap ; 
 import com . google . common . collect . Maps ; 
 + import com . google . common . net . HttpHeaders ; 
 import io . netty . handler . codec . http . DefaultFullHttpResponse ; 
 import io . netty . handler . codec . http . FullHttpResponse ; 
 import io . netty . handler . codec . http . HttpResponseStatus ; 
 @ @ - 40 , 8 + 41 , 30 @ @ public final class DefaultMutableHttpResponse implements MutableHttpResponse { 
 this . content = content ; 
 } 
 
 + private static String [ ] SINGLE _ VALUE _ HEADERS = new String [ ] { 
 + HttpHeaders . CONTENT _ TYPE 
 + } ; 
 + 
 @ Override 
 public void addHeader ( final String name , final Object value ) { 
 + if ( this . headers . containsKey ( name ) & & isSingleValueHeader ( name ) ) { 
 + this . headers . remove ( name ) ; 
 + } 
 + 
 + doAddHeader ( name , value ) ; 
 + } 
 + 
 + private boolean isSingleValueHeader ( final String name ) { 
 + for ( String header : SINGLE _ VALUE _ HEADERS ) { 
 + if ( header . equalsIgnoreCase ( name ) ) { 
 + return true ; 
 + } 
 + } 
 + 
 + return false ; 
 + } 
 + 
 + private void doAddHeader ( final String name , final Object value ) { 
 this . headers . put ( name , newValues ( name , value ) ) ; 
 } 
 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 index 4056b52 . . cc121ce 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 @ @ - 587 , 6 + 587 , 19 @ @ public class MocoTest extends AbstractMocoHttpTest { 
 } ) ; 
 } 
 
 + @ Test 
 + public void should _ eq _ multiple _ header _ with _ same _ name ( ) throws Exception { 
 + server . request ( and ( eq ( header ( " foo " ) , " bar " ) ) , eq ( header ( " foo " ) , " bar2 " ) ) 
 + . response ( " blah " ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws IOException { 
 + assertThat ( helper . getWithHeader ( root ( ) , of ( " foo " , " bar " , " foo " , " bar2 " ) ) , is ( " blah " ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 @ Test ( expected = HttpResponseException . class ) 
 public void should _ throw _ exception _ without _ specified _ header ( ) throws Exception { 
 server . request ( eq ( header ( " foo " ) , " bar " ) ) . response ( " blah " ) ;

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MutableHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / MutableHttpResponse . java 
 index 6fa05f3 . . e84a074 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MutableHttpResponse . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MutableHttpResponse . java 
 @ @ - 6 , 6 + 6 , 4 @ @ public interface MutableHttpResponse extends HttpResponse , MutableResponse { 
 void setStatus ( final int status ) ; 
 
 void addHeader ( final String name , final Object value ) ; 
 - 
 - void removeHeader ( final String name ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java 
 index 4c5bd87 . . ebfac87 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java 
 @ @ - 22 , 10 + 22 , 6 @ @ public class HeaderResponseHandler extends AbstractHttpResponseHandler { 
 
 @ Override 
 protected void doWriteToResponse ( final HttpRequest httpRequest , final MutableHttpResponse httpResponse ) { 
 - if ( detector . hasHeader ( httpResponse , name ) ) { 
 - httpResponse . removeHeader ( name ) ; 
 - } 
 - 
 String value = resource . readFor ( of ( httpRequest ) ) . toString ( ) ; 
 httpResponse . addHeader ( name , value ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java 
 index ba562e3 . . 1ef06e6 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultMutableHttpResponse . java 
 @ @ - 68 , 11 + 68 , 6 @ @ public final class DefaultMutableHttpResponse implements MutableHttpResponse { 
 } 
 
 @ Override 
 - public void removeHeader ( final String name ) { 
 - this . headers . remove ( name ) ; 
 - } 
 - 
 - @ Override 
 public HttpProtocolVersion getVersion ( ) { 
 return this . version ; 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 index d0f8a54 . . 4056b52 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 @ @ - 716 , 6 + 716 , 21 @ @ public class MocoTest extends AbstractMocoHttpTest { 
 } 
 
 @ Test 
 + public void should _ return _ multiple _ expected _ header _ with _ same _ name ( ) throws Exception { 
 + server . response ( header ( " foo " , " bar " ) , header ( " foo " , " moco " ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws IOException { 
 + Header [ ] headers = helper . getResponse ( root ( ) ) . getHeaders ( " foo " ) ; 
 + assertThat ( headers . length , is ( 2 ) ) ; 
 + assertThat ( headers [ 0 ] . getValue ( ) , is ( " bar " ) ) ; 
 + assertThat ( headers [ 1 ] . getValue ( ) , is ( " moco " ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Test 
 public void should _ wait _ for _ awhile ( ) throws Exception { 
 final long latency = 1000 ; 
 final long delta = 200 ;
