BLEU SCORE: 0.20556680845025987

TEST MSG: removed redundant final from max age cookie attibute
GENERATED MSG: introduced time unit to max age cookie option

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieAttribute . java b / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieAttribute . java <nl> index e7d573e . . b9fdc8c 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieAttribute . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieAttribute . java <nl> @ @ - 14 , 7 + 14 , 7 @ @ public final class MaxAgeCookieAttribute extends ActualCookieAttribute { <nl> } <nl> <nl> @ Override <nl> - public final void visit ( final Cookie cookie ) { <nl> + public void visit ( final Cookie cookie ) { <nl> cookie . setMaxAge ( unit . toSeconds ( maxAge ) ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / CookieOption . java b / moco - core / src / main / java / com / github / dreamhead / moco / CookieOption . java <nl> index c7dc7d5 . . 5b8db82 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / CookieOption . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / CookieOption . java <nl> @ @ - 6 , 6 + 6 , 8 @ @ import com . github . dreamhead . moco . cookie . MaxAgeCookieOption ; <nl> import com . github . dreamhead . moco . cookie . PathCookieOption ; <nl> import com . github . dreamhead . moco . cookie . SecureCookieOption ; <nl> <nl> + import java . util . concurrent . TimeUnit ; <nl> + <nl> public abstract class CookieOption { <nl> public static CookieOption path ( final String path ) { <nl> return new PathCookieOption ( path ) ; <nl> @ @ - 15 , 8 + 17 , 8 @ @ public abstract class CookieOption { <nl> return new DomainCookieOption ( domain ) ; <nl> } <nl> <nl> - public static CookieOption maxAge ( final long maxAge ) { <nl> - return new MaxAgeCookieOption ( maxAge ) ; <nl> + public static CookieOption maxAge ( final long maxAge , final TimeUnit unit ) { <nl> + return new MaxAgeCookieOption ( maxAge , unit ) ; <nl> } <nl> <nl> public static CookieOption secure ( ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieOption . java b / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieOption . java <nl> index 20754f5 . . 6487ab7 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieOption . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieOption . java <nl> @ @ - 2 , 15 + 2 , 19 @ @ package com . github . dreamhead . moco . cookie ; <nl> <nl> import io . netty . handler . codec . http . cookie . Cookie ; <nl> <nl> + import java . util . concurrent . TimeUnit ; <nl> + <nl> public class MaxAgeCookieOption extends ActualCookieOption { <nl> private final long maxAge ; <nl> + private final TimeUnit unit ; <nl> <nl> - public MaxAgeCookieOption ( long maxAge ) { <nl> + public MaxAgeCookieOption ( final long maxAge , final TimeUnit unit ) { <nl> this . maxAge = maxAge ; <nl> + this . unit = unit ; <nl> } <nl> <nl> @ Override <nl> public void visit ( final Cookie cookie ) { <nl> - cookie . setMaxAge ( maxAge ) ; <nl> + cookie . setMaxAge ( unit . toSeconds ( maxAge ) ) ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java <nl> index 44b2d8c . . 4119512 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java <nl> @ @ - 7 , 6 + 7 , 7 @ @ import org . apache . http . message . BasicNameValuePair ; <nl> import org . junit . Test ; <nl> <nl> import java . io . IOException ; <nl> + import java . util . concurrent . TimeUnit ; <nl> <nl> import static com . github . dreamhead . moco . CookieOption . domain ; <nl> import static com . github . dreamhead . moco . CookieOption . httpOnly ; <nl> @ @ - 88 , 7 + 89 , 7 @ @ public class MocoWebTest extends AbstractMocoHttpTest { <nl> @ Test <nl> public void should _ set _ and _ recognize _ cookie _ with _ max _ age ( ) throws Exception { <nl> server . request ( eq ( cookie ( " loggedIn " ) , " true " ) ) . response ( status ( 200 ) ) ; <nl> - server . response ( cookie ( " loggedIn " , " true " , maxAge ( 3600 ) ) , status ( 302 ) ) ; <nl> + server . response ( cookie ( " loggedIn " , " true " , maxAge ( 1 , TimeUnit . HOURS ) ) , status ( 302 ) ) ; <nl> <nl> running ( server , new Runnable ( ) { <nl> @ Override

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieAttribute . java b / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieAttribute . java 
 index e7d573e . . b9fdc8c 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieAttribute . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieAttribute . java 
 @ @ - 14 , 7 + 14 , 7 @ @ public final class MaxAgeCookieAttribute extends ActualCookieAttribute { 
 } 
 
 @ Override 
 - public final void visit ( final Cookie cookie ) { 
 + public void visit ( final Cookie cookie ) { 
 cookie . setMaxAge ( unit . toSeconds ( maxAge ) ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / CookieOption . java b / moco - core / src / main / java / com / github / dreamhead / moco / CookieOption . java 
 index c7dc7d5 . . 5b8db82 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / CookieOption . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / CookieOption . java 
 @ @ - 6 , 6 + 6 , 8 @ @ import com . github . dreamhead . moco . cookie . MaxAgeCookieOption ; 
 import com . github . dreamhead . moco . cookie . PathCookieOption ; 
 import com . github . dreamhead . moco . cookie . SecureCookieOption ; 
 
 + import java . util . concurrent . TimeUnit ; 
 + 
 public abstract class CookieOption { 
 public static CookieOption path ( final String path ) { 
 return new PathCookieOption ( path ) ; 
 @ @ - 15 , 8 + 17 , 8 @ @ public abstract class CookieOption { 
 return new DomainCookieOption ( domain ) ; 
 } 
 
 - public static CookieOption maxAge ( final long maxAge ) { 
 - return new MaxAgeCookieOption ( maxAge ) ; 
 + public static CookieOption maxAge ( final long maxAge , final TimeUnit unit ) { 
 + return new MaxAgeCookieOption ( maxAge , unit ) ; 
 } 
 
 public static CookieOption secure ( ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieOption . java b / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieOption . java 
 index 20754f5 . . 6487ab7 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieOption . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / cookie / MaxAgeCookieOption . java 
 @ @ - 2 , 15 + 2 , 19 @ @ package com . github . dreamhead . moco . cookie ; 
 
 import io . netty . handler . codec . http . cookie . Cookie ; 
 
 + import java . util . concurrent . TimeUnit ; 
 + 
 public class MaxAgeCookieOption extends ActualCookieOption { 
 private final long maxAge ; 
 + private final TimeUnit unit ; 
 
 - public MaxAgeCookieOption ( long maxAge ) { 
 + public MaxAgeCookieOption ( final long maxAge , final TimeUnit unit ) { 
 this . maxAge = maxAge ; 
 + this . unit = unit ; 
 } 
 
 @ Override 
 public void visit ( final Cookie cookie ) { 
 - cookie . setMaxAge ( maxAge ) ; 
 + cookie . setMaxAge ( unit . toSeconds ( maxAge ) ) ; 
 } 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java 
 index 44b2d8c . . 4119512 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoWebTest . java 
 @ @ - 7 , 6 + 7 , 7 @ @ import org . apache . http . message . BasicNameValuePair ; 
 import org . junit . Test ; 
 
 import java . io . IOException ; 
 + import java . util . concurrent . TimeUnit ; 
 
 import static com . github . dreamhead . moco . CookieOption . domain ; 
 import static com . github . dreamhead . moco . CookieOption . httpOnly ; 
 @ @ - 88 , 7 + 89 , 7 @ @ public class MocoWebTest extends AbstractMocoHttpTest { 
 @ Test 
 public void should _ set _ and _ recognize _ cookie _ with _ max _ age ( ) throws Exception { 
 server . request ( eq ( cookie ( " loggedIn " ) , " true " ) ) . response ( status ( 200 ) ) ; 
 - server . response ( cookie ( " loggedIn " , " true " , maxAge ( 3600 ) ) , status ( 302 ) ) ; 
 + server . response ( cookie ( " loggedIn " , " true " , maxAge ( 1 , TimeUnit . HOURS ) ) , status ( 302 ) ) ; 
 
 running ( server , new Runnable ( ) { 
 @ Override
