BLEU SCORE: 0.09688464563433238

TEST MSG: fixed cookie container style
GENERATED MSG: added standalone max age cookie option

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java <nl> index 873fb6f . . 7134239 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java <nl> @ @ - 9 , 7 + 9 , 7 @ @ import java . util . List ; <nl> import static com . google . common . collect . Lists . newArrayList ; <nl> <nl> @ JsonDeserialize ( using = CookieContainerDeserializer . class ) <nl> - public class CookieContainer implements Container { <nl> + public class CookieContainer implements Container { <nl> private String value ; <nl> private String path ; <nl> private String domain ; <nl> @ @ - 39 , 19 + 39 , 19 @ @ public class CookieContainer implements Container { <nl> return container ; <nl> } <nl> <nl> - public String getValue ( ) { <nl> + public final String getValue ( ) { <nl> return value ; <nl> } <nl> <nl> - public boolean isForTemplate ( ) { <nl> + public final boolean isForTemplate ( ) { <nl> return this . template ! = null ; <nl> } <nl> <nl> - public String getTemplate ( ) { <nl> + public final String getTemplate ( ) { <nl> return template ; <nl> } <nl> <nl> - public CookieAttribute [ ] getOptions ( ) { <nl> + public final CookieAttribute [ ] getOptions ( ) { <nl> List < CookieAttribute > options = newArrayList ( ) ; <nl> if ( this . path ! = null ) { <nl> options . add ( CookieAttribute . path ( this . path ) ) ;
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java <nl> index f465f7b . . eafdc7a 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java <nl> @ @ - 5 , 6 + 5 , 7 @ @ import com . fasterxml . jackson . core . JsonToken ; <nl> import com . fasterxml . jackson . databind . DeserializationContext ; <nl> import com . fasterxml . jackson . databind . JsonDeserializer ; <nl> import com . github . dreamhead . moco . parser . model . CookieContainer ; <nl> + import com . github . dreamhead . moco . parser . model . LatencyContainer ; <nl> <nl> import java . io . IOException ; <nl> <nl> @ @ - 31 , 7 + 32 , 7 @ @ public class CookieContainerDeserializer extends JsonDeserializer < CookieContaine <nl> public String value ; <nl> public String path ; <nl> public String domain ; <nl> - public int maxAge ; <nl> + public LatencyContainer maxAge ; <nl> public boolean secure ; <nl> public boolean httpOnly ; <nl> public String template ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java <nl> index af52583 . . b0ac9f1 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java <nl> @ @ - 13 , 7 + 13 , 7 @ @ public class CookieContainer implements Container { <nl> private String value ; <nl> private String path ; <nl> private String domain ; <nl> - private int maxAge ; <nl> + private LatencyContainer maxAge ; <nl> private boolean secure ; <nl> private boolean httpOnly ; <nl> private String template ; <nl> @ @ - 25 , 7 + 25 , 7 @ @ public class CookieContainer implements Container { <nl> } <nl> <nl> public static CookieContainer newContainer ( final String text , final String path , <nl> - final String domain , final int maxAge , <nl> + final String domain , final LatencyContainer maxAge , <nl> final boolean secure , final boolean httpOnly , <nl> final String template ) { <nl> CookieContainer container = new CookieContainer ( ) ; <nl> @ @ - 69 , 6 + 69 , 10 @ @ public class CookieContainer implements Container { <nl> options . add ( CookieOption . httpOnly ( ) ) ; <nl> } <nl> <nl> + if ( this . maxAge ! = null ) { <nl> + options . add ( CookieOption . maxAge ( this . maxAge . getLatency ( ) , this . maxAge . getUnit ( ) ) ) ; <nl> + } <nl> + <nl> return options . toArray ( new CookieOption [ options . size ( ) ] ) ; <nl> } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / LatencyContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / LatencyContainer . java <nl> index ec148bf . . 60b1638 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / LatencyContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / LatencyContainer . java <nl> @ @ - 22 , 6 + 22 , 14 @ @ public class LatencyContainer { <nl> . toString ( ) ; <nl> } <nl> <nl> + public long getLatency ( ) { <nl> + return latency ; <nl> + } <nl> + <nl> + public TimeUnit getUnit ( ) { <nl> + return unit ; <nl> + } <nl> + <nl> public static LatencyContainer latency ( final long latency ) { <nl> return latencyWithUnit ( latency , TimeUnit . MILLISECONDS ) ; <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoCookieStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoCookieStandaloneTest . java <nl> index 1e61210 . . 9a8704c 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoCookieStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoCookieStandaloneTest . java <nl> @ @ - 50 , 13 + 50 , 21 @ @ public class MocoCookieStandaloneTest extends AbstractMocoStandaloneTest { <nl> @ Test <nl> public void should _ set _ and _ recognize _ cookie _ with _ http _ only ( ) throws IOException { <nl> runWithConfiguration ( " cookie . json " ) ; <nl> - String uri = " / cookie - with - http - only " ; <nl> - Cookie decodeCookie = getCookie ( uri ) ; <nl> + Cookie decodeCookie = getCookie ( " / cookie - with - http - only " ) ; <nl> assertThat ( decodeCookie . name ( ) , is ( " login " ) ) ; <nl> assertThat ( decodeCookie . value ( ) , is ( " true " ) ) ; <nl> assertThat ( decodeCookie . isHttpOnly ( ) , is ( true ) ) ; <nl> } <nl> <nl> + @ Test <nl> + public void should _ set _ and _ recognize _ cookie _ with _ max _ age ( ) throws IOException { <nl> + runWithConfiguration ( " cookie . json " ) ; <nl> + Cookie decodeCookie = getCookie ( " / cookie - with - max - age " ) ; <nl> + assertThat ( decodeCookie . name ( ) , is ( " login " ) ) ; <nl> + assertThat ( decodeCookie . value ( ) , is ( " true " ) ) ; <nl> + assertThat ( decodeCookie . maxAge ( ) , is ( 3600L ) ) ; <nl> + } <nl> + <nl> private Cookie getCookie ( String uri ) throws IOException { <nl> org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( uri ) ) ; <nl> <nl> diff - - git a / moco - runner / src / test / resources / cookie . json b / moco - runner / src / test / resources / cookie . json <nl> index ed070c6 . . 2678d33 100644 <nl> - - - a / moco - runner / src / test / resources / cookie . json <nl> + + + b / moco - runner / src / test / resources / cookie . json <nl> @ @ - 60 , 5 + 60 , 21 @ @ <nl> } <nl> } <nl> } <nl> + } , <nl> + { <nl> + " request " : { <nl> + " uri " : " / cookie - with - max - age " <nl> + } , <nl> + " response " : { <nl> + " cookies " : { <nl> + " login " : { <nl> + " value " : " true " , <nl> + " maxAge " : { <nl> + " duration " : 1 , <nl> + " unit " : " hour " <nl> + } <nl> + } <nl> + } <nl> + } <nl> } <nl> ] <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java 
 index 873fb6f . . 7134239 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java 
 @ @ - 9 , 7 + 9 , 7 @ @ import java . util . List ; 
 import static com . google . common . collect . Lists . newArrayList ; 
 
 @ JsonDeserialize ( using = CookieContainerDeserializer . class ) 
 - public class CookieContainer implements Container { 
 + public class CookieContainer implements Container { 
 private String value ; 
 private String path ; 
 private String domain ; 
 @ @ - 39 , 19 + 39 , 19 @ @ public class CookieContainer implements Container { 
 return container ; 
 } 
 
 - public String getValue ( ) { 
 + public final String getValue ( ) { 
 return value ; 
 } 
 
 - public boolean isForTemplate ( ) { 
 + public final boolean isForTemplate ( ) { 
 return this . template ! = null ; 
 } 
 
 - public String getTemplate ( ) { 
 + public final String getTemplate ( ) { 
 return template ; 
 } 
 
 - public CookieAttribute [ ] getOptions ( ) { 
 + public final CookieAttribute [ ] getOptions ( ) { 
 List < CookieAttribute > options = newArrayList ( ) ; 
 if ( this . path ! = null ) { 
 options . add ( CookieAttribute . path ( this . path ) ) ;

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java 
 index f465f7b . . eafdc7a 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java 
 @ @ - 5 , 6 + 5 , 7 @ @ import com . fasterxml . jackson . core . JsonToken ; 
 import com . fasterxml . jackson . databind . DeserializationContext ; 
 import com . fasterxml . jackson . databind . JsonDeserializer ; 
 import com . github . dreamhead . moco . parser . model . CookieContainer ; 
 + import com . github . dreamhead . moco . parser . model . LatencyContainer ; 
 
 import java . io . IOException ; 
 
 @ @ - 31 , 7 + 32 , 7 @ @ public class CookieContainerDeserializer extends JsonDeserializer < CookieContaine 
 public String value ; 
 public String path ; 
 public String domain ; 
 - public int maxAge ; 
 + public LatencyContainer maxAge ; 
 public boolean secure ; 
 public boolean httpOnly ; 
 public String template ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java 
 index af52583 . . b0ac9f1 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CookieContainer . java 
 @ @ - 13 , 7 + 13 , 7 @ @ public class CookieContainer implements Container { 
 private String value ; 
 private String path ; 
 private String domain ; 
 - private int maxAge ; 
 + private LatencyContainer maxAge ; 
 private boolean secure ; 
 private boolean httpOnly ; 
 private String template ; 
 @ @ - 25 , 7 + 25 , 7 @ @ public class CookieContainer implements Container { 
 } 
 
 public static CookieContainer newContainer ( final String text , final String path , 
 - final String domain , final int maxAge , 
 + final String domain , final LatencyContainer maxAge , 
 final boolean secure , final boolean httpOnly , 
 final String template ) { 
 CookieContainer container = new CookieContainer ( ) ; 
 @ @ - 69 , 6 + 69 , 10 @ @ public class CookieContainer implements Container { 
 options . add ( CookieOption . httpOnly ( ) ) ; 
 } 
 
 + if ( this . maxAge ! = null ) { 
 + options . add ( CookieOption . maxAge ( this . maxAge . getLatency ( ) , this . maxAge . getUnit ( ) ) ) ; 
 + } 
 + 
 return options . toArray ( new CookieOption [ options . size ( ) ] ) ; 
 } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / LatencyContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / LatencyContainer . java 
 index ec148bf . . 60b1638 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / LatencyContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / LatencyContainer . java 
 @ @ - 22 , 6 + 22 , 14 @ @ public class LatencyContainer { 
 . toString ( ) ; 
 } 
 
 + public long getLatency ( ) { 
 + return latency ; 
 + } 
 + 
 + public TimeUnit getUnit ( ) { 
 + return unit ; 
 + } 
 + 
 public static LatencyContainer latency ( final long latency ) { 
 return latencyWithUnit ( latency , TimeUnit . MILLISECONDS ) ; 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoCookieStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoCookieStandaloneTest . java 
 index 1e61210 . . 9a8704c 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoCookieStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoCookieStandaloneTest . java 
 @ @ - 50 , 13 + 50 , 21 @ @ public class MocoCookieStandaloneTest extends AbstractMocoStandaloneTest { 
 @ Test 
 public void should _ set _ and _ recognize _ cookie _ with _ http _ only ( ) throws IOException { 
 runWithConfiguration ( " cookie . json " ) ; 
 - String uri = " / cookie - with - http - only " ; 
 - Cookie decodeCookie = getCookie ( uri ) ; 
 + Cookie decodeCookie = getCookie ( " / cookie - with - http - only " ) ; 
 assertThat ( decodeCookie . name ( ) , is ( " login " ) ) ; 
 assertThat ( decodeCookie . value ( ) , is ( " true " ) ) ; 
 assertThat ( decodeCookie . isHttpOnly ( ) , is ( true ) ) ; 
 } 
 
 + @ Test 
 + public void should _ set _ and _ recognize _ cookie _ with _ max _ age ( ) throws IOException { 
 + runWithConfiguration ( " cookie . json " ) ; 
 + Cookie decodeCookie = getCookie ( " / cookie - with - max - age " ) ; 
 + assertThat ( decodeCookie . name ( ) , is ( " login " ) ) ; 
 + assertThat ( decodeCookie . value ( ) , is ( " true " ) ) ; 
 + assertThat ( decodeCookie . maxAge ( ) , is ( 3600L ) ) ; 
 + } 
 + 
 private Cookie getCookie ( String uri ) throws IOException { 
 org . apache . http . HttpResponse response = helper . getResponse ( remoteUrl ( uri ) ) ; 
 
 diff - - git a / moco - runner / src / test / resources / cookie . json b / moco - runner / src / test / resources / cookie . json 
 index ed070c6 . . 2678d33 100644 
 - - - a / moco - runner / src / test / resources / cookie . json 
 + + + b / moco - runner / src / test / resources / cookie . json 
 @ @ - 60 , 5 + 60 , 21 @ @ 
 } 
 } 
 } 
 + } , 
 + { 
 + " request " : { 
 + " uri " : " / cookie - with - max - age " 
 + } , 
 + " response " : { 
 + " cookies " : { 
 + " login " : { 
 + " value " : " true " , 
 + " maxAge " : { 
 + " duration " : 1 , 
 + " unit " : " hour " 
 + } 
 + } 
 + } 
 + } 
 } 
 ] 
 \ No newline at end of file
