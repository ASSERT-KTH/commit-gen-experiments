BLEU SCORE: 0.06916271812933183

TEST MSG: added missing final to moco client
GENERATED MSG: tried to reuse same executor in moco server

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoClient . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoClient . java <nl> index 96126df . . d9c666a 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoClient . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoClient . java <nl> @ @ - 12 , 7 + 12 , 7 @ @ import io . netty . channel . nio . NioEventLoopGroup ; <nl> import io . netty . channel . socket . nio . NioSocketChannel ; <nl> <nl> public class MocoClient { <nl> - public void run ( final String host , final int port , final ChannelHandler pipelineFactory ) { <nl> + public final void run ( final String host , final int port , final ChannelHandler pipelineFactory ) { <nl> EventLoopGroup group = new NioEventLoopGroup ( ) ; <nl> Bootstrap bootstrap = new Bootstrap ( ) ; <nl> bootstrap . group ( group )
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoServer . java <nl> index 1906b6a . . d683cae 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoServer . java <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> package com . github . dreamhead . moco . internal ; <nl> <nl> import com . github . dreamhead . moco . MocoException ; <nl> + import com . github . dreamhead . moco . util . MocoExecutors ; <nl> import io . netty . bootstrap . ServerBootstrap ; <nl> import io . netty . channel . Channel ; <nl> import io . netty . channel . ChannelFuture ; <nl> @ @ - 19 , 7 + 20 , 7 @ @ public class MocoServer { <nl> private ChannelFuture future ; <nl> <nl> public MocoServer ( ) { <nl> - group = new NioEventLoopGroup ( ) ; <nl> + group = new NioEventLoopGroup ( 0 , MocoExecutors . executor ( ) ) ; <nl> } <nl> <nl> public int start ( final int port , final ChannelInitializer < ? extends Channel > pipelineFactory ) {

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoClient . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoClient . java 
 index 96126df . . d9c666a 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoClient . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoClient . java 
 @ @ - 12 , 7 + 12 , 7 @ @ import io . netty . channel . nio . NioEventLoopGroup ; 
 import io . netty . channel . socket . nio . NioSocketChannel ; 
 
 public class MocoClient { 
 - public void run ( final String host , final int port , final ChannelHandler pipelineFactory ) { 
 + public final void run ( final String host , final int port , final ChannelHandler pipelineFactory ) { 
 EventLoopGroup group = new NioEventLoopGroup ( ) ; 
 Bootstrap bootstrap = new Bootstrap ( ) ; 
 bootstrap . group ( group )

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoServer . java 
 index 1906b6a . . d683cae 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / MocoServer . java 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 package com . github . dreamhead . moco . internal ; 
 
 import com . github . dreamhead . moco . MocoException ; 
 + import com . github . dreamhead . moco . util . MocoExecutors ; 
 import io . netty . bootstrap . ServerBootstrap ; 
 import io . netty . channel . Channel ; 
 import io . netty . channel . ChannelFuture ; 
 @ @ - 19 , 7 + 20 , 7 @ @ public class MocoServer { 
 private ChannelFuture future ; 
 
 public MocoServer ( ) { 
 - group = new NioEventLoopGroup ( ) ; 
 + group = new NioEventLoopGroup ( 0 , MocoExecutors . executor ( ) ) ; 
 } 
 
 public int start ( final int port , final ChannelInitializer < ? extends Channel > pipelineFactory ) {
