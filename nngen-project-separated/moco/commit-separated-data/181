BLEU SCORE: 0.05341087579952926

TEST MSG: added maps to simplify code
GENERATED MSG: introduced default http message

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> index 7b7a55b . . 681842f 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> @ @ - 4 , 14 + 4 , 16 @ @ import com . github . dreamhead . moco . HttpMessage ; <nl> import com . github . dreamhead . moco . HttpProtocolVersion ; <nl> import com . google . common . collect . ImmutableMap ; <nl> <nl> + import static com . github . dreamhead . moco . util . Maps . asSimple ; <nl> + <nl> public abstract class DefaultHttpMessage implements HttpMessage { <nl> private final HttpProtocolVersion version ; <nl> private final MessageContent content ; <nl> - private final ImmutableMap < String , String > headers ; <nl> + private final ImmutableMap < String , String [ ] > headers ; <nl> <nl> protected DefaultHttpMessage ( final HttpProtocolVersion version , <nl> final MessageContent content , <nl> - final ImmutableMap < String , String > headers ) { <nl> + final ImmutableMap < String , String [ ] > headers ) { <nl> this . version = version ; <nl> this . content = content ; <nl> this . headers = headers ; <nl> @ @ - 24 , 7 + 26 , 7 @ @ public abstract class DefaultHttpMessage implements HttpMessage { <nl> <nl> @ Override <nl> public ImmutableMap < String , String > getHeaders ( ) { <nl> - return this . headers ; <nl> + return asSimple ( this . headers ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> index 6afd91c . . f67feb0 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http <nl> <nl> private DefaultHttpRequest ( final HttpProtocolVersion version , final MessageContent content , <nl> final HttpMethod method , final String uri , <nl> - final ImmutableMap < String , String > headers , <nl> + final ImmutableMap < String , String [ ] > headers , <nl> final ImmutableMap < String , String [ ] > queries ) { <nl> super ( version , content , headers ) ; <nl> this . method = method ; <nl> @ @ - 281 , 12 + 281 , 7 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http <nl> } <nl> <nl> public DefaultHttpRequest build ( ) { <nl> - ImmutableMap . Builder < String , String > builder = ImmutableMap . builder ( ) ; <nl> - for ( Map . Entry < String , String [ ] > entry : headers . entrySet ( ) ) { <nl> - builder . put ( entry . getKey ( ) , entry . getValue ( ) [ 0 ] ) ; <nl> - } <nl> - <nl> - return new DefaultHttpRequest ( version , content , method , this . uri , builder . build ( ) , this . queries ) ; <nl> + return new DefaultHttpRequest ( version , content , method , this . uri , this . headers , this . queries ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> index 1d98429 . . d3c9be3 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> @ @ - 11 , 6 + 11 , 7 @ @ import io . netty . handler . codec . http . HttpVersion ; <nl> import java . util . Map ; <nl> <nl> import static com . github . dreamhead . moco . model . MessageContent . content ; <nl> + import static com . github . dreamhead . moco . util . Maps . asArray ; <nl> import static com . google . common . collect . ImmutableMap . copyOf ; <nl> <nl> @ JsonDeserialize ( builder = DefaultHttpResponse . Builder . class ) <nl> @ @ - 18 , 7 + 19 , 7 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo <nl> private final int status ; <nl> <nl> public DefaultHttpResponse ( final HttpProtocolVersion version , final int status , <nl> - final ImmutableMap < String , String > headers , <nl> + final ImmutableMap < String , String [ ] > headers , <nl> final MessageContent content ) { <nl> super ( version , content , headers ) ; <nl> this . status = status ; <nl> @ @ - 56 , 7 + 57 , 7 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo <nl> public static final class Builder { <nl> private HttpProtocolVersion version ; <nl> private MessageContent content ; <nl> - private ImmutableMap < String , String > headers ; <nl> + private ImmutableMap < String , String [ ] > headers ; <nl> private int status ; <nl> <nl> public Builder withVersion ( final HttpProtocolVersion version ) { <nl> @ @ - 71 , 7 + 72 , 7 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo <nl> <nl> public Builder withHeaders ( final Map < String , String > headers ) { <nl> if ( headers ! = null ) { <nl> - this . headers = copyOf ( headers ) ; <nl> + this . headers = asArray ( copyOf ( headers ) ) ; <nl> } <nl> <nl> return this ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Maps . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Maps . java <nl> new file mode 100644 <nl> index 0000000 . . 5f60c3b <nl> - - - / dev / null <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Maps . java <nl> @ @ - 0 , 0 + 1 , 28 @ @ <nl> + package com . github . dreamhead . moco . util ; <nl> + <nl> + import com . google . common . collect . ImmutableMap ; <nl> + <nl> + import java . util . Map ; <nl> + <nl> + public class Maps { <nl> + public static ImmutableMap < String , String > asSimple ( final Map < String , String [ ] > map ) { <nl> + ImmutableMap . Builder < String , String > builder = ImmutableMap . builder ( ) ; <nl> + for ( Map . Entry < String , String [ ] > entry : map . entrySet ( ) ) { <nl> + builder . put ( entry . getKey ( ) , entry . getValue ( ) [ 0 ] ) ; <nl> + } <nl> + <nl> + return builder . build ( ) ; <nl> + } <nl> + <nl> + public static ImmutableMap < String , String [ ] > asArray ( final Map < String , String > map ) { <nl> + ImmutableMap . Builder < String , String [ ] > builder = ImmutableMap . builder ( ) ; <nl> + for ( Map . Entry < String , String > entry : map . entrySet ( ) ) { <nl> + builder . put ( entry . getKey ( ) , new String [ ] { entry . getValue ( ) } ) ; <nl> + } <nl> + <nl> + return builder . build ( ) ; <nl> + } <nl> + <nl> + private Maps ( ) { <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> new file mode 100644 <nl> index 0000000 . . ffebb07 <nl> - - - / dev / null <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> @ @ - 0 , 0 + 1 , 33 @ @ <nl> + package com . github . dreamhead . moco . model ; <nl> + <nl> + import com . github . dreamhead . moco . HttpMessage ; <nl> + import com . github . dreamhead . moco . HttpProtocolVersion ; <nl> + import com . google . common . collect . ImmutableMap ; <nl> + <nl> + public abstract class DefaultHttpMessage implements HttpMessage { <nl> + private final HttpProtocolVersion version ; <nl> + private final MessageContent content ; <nl> + private final ImmutableMap < String , String > headers ; <nl> + <nl> + protected DefaultHttpMessage ( final HttpProtocolVersion version , final MessageContent content , <nl> + final ImmutableMap < String , String > headers ) { <nl> + this . version = version ; <nl> + this . content = content ; <nl> + this . headers = headers ; <nl> + } <nl> + <nl> + @ Override <nl> + public HttpProtocolVersion getVersion ( ) { <nl> + return this . version ; <nl> + } <nl> + <nl> + @ Override <nl> + public ImmutableMap < String , String > getHeaders ( ) { <nl> + return this . headers ; <nl> + } <nl> + <nl> + @ Override <nl> + public MessageContent getContent ( ) { <nl> + return this . content ; <nl> + } <nl> + } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> index 5e162d2 . . 73785be 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> @ @ - 29 , 13 + 29 , 10 @ @ import static com . github . dreamhead . moco . model . MessageContent . content ; <nl> import static com . google . common . collect . ImmutableMap . copyOf ; <nl> <nl> @ JsonDeserialize ( builder = DefaultHttpRequest . Builder . class ) <nl> - public final class DefaultHttpRequest implements HttpRequest { <nl> + public final class DefaultHttpRequest extends DefaultHttpMessage implements HttpRequest { <nl> private final Supplier < ImmutableMap < String , String > > formSupplier ; <nl> private final Supplier < ImmutableMap < String , String > > cookieSupplier ; <nl> <nl> - private final HttpProtocolVersion version ; <nl> - private final MessageContent content ; <nl> - private final ImmutableMap < String , String > headers ; <nl> private final String method ; <nl> <nl> private final String uri ; <nl> @ @ - 43 , 10 + 40 , 9 @ @ public final class DefaultHttpRequest implements HttpRequest { <nl> <nl> private DefaultHttpRequest ( final HttpProtocolVersion version , final MessageContent content , <nl> final String method , final String uri , <nl> - final ImmutableMap < String , String > headers , final ImmutableMap < String , String [ ] > queries ) { <nl> - this . version = version ; <nl> - this . content = content ; <nl> - this . headers = headers ; <nl> + final ImmutableMap < String , String > headers , <nl> + final ImmutableMap < String , String [ ] > queries ) { <nl> + super ( version , content , headers ) ; <nl> this . method = method ; <nl> this . uri = uri ; <nl> this . queries = queries ; <nl> @ @ - 54 , 19 + 50 , 6 @ @ public final class DefaultHttpRequest implements HttpRequest { <nl> this . cookieSupplier = cookieSupplier ( ) ; <nl> } <nl> <nl> - public HttpProtocolVersion getVersion ( ) { <nl> - return version ; <nl> - } <nl> - <nl> - @ Override <nl> - public MessageContent getContent ( ) { <nl> - return content ; <nl> - } <nl> - <nl> - public ImmutableMap < String , String > getHeaders ( ) { <nl> - return headers ; <nl> - } <nl> - <nl> @ Override <nl> public String getMethod ( ) { <nl> return method ; <nl> @ @ - 117 , 11 + 100 , 11 @ @ public final class DefaultHttpRequest implements HttpRequest { <nl> return MoreObjects . toStringHelper ( " HTTP Request " ) <nl> . omitNullValues ( ) <nl> . add ( " uri " , this . uri ) <nl> - . add ( " version " , this . version ) <nl> + . add ( " version " , this . getVersion ( ) ) <nl> . add ( " method " , this . method ) <nl> . add ( " queries " , this . queries ) <nl> - . add ( " headers " , this . headers ) <nl> - . add ( " content " , this . content ) <nl> + . add ( " headers " , this . getHeaders ( ) ) <nl> + . add ( " content " , this . getContent ( ) ) <nl> . toString ( ) ; <nl> } <nl> <nl> @ @ - 163 , 6 + 146 , 7 @ @ public final class DefaultHttpRequest implements HttpRequest { <nl> <nl> public FullHttpRequest toFullHttpRequest ( ) { <nl> ByteBuf buffer = Unpooled . buffer ( ) ; <nl> + MessageContent content = getContent ( ) ; <nl> if ( content ! = null ) { <nl> buffer . writeBytes ( content . getContent ( ) ) ; <nl> } <nl> @ @ - 175 , 8 + 159 , 8 @ @ public final class DefaultHttpRequest implements HttpRequest { <nl> } <nl> } <nl> <nl> - FullHttpRequest request = new DefaultFullHttpRequest ( HttpVersion . valueOf ( version . text ( ) ) , HttpMethod . valueOf ( method ) , encoder . toString ( ) , buffer ) ; <nl> - for ( Map . Entry < String , String > entry : headers . entrySet ( ) ) { <nl> + FullHttpRequest request = new DefaultFullHttpRequest ( HttpVersion . valueOf ( getVersion ( ) . text ( ) ) , HttpMethod . valueOf ( method ) , encoder . toString ( ) , buffer ) ; <nl> + for ( Map . Entry < String , String > entry : getHeaders ( ) . entrySet ( ) ) { <nl> request . headers ( ) . add ( entry . getKey ( ) , entry . getValue ( ) ) ; <nl> } <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> index c134ebe . . 79e8b39 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> @ @ - 13 , 33 + 13 , 16 @ @ import static com . github . dreamhead . moco . model . MessageContent . content ; <nl> import static com . google . common . collect . ImmutableMap . copyOf ; <nl> <nl> @ JsonDeserialize ( builder = DefaultHttpResponse . Builder . class ) <nl> - public class DefaultHttpResponse implements HttpResponse { <nl> - private final HttpProtocolVersion version ; <nl> - private final MessageContent content ; <nl> - private final ImmutableMap < String , String > headers ; <nl> + public class DefaultHttpResponse extends DefaultHttpMessage implements HttpResponse { <nl> private final int status ; <nl> <nl> public DefaultHttpResponse ( final HttpProtocolVersion version , final int status , <nl> - final ImmutableMap < String , String > headers , final MessageContent content ) { <nl> - this . version = version ; <nl> - this . headers = headers ; <nl> - this . content = content ; <nl> + final ImmutableMap < String , String > headers , <nl> + final MessageContent content ) { <nl> + super ( version , content , headers ) ; <nl> this . status = status ; <nl> } <nl> <nl> - public HttpProtocolVersion getVersion ( ) { <nl> - return version ; <nl> - } <nl> - <nl> - @ Override <nl> - public MessageContent getContent ( ) { <nl> - return content ; <nl> - } <nl> - <nl> - public ImmutableMap < String , String > getHeaders ( ) { <nl> - return this . headers ; <nl> - } <nl> - <nl> @ Override <nl> public int getStatus ( ) { <nl> return status ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 index 7b7a55b . . 681842f 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 @ @ - 4 , 14 + 4 , 16 @ @ import com . github . dreamhead . moco . HttpMessage ; 
 import com . github . dreamhead . moco . HttpProtocolVersion ; 
 import com . google . common . collect . ImmutableMap ; 
 
 + import static com . github . dreamhead . moco . util . Maps . asSimple ; 
 + 
 public abstract class DefaultHttpMessage implements HttpMessage { 
 private final HttpProtocolVersion version ; 
 private final MessageContent content ; 
 - private final ImmutableMap < String , String > headers ; 
 + private final ImmutableMap < String , String [ ] > headers ; 
 
 protected DefaultHttpMessage ( final HttpProtocolVersion version , 
 final MessageContent content , 
 - final ImmutableMap < String , String > headers ) { 
 + final ImmutableMap < String , String [ ] > headers ) { 
 this . version = version ; 
 this . content = content ; 
 this . headers = headers ; 
 @ @ - 24 , 7 + 26 , 7 @ @ public abstract class DefaultHttpMessage implements HttpMessage { 
 
 @ Override 
 public ImmutableMap < String , String > getHeaders ( ) { 
 - return this . headers ; 
 + return asSimple ( this . headers ) ; 
 } 
 
 @ Override 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 index 6afd91c . . f67feb0 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 @ @ - 42 , 7 + 42 , 7 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http 
 
 private DefaultHttpRequest ( final HttpProtocolVersion version , final MessageContent content , 
 final HttpMethod method , final String uri , 
 - final ImmutableMap < String , String > headers , 
 + final ImmutableMap < String , String [ ] > headers , 
 final ImmutableMap < String , String [ ] > queries ) { 
 super ( version , content , headers ) ; 
 this . method = method ; 
 @ @ - 281 , 12 + 281 , 7 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http 
 } 
 
 public DefaultHttpRequest build ( ) { 
 - ImmutableMap . Builder < String , String > builder = ImmutableMap . builder ( ) ; 
 - for ( Map . Entry < String , String [ ] > entry : headers . entrySet ( ) ) { 
 - builder . put ( entry . getKey ( ) , entry . getValue ( ) [ 0 ] ) ; 
 - } 
 - 
 - return new DefaultHttpRequest ( version , content , method , this . uri , builder . build ( ) , this . queries ) ; 
 + return new DefaultHttpRequest ( version , content , method , this . uri , this . headers , this . queries ) ; 
 } 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 index 1d98429 . . d3c9be3 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 @ @ - 11 , 6 + 11 , 7 @ @ import io . netty . handler . codec . http . HttpVersion ; 
 import java . util . Map ; 
 
 import static com . github . dreamhead . moco . model . MessageContent . content ; 
 + import static com . github . dreamhead . moco . util . Maps . asArray ; 
 import static com . google . common . collect . ImmutableMap . copyOf ; 
 
 @ JsonDeserialize ( builder = DefaultHttpResponse . Builder . class ) 
 @ @ - 18 , 7 + 19 , 7 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo 
 private final int status ; 
 
 public DefaultHttpResponse ( final HttpProtocolVersion version , final int status , 
 - final ImmutableMap < String , String > headers , 
 + final ImmutableMap < String , String [ ] > headers , 
 final MessageContent content ) { 
 super ( version , content , headers ) ; 
 this . status = status ; 
 @ @ - 56 , 7 + 57 , 7 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo 
 public static final class Builder { 
 private HttpProtocolVersion version ; 
 private MessageContent content ; 
 - private ImmutableMap < String , String > headers ; 
 + private ImmutableMap < String , String [ ] > headers ; 
 private int status ; 
 
 public Builder withVersion ( final HttpProtocolVersion version ) { 
 @ @ - 71 , 7 + 72 , 7 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo 
 
 public Builder withHeaders ( final Map < String , String > headers ) { 
 if ( headers ! = null ) { 
 - this . headers = copyOf ( headers ) ; 
 + this . headers = asArray ( copyOf ( headers ) ) ; 
 } 
 
 return this ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Maps . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Maps . java 
 new file mode 100644 
 index 0000000 . . 5f60c3b 
 - - - / dev / null 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Maps . java 
 @ @ - 0 , 0 + 1 , 28 @ @ 
 + package com . github . dreamhead . moco . util ; 
 + 
 + import com . google . common . collect . ImmutableMap ; 
 + 
 + import java . util . Map ; 
 + 
 + public class Maps { 
 + public static ImmutableMap < String , String > asSimple ( final Map < String , String [ ] > map ) { 
 + ImmutableMap . Builder < String , String > builder = ImmutableMap . builder ( ) ; 
 + for ( Map . Entry < String , String [ ] > entry : map . entrySet ( ) ) { 
 + builder . put ( entry . getKey ( ) , entry . getValue ( ) [ 0 ] ) ; 
 + } 
 + 
 + return builder . build ( ) ; 
 + } 
 + 
 + public static ImmutableMap < String , String [ ] > asArray ( final Map < String , String > map ) { 
 + ImmutableMap . Builder < String , String [ ] > builder = ImmutableMap . builder ( ) ; 
 + for ( Map . Entry < String , String > entry : map . entrySet ( ) ) { 
 + builder . put ( entry . getKey ( ) , new String [ ] { entry . getValue ( ) } ) ; 
 + } 
 + 
 + return builder . build ( ) ; 
 + } 
 + 
 + private Maps ( ) { 
 + } 
 + }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 new file mode 100644 
 index 0000000 . . ffebb07 
 - - - / dev / null 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 @ @ - 0 , 0 + 1 , 33 @ @ 
 + package com . github . dreamhead . moco . model ; 
 + 
 + import com . github . dreamhead . moco . HttpMessage ; 
 + import com . github . dreamhead . moco . HttpProtocolVersion ; 
 + import com . google . common . collect . ImmutableMap ; 
 + 
 + public abstract class DefaultHttpMessage implements HttpMessage { 
 + private final HttpProtocolVersion version ; 
 + private final MessageContent content ; 
 + private final ImmutableMap < String , String > headers ; 
 + 
 + protected DefaultHttpMessage ( final HttpProtocolVersion version , final MessageContent content , 
 + final ImmutableMap < String , String > headers ) { 
 + this . version = version ; 
 + this . content = content ; 
 + this . headers = headers ; 
 + } 
 + 
 + @ Override 
 + public HttpProtocolVersion getVersion ( ) { 
 + return this . version ; 
 + } 
 + 
 + @ Override 
 + public ImmutableMap < String , String > getHeaders ( ) { 
 + return this . headers ; 
 + } 
 + 
 + @ Override 
 + public MessageContent getContent ( ) { 
 + return this . content ; 
 + } 
 + } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 index 5e162d2 . . 73785be 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 @ @ - 29 , 13 + 29 , 10 @ @ import static com . github . dreamhead . moco . model . MessageContent . content ; 
 import static com . google . common . collect . ImmutableMap . copyOf ; 
 
 @ JsonDeserialize ( builder = DefaultHttpRequest . Builder . class ) 
 - public final class DefaultHttpRequest implements HttpRequest { 
 + public final class DefaultHttpRequest extends DefaultHttpMessage implements HttpRequest { 
 private final Supplier < ImmutableMap < String , String > > formSupplier ; 
 private final Supplier < ImmutableMap < String , String > > cookieSupplier ; 
 
 - private final HttpProtocolVersion version ; 
 - private final MessageContent content ; 
 - private final ImmutableMap < String , String > headers ; 
 private final String method ; 
 
 private final String uri ; 
 @ @ - 43 , 10 + 40 , 9 @ @ public final class DefaultHttpRequest implements HttpRequest { 
 
 private DefaultHttpRequest ( final HttpProtocolVersion version , final MessageContent content , 
 final String method , final String uri , 
 - final ImmutableMap < String , String > headers , final ImmutableMap < String , String [ ] > queries ) { 
 - this . version = version ; 
 - this . content = content ; 
 - this . headers = headers ; 
 + final ImmutableMap < String , String > headers , 
 + final ImmutableMap < String , String [ ] > queries ) { 
 + super ( version , content , headers ) ; 
 this . method = method ; 
 this . uri = uri ; 
 this . queries = queries ; 
 @ @ - 54 , 19 + 50 , 6 @ @ public final class DefaultHttpRequest implements HttpRequest { 
 this . cookieSupplier = cookieSupplier ( ) ; 
 } 
 
 - public HttpProtocolVersion getVersion ( ) { 
 - return version ; 
 - } 
 - 
 - @ Override 
 - public MessageContent getContent ( ) { 
 - return content ; 
 - } 
 - 
 - public ImmutableMap < String , String > getHeaders ( ) { 
 - return headers ; 
 - } 
 - 
 @ Override 
 public String getMethod ( ) { 
 return method ; 
 @ @ - 117 , 11 + 100 , 11 @ @ public final class DefaultHttpRequest implements HttpRequest { 
 return MoreObjects . toStringHelper ( " HTTP Request " ) 
 . omitNullValues ( ) 
 . add ( " uri " , this . uri ) 
 - . add ( " version " , this . version ) 
 + . add ( " version " , this . getVersion ( ) ) 
 . add ( " method " , this . method ) 
 . add ( " queries " , this . queries ) 
 - . add ( " headers " , this . headers ) 
 - . add ( " content " , this . content ) 
 + . add ( " headers " , this . getHeaders ( ) ) 
 + . add ( " content " , this . getContent ( ) ) 
 . toString ( ) ; 
 } 
 
 @ @ - 163 , 6 + 146 , 7 @ @ public final class DefaultHttpRequest implements HttpRequest { 
 
 public FullHttpRequest toFullHttpRequest ( ) { 
 ByteBuf buffer = Unpooled . buffer ( ) ; 
 + MessageContent content = getContent ( ) ; 
 if ( content ! = null ) { 
 buffer . writeBytes ( content . getContent ( ) ) ; 
 } 
 @ @ - 175 , 8 + 159 , 8 @ @ public final class DefaultHttpRequest implements HttpRequest { 
 } 
 } 
 
 - FullHttpRequest request = new DefaultFullHttpRequest ( HttpVersion . valueOf ( version . text ( ) ) , HttpMethod . valueOf ( method ) , encoder . toString ( ) , buffer ) ; 
 - for ( Map . Entry < String , String > entry : headers . entrySet ( ) ) { 
 + FullHttpRequest request = new DefaultFullHttpRequest ( HttpVersion . valueOf ( getVersion ( ) . text ( ) ) , HttpMethod . valueOf ( method ) , encoder . toString ( ) , buffer ) ; 
 + for ( Map . Entry < String , String > entry : getHeaders ( ) . entrySet ( ) ) { 
 request . headers ( ) . add ( entry . getKey ( ) , entry . getValue ( ) ) ; 
 } 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 index c134ebe . . 79e8b39 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 @ @ - 13 , 33 + 13 , 16 @ @ import static com . github . dreamhead . moco . model . MessageContent . content ; 
 import static com . google . common . collect . ImmutableMap . copyOf ; 
 
 @ JsonDeserialize ( builder = DefaultHttpResponse . Builder . class ) 
 - public class DefaultHttpResponse implements HttpResponse { 
 - private final HttpProtocolVersion version ; 
 - private final MessageContent content ; 
 - private final ImmutableMap < String , String > headers ; 
 + public class DefaultHttpResponse extends DefaultHttpMessage implements HttpResponse { 
 private final int status ; 
 
 public DefaultHttpResponse ( final HttpProtocolVersion version , final int status , 
 - final ImmutableMap < String , String > headers , final MessageContent content ) { 
 - this . version = version ; 
 - this . headers = headers ; 
 - this . content = content ; 
 + final ImmutableMap < String , String > headers , 
 + final MessageContent content ) { 
 + super ( version , content , headers ) ; 
 this . status = status ; 
 } 
 
 - public HttpProtocolVersion getVersion ( ) { 
 - return version ; 
 - } 
 - 
 - @ Override 
 - public MessageContent getContent ( ) { 
 - return content ; 
 - } 
 - 
 - public ImmutableMap < String , String > getHeaders ( ) { 
 - return this . headers ; 
 - } 
 - 
 @ Override 
 public int getStatus ( ) { 
 return status ;
