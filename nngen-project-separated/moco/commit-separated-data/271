BLEU SCORE: 0.05341087579952926

TEST MSG: added missing final to runners
GENERATED MSG: used guava http headers type

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java <nl> index ef636c0 . . 3db3392 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java <nl> @ @ - 10 , 7 + 10 , 7 @ @ import java . io . File ; <nl> import static com . github . dreamhead . moco . runner . FileRunner . createConfigurationFileRunner ; <nl> import static com . github . dreamhead . moco . runner . FileRunner . createSettingFileRunner ; <nl> <nl> - public class RunnerFactory { <nl> + public final class RunnerFactory { <nl> private final WatcherFactory factory = new WatcherFactory ( ) ; <nl> private final String shutdownKey ; <nl> <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java <nl> index 2560c5e . . 066acd5 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ import static com . github . dreamhead . moco . runner . JsonRunner . newJsonRunnerWithSetti <nl> import static com . github . dreamhead . moco . runner . RunnerSetting . aRunnerSetting ; <nl> import static com . google . common . collect . FluentIterable . from ; <nl> <nl> - public class SettingRunner implements Runner { <nl> + public final class SettingRunner implements Runner { <nl> private final GlobalSettingParser parser = new GlobalSettingParser ( ) ; <nl> private final ImmutableList < GlobalSetting > globalSettings ; <nl> private final Optional < String > env ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java <nl> index b3e21e2 . . fd79d67 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java <nl> @ @ - 7 , 7 + 7 , 7 @ @ import com . github . dreamhead . moco . SocketServer ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> - public class StandaloneRunner { <nl> + public final class StandaloneRunner { <nl> private static Logger logger = LoggerFactory . getLogger ( StandaloneRunner . class ) ; <nl> <nl> private Runner runner ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / WatcherRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / WatcherRunner . java <nl> index 405c392 . . 760e214 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / WatcherRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / WatcherRunner . java <nl> @ @ - 2 , 7 + 2 , 7 @ @ package com . github . dreamhead . moco . runner ; <nl> <nl> import com . github . dreamhead . moco . runner . watcher . Watcher ; <nl> <nl> - public class WatcherRunner implements Runner { <nl> + public final class WatcherRunner implements Runner { <nl> private final Runner runner ; <nl> private final Watcher watcher ; <nl>
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> index c08ad06 . . cc9f6e0 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ import com . github . dreamhead . moco . parser . SocketServerParser ; <nl> import com . google . common . base . Function ; <nl> import com . google . common . base . Optional ; <nl> import com . google . common . collect . ImmutableList ; <nl> + import com . google . common . net . HttpHeaders ; <nl> <nl> import java . io . InputStream ; <nl> <nl> @ @ - 64 , 7 + 65 , 7 @ @ public class JsonRunner implements Runner { <nl> <nl> private HttpServer createHttpServer ( Iterable < ? extends RunnerSetting > settings , StartArgs startArgs ) { <nl> HttpServer server = createBaseHttpServer ( settings , startArgs ) ; <nl> - server . request ( by ( uri ( " / favicon . ico " ) ) ) . response ( with ( pathResource ( " favicon . png " ) ) , header ( " Content - Type " , " image / png " ) ) ; <nl> + server . request ( by ( uri ( " / favicon . ico " ) ) ) . response ( with ( pathResource ( " favicon . png " ) ) , header ( HttpHeaders . CONTENT _ TYPE , " image / png " ) ) ; <nl> return server ; <nl> } <nl> <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java <nl> index b8018d3 . . 6ba2b4a 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java <nl> @ @ - 52 , 7 + 52 , 6 @ @ public class SettingRunner implements Runner { <nl> } ; <nl> } <nl> <nl> - <nl> private Function < GlobalSetting , RunnerSetting > toRunnerSetting ( ) { <nl> return new Function < GlobalSetting , RunnerSetting > ( ) { <nl> @ Override <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java <nl> index 242bb16 . . 88f4d52 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ public class StandaloneRunner { <nl> return Runner . runner ( ( SocketServer ) server ) ; <nl> } <nl> <nl> - throw new IllegalArgumentException ( " Unknown Server " ) ; <nl> + throw new IllegalArgumentException ( " Unknown server type : " + server . getClass ( ) . getName ( ) ) ; <nl> } <nl> <nl> public void stop ( ) {

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java 
 index ef636c0 . . 3db3392 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java 
 @ @ - 10 , 7 + 10 , 7 @ @ import java . io . File ; 
 import static com . github . dreamhead . moco . runner . FileRunner . createConfigurationFileRunner ; 
 import static com . github . dreamhead . moco . runner . FileRunner . createSettingFileRunner ; 
 
 - public class RunnerFactory { 
 + public final class RunnerFactory { 
 private final WatcherFactory factory = new WatcherFactory ( ) ; 
 private final String shutdownKey ; 
 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java 
 index 2560c5e . . 066acd5 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java 
 @ @ - 19 , 7 + 19 , 7 @ @ import static com . github . dreamhead . moco . runner . JsonRunner . newJsonRunnerWithSetti 
 import static com . github . dreamhead . moco . runner . RunnerSetting . aRunnerSetting ; 
 import static com . google . common . collect . FluentIterable . from ; 
 
 - public class SettingRunner implements Runner { 
 + public final class SettingRunner implements Runner { 
 private final GlobalSettingParser parser = new GlobalSettingParser ( ) ; 
 private final ImmutableList < GlobalSetting > globalSettings ; 
 private final Optional < String > env ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java 
 index b3e21e2 . . fd79d67 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java 
 @ @ - 7 , 7 + 7 , 7 @ @ import com . github . dreamhead . moco . SocketServer ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 - public class StandaloneRunner { 
 + public final class StandaloneRunner { 
 private static Logger logger = LoggerFactory . getLogger ( StandaloneRunner . class ) ; 
 
 private Runner runner ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / WatcherRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / WatcherRunner . java 
 index 405c392 . . 760e214 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / WatcherRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / WatcherRunner . java 
 @ @ - 2 , 7 + 2 , 7 @ @ package com . github . dreamhead . moco . runner ; 
 
 import com . github . dreamhead . moco . runner . watcher . Watcher ; 
 
 - public class WatcherRunner implements Runner { 
 + public final class WatcherRunner implements Runner { 
 private final Runner runner ; 
 private final Watcher watcher ; 


NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 index c08ad06 . . cc9f6e0 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / JsonRunner . java 
 @ @ - 12 , 6 + 12 , 7 @ @ import com . github . dreamhead . moco . parser . SocketServerParser ; 
 import com . google . common . base . Function ; 
 import com . google . common . base . Optional ; 
 import com . google . common . collect . ImmutableList ; 
 + import com . google . common . net . HttpHeaders ; 
 
 import java . io . InputStream ; 
 
 @ @ - 64 , 7 + 65 , 7 @ @ public class JsonRunner implements Runner { 
 
 private HttpServer createHttpServer ( Iterable < ? extends RunnerSetting > settings , StartArgs startArgs ) { 
 HttpServer server = createBaseHttpServer ( settings , startArgs ) ; 
 - server . request ( by ( uri ( " / favicon . ico " ) ) ) . response ( with ( pathResource ( " favicon . png " ) ) , header ( " Content - Type " , " image / png " ) ) ; 
 + server . request ( by ( uri ( " / favicon . ico " ) ) ) . response ( with ( pathResource ( " favicon . png " ) ) , header ( HttpHeaders . CONTENT _ TYPE , " image / png " ) ) ; 
 return server ; 
 } 
 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java 
 index b8018d3 . . 6ba2b4a 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / SettingRunner . java 
 @ @ - 52 , 7 + 52 , 6 @ @ public class SettingRunner implements Runner { 
 } ; 
 } 
 
 - 
 private Function < GlobalSetting , RunnerSetting > toRunnerSetting ( ) { 
 return new Function < GlobalSetting , RunnerSetting > ( ) { 
 @ Override 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java 
 index 242bb16 . . 88f4d52 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / StandaloneRunner . java 
 @ @ - 31 , 7 + 31 , 7 @ @ public class StandaloneRunner { 
 return Runner . runner ( ( SocketServer ) server ) ; 
 } 
 
 - throw new IllegalArgumentException ( " Unknown Server " ) ; 
 + throw new IllegalArgumentException ( " Unknown server type : " + server . getClass ( ) . getName ( ) ) ; 
 } 
 
 public void stop ( ) {
