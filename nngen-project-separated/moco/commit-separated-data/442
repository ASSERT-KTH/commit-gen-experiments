BLEU SCORE: 0.037477767366779206

TEST MSG: returned file container from get path resource in base resource setting
GENERATED MSG: made as template resource as a public api

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / BaseResourceSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / BaseResourceSetting . java <nl> index 97aeb23 . . 5759355 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / BaseResourceSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / BaseResourceSetting . java <nl> @ @ - 17 , 7 + 17 , 7 @ @ public abstract class BaseResourceSetting { <nl> return file ; <nl> } <nl> <nl> - public TextContainer getPathResource ( ) { <nl> + public FileContainer getPathResource ( ) { <nl> return pathResource ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> index 6214f68 . . 5cca6ff 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> @ @ - 207 , 7 + 207 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> <nl> if ( filename . isForTemplate ( ) ) { <nl> Optional < Charset > charset = fileContainer . getCharset ( ) ; <nl> - Resource resource = createTemplate ( " text " , filename ) ; <nl> + Resource resource = filename . asTemplateResource ( ) ; <nl> return Optional . of ( asResource ( name , resource , charset ) ) ; <nl> } <nl> <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java <nl> index 931ac01 . . 4666c27 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java <nl> @ @ - 42 , 7 + 42 , 11 @ @ public class TextContainer { <nl> return invokeTarget ( getMethodName ( ) , this . text , ContentResource . class ) ; <nl> } <nl> <nl> - private ContentResource asTemplateResource ( ) { <nl> + public ContentResource asTemplateResource ( ) { <nl> + if ( ! isForTemplate ( ) ) { <nl> + throw new IllegalArgumentException ( this + " is not a template " ) ; <nl> + } <nl> + <nl> if ( hasProperties ( ) ) { <nl> return template ( this . text , toVariables ( this . props ) ) ; <nl> }

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / BaseResourceSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / BaseResourceSetting . java 
 index 97aeb23 . . 5759355 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / BaseResourceSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / BaseResourceSetting . java 
 @ @ - 17 , 7 + 17 , 7 @ @ public abstract class BaseResourceSetting { 
 return file ; 
 } 
 
 - public TextContainer getPathResource ( ) { 
 + public FileContainer getPathResource ( ) { 
 return pathResource ; 
 } 
 }

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 index 6214f68 . . 5cca6ff 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 @ @ - 207 , 7 + 207 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 
 if ( filename . isForTemplate ( ) ) { 
 Optional < Charset > charset = fileContainer . getCharset ( ) ; 
 - Resource resource = createTemplate ( " text " , filename ) ; 
 + Resource resource = filename . asTemplateResource ( ) ; 
 return Optional . of ( asResource ( name , resource , charset ) ) ; 
 } 
 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java 
 index 931ac01 . . 4666c27 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / TextContainer . java 
 @ @ - 42 , 7 + 42 , 11 @ @ public class TextContainer { 
 return invokeTarget ( getMethodName ( ) , this . text , ContentResource . class ) ; 
 } 
 
 - private ContentResource asTemplateResource ( ) { 
 + public ContentResource asTemplateResource ( ) { 
 + if ( ! isForTemplate ( ) ) { 
 + throw new IllegalArgumentException ( this + " is not a template " ) ; 
 + } 
 + 
 if ( hasProperties ( ) ) { 
 return template ( this . text , toVariables ( this . props ) ) ; 
 }
