BLEU SCORE: 0.040583489434387374

TEST MSG: made constructor in file runner private
GENERATED MSG: add final keyword for some variables

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java <nl> index 2995f13 . . d4c0492 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java <nl> @ @ - 14 , 7 + 14 , 7 @ @ public abstract class FileRunner implements Runner { <nl> <nl> protected abstract Runner createRunner ( ) ; <nl> <nl> - protected FileRunner ( ) { <nl> + private FileRunner ( ) { <nl> this . runner = createRunner ( ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java <nl> index e880551 . . 7b634c6 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java <nl> @ @ - 35 , 9 + 35 , 9 @ @ public class RunnerFactory { <nl> } <nl> <nl> private Runner createDynamicSettingRunner ( StartArgs startArgs ) { <nl> - File settingsFile = new File ( startArgs . getSettings ( ) . get ( ) ) ; <nl> - FileRunner fileRunner = createSettingFileRunner ( settingsFile , startArgs ) ; <nl> - SettingRunner runner = ( SettingRunner ) fileRunner . getRunner ( ) ; <nl> + final File settingsFile = new File ( startArgs . getSettings ( ) . get ( ) ) ; <nl> + final FileRunner fileRunner = createSettingFileRunner ( settingsFile , startArgs ) ; <nl> + final SettingRunner runner = ( SettingRunner ) fileRunner . getRunner ( ) ; <nl> Monitor fileMonitor = monitorFactory . createSettingMonitor ( settingsFile , runner . getFiles ( ) , fileRunner ) ; <nl> return new MonitorRunner ( fileRunner , fileMonitor ) ; <nl> }

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java 
 index 2995f13 . . d4c0492 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileRunner . java 
 @ @ - 14 , 7 + 14 , 7 @ @ public abstract class FileRunner implements Runner { 
 
 protected abstract Runner createRunner ( ) ; 
 
 - protected FileRunner ( ) { 
 + private FileRunner ( ) { 
 this . runner = createRunner ( ) ; 
 } 


NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java 
 index e880551 . . 7b634c6 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / RunnerFactory . java 
 @ @ - 35 , 9 + 35 , 9 @ @ public class RunnerFactory { 
 } 
 
 private Runner createDynamicSettingRunner ( StartArgs startArgs ) { 
 - File settingsFile = new File ( startArgs . getSettings ( ) . get ( ) ) ; 
 - FileRunner fileRunner = createSettingFileRunner ( settingsFile , startArgs ) ; 
 - SettingRunner runner = ( SettingRunner ) fileRunner . getRunner ( ) ; 
 + final File settingsFile = new File ( startArgs . getSettings ( ) . get ( ) ) ; 
 + final FileRunner fileRunner = createSettingFileRunner ( settingsFile , startArgs ) ; 
 + final SettingRunner runner = ( SettingRunner ) fileRunner . getRunner ( ) ; 
 Monitor fileMonitor = monitorFactory . createSettingMonitor ( settingsFile , runner . getFiles ( ) , fileRunner ) ; 
 return new MonitorRunner ( fileRunner , fileMonitor ) ; 
 }
