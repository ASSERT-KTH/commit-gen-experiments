BLEU SCORE: 0.06770186228657868

TEST MSG: added test to load configuration for runner
GENERATED MSG: fixed test failure on windows for # 48

TEST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java <nl> index fa48f7c . . 493c090 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java <nl> @ @ - 22 , 6 + 22 , 23 @ @ public class DynamicSettingRunnerTest extends AbstractRunnerTest { <nl> public TemporaryFolder tempFolder = new TemporaryFolder ( ) ; <nl> <nl> @ Test <nl> + public void should _ load _ configuration ( ) throws IOException , InterruptedException { <nl> + final File config = tempFolder . newFile ( " config . json " ) ; <nl> + changeFileContent ( config , " [ { \ " response \ " : { " <nl> + + " \ " text \ " : \ " foo \ " " <nl> + + " } } ] " ) ; <nl> + <nl> + RunnerFactory factory = new RunnerFactory ( " SHUTDOWN " ) ; <nl> + runner = factory . createRunner ( httpArgs ( ) <nl> + . withPort ( port ( ) ) <nl> + . withShutdownPort ( 9090 ) <nl> + . withConfigurationFile ( config . getAbsolutePath ( ) ) <nl> + . build ( ) ) ; <nl> + runner . run ( ) ; <nl> + assertThat ( helper . get ( root ( ) ) , is ( " foo " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void should _ reload _ configuration ( ) throws IOException , InterruptedException { <nl> final File config = tempFolder . newFile ( " config . json " ) ; <nl> changeFileContent ( config , " [ { \ " response \ " : { "
NEAREST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java <nl> index b75066f . . d1bc083 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> package com . github . dreamhead . moco . runner ; <nl> <nl> import com . github . dreamhead . moco . bootstrap . StartArgs ; <nl> + import org . apache . commons . io . FilenameUtils ; <nl> import org . junit . Rule ; <nl> import org . junit . Test ; <nl> import org . junit . rules . TemporaryFolder ; <nl> @ @ - 25 , 8 + 26 , 9 @ @ public class DynamicSettingRunnerTest extends AbstractRunnerTest { <nl> " } } ] " ) ; <nl> <nl> final File setting = tempFolder . newFile ( " settings . json " ) ; <nl> + String path = FilenameUtils . separatorsToUnix ( config . getAbsolutePath ( ) ) ; <nl> changeFileContent ( setting , " [ { " + <nl> - " \ " include \ " : \ " " + config . getAbsolutePath ( ) + " \ " " + <nl> + " \ " include \ " : \ " " + path + " \ " " + <nl> " } ] " ) ; <nl> <nl> RunnerFactory factory = new RunnerFactory ( " SHUTDOWN " ) ;

TEST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java 
 index fa48f7c . . 493c090 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java 
 @ @ - 22 , 6 + 22 , 23 @ @ public class DynamicSettingRunnerTest extends AbstractRunnerTest { 
 public TemporaryFolder tempFolder = new TemporaryFolder ( ) ; 
 
 @ Test 
 + public void should _ load _ configuration ( ) throws IOException , InterruptedException { 
 + final File config = tempFolder . newFile ( " config . json " ) ; 
 + changeFileContent ( config , " [ { \ " response \ " : { " 
 + + " \ " text \ " : \ " foo \ " " 
 + + " } } ] " ) ; 
 + 
 + RunnerFactory factory = new RunnerFactory ( " SHUTDOWN " ) ; 
 + runner = factory . createRunner ( httpArgs ( ) 
 + . withPort ( port ( ) ) 
 + . withShutdownPort ( 9090 ) 
 + . withConfigurationFile ( config . getAbsolutePath ( ) ) 
 + . build ( ) ) ; 
 + runner . run ( ) ; 
 + assertThat ( helper . get ( root ( ) ) , is ( " foo " ) ) ; 
 + } 
 + 
 + @ Test 
 public void should _ reload _ configuration ( ) throws IOException , InterruptedException { 
 final File config = tempFolder . newFile ( " config . json " ) ; 
 changeFileContent ( config , " [ { \ " response \ " : { "

NEAREST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java 
 index b75066f . . d1bc083 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / DynamicSettingRunnerTest . java 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 package com . github . dreamhead . moco . runner ; 
 
 import com . github . dreamhead . moco . bootstrap . StartArgs ; 
 + import org . apache . commons . io . FilenameUtils ; 
 import org . junit . Rule ; 
 import org . junit . Test ; 
 import org . junit . rules . TemporaryFolder ; 
 @ @ - 25 , 8 + 26 , 9 @ @ public class DynamicSettingRunnerTest extends AbstractRunnerTest { 
 " } } ] " ) ; 
 
 final File setting = tempFolder . newFile ( " settings . json " ) ; 
 + String path = FilenameUtils . separatorsToUnix ( config . getAbsolutePath ( ) ) ; 
 changeFileContent ( setting , " [ { " + 
 - " \ " include \ " : \ " " + config . getAbsolutePath ( ) + " \ " " + 
 + " \ " include \ " : \ " " + path + " \ " " + 
 " } ] " ) ; 
 
 RunnerFactory factory = new RunnerFactory ( " SHUTDOWN " ) ;
