BLEU SCORE: 0.05522397783539469

TEST MSG: added template for get in event handler for stanalone mode
GENERATED MSG: added test for event with time unit

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> index 391cae7 . . 87644e9 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> @ @ - 5 , 13 + 5 , 23 @ @ import com . github . dreamhead . moco . MocoEventAction ; <nl> import com . google . common . base . MoreObjects ; <nl> <nl> import static com . github . dreamhead . moco . Moco . get ; <nl> + import static com . github . dreamhead . moco . Moco . template ; <nl> + import static com . github . dreamhead . moco . parser . model . DynamicResponseHandlerFactory . toVariables ; <nl> <nl> @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) <nl> public class GetSetting { <nl> - private String url ; <nl> + private TextContainer url ; <nl> <nl> public MocoEventAction createAction ( ) { <nl> - return get ( url ) ; <nl> + if ( url . isRawText ( ) ) { <nl> + return get ( url . getText ( ) ) ; <nl> + } <nl> + <nl> + if ( url . isForTemplate ( ) ) { <nl> + return get ( template ( url . getText ( ) , toVariables ( url . getProps ( ) ) ) ) ; <nl> + } <nl> + <nl> + throw new IllegalArgumentException ( " Unknown " + url ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java <nl> index e0488a3 . . 3ba5356 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java <nl> @ @ - 47 , 6 + 47 , 17 @ @ public class MocoEventStandaloneTest extends AbstractMocoStandaloneTest { <nl> } <nl> <nl> @ Test <nl> + public void should _ fire _ get _ event _ with _ template ( ) throws IOException { <nl> + runWithConfiguration ( " event . json " ) ; <nl> + File file = folder . newFile ( ) ; <nl> + System . setOut ( new PrintStream ( new FileOutputStream ( file ) ) ) ; <nl> + assertThat ( helper . get ( remoteUrl ( " / get _ event _ template " ) ) , is ( " get _ foo " ) ) ; <nl> + idle ( IDLE , TimeUnit . MILLISECONDS ) ; <nl> + <nl> + assertThat ( Files . toString ( file , Charset . defaultCharset ( ) ) , containsString ( " 0XCAFEBABE " ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void should _ fire _ event _ with _ unit ( ) throws IOException { <nl> runWithConfiguration ( " event . json " ) ; <nl> File file = folder . newFile ( ) ; <nl> diff - - git a / moco - runner / src / test / resources / event . json b / moco - runner / src / test / resources / event . json <nl> index a772f87 . . a2e8fa3 100644 <nl> - - - a / moco - runner / src / test / resources / event . json <nl> + + + b / moco - runner / src / test / resources / event . json <nl> @ @ - 56 , 6 + 56 , 30 @ @ <nl> } <nl> } <nl> } , <nl> + { <nl> + " request " : { <nl> + " uri " : " / get _ event _ template " <nl> + } , <nl> + " response " : { <nl> + " text " : " get _ foo " <nl> + } , <nl> + " on " : { <nl> + " complete " : { <nl> + " async " : " true " , <nl> + " latency " : 1000 , <nl> + " get " : { <nl> + " url " : { <nl> + " template " : { <nl> + " with " : " http : / / localhost : 12306 / $ { target } " , <nl> + " vars " : { <nl> + " target " : " target " <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } , <nl> <nl> { <nl> " request " : {
NEAREST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java <nl> index f36f806 . . e0488a3 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java <nl> @ @ - 45 , 4 + 45 , 15 @ @ public class MocoEventStandaloneTest extends AbstractMocoStandaloneTest { <nl> <nl> assertThat ( Files . toString ( file , Charset . defaultCharset ( ) ) , containsString ( " 0XCAFEBABE " ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ fire _ event _ with _ unit ( ) throws IOException { <nl> + runWithConfiguration ( " event . json " ) ; <nl> + File file = folder . newFile ( ) ; <nl> + System . setOut ( new PrintStream ( new FileOutputStream ( file ) ) ) ; <nl> + assertThat ( helper . get ( remoteUrl ( " / event - with - unit " ) ) , is ( " post _ foo " ) ) ; <nl> + idle ( IDLE , TimeUnit . MILLISECONDS ) ; <nl> + <nl> + assertThat ( Files . toString ( file , Charset . defaultCharset ( ) ) , containsString ( " 0XCAFEBABE " ) ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / test / resources / event . json b / moco - runner / src / test / resources / event . json <nl> index d9176ec . . a772f87 100644 <nl> - - - a / moco - runner / src / test / resources / event . json <nl> + + + b / moco - runner / src / test / resources / event . json <nl> @ @ - 17 , 6 + 17 , 27 @ @ <nl> } <nl> } <nl> } , <nl> + { <nl> + " request " : { <nl> + " uri " : " / event - with - unit " <nl> + } , <nl> + " response " : { <nl> + " text " : " post _ foo " <nl> + } , <nl> + " on " : { <nl> + " complete " : { <nl> + " async " : " true " , <nl> + " latency " : { <nl> + " duration " : 1 , <nl> + " unit " : " second " <nl> + } , <nl> + " post " : { <nl> + " url " : " http : / / localhost : 12306 / target " , <nl> + " content " : " content " <nl> + } <nl> + } <nl> + } <nl> + } , <nl> <nl> { <nl> " request " : {

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 index 391cae7 . . 87644e9 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 @ @ - 5 , 13 + 5 , 23 @ @ import com . github . dreamhead . moco . MocoEventAction ; 
 import com . google . common . base . MoreObjects ; 
 
 import static com . github . dreamhead . moco . Moco . get ; 
 + import static com . github . dreamhead . moco . Moco . template ; 
 + import static com . github . dreamhead . moco . parser . model . DynamicResponseHandlerFactory . toVariables ; 
 
 @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) 
 public class GetSetting { 
 - private String url ; 
 + private TextContainer url ; 
 
 public MocoEventAction createAction ( ) { 
 - return get ( url ) ; 
 + if ( url . isRawText ( ) ) { 
 + return get ( url . getText ( ) ) ; 
 + } 
 + 
 + if ( url . isForTemplate ( ) ) { 
 + return get ( template ( url . getText ( ) , toVariables ( url . getProps ( ) ) ) ) ; 
 + } 
 + 
 + throw new IllegalArgumentException ( " Unknown " + url ) ; 
 } 
 
 @ Override 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java 
 index e0488a3 . . 3ba5356 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java 
 @ @ - 47 , 6 + 47 , 17 @ @ public class MocoEventStandaloneTest extends AbstractMocoStandaloneTest { 
 } 
 
 @ Test 
 + public void should _ fire _ get _ event _ with _ template ( ) throws IOException { 
 + runWithConfiguration ( " event . json " ) ; 
 + File file = folder . newFile ( ) ; 
 + System . setOut ( new PrintStream ( new FileOutputStream ( file ) ) ) ; 
 + assertThat ( helper . get ( remoteUrl ( " / get _ event _ template " ) ) , is ( " get _ foo " ) ) ; 
 + idle ( IDLE , TimeUnit . MILLISECONDS ) ; 
 + 
 + assertThat ( Files . toString ( file , Charset . defaultCharset ( ) ) , containsString ( " 0XCAFEBABE " ) ) ; 
 + } 
 + 
 + @ Test 
 public void should _ fire _ event _ with _ unit ( ) throws IOException { 
 runWithConfiguration ( " event . json " ) ; 
 File file = folder . newFile ( ) ; 
 diff - - git a / moco - runner / src / test / resources / event . json b / moco - runner / src / test / resources / event . json 
 index a772f87 . . a2e8fa3 100644 
 - - - a / moco - runner / src / test / resources / event . json 
 + + + b / moco - runner / src / test / resources / event . json 
 @ @ - 56 , 6 + 56 , 30 @ @ 
 } 
 } 
 } , 
 + { 
 + " request " : { 
 + " uri " : " / get _ event _ template " 
 + } , 
 + " response " : { 
 + " text " : " get _ foo " 
 + } , 
 + " on " : { 
 + " complete " : { 
 + " async " : " true " , 
 + " latency " : 1000 , 
 + " get " : { 
 + " url " : { 
 + " template " : { 
 + " with " : " http : / / localhost : 12306 / $ { target } " , 
 + " vars " : { 
 + " target " : " target " 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } , 
 
 { 
 " request " : {

NEAREST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java 
 index f36f806 . . e0488a3 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoEventStandaloneTest . java 
 @ @ - 45 , 4 + 45 , 15 @ @ public class MocoEventStandaloneTest extends AbstractMocoStandaloneTest { 
 
 assertThat ( Files . toString ( file , Charset . defaultCharset ( ) ) , containsString ( " 0XCAFEBABE " ) ) ; 
 } 
 + 
 + @ Test 
 + public void should _ fire _ event _ with _ unit ( ) throws IOException { 
 + runWithConfiguration ( " event . json " ) ; 
 + File file = folder . newFile ( ) ; 
 + System . setOut ( new PrintStream ( new FileOutputStream ( file ) ) ) ; 
 + assertThat ( helper . get ( remoteUrl ( " / event - with - unit " ) ) , is ( " post _ foo " ) ) ; 
 + idle ( IDLE , TimeUnit . MILLISECONDS ) ; 
 + 
 + assertThat ( Files . toString ( file , Charset . defaultCharset ( ) ) , containsString ( " 0XCAFEBABE " ) ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / test / resources / event . json b / moco - runner / src / test / resources / event . json 
 index d9176ec . . a772f87 100644 
 - - - a / moco - runner / src / test / resources / event . json 
 + + + b / moco - runner / src / test / resources / event . json 
 @ @ - 17 , 6 + 17 , 27 @ @ 
 } 
 } 
 } , 
 + { 
 + " request " : { 
 + " uri " : " / event - with - unit " 
 + } , 
 + " response " : { 
 + " text " : " post _ foo " 
 + } , 
 + " on " : { 
 + " complete " : { 
 + " async " : " true " , 
 + " latency " : { 
 + " duration " : 1 , 
 + " unit " : " second " 
 + } , 
 + " post " : { 
 + " url " : " http : / / localhost : 12306 / target " , 
 + " content " : " content " 
 + } 
 + } 
 + } 
 + } , 
 
 { 
 " request " : {
