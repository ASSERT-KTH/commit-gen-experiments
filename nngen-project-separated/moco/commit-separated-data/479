BLEU SCORE: 0.020980574531482755

TEST MSG: added a test for merge http server with same port
GENERATED MSG: applied any matcher while merging

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> index 7d94f40 . . 912ef8e 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> @ @ - 127 , 4 + 127 , 17 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { <nl> } <nl> } ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ merge _ http _ server _ with _ same _ port ( ) throws Exception { <nl> + httpServer = httpServer ( 12306 , context ( " / foo " ) ) ; <nl> + anotherServer = httpServer ( 12306 , context ( " / bar " ) ) ; <nl> + final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + running ( mergedServer , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + assertThat ( mergedServer . port ( ) , is ( 12306 ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> index 26670d5 . . 5536707 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java <nl> @ @ - 53 , 8 + 53 , 13 @ @ public class ActualHttpServer extends HttpServer { <nl> ActualHttpServer newServer = new ActualHttpServer ( this . port ) ; <nl> newServer . addSettings ( settings ) ; <nl> newServer . addSettings ( thatServer . getSettings ( ) ) ; <nl> + <nl> newServer . response ( this . handler ) ; <nl> + newServer . matcher = configItem ( this . matcher , this . configs ) ; <nl> + <nl> newServer . response ( thatServer . handler ) ; <nl> + newServer . matcher = configItem ( thatServer . matcher , thatServer . configs ) ; <nl> + <nl> return newServer ; <nl> } <nl> <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> new file mode 100644 <nl> index 0000000 . . 092175d <nl> - - - / dev / null <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + package com . github . dreamhead . moco . internal ; <nl> + <nl> + import com . github . dreamhead . moco . AbstractMocoTest ; <nl> + import com . github . dreamhead . moco . HttpServer ; <nl> + import com . github . dreamhead . moco . Runnable ; <nl> + import org . apache . http . client . HttpResponseException ; <nl> + import org . junit . Test ; <nl> + <nl> + import static com . github . dreamhead . moco . Moco . context ; <nl> + import static com . github . dreamhead . moco . Moco . httpserver ; <nl> + import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; <nl> + import static com . github . dreamhead . moco . Runner . running ; <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> + import static org . junit . Assert . assertThat ; <nl> + <nl> + public class ActualHttpServerTest extends AbstractMocoTest { <nl> + @ Test ( expected = HttpResponseException . class ) <nl> + public void should _ merge _ http _ server _ correctly ( ) throws Exception { <nl> + HttpServer httpServer = httpserver ( 12306 , context ( " / foo " ) ) ; <nl> + httpServer . response ( " foo " ) ; <nl> + <nl> + HttpServer anotherServer = httpserver ( 12306 , context ( " / bar " ) ) ; <nl> + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; <nl> + running ( mergedServer , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + assertThat ( helper . get ( remoteUrl ( " / foo / anything " ) ) , is ( " foo " ) ) ; <nl> + helper . get ( remoteUrl ( " / bar / anything " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + }

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 index 7d94f40 . . 912ef8e 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 @ @ - 127 , 4 + 127 , 17 @ @ public class ActualHttpServerTest extends AbstractMocoHttpTest { 
 } 
 } ) ; 
 } 
 + 
 + @ Test 
 + public void should _ merge _ http _ server _ with _ same _ port ( ) throws Exception { 
 + httpServer = httpServer ( 12306 , context ( " / foo " ) ) ; 
 + anotherServer = httpServer ( 12306 , context ( " / bar " ) ) ; 
 + final HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + running ( mergedServer , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + assertThat ( mergedServer . port ( ) , is ( 12306 ) ) ; 
 + } 
 + } ) ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 index 26670d5 . . 5536707 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / internal / ActualHttpServer . java 
 @ @ - 53 , 8 + 53 , 13 @ @ public class ActualHttpServer extends HttpServer { 
 ActualHttpServer newServer = new ActualHttpServer ( this . port ) ; 
 newServer . addSettings ( settings ) ; 
 newServer . addSettings ( thatServer . getSettings ( ) ) ; 
 + 
 newServer . response ( this . handler ) ; 
 + newServer . matcher = configItem ( this . matcher , this . configs ) ; 
 + 
 newServer . response ( thatServer . handler ) ; 
 + newServer . matcher = configItem ( thatServer . matcher , thatServer . configs ) ; 
 + 
 return newServer ; 
 } 
 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 new file mode 100644 
 index 0000000 . . 092175d 
 - - - / dev / null 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / ActualHttpServerTest . java 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + package com . github . dreamhead . moco . internal ; 
 + 
 + import com . github . dreamhead . moco . AbstractMocoTest ; 
 + import com . github . dreamhead . moco . HttpServer ; 
 + import com . github . dreamhead . moco . Runnable ; 
 + import org . apache . http . client . HttpResponseException ; 
 + import org . junit . Test ; 
 + 
 + import static com . github . dreamhead . moco . Moco . context ; 
 + import static com . github . dreamhead . moco . Moco . httpserver ; 
 + import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; 
 + import static com . github . dreamhead . moco . Runner . running ; 
 + import static org . hamcrest . CoreMatchers . is ; 
 + import static org . junit . Assert . assertThat ; 
 + 
 + public class ActualHttpServerTest extends AbstractMocoTest { 
 + @ Test ( expected = HttpResponseException . class ) 
 + public void should _ merge _ http _ server _ correctly ( ) throws Exception { 
 + HttpServer httpServer = httpserver ( 12306 , context ( " / foo " ) ) ; 
 + httpServer . response ( " foo " ) ; 
 + 
 + HttpServer anotherServer = httpserver ( 12306 , context ( " / bar " ) ) ; 
 + HttpServer mergedServer = ( ( ActualHttpServer ) anotherServer ) . mergeHttpServer ( ( ActualHttpServer ) httpServer ) ; 
 + running ( mergedServer , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + assertThat ( helper . get ( remoteUrl ( " / foo / anything " ) ) , is ( " foo " ) ) ; 
 + helper . get ( remoteUrl ( " / bar / anything " ) ) ; 
 + } 
 + } ) ; 
 + } 
 + }
