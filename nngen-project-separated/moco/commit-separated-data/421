BLEU SCORE: 0.1270331870386537

TEST MSG: removed unused toUrlFunction with string
GENERATED MSG: replaced toUrlSupplier with toUrlFunction

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java <nl> index 877e9ea . . 7eb3b40 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java <nl> @ @ - 75 , 10 + 75 , 6 @ @ public final class URLs { <nl> } <nl> } <nl> <nl> - public static Function < HttpRequest , URL > toUrlFunction ( final String url ) { <nl> - return constant ( toUrl ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) ) ; <nl> - } <nl> - <nl> public static Function < HttpRequest , URL > toUrlFunction ( final Resource url ) { <nl> return new Function < HttpRequest , URL > ( ) { <nl> @ Override <nl> @ @ - 88 , 15 + 84 , 6 @ @ public final class URLs { <nl> } ; <nl> } <nl> <nl> - private static < F , T > Function < F , T > constant ( final T constant ) { <nl> - return new Function < F , T > ( ) { <nl> - @ Override <nl> - public T apply ( final F input ) { <nl> - return constant ; <nl> - } <nl> - } ; <nl> - } <nl> - <nl> private URLs ( ) { <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index ae21c13 . . 40b22e3 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 62 , 7 + 62 , 7 @ @ import static com . github . dreamhead . moco . resource . ResourceFactory . textResource ; <nl> import static com . github . dreamhead . moco . resource . ResourceFactory . uriResource ; <nl> import static com . github . dreamhead . moco . resource . ResourceFactory . versionResource ; <nl> import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; <nl> - import static com . github . dreamhead . moco . util . URLs . toUrlSupplier ; <nl> + import static com . github . dreamhead . moco . util . URLs . toUrlFunction ; <nl> import static com . google . common . base . Optional . of ; <nl> import static com . google . common . base . Preconditions . checkArgument ; <nl> import static com . google . common . base . Preconditions . checkNotNull ; <nl> @ @ - 423 , 7 + 423 , 7 @ @ public final class Moco { <nl> } <nl> <nl> public static ResponseHandler proxy ( final String url , final Failover failover ) { <nl> - return new ProxyResponseHandler ( toUrlSupplier ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , <nl> + return new ProxyResponseHandler ( toUrlFunction ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , <nl> checkNotNull ( failover , " Failover should not be null " ) ) ; <nl> } <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java <nl> index 738104d . . 8c38e01 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java <nl> @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . handler ; <nl> import com . github . dreamhead . moco . HttpRequest ; <nl> import com . github . dreamhead . moco . ResponseHandler ; <nl> import com . github . dreamhead . moco . handler . failover . Failover ; <nl> + import com . google . common . base . Function ; <nl> import com . google . common . base . Optional ; <nl> import com . google . common . base . Supplier ; <nl> <nl> @ @ - 11 , 15 + 12 , 16 @ @ import java . net . URL ; <nl> import static com . google . common . base . Optional . of ; <nl> <nl> public class ProxyResponseHandler extends AbstractProxyResponseHandler implements ResponseHandler { <nl> - private final Supplier < URL > url ; <nl> + private final Function < HttpRequest , URL > url ; <nl> <nl> - public ProxyResponseHandler ( final Supplier < URL > url , final Failover failover ) { <nl> + public ProxyResponseHandler ( final Function < HttpRequest , URL > url , final Failover failover ) { <nl> super ( failover ) ; <nl> this . url = url ; <nl> } <nl> <nl> @ Override <nl> protected Optional < String > doRemoteUrl ( final HttpRequest request ) { <nl> - return of ( this . url . get ( ) . toString ( ) ) ; <nl> + <nl> + return of ( url . apply ( request ) . toString ( ) ) ; <nl> } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java <nl> index 311087e . . 267a67e 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java <nl> @ @ - 1 , 7 + 1 , 8 @ @ <nl> package com . github . dreamhead . moco . util ; <nl> <nl> + import com . github . dreamhead . moco . HttpRequest ; <nl> + import com . google . common . base . Function ; <nl> import com . google . common . base . Strings ; <nl> - import com . google . common . base . Supplier ; <nl> <nl> import java . io . UnsupportedEncodingException ; <nl> import java . net . MalformedURLException ; <nl> @ @ - 10 , 7 + 11 , 6 @ @ import java . net . URLEncoder ; <nl> import java . nio . charset . Charset ; <nl> <nl> import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; <nl> - import static com . google . common . base . Suppliers . ofInstance ; <nl> <nl> public final class URLs { <nl> public static final String SEPARATOR = " / " ; <nl> @ @ - 73 , 8 + 73 , 17 @ @ public final class URLs { <nl> } <nl> } <nl> <nl> - public static Supplier < URL > toUrlSupplier ( final String url ) { <nl> - return ofInstance ( toUrl ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) ) ; <nl> + public static Function < HttpRequest , URL > toUrlFunction ( final String url ) { <nl> + return constant ( toUrl ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) ) ; <nl> + } <nl> + <nl> + private static < F , T > Function < F , T > constant ( final T constant ) { <nl> + return new Function < F , T > ( ) { <nl> + @ Override <nl> + public T apply ( final F input ) { <nl> + return constant ; <nl> + } <nl> + } ; <nl> } <nl> <nl> private URLs ( ) {

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java 
 index 877e9ea . . 7eb3b40 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java 
 @ @ - 75 , 10 + 75 , 6 @ @ public final class URLs { 
 } 
 } 
 
 - public static Function < HttpRequest , URL > toUrlFunction ( final String url ) { 
 - return constant ( toUrl ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) ) ; 
 - } 
 - 
 public static Function < HttpRequest , URL > toUrlFunction ( final Resource url ) { 
 return new Function < HttpRequest , URL > ( ) { 
 @ Override 
 @ @ - 88 , 15 + 84 , 6 @ @ public final class URLs { 
 } ; 
 } 
 
 - private static < F , T > Function < F , T > constant ( final T constant ) { 
 - return new Function < F , T > ( ) { 
 - @ Override 
 - public T apply ( final F input ) { 
 - return constant ; 
 - } 
 - } ; 
 - } 
 - 
 private URLs ( ) { 
 } 


NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index ae21c13 . . 40b22e3 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 62 , 7 + 62 , 7 @ @ import static com . github . dreamhead . moco . resource . ResourceFactory . textResource ; 
 import static com . github . dreamhead . moco . resource . ResourceFactory . uriResource ; 
 import static com . github . dreamhead . moco . resource . ResourceFactory . versionResource ; 
 import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; 
 - import static com . github . dreamhead . moco . util . URLs . toUrlSupplier ; 
 + import static com . github . dreamhead . moco . util . URLs . toUrlFunction ; 
 import static com . google . common . base . Optional . of ; 
 import static com . google . common . base . Preconditions . checkArgument ; 
 import static com . google . common . base . Preconditions . checkNotNull ; 
 @ @ - 423 , 7 + 423 , 7 @ @ public final class Moco { 
 } 
 
 public static ResponseHandler proxy ( final String url , final Failover failover ) { 
 - return new ProxyResponseHandler ( toUrlSupplier ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , 
 + return new ProxyResponseHandler ( toUrlFunction ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , 
 checkNotNull ( failover , " Failover should not be null " ) ) ; 
 } 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java 
 index 738104d . . 8c38e01 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / ProxyResponseHandler . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . handler ; 
 import com . github . dreamhead . moco . HttpRequest ; 
 import com . github . dreamhead . moco . ResponseHandler ; 
 import com . github . dreamhead . moco . handler . failover . Failover ; 
 + import com . google . common . base . Function ; 
 import com . google . common . base . Optional ; 
 import com . google . common . base . Supplier ; 
 
 @ @ - 11 , 15 + 12 , 16 @ @ import java . net . URL ; 
 import static com . google . common . base . Optional . of ; 
 
 public class ProxyResponseHandler extends AbstractProxyResponseHandler implements ResponseHandler { 
 - private final Supplier < URL > url ; 
 + private final Function < HttpRequest , URL > url ; 
 
 - public ProxyResponseHandler ( final Supplier < URL > url , final Failover failover ) { 
 + public ProxyResponseHandler ( final Function < HttpRequest , URL > url , final Failover failover ) { 
 super ( failover ) ; 
 this . url = url ; 
 } 
 
 @ Override 
 protected Optional < String > doRemoteUrl ( final HttpRequest request ) { 
 - return of ( this . url . get ( ) . toString ( ) ) ; 
 + 
 + return of ( url . apply ( request ) . toString ( ) ) ; 
 } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java 
 index 311087e . . 267a67e 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / URLs . java 
 @ @ - 1 , 7 + 1 , 8 @ @ 
 package com . github . dreamhead . moco . util ; 
 
 + import com . github . dreamhead . moco . HttpRequest ; 
 + import com . google . common . base . Function ; 
 import com . google . common . base . Strings ; 
 - import com . google . common . base . Supplier ; 
 
 import java . io . UnsupportedEncodingException ; 
 import java . net . MalformedURLException ; 
 @ @ - 10 , 7 + 11 , 6 @ @ import java . net . URLEncoder ; 
 import java . nio . charset . Charset ; 
 
 import static com . github . dreamhead . moco . util . Preconditions . checkNotNullOrEmpty ; 
 - import static com . google . common . base . Suppliers . ofInstance ; 
 
 public final class URLs { 
 public static final String SEPARATOR = " / " ; 
 @ @ - 73 , 8 + 73 , 17 @ @ public final class URLs { 
 } 
 } 
 
 - public static Supplier < URL > toUrlSupplier ( final String url ) { 
 - return ofInstance ( toUrl ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) ) ; 
 + public static Function < HttpRequest , URL > toUrlFunction ( final String url ) { 
 + return constant ( toUrl ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) ) ; 
 + } 
 + 
 + private static < F , T > Function < F , T > constant ( final T constant ) { 
 + return new Function < F , T > ( ) { 
 + @ Override 
 + public T apply ( final F input ) { 
 + return constant ; 
 + } 
 + } ; 
 } 
 
 private URLs ( ) {
