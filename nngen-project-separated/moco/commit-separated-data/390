BLEU SCORE: 0.01763751180315069

TEST MSG: fixed style in moco socket helper
GENERATED MSG: added evil forward support which is just request once right now

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoSocketHelper . java b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoSocketHelper . java <nl> index 62431ae . . 48b18b9 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoSocketHelper . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoSocketHelper . java <nl> @ @ - 1 , 6 + 1 , 11 @ @ <nl> package com . github . dreamhead . moco . helper ; <nl> <nl> - import java . io . * ; <nl> + import java . io . BufferedReader ; <nl> + import java . io . Closeable ; <nl> + import java . io . IOException ; <nl> + import java . io . InputStreamReader ; <nl> + import java . io . OutputStream ; <nl> + import java . io . PrintStream ; <nl> import java . net . InetSocketAddress ; <nl> import java . net . Socket ; <nl> import java . net . SocketAddress ; <nl> @ @ - 12 , 7 + 17 , 7 @ @ public class MocoSocketHelper implements Closeable { <nl> private PrintStream os ; <nl> private BufferedReader reader ; <nl> <nl> - public MocoSocketHelper ( String target , int port ) { <nl> + public MocoSocketHelper ( final String target , final int port ) { <nl> socket = new Socket ( ) ; <nl> address = new InetSocketAddress ( target , port ) ; <nl> } <nl> @ @ - 29 , 7 + 34 , 7 @ @ public class MocoSocketHelper implements Closeable { <nl> } <nl> } <nl> <nl> - public String send ( String request ) { <nl> + public String send ( final String request ) { <nl> os . print ( request ) ; <nl> os . flush ( ) ; <nl> <nl> @ @ - 40 , 7 + 45 , 7 @ @ public class MocoSocketHelper implements Closeable { <nl> } <nl> } <nl> <nl> - public String send ( String request , int readCount ) { <nl> + public String send ( final String request , final int readCount ) { <nl> os . print ( request ) ; <nl> os . flush ( ) ; <nl>
NEAREST DIFF (one line): diff - - git a / TODO . md b / TODO . md <nl> index 0faef00 . . e86054f 100644 <nl> - - - a / TODO . md <nl> + + + b / TODO . md <nl> @ @ - 6 , 10 + 6 , 6 @ @ <nl> # extension <nl> * marshal support <nl> <nl> - # functionality <nl> - * standalone server <nl> - * forward request to other site <nl> - <nl> # debug <nl> * more debuggable response <nl> <nl> @ @ - 208 , 4 + 204 , 16 @ @ Request by XPath <nl> < / td > <nl> < / tr > <nl> <nl> + < tr > <nl> + < th > <nl> + Response with Forward to other URL <nl> + < / th > <nl> + < td > <nl> + & # 10003 ; <nl> + < / td > <nl> + < td > <nl> + & # 10003 ; <nl> + < / td > <nl> + < / tr > <nl> + <nl> < / table > <nl> \ No newline at end of file <nl> diff - - git a / src / main / java / com / github / dreamhead / moco / Moco . java b / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index 6f8cdd8 . . cfaf5e2 100644 <nl> - - - a / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 10 , 7 + 10 , 9 @ @ import com . github . dreamhead . moco . model . ContentStream ; <nl> <nl> import java . io . FileInputStream ; <nl> import java . io . FileNotFoundException ; <nl> + import java . io . IOException ; <nl> import java . io . InputStream ; <nl> + import java . net . URL ; <nl> import java . util . List ; <nl> <nl> import static com . google . common . base . Preconditions . checkNotNull ; <nl> @ @ - 109 , 6 + 111 , 14 @ @ public class Moco { <nl> return new StatusCodeResponseHandler ( code ) ; <nl> } <nl> <nl> + public static ContentStream url ( String url ) { <nl> + try { <nl> + return stream ( new URL ( url ) . openStream ( ) ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + } <nl> + <nl> public static void running ( HttpServer httpServer , Runnable runnable ) { <nl> MocoHttpServer server = new MocoHttpServer ( httpServer ) ; <nl> try { <nl> diff - - git a / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java b / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java <nl> index 38ac2b5 . . 7844d39 100644 <nl> - - - a / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java <nl> + + + b / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java <nl> @ @ - 15 , 6 + 15 , 7 @ @ import com . google . common . base . Function ; <nl> import java . io . FileInputStream ; <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> + import java . net . URL ; <nl> import java . util . Collection ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> @ @ - 57 , 6 + 58 , 9 @ @ public class HttpServerParser { <nl> Map < String , String > headers = response . getHeaders ( ) ; <nl> Collection < ResponseHandler > collection = transform ( headers . entrySet ( ) , toHeaderResponseHandler ( ) ) ; <nl> return new AndResponseHandler ( collection . toArray ( new ResponseHandler [ collection . size ( ) ] ) ) ; <nl> + } else if ( response . getUrl ( ) ! = null ) { <nl> + URL url = new URL ( response . getUrl ( ) ) ; <nl> + return new ContentHandler ( toByteArray ( url . openStream ( ) ) ) ; <nl> } <nl> <nl> throw new IllegalArgumentException ( " unknown response setting with " + session ) ; <nl> diff - - git a / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java b / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java <nl> index df8f53b . . 7f612b6 100644 <nl> - - - a / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java <nl> + + + b / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java <nl> @ @ - 8 , 6 + 8 , 7 @ @ public class ResponseSetting { <nl> private String text ; <nl> private String file ; <nl> private String status ; <nl> + private String url ; <nl> private Map < String , String > headers ; <nl> <nl> public String getText ( ) { <nl> @ @ - 22 , 12 + 23 , 16 @ @ public class ResponseSetting { <nl> return status ; <nl> } <nl> <nl> + public String getUrl ( ) { <nl> + return url ; <nl> + } <nl> + <nl> public Map < String , String > getHeaders ( ) { <nl> return headers ; <nl> } <nl> <nl> @ Override <nl> public String toString ( ) { <nl> - return Objects . toStringHelper ( this ) . add ( " text " , text ) . add ( " file " , file ) . add ( " status " , status ) . add ( " headers " , headers ) . toString ( ) ; <nl> + return Objects . toStringHelper ( this ) . add ( " text " , text ) . add ( " file " , file ) . add ( " status " , status ) . add ( " headers " , headers ) . add ( " url " , url ) . toString ( ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java b / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> index b1909c8 . . 03de8aa 100644 <nl> - - - a / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> + + + b / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> @ @ - 154 , 4 + 154 , 11 @ @ public class MocoStandaloneTest { <nl> assertThat ( response . getHeaders ( " content - type " ) [ 0 ] . getValue ( ) , is ( " application / json " ) ) ; <nl> assertThat ( response . getHeaders ( " foo " ) [ 0 ] . getValue ( ) , is ( " bar " ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ run _ as _ proxy ( ) throws IOException { <nl> + runWithConiguration ( " foo . json " ) ; <nl> + HttpResponse response = Request . Get ( " http : / / localhost : 8080 / url " ) . execute ( ) . returnResponse ( ) ; <nl> + assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 200 ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / java / com / github / dreamhead / moco / MocoTest . java b / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> index 05cf51e . . 1a25feb 100644 <nl> - - - a / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> + + + b / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> @ @ - 9 , 6 + 9 , 8 @ @ import org . junit . Test ; <nl> <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> + import java . net . MalformedURLException ; <nl> + import java . net . URL ; <nl> <nl> import static com . github . dreamhead . moco . Moco . * ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> @ @ - 489 , 4 + 491 , 21 @ @ public class MocoTest { <nl> } <nl> } ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ run _ as _ proxy ( ) throws IOException { <nl> + server . response ( url ( " http : / / www . google . com " ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) { <nl> + try { <nl> + int statusCode = Request . Get ( " http : / / localhost : 8080 " ) . execute ( ) . returnResponse ( ) . getStatusLine ( ) . getStatusCode ( ) ; <nl> + assertThat ( statusCode , is ( 200 ) ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + } <nl> + } ) ; <nl> + } <nl> } <nl> diff - - git a / src / test / resources / foo . json b / src / test / resources / foo . json <nl> index 83acb9c . . 38c9ba6 100644 <nl> - - - a / src / test / resources / foo . json <nl> + + + b / src / test / resources / foo . json <nl> @ @ - 109 , 6 + 109 , 16 @ @ <nl> " foo " : " bar " <nl> } <nl> } <nl> + } , <nl> + { <nl> + " request " : <nl> + { <nl> + " uri " : " / url " <nl> + } , <nl> + " response " : <nl> + { <nl> + " url " : " http : / / www . google . com " <nl> + } <nl> } <nl> ] <nl> } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoSocketHelper . java b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoSocketHelper . java 
 index 62431ae . . 48b18b9 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoSocketHelper . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoSocketHelper . java 
 @ @ - 1 , 6 + 1 , 11 @ @ 
 package com . github . dreamhead . moco . helper ; 
 
 - import java . io . * ; 
 + import java . io . BufferedReader ; 
 + import java . io . Closeable ; 
 + import java . io . IOException ; 
 + import java . io . InputStreamReader ; 
 + import java . io . OutputStream ; 
 + import java . io . PrintStream ; 
 import java . net . InetSocketAddress ; 
 import java . net . Socket ; 
 import java . net . SocketAddress ; 
 @ @ - 12 , 7 + 17 , 7 @ @ public class MocoSocketHelper implements Closeable { 
 private PrintStream os ; 
 private BufferedReader reader ; 
 
 - public MocoSocketHelper ( String target , int port ) { 
 + public MocoSocketHelper ( final String target , final int port ) { 
 socket = new Socket ( ) ; 
 address = new InetSocketAddress ( target , port ) ; 
 } 
 @ @ - 29 , 7 + 34 , 7 @ @ public class MocoSocketHelper implements Closeable { 
 } 
 } 
 
 - public String send ( String request ) { 
 + public String send ( final String request ) { 
 os . print ( request ) ; 
 os . flush ( ) ; 
 
 @ @ - 40 , 7 + 45 , 7 @ @ public class MocoSocketHelper implements Closeable { 
 } 
 } 
 
 - public String send ( String request , int readCount ) { 
 + public String send ( final String request , final int readCount ) { 
 os . print ( request ) ; 
 os . flush ( ) ; 


NEAREST DIFF:
diff - - git a / TODO . md b / TODO . md 
 index 0faef00 . . e86054f 100644 
 - - - a / TODO . md 
 + + + b / TODO . md 
 @ @ - 6 , 10 + 6 , 6 @ @ 
 # extension 
 * marshal support 
 
 - # functionality 
 - * standalone server 
 - * forward request to other site 
 - 
 # debug 
 * more debuggable response 
 
 @ @ - 208 , 4 + 204 , 16 @ @ Request by XPath 
 < / td > 
 < / tr > 
 
 + < tr > 
 + < th > 
 + Response with Forward to other URL 
 + < / th > 
 + < td > 
 + & # 10003 ; 
 + < / td > 
 + < td > 
 + & # 10003 ; 
 + < / td > 
 + < / tr > 
 + 
 < / table > 
 \ No newline at end of file 
 diff - - git a / src / main / java / com / github / dreamhead / moco / Moco . java b / src / main / java / com / github / dreamhead / moco / Moco . java 
 index 6f8cdd8 . . cfaf5e2 100644 
 - - - a / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 10 , 7 + 10 , 9 @ @ import com . github . dreamhead . moco . model . ContentStream ; 
 
 import java . io . FileInputStream ; 
 import java . io . FileNotFoundException ; 
 + import java . io . IOException ; 
 import java . io . InputStream ; 
 + import java . net . URL ; 
 import java . util . List ; 
 
 import static com . google . common . base . Preconditions . checkNotNull ; 
 @ @ - 109 , 6 + 111 , 14 @ @ public class Moco { 
 return new StatusCodeResponseHandler ( code ) ; 
 } 
 
 + public static ContentStream url ( String url ) { 
 + try { 
 + return stream ( new URL ( url ) . openStream ( ) ) ; 
 + } catch ( IOException e ) { 
 + throw new RuntimeException ( e ) ; 
 + } 
 + } 
 + 
 public static void running ( HttpServer httpServer , Runnable runnable ) { 
 MocoHttpServer server = new MocoHttpServer ( httpServer ) ; 
 try { 
 diff - - git a / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java b / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java 
 index 38ac2b5 . . 7844d39 100644 
 - - - a / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java 
 + + + b / src / main / java / com / github / dreamhead / moco / parser / HttpServerParser . java 
 @ @ - 15 , 6 + 15 , 7 @ @ import com . google . common . base . Function ; 
 import java . io . FileInputStream ; 
 import java . io . IOException ; 
 import java . io . InputStream ; 
 + import java . net . URL ; 
 import java . util . Collection ; 
 import java . util . List ; 
 import java . util . Map ; 
 @ @ - 57 , 6 + 58 , 9 @ @ public class HttpServerParser { 
 Map < String , String > headers = response . getHeaders ( ) ; 
 Collection < ResponseHandler > collection = transform ( headers . entrySet ( ) , toHeaderResponseHandler ( ) ) ; 
 return new AndResponseHandler ( collection . toArray ( new ResponseHandler [ collection . size ( ) ] ) ) ; 
 + } else if ( response . getUrl ( ) ! = null ) { 
 + URL url = new URL ( response . getUrl ( ) ) ; 
 + return new ContentHandler ( toByteArray ( url . openStream ( ) ) ) ; 
 } 
 
 throw new IllegalArgumentException ( " unknown response setting with " + session ) ; 
 diff - - git a / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java b / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java 
 index df8f53b . . 7f612b6 100644 
 - - - a / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java 
 + + + b / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java 
 @ @ - 8 , 6 + 8 , 7 @ @ public class ResponseSetting { 
 private String text ; 
 private String file ; 
 private String status ; 
 + private String url ; 
 private Map < String , String > headers ; 
 
 public String getText ( ) { 
 @ @ - 22 , 12 + 23 , 16 @ @ public class ResponseSetting { 
 return status ; 
 } 
 
 + public String getUrl ( ) { 
 + return url ; 
 + } 
 + 
 public Map < String , String > getHeaders ( ) { 
 return headers ; 
 } 
 
 @ Override 
 public String toString ( ) { 
 - return Objects . toStringHelper ( this ) . add ( " text " , text ) . add ( " file " , file ) . add ( " status " , status ) . add ( " headers " , headers ) . toString ( ) ; 
 + return Objects . toStringHelper ( this ) . add ( " text " , text ) . add ( " file " , file ) . add ( " status " , status ) . add ( " headers " , headers ) . add ( " url " , url ) . toString ( ) ; 
 } 
 } 
 diff - - git a / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java b / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 index b1909c8 . . 03de8aa 100644 
 - - - a / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 + + + b / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 @ @ - 154 , 4 + 154 , 11 @ @ public class MocoStandaloneTest { 
 assertThat ( response . getHeaders ( " content - type " ) [ 0 ] . getValue ( ) , is ( " application / json " ) ) ; 
 assertThat ( response . getHeaders ( " foo " ) [ 0 ] . getValue ( ) , is ( " bar " ) ) ; 
 } 
 + 
 + @ Test 
 + public void should _ run _ as _ proxy ( ) throws IOException { 
 + runWithConiguration ( " foo . json " ) ; 
 + HttpResponse response = Request . Get ( " http : / / localhost : 8080 / url " ) . execute ( ) . returnResponse ( ) ; 
 + assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 200 ) ) ; 
 + } 
 } 
 diff - - git a / src / test / java / com / github / dreamhead / moco / MocoTest . java b / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 index 05cf51e . . 1a25feb 100644 
 - - - a / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 + + + b / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 @ @ - 9 , 6 + 9 , 8 @ @ import org . junit . Test ; 
 
 import java . io . IOException ; 
 import java . io . InputStream ; 
 + import java . net . MalformedURLException ; 
 + import java . net . URL ; 
 
 import static com . github . dreamhead . moco . Moco . * ; 
 import static org . hamcrest . CoreMatchers . is ; 
 @ @ - 489 , 4 + 491 , 21 @ @ public class MocoTest { 
 } 
 } ) ; 
 } 
 + 
 + @ Test 
 + public void should _ run _ as _ proxy ( ) throws IOException { 
 + server . response ( url ( " http : / / www . google . com " ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) { 
 + try { 
 + int statusCode = Request . Get ( " http : / / localhost : 8080 " ) . execute ( ) . returnResponse ( ) . getStatusLine ( ) . getStatusCode ( ) ; 
 + assertThat ( statusCode , is ( 200 ) ) ; 
 + } catch ( IOException e ) { 
 + throw new RuntimeException ( e ) ; 
 + } 
 + } 
 + } ) ; 
 + } 
 } 
 diff - - git a / src / test / resources / foo . json b / src / test / resources / foo . json 
 index 83acb9c . . 38c9ba6 100644 
 - - - a / src / test / resources / foo . json 
 + + + b / src / test / resources / foo . json 
 @ @ - 109 , 6 + 109 , 16 @ @ 
 " foo " : " bar " 
 } 
 } 
 + } , 
 + { 
 + " request " : 
 + { 
 + " uri " : " / url " 
 + } , 
 + " response " : 
 + { 
 + " url " : " http : / / www . google . com " 
 + } 
 } 
 ] 
 } 
 \ No newline at end of file
