BLEU SCORE: 0.056697911109760024

TEST MSG: changed proxy with resource to proxy with content resource
GENERATED MSG: added argument check to status and proxy

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index 2c4dcca . . 9c43dae 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 422 , 16 + 422 , 16 @ @ public final class Moco { <nl> return proxy ( checkNotNullOrEmpty ( url , " URL should not be null " ) , Failover . DEFAULT _ FAILOVER ) ; <nl> } <nl> <nl> - public static ResponseHandler proxy ( final Resource url ) { <nl> + public static ResponseHandler proxy ( final ContentResource url ) { <nl> return proxy ( checkNotNull ( url , " URL should not be null " ) , Failover . DEFAULT _ FAILOVER ) ; <nl> } <nl> <nl> public static ResponseHandler proxy ( final String url , final Failover failover ) { <nl> - return new ProxyResponseHandler ( toUrlFunction ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , <nl> + return proxy ( text ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , <nl> checkNotNull ( failover , " Failover should not be null " ) ) ; <nl> } <nl> <nl> - public static ResponseHandler proxy ( final Resource url , final Failover failover ) { <nl> + public static ResponseHandler proxy ( final ContentResource url , final Failover failover ) { <nl> return new ProxyResponseHandler ( toUrlFunction ( checkNotNull ( url , " URL should not be null " ) ) , <nl> checkNotNull ( failover , " Failover should not be null " ) ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index 7f60d4d . . b7c2d66 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 221 , 11 + 221 , 12 @ @ public class Moco { <nl> } <nl> <nl> public static ResponseHandler status ( final int code ) { <nl> + checkArgument ( code > 0 , " Status code must be greater than zero " ) ; <nl> return new StatusCodeResponseHandler ( code ) ; <nl> } <nl> <nl> public static ResponseHandler proxy ( final String url ) { <nl> - return proxy ( url , Failover . EMPTY _ FAILOVER ) ; <nl> + return proxy ( checkNotNull ( url , " URL should not be null " ) , Failover . EMPTY _ FAILOVER ) ; <nl> } <nl> <nl> public static ResponseHandler proxy ( final String url , final Failover failover ) {

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index 2c4dcca . . 9c43dae 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 422 , 16 + 422 , 16 @ @ public final class Moco { 
 return proxy ( checkNotNullOrEmpty ( url , " URL should not be null " ) , Failover . DEFAULT _ FAILOVER ) ; 
 } 
 
 - public static ResponseHandler proxy ( final Resource url ) { 
 + public static ResponseHandler proxy ( final ContentResource url ) { 
 return proxy ( checkNotNull ( url , " URL should not be null " ) , Failover . DEFAULT _ FAILOVER ) ; 
 } 
 
 public static ResponseHandler proxy ( final String url , final Failover failover ) { 
 - return new ProxyResponseHandler ( toUrlFunction ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , 
 + return proxy ( text ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , 
 checkNotNull ( failover , " Failover should not be null " ) ) ; 
 } 
 
 - public static ResponseHandler proxy ( final Resource url , final Failover failover ) { 
 + public static ResponseHandler proxy ( final ContentResource url , final Failover failover ) { 
 return new ProxyResponseHandler ( toUrlFunction ( checkNotNull ( url , " URL should not be null " ) ) , 
 checkNotNull ( failover , " Failover should not be null " ) ) ; 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index 7f60d4d . . b7c2d66 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 221 , 11 + 221 , 12 @ @ public class Moco { 
 } 
 
 public static ResponseHandler status ( final int code ) { 
 + checkArgument ( code > 0 , " Status code must be greater than zero " ) ; 
 return new StatusCodeResponseHandler ( code ) ; 
 } 
 
 public static ResponseHandler proxy ( final String url ) { 
 - return proxy ( url , Failover . EMPTY _ FAILOVER ) ; 
 + return proxy ( checkNotNull ( url , " URL should not be null " ) , Failover . EMPTY _ FAILOVER ) ; 
 } 
 
 public static ResponseHandler proxy ( final String url , final Failover failover ) {
