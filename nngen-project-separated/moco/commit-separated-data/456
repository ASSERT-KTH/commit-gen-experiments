BLEU SCORE: 0.037477767366779206

TEST MSG: extracted url resource from get and post setting for stanadlone mode
GENERATED MSG: added toString to event setting

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> index b29f1f9 . . 8c1813e 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> @ @ - 2 , 10 + 2 , 12 @ @ package com . github . dreamhead . moco . parser . model ; <nl> <nl> import com . fasterxml . jackson . annotation . JsonAutoDetect ; <nl> import com . github . dreamhead . moco . MocoEventAction ; <nl> + import com . github . dreamhead . moco . resource . Resource ; <nl> import com . google . common . base . MoreObjects ; <nl> <nl> import static com . github . dreamhead . moco . Moco . get ; <nl> import static com . github . dreamhead . moco . Moco . template ; <nl> + import static com . github . dreamhead . moco . Moco . text ; <nl> import static com . github . dreamhead . moco . parser . model . DynamicResponseHandlerFactory . toVariables ; <nl> <nl> @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) <nl> @ @ - 13 , 12 + 15 , 16 @ @ public class GetSetting { <nl> private TextContainer url ; <nl> <nl> public MocoEventAction createAction ( ) { <nl> + return get ( urlResource ( url ) ) ; <nl> + } <nl> + <nl> + private Resource urlResource ( final TextContainer url ) { <nl> if ( url . isRawText ( ) ) { <nl> - return get ( url . getText ( ) ) ; <nl> + return text ( url . getText ( ) ) ; <nl> } <nl> <nl> if ( url . isForTemplate ( ) ) { <nl> - return get ( template ( url . getText ( ) , toVariables ( url . getProps ( ) ) ) ) ; <nl> + return template ( url . getText ( ) , toVariables ( url . getProps ( ) ) ) ; <nl> } <nl> <nl> throw new IllegalArgumentException ( " Unknown " + url + " for get setting " ) ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java <nl> index 040c719 . . 98cdf66 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java <nl> @ @ - 3 , 11 + 3 , 13 @ @ package com . github . dreamhead . moco . parser . model ; <nl> import com . fasterxml . jackson . annotation . JsonAutoDetect ; <nl> import com . github . dreamhead . moco . Moco ; <nl> import com . github . dreamhead . moco . MocoEventAction ; <nl> + import com . github . dreamhead . moco . resource . Resource ; <nl> import com . google . common . base . MoreObjects ; <nl> <nl> import static com . github . dreamhead . moco . Moco . get ; <nl> import static com . github . dreamhead . moco . Moco . post ; <nl> import static com . github . dreamhead . moco . Moco . template ; <nl> + import static com . github . dreamhead . moco . Moco . text ; <nl> import static com . github . dreamhead . moco . parser . model . DynamicResponseHandlerFactory . toVariables ; <nl> <nl> @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) <nl> @ @ - 16 , 15 + 18 , 19 @ @ public class PostSetting { <nl> private String content ; <nl> <nl> public MocoEventAction createAction ( ) { <nl> + return post ( urlResource ( this . url ) , Moco . text ( content ) ) ; <nl> + } <nl> + <nl> + private Resource urlResource ( final TextContainer url ) { <nl> if ( url . isRawText ( ) ) { <nl> - return post ( url . getText ( ) , Moco . text ( content ) ) ; <nl> + return text ( url . getText ( ) ) ; <nl> } <nl> <nl> if ( url . isForTemplate ( ) ) { <nl> - return post ( template ( url . getText ( ) , toVariables ( url . getProps ( ) ) ) , Moco . text ( content ) ) ; <nl> + return template ( url . getText ( ) , toVariables ( url . getProps ( ) ) ) ; <nl> } <nl> <nl> - throw new IllegalArgumentException ( " Unknown " + url + " for get setting " ) ; <nl> + throw new IllegalArgumentException ( " Unknown " + url + " for post setting " ) ; <nl> } <nl> <nl> @ Override
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java <nl> index e31aa2d . . 7946e71 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java <nl> @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; <nl> import com . fasterxml . jackson . annotation . JsonAutoDetect ; <nl> import com . github . dreamhead . moco . Moco ; <nl> import com . github . dreamhead . moco . MocoEventAction ; <nl> + import com . google . common . base . MoreObjects ; <nl> <nl> @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) <nl> public class CompleteEventSetting { <nl> @ @ - 33 , 4 + 34 , 15 @ @ public class CompleteEventSetting { <nl> <nl> return null ; <nl> } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return MoreObjects . toStringHelper ( this ) <nl> + . omitNullValues ( ) <nl> + . add ( " async " , async ) <nl> + . add ( " latency " , latency ) <nl> + . add ( " post " , post ) <nl> + . add ( " get " , get ) <nl> + . toString ( ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java <nl> index 8891e8d . . bb3cc52 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java <nl> @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; <nl> import com . fasterxml . jackson . annotation . JsonAutoDetect ; <nl> import com . github . dreamhead . moco . Moco ; <nl> import com . github . dreamhead . moco . MocoEventTrigger ; <nl> + import com . google . common . base . MoreObjects ; <nl> import com . google . common . collect . ImmutableList ; <nl> <nl> import static com . google . common . collect . ImmutableList . of ; <nl> @ @ - 18 , 4 + 19 , 12 @ @ public class EventSetting { <nl> <nl> return of ( ) ; <nl> } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return MoreObjects . toStringHelper ( this ) <nl> + . omitNullValues ( ) <nl> + . add ( " complete " , complete ) <nl> + . toString ( ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> index fbdb5f2 . . 391cae7 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> @ @ - 2 , 6 + 2 , 7 @ @ package com . github . dreamhead . moco . parser . model ; <nl> <nl> import com . fasterxml . jackson . annotation . JsonAutoDetect ; <nl> import com . github . dreamhead . moco . MocoEventAction ; <nl> + import com . google . common . base . MoreObjects ; <nl> <nl> import static com . github . dreamhead . moco . Moco . get ; <nl> <nl> @ @ - 12 , 4 + 13 , 12 @ @ public class GetSetting { <nl> public MocoEventAction createAction ( ) { <nl> return get ( url ) ; <nl> } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return MoreObjects . toStringHelper ( this ) <nl> + . omitNullValues ( ) <nl> + . add ( " url " , url ) <nl> + . toString ( ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java <nl> index ecc61a0 . . aa5d3b7 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java <nl> @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; <nl> import com . fasterxml . jackson . annotation . JsonAutoDetect ; <nl> import com . github . dreamhead . moco . Moco ; <nl> import com . github . dreamhead . moco . MocoEventAction ; <nl> + import com . google . common . base . MoreObjects ; <nl> <nl> import static com . github . dreamhead . moco . Moco . post ; <nl> <nl> @ @ - 14 , 4 + 15 , 13 @ @ public class PostSetting { <nl> public MocoEventAction createAction ( ) { <nl> return post ( url , Moco . text ( content ) ) ; <nl> } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return MoreObjects . toStringHelper ( this ) <nl> + . omitNullValues ( ) <nl> + . add ( " url " , url ) <nl> + . add ( " content " , content ) <nl> + . toString ( ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 index b29f1f9 . . 8c1813e 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 @ @ - 2 , 10 + 2 , 12 @ @ package com . github . dreamhead . moco . parser . model ; 
 
 import com . fasterxml . jackson . annotation . JsonAutoDetect ; 
 import com . github . dreamhead . moco . MocoEventAction ; 
 + import com . github . dreamhead . moco . resource . Resource ; 
 import com . google . common . base . MoreObjects ; 
 
 import static com . github . dreamhead . moco . Moco . get ; 
 import static com . github . dreamhead . moco . Moco . template ; 
 + import static com . github . dreamhead . moco . Moco . text ; 
 import static com . github . dreamhead . moco . parser . model . DynamicResponseHandlerFactory . toVariables ; 
 
 @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) 
 @ @ - 13 , 12 + 15 , 16 @ @ public class GetSetting { 
 private TextContainer url ; 
 
 public MocoEventAction createAction ( ) { 
 + return get ( urlResource ( url ) ) ; 
 + } 
 + 
 + private Resource urlResource ( final TextContainer url ) { 
 if ( url . isRawText ( ) ) { 
 - return get ( url . getText ( ) ) ; 
 + return text ( url . getText ( ) ) ; 
 } 
 
 if ( url . isForTemplate ( ) ) { 
 - return get ( template ( url . getText ( ) , toVariables ( url . getProps ( ) ) ) ) ; 
 + return template ( url . getText ( ) , toVariables ( url . getProps ( ) ) ) ; 
 } 
 
 throw new IllegalArgumentException ( " Unknown " + url + " for get setting " ) ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java 
 index 040c719 . . 98cdf66 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java 
 @ @ - 3 , 11 + 3 , 13 @ @ package com . github . dreamhead . moco . parser . model ; 
 import com . fasterxml . jackson . annotation . JsonAutoDetect ; 
 import com . github . dreamhead . moco . Moco ; 
 import com . github . dreamhead . moco . MocoEventAction ; 
 + import com . github . dreamhead . moco . resource . Resource ; 
 import com . google . common . base . MoreObjects ; 
 
 import static com . github . dreamhead . moco . Moco . get ; 
 import static com . github . dreamhead . moco . Moco . post ; 
 import static com . github . dreamhead . moco . Moco . template ; 
 + import static com . github . dreamhead . moco . Moco . text ; 
 import static com . github . dreamhead . moco . parser . model . DynamicResponseHandlerFactory . toVariables ; 
 
 @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) 
 @ @ - 16 , 15 + 18 , 19 @ @ public class PostSetting { 
 private String content ; 
 
 public MocoEventAction createAction ( ) { 
 + return post ( urlResource ( this . url ) , Moco . text ( content ) ) ; 
 + } 
 + 
 + private Resource urlResource ( final TextContainer url ) { 
 if ( url . isRawText ( ) ) { 
 - return post ( url . getText ( ) , Moco . text ( content ) ) ; 
 + return text ( url . getText ( ) ) ; 
 } 
 
 if ( url . isForTemplate ( ) ) { 
 - return post ( template ( url . getText ( ) , toVariables ( url . getProps ( ) ) ) , Moco . text ( content ) ) ; 
 + return template ( url . getText ( ) , toVariables ( url . getProps ( ) ) ) ; 
 } 
 
 - throw new IllegalArgumentException ( " Unknown " + url + " for get setting " ) ; 
 + throw new IllegalArgumentException ( " Unknown " + url + " for post setting " ) ; 
 } 
 
 @ Override

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java 
 index e31aa2d . . 7946e71 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; 
 import com . fasterxml . jackson . annotation . JsonAutoDetect ; 
 import com . github . dreamhead . moco . Moco ; 
 import com . github . dreamhead . moco . MocoEventAction ; 
 + import com . google . common . base . MoreObjects ; 
 
 @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) 
 public class CompleteEventSetting { 
 @ @ - 33 , 4 + 34 , 15 @ @ public class CompleteEventSetting { 
 
 return null ; 
 } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return MoreObjects . toStringHelper ( this ) 
 + . omitNullValues ( ) 
 + . add ( " async " , async ) 
 + . add ( " latency " , latency ) 
 + . add ( " post " , post ) 
 + . add ( " get " , get ) 
 + . toString ( ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java 
 index 8891e8d . . bb3cc52 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; 
 import com . fasterxml . jackson . annotation . JsonAutoDetect ; 
 import com . github . dreamhead . moco . Moco ; 
 import com . github . dreamhead . moco . MocoEventTrigger ; 
 + import com . google . common . base . MoreObjects ; 
 import com . google . common . collect . ImmutableList ; 
 
 import static com . google . common . collect . ImmutableList . of ; 
 @ @ - 18 , 4 + 19 , 12 @ @ public class EventSetting { 
 
 return of ( ) ; 
 } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return MoreObjects . toStringHelper ( this ) 
 + . omitNullValues ( ) 
 + . add ( " complete " , complete ) 
 + . toString ( ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 index fbdb5f2 . . 391cae7 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 @ @ - 2 , 6 + 2 , 7 @ @ package com . github . dreamhead . moco . parser . model ; 
 
 import com . fasterxml . jackson . annotation . JsonAutoDetect ; 
 import com . github . dreamhead . moco . MocoEventAction ; 
 + import com . google . common . base . MoreObjects ; 
 
 import static com . github . dreamhead . moco . Moco . get ; 
 
 @ @ - 12 , 4 + 13 , 12 @ @ public class GetSetting { 
 public MocoEventAction createAction ( ) { 
 return get ( url ) ; 
 } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return MoreObjects . toStringHelper ( this ) 
 + . omitNullValues ( ) 
 + . add ( " url " , url ) 
 + . toString ( ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java 
 index ecc61a0 . . aa5d3b7 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; 
 import com . fasterxml . jackson . annotation . JsonAutoDetect ; 
 import com . github . dreamhead . moco . Moco ; 
 import com . github . dreamhead . moco . MocoEventAction ; 
 + import com . google . common . base . MoreObjects ; 
 
 import static com . github . dreamhead . moco . Moco . post ; 
 
 @ @ - 14 , 4 + 15 , 13 @ @ public class PostSetting { 
 public MocoEventAction createAction ( ) { 
 return post ( url , Moco . text ( content ) ) ; 
 } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return MoreObjects . toStringHelper ( this ) 
 + . omitNullValues ( ) 
 + . add ( " url " , url ) 
 + . add ( " content " , content ) 
 + . toString ( ) ; 
 + } 
 }
