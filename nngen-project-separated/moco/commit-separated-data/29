BLEU SCORE: 0.06567274736060397

TEST MSG: customized proxy status in publish proxy api
GENERATED MSG: added batch proxy with failover to server

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index 0d54e3a . . 3d85157 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 460 , 14 + 460 , 14 @ @ public final class Moco { <nl> return proxy ( checkNotNull ( url , " URL should not be null " ) , Failover . DEFAULT _ FAILOVER ) ; <nl> } <nl> <nl> - public static ResponseHandler proxy ( final String url , final Failover failover ) { <nl> + public static ResponseHandler proxy ( final String url , final Failover failover , final int . . . statuses ) { <nl> return proxy ( text ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , <nl> - checkNotNull ( failover , " Failover should not be null " ) ) ; <nl> + checkNotNull ( failover , " Failover should not be null " ) , statuses ) ; <nl> } <nl> <nl> - public static ResponseHandler proxy ( final ContentResource url , final Failover failover ) { <nl> + public static ResponseHandler proxy ( final ContentResource url , final Failover failover , final int . . . statuses ) { <nl> return new ProxyResponseHandler ( toUrlFunction ( checkNotNull ( url , " URL should not be null " ) ) , <nl> - checkNotNull ( failover , " Failover should not be null " ) ) ; <nl> + checkNotNull ( failover , " Failover should not be null " ) , statuses ) ; <nl> } <nl> <nl> public static ResponseHandler proxy ( final ProxyConfig proxyConfig ) { <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> index 2874413 . . bfda696 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> @ @ - 282 , 6 + 282 , 19 @ @ public class MocoProxyTest extends AbstractMocoHttpTest { <nl> } <nl> <nl> @ Test <nl> + public void should _ failover _ for _ specified _ status ( ) throws Exception { <nl> + server . request ( by ( uri ( " / target " ) ) ) . response ( status ( 500 ) ) ; <nl> + server . request ( by ( uri ( " / proxy " ) ) ) . response ( proxy ( remoteUrl ( " / target " ) , failover ( " src / test / resources / failover . response " ) , 500 ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws IOException { <nl> + assertThat ( helper . postContent ( remoteUrl ( " / proxy " ) , " proxy " ) , is ( " proxy " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void should _ failover _ for _ unreachable _ remote _ server _ with _ many _ content ( ) throws Exception { <nl> server . request ( by ( uri ( " / proxy " ) ) ) . response ( proxy ( remoteUrl ( " / target " ) , failover ( " src / test / resources / many _ content _ failover . response " ) ) ) ; <nl>
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / HttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / HttpServer . java <nl> index 8541899 . . 374d8c5 100755 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / HttpServer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / HttpServer . java <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> + import com . github . dreamhead . moco . handler . failover . Failover ; <nl> import com . github . dreamhead . moco . handler . proxy . ProxyConfig ; <nl> import com . github . dreamhead . moco . mount . MountHandler ; <nl> import com . github . dreamhead . moco . mount . MountMatcher ; <nl> @ @ - 56 , 4 + 57 , 8 @ @ public abstract class HttpServer extends ResponseSetting { <nl> public void proxy ( ProxyConfig config ) { <nl> this . request ( context ( config . localBase ( ) ) ) . response ( Moco . proxy ( config ) ) ; <nl> } <nl> + <nl> + public void proxy ( ProxyConfig config , Failover failover ) { <nl> + this . request ( context ( config . localBase ( ) ) ) . response ( Moco . proxy ( config , failover ) ) ; <nl> + } <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> index 2479c60 . . 2c2ad15 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> @ @ - 347 , 4 + 347 , 16 @ @ public class MocoProxyTest extends AbstractMocoTest { <nl> } <nl> } ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ proxy _ a _ batch _ of _ urls _ with _ failover _ from _ server ( ) throws Exception { <nl> + server . proxy ( from ( " / proxy " ) . to ( remoteUrl ( " / target " ) ) , failover ( " src / test / resources / failover . response " ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + assertThat ( helper . postContent ( remoteUrl ( " / proxy / 1 " ) , " proxy " ) , is ( " proxy " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index 0d54e3a . . 3d85157 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 460 , 14 + 460 , 14 @ @ public final class Moco { 
 return proxy ( checkNotNull ( url , " URL should not be null " ) , Failover . DEFAULT _ FAILOVER ) ; 
 } 
 
 - public static ResponseHandler proxy ( final String url , final Failover failover ) { 
 + public static ResponseHandler proxy ( final String url , final Failover failover , final int . . . statuses ) { 
 return proxy ( text ( checkNotNullOrEmpty ( url , " URL should not be null " ) ) , 
 - checkNotNull ( failover , " Failover should not be null " ) ) ; 
 + checkNotNull ( failover , " Failover should not be null " ) , statuses ) ; 
 } 
 
 - public static ResponseHandler proxy ( final ContentResource url , final Failover failover ) { 
 + public static ResponseHandler proxy ( final ContentResource url , final Failover failover , final int . . . statuses ) { 
 return new ProxyResponseHandler ( toUrlFunction ( checkNotNull ( url , " URL should not be null " ) ) , 
 - checkNotNull ( failover , " Failover should not be null " ) ) ; 
 + checkNotNull ( failover , " Failover should not be null " ) , statuses ) ; 
 } 
 
 public static ResponseHandler proxy ( final ProxyConfig proxyConfig ) { 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 index 2874413 . . bfda696 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 @ @ - 282 , 6 + 282 , 19 @ @ public class MocoProxyTest extends AbstractMocoHttpTest { 
 } 
 
 @ Test 
 + public void should _ failover _ for _ specified _ status ( ) throws Exception { 
 + server . request ( by ( uri ( " / target " ) ) ) . response ( status ( 500 ) ) ; 
 + server . request ( by ( uri ( " / proxy " ) ) ) . response ( proxy ( remoteUrl ( " / target " ) , failover ( " src / test / resources / failover . response " ) , 500 ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws IOException { 
 + assertThat ( helper . postContent ( remoteUrl ( " / proxy " ) , " proxy " ) , is ( " proxy " ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Test 
 public void should _ failover _ for _ unreachable _ remote _ server _ with _ many _ content ( ) throws Exception { 
 server . request ( by ( uri ( " / proxy " ) ) ) . response ( proxy ( remoteUrl ( " / target " ) , failover ( " src / test / resources / many _ content _ failover . response " ) ) ) ; 


NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / HttpServer . java b / moco - core / src / main / java / com / github / dreamhead / moco / HttpServer . java 
 index 8541899 . . 374d8c5 100755 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / HttpServer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / HttpServer . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package com . github . dreamhead . moco ; 
 
 + import com . github . dreamhead . moco . handler . failover . Failover ; 
 import com . github . dreamhead . moco . handler . proxy . ProxyConfig ; 
 import com . github . dreamhead . moco . mount . MountHandler ; 
 import com . github . dreamhead . moco . mount . MountMatcher ; 
 @ @ - 56 , 4 + 57 , 8 @ @ public abstract class HttpServer extends ResponseSetting { 
 public void proxy ( ProxyConfig config ) { 
 this . request ( context ( config . localBase ( ) ) ) . response ( Moco . proxy ( config ) ) ; 
 } 
 + 
 + public void proxy ( ProxyConfig config , Failover failover ) { 
 + this . request ( context ( config . localBase ( ) ) ) . response ( Moco . proxy ( config , failover ) ) ; 
 + } 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 index 2479c60 . . 2c2ad15 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 @ @ - 347 , 4 + 347 , 16 @ @ public class MocoProxyTest extends AbstractMocoTest { 
 } 
 } ) ; 
 } 
 + 
 + @ Test 
 + public void should _ proxy _ a _ batch _ of _ urls _ with _ failover _ from _ server ( ) throws Exception { 
 + server . proxy ( from ( " / proxy " ) . to ( remoteUrl ( " / target " ) ) , failover ( " src / test / resources / failover . response " ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + assertThat ( helper . postContent ( remoteUrl ( " / proxy / 1 " ) , " proxy " ) , is ( " proxy " ) ) ; 
 + } 
 + } ) ; 
 + } 
 }
