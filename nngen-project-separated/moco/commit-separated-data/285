BLEU SCORE: 0.07809849842300641

TEST MSG: moved configurations for settings to details subdirectory
GENERATED MSG: renamed multiple test resource package to settings

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java <nl> index 5f98eed . . f5f1d39 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java <nl> @ @ - 27 , 8 + 27 , 8 @ @ public final class MocoMount { <nl> } ; <nl> } <nl> <nl> - public static MountPredicate exclude ( final String wildcard ) { <nl> - return not ( include ( checkNotNullOrEmpty ( wildcard , " Wildcard should not be null " ) ) ) ; <nl> + public static MountPredicate exclude ( final String glob ) { <nl> + return not ( include ( checkNotNullOrEmpty ( glob , " Glob should not be null " ) ) ) ; <nl> } <nl> <nl> private static MountPredicate not ( final MountPredicate predicate ) { <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java <nl> index 941c171 . . edb1efb 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java <nl> @ @ - 11 , 7 + 11 , 7 @ @ import static org . junit . Assert . assertThat ; <nl> public class MocoMulipleConfigurationsTest extends AbstractMocoStandaloneTest { <nl> @ Test <nl> public void should _ run _ with _ many _ configurations ( ) throws IOException { <nl> - runWithConfiguration ( " settings / foo . json " , " settings / bar . json " ) ; <nl> + runWithConfiguration ( " settings / details / foo . json " , " settings / details / bar . json " ) ; <nl> assertThat ( helper . get ( remoteUrl ( " / foo " ) ) , is ( " foo " ) ) ; <nl> assertThat ( helper . get ( remoteUrl ( " / bar " ) ) , is ( " bar " ) ) ; <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java <nl> index 29268f0 . . 0aece8c 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java <nl> @ @ - 25 , 8 + 25 , 8 @ @ public class GlobalSettingParserTest { <nl> InputStream stream = getResourceAsStream ( " settings / settings . json " ) ; <nl> ImmutableList < GlobalSetting > globalSettings = parser . parse ( stream ) ; <nl> <nl> - assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; <nl> - assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " foo . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " bar . json " ) ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 34 , 9 + 34 , 9 @ @ public class GlobalSettingParserTest { <nl> InputStream stream = getResourceAsStream ( " settings / context - settings . json " ) ; <nl> ImmutableList < GlobalSetting > globalSettings = parser . parse ( stream ) ; <nl> <nl> - assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " foo . json " ) ) ) ; <nl> assertThat ( globalSettings . get ( 0 ) . getContext ( ) , is ( " / foo " ) ) ; <nl> - assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " bar . json " ) ) ) ; <nl> assertThat ( globalSettings . get ( 1 ) . getContext ( ) , is ( " / bar " ) ) ; <nl> } <nl> <nl> @ @ - 55 , 10 + 55 , 10 @ @ public class GlobalSettingParserTest { <nl> InputStream stream = getResourceAsStream ( " settings / env - settings . json " ) ; <nl> ImmutableList < GlobalSetting > globalSettings = parser . parse ( stream ) ; <nl> <nl> - assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " foo . json " ) ) ) ; <nl> assertThat ( globalSettings . get ( 0 ) . getContext ( ) , is ( " / foo " ) ) ; <nl> assertThat ( globalSettings . get ( 0 ) . getEnv ( ) , is ( " foo " ) ) ; <nl> - assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " bar . json " ) ) ) ; <nl> assertThat ( globalSettings . get ( 1 ) . getContext ( ) , is ( " / bar " ) ) ; <nl> assertThat ( globalSettings . get ( 1 ) . getEnv ( ) , is ( " bar " ) ) ; <nl> } <nl> diff - - git a / moco - runner / src / test / resources / settings / bar . json b / moco - runner / src / test / resources / settings / bar . json <nl> deleted file mode 100644 <nl> index 9ab1e10 . . 0000000 <nl> - - - a / moco - runner / src / test / resources / settings / bar . json <nl> + + + / dev / null <nl> @ @ - 1 , 10 + 0 , 0 @ @ <nl> - [ <nl> - { <nl> - " request " : { <nl> - " uri " : " / bar " <nl> - } , <nl> - " response " : { <nl> - " text " : " bar " <nl> - } <nl> - } <nl> - ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / context - settings . json b / moco - runner / src / test / resources / settings / context - settings . json <nl> index 8a097a5 . . 63b2aa4 100644 <nl> - - - a / moco - runner / src / test / resources / settings / context - settings . json <nl> + + + b / moco - runner / src / test / resources / settings / context - settings . json <nl> @ @ - 1 , 10 + 1 , 10 @ @ <nl> [ <nl> { <nl> " context " : " / foo " , <nl> - " include " : " src / test / resources / settings / foo . json " <nl> + " include " : " src / test / resources / settings / details / foo . json " <nl> } , <nl> { <nl> " context " : " / bar " , <nl> - " include " : " src / test / resources / settings / bar . json " <nl> + " include " : " src / test / resources / settings / details / bar . json " <nl> } <nl> ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / details / bar . json b / moco - runner / src / test / resources / settings / details / bar . json <nl> new file mode 100644 <nl> index 0000000 . . 9ab1e10 <nl> - - - / dev / null <nl> + + + b / moco - runner / src / test / resources / settings / details / bar . json <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + [ <nl> + { <nl> + " request " : { <nl> + " uri " : " / bar " <nl> + } , <nl> + " response " : { <nl> + " text " : " bar " <nl> + } <nl> + } <nl> + ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / details / foo . json b / moco - runner / src / test / resources / settings / details / foo . json <nl> new file mode 100644 <nl> index 0000000 . . 85d861c <nl> - - - / dev / null <nl> + + + b / moco - runner / src / test / resources / settings / details / foo . json <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + [ <nl> + { <nl> + " request " : { <nl> + " uri " : " / foo " <nl> + } , <nl> + " response " : { <nl> + " text " : " foo " <nl> + } <nl> + } <nl> + ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / env - settings . json b / moco - runner / src / test / resources / settings / env - settings . json <nl> index ffa4148 . . 934ed56 100644 <nl> - - - a / moco - runner / src / test / resources / settings / env - settings . json <nl> + + + b / moco - runner / src / test / resources / settings / env - settings . json <nl> @ @ - 2 , 11 + 2 , 11 @ @ <nl> { <nl> " context " : " / foo " , <nl> " env " : " foo " , <nl> - " include " : " src / test / resources / settings / foo . json " <nl> + " include " : " src / test / resources / settings / details / foo . json " <nl> } , <nl> { <nl> " context " : " / bar " , <nl> " env " : " bar " , <nl> - " include " : " src / test / resources / settings / bar . json " <nl> + " include " : " src / test / resources / settings / details / bar . json " <nl> } <nl> ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / foo . json b / moco - runner / src / test / resources / settings / foo . json <nl> deleted file mode 100644 <nl> index 85d861c . . 0000000 <nl> - - - a / moco - runner / src / test / resources / settings / foo . json <nl> + + + / dev / null <nl> @ @ - 1 , 10 + 0 , 0 @ @ <nl> - [ <nl> - { <nl> - " request " : { <nl> - " uri " : " / foo " <nl> - } , <nl> - " response " : { <nl> - " text " : " foo " <nl> - } <nl> - } <nl> - ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / request - settings . json b / moco - runner / src / test / resources / settings / request - settings . json <nl> index a56e975 . . 98374e8 100644 <nl> - - - a / moco - runner / src / test / resources / settings / request - settings . json <nl> + + + b / moco - runner / src / test / resources / settings / request - settings . json <nl> @ @ - 5 , 6 + 5 , 6 @ @ <nl> " foo " : " bar " <nl> } <nl> } , <nl> - " include " : " src / test / resources / settings / foo . json " <nl> + " include " : " src / test / resources / settings / details / foo . json " <nl> } <nl> ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / response - settings . json b / moco - runner / src / test / resources / settings / response - settings . json <nl> index 133df46 . . d71ec19 100644 <nl> - - - a / moco - runner / src / test / resources / settings / response - settings . json <nl> + + + b / moco - runner / src / test / resources / settings / response - settings . json <nl> @ @ - 5 , 6 + 5 , 6 @ @ <nl> " foo " : " bar " <nl> } <nl> } , <nl> - " include " : " src / test / resources / settings / foo . json " <nl> + " include " : " src / test / resources / settings / details / foo . json " <nl> } <nl> ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / settings . json b / moco - runner / src / test / resources / settings / settings . json <nl> index dc9856a . . 6d89ccf 100644 <nl> - - - a / moco - runner / src / test / resources / settings / settings . json <nl> + + + b / moco - runner / src / test / resources / settings / settings . json <nl> @ @ - 1 , 8 + 1 , 8 @ @ <nl> [ <nl> { <nl> - " include " : " src / test / resources / settings / foo . json " <nl> + " include " : " src / test / resources / settings / details / foo . json " <nl> } , <nl> { <nl> - " include " : " src / test / resources / settings / bar . json " <nl> + " include " : " src / test / resources / settings / details / bar . json " <nl> } <nl> ] <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java <nl> index d756d18 . . aef39fb 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java <nl> @ @ - 11 , 7 + 11 , 7 @ @ import static org . junit . Assert . assertThat ; <nl> public class MocoMulipleConfigurationsTest extends AbstractMocoStandaloneTest { <nl> @ Test <nl> public void should _ run _ with _ many _ configurations ( ) throws IOException { <nl> - runWithConfiguration ( " multiple / foo . json " , " multiple / bar . json " ) ; <nl> + runWithConfiguration ( " settings / foo . json " , " settings / bar . json " ) ; <nl> assertThat ( helper . get ( remoteUrl ( " / foo " ) ) , is ( " foo " ) ) ; <nl> assertThat ( helper . get ( remoteUrl ( " / bar " ) ) , is ( " bar " ) ) ; <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java <nl> index 6dd1091 . . c356e53 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java <nl> @ @ - 22 , 43 + 22 , 43 @ @ public class GlobalSettingParserTest { <nl> <nl> @ Test <nl> public void should _ parse _ settings _ file ( ) { <nl> - InputStream stream = getResourceAsStream ( " multiple / settings . json " ) ; <nl> + InputStream stream = getResourceAsStream ( " settings / settings . json " ) ; <nl> List < GlobalSetting > globalSettings = parser . parse ( stream ) ; <nl> <nl> - assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " foo . json " ) ) ) ; <nl> - assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " bar . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; <nl> } <nl> <nl> @ Test <nl> public void should _ parse _ settings _ file _ with _ context ( ) { <nl> - InputStream stream = getResourceAsStream ( " multiple / context - settings . json " ) ; <nl> + InputStream stream = getResourceAsStream ( " settings / context - settings . json " ) ; <nl> List < GlobalSetting > globalSettings = parser . parse ( stream ) ; <nl> <nl> - assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " foo . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; <nl> assertThat ( globalSettings . get ( 0 ) . getContext ( ) , is ( " / foo " ) ) ; <nl> - assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " bar . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; <nl> assertThat ( globalSettings . get ( 1 ) . getContext ( ) , is ( " / bar " ) ) ; <nl> } <nl> <nl> @ Test <nl> public void should _ parse _ setting _ file _ with _ file _ root ( ) { <nl> - InputStream stream = getResourceAsStream ( " multiple / fileroot - settings . json " ) ; <nl> + InputStream stream = getResourceAsStream ( " settings / fileroot - settings . json " ) ; <nl> List < GlobalSetting > globalSettings = parser . parse ( stream ) ; <nl> <nl> - assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " fileroot . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " fileroot . json " ) ) ) ; <nl> assertThat ( globalSettings . get ( 0 ) . getContext ( ) , is ( " / fileroot " ) ) ; <nl> assertThat ( globalSettings . get ( 0 ) . getFileRoot ( ) , is ( " src / test / resources " ) ) ; <nl> } <nl> <nl> @ Test <nl> public void should _ parse _ setting _ file _ with _ env ( ) { <nl> - InputStream stream = getResourceAsStream ( " multiple / env - settings . json " ) ; <nl> + InputStream stream = getResourceAsStream ( " settings / env - settings . json " ) ; <nl> List < GlobalSetting > globalSettings = parser . parse ( stream ) ; <nl> <nl> - assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " foo . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; <nl> assertThat ( globalSettings . get ( 0 ) . getContext ( ) , is ( " / foo " ) ) ; <nl> assertThat ( globalSettings . get ( 0 ) . getEnv ( ) , is ( " foo " ) ) ; <nl> - assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " bar . json " ) ) ) ; <nl> + assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; <nl> assertThat ( globalSettings . get ( 1 ) . getContext ( ) , is ( " / bar " ) ) ; <nl> assertThat ( globalSettings . get ( 1 ) . getEnv ( ) , is ( " bar " ) ) ; <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> index 059987c . . e8ff47e 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> @ @ - 25 , 7 + 25 , 7 @ @ public class SettingRunnerTest { <nl> <nl> @ Test <nl> public void should _ run _ with _ setting ( ) throws IOException { <nl> - InputStream stream = getResourceAsStream ( " multiple / settings . json " ) ; <nl> + InputStream stream = getResourceAsStream ( " settings / settings . json " ) ; <nl> runner = new SettingRunner ( stream , createStartArgs ( 12306 ) ) ; <nl> runner . run ( ) ; <nl> <nl> @ @ - 35 , 7 + 35 , 7 @ @ public class SettingRunnerTest { <nl> <nl> @ Test <nl> public void should _ run _ with _ setting _ with _ context ( ) throws IOException { <nl> - InputStream stream = getResourceAsStream ( " multiple / context - settings . json " ) ; <nl> + InputStream stream = getResourceAsStream ( " settings / context - settings . json " ) ; <nl> runner = new SettingRunner ( stream , createStartArgs ( 12306 ) ) ; <nl> runner . run ( ) ; <nl> <nl> @ @ - 45 , 7 + 45 , 7 @ @ public class SettingRunnerTest { <nl> <nl> @ Test <nl> public void should _ run _ with _ setting _ with _ file _ root ( ) throws IOException { <nl> - InputStream stream = getResourceAsStream ( " multiple / fileroot - settings . json " ) ; <nl> + InputStream stream = getResourceAsStream ( " settings / fileroot - settings . json " ) ; <nl> runner = new SettingRunner ( stream , createStartArgs ( 12306 ) ) ; <nl> runner . run ( ) ; <nl> <nl> @ @ - 54 , 7 + 54 , 7 @ @ public class SettingRunnerTest { <nl> <nl> @ Test <nl> public void should _ run _ with _ env ( ) throws IOException { <nl> - InputStream stream = getResourceAsStream ( " multiple / env - settings . json " ) ; <nl> + InputStream stream = getResourceAsStream ( " settings / env - settings . json " ) ; <nl> runner = new SettingRunner ( stream , createStartArgs ( 12306 , " foo " ) ) ; <nl> runner . run ( ) ; <nl> <nl> @ @ - 63 , 7 + 63 , 7 @ @ public class SettingRunnerTest { <nl> <nl> @ Test ( expected = HttpResponseException . class ) <nl> public void should _ not _ run _ without _ env ( ) throws IOException { <nl> - InputStream stream = getResourceAsStream ( " multiple / env - settings . json " ) ; <nl> + InputStream stream = getResourceAsStream ( " settings / env - settings . json " ) ; <nl> runner = new SettingRunner ( stream , createStartArgs ( 12306 , " bar " ) ) ; <nl> runner . run ( ) ; <nl> <nl> diff - - git a / moco - runner / src / test / resources / multiple / bar . json b / moco - runner / src / test / resources / multiple / bar . json <nl> deleted file mode 100644 <nl> index 9ab1e10 . . 0000000 <nl> - - - a / moco - runner / src / test / resources / multiple / bar . json <nl> + + + / dev / null <nl> @ @ - 1 , 10 + 0 , 0 @ @ <nl> - [ <nl> - { <nl> - " request " : { <nl> - " uri " : " / bar " <nl> - } , <nl> - " response " : { <nl> - " text " : " bar " <nl> - } <nl> - } <nl> - ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / multiple / context - settings . json b / moco - runner / src / test / resources / multiple / context - settings . json <nl> deleted file mode 100644 <nl> index c6508db . . 0000000 <nl> - - - a / moco - runner / src / test / resources / multiple / context - settings . json <nl> + + + / dev / null <nl> @ @ - 1 , 10 + 0 , 0 @ @ <nl> - [ <nl> - { <nl> - " context " : " / foo " , <nl> - " include " : " src / test / resources / multiple / foo . json " <nl> - } , <nl> - { <nl> - " context " : " / bar " , <nl> - " include " : " src / test / resources / multiple / bar . json " <nl> - } <nl> - ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / multiple / env - settings . json b / moco - runner / src / test / resources / multiple / env - settings . json <nl> deleted file mode 100644 <nl> index fd375bc . . 0000000 <nl> - - - a / moco - runner / src / test / resources / multiple / env - settings . json <nl> + + + / dev / null <nl> @ @ - 1 , 12 + 0 , 0 @ @ <nl> - [ <nl> - { <nl> - " context " : " / foo " , <nl> - " env " : " foo " , <nl> - " include " : " src / test / resources / multiple / foo . json " <nl> - } , <nl> - { <nl> - " context " : " / bar " , <nl> - " env " : " bar " , <nl> - " include " : " src / test / resources / multiple / bar . json " <nl> - } <nl> - ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / multiple / fileroot - settings . json b / moco - runner / src / test / resources / multiple / fileroot - settings . json <nl> deleted file mode 100644 <nl> index ea731ff . . 0000000 <nl> - - - a / moco - runner / src / test / resources / multiple / fileroot - settings . json <nl> + + + / dev / null <nl> @ @ - 1 , 7 + 0 , 0 @ @ <nl> - [ <nl> - { <nl> - " context " : " / fileroot " , <nl> - " file _ root " : " src / test / resources " , <nl> - " include " : " multiple / fileroot . json " <nl> - } <nl> - ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / multiple / fileroot . json b / moco - runner / src / test / resources / multiple / fileroot . json <nl> deleted file mode 100644 <nl> index 969cd05 . . 0000000 <nl> - - - a / moco - runner / src / test / resources / multiple / fileroot . json <nl> + + + / dev / null <nl> @ @ - 1 , 10 + 0 , 0 @ @ <nl> - [ <nl> - { <nl> - " request " : { <nl> - " uri " : " / fileroot " <nl> - } , <nl> - " response " : { <nl> - " file " : " foo . response " <nl> - } <nl> - } <nl> - ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / multiple / foo . json b / moco - runner / src / test / resources / multiple / foo . json <nl> deleted file mode 100644 <nl> index 85d861c . . 0000000 <nl> - - - a / moco - runner / src / test / resources / multiple / foo . json <nl> + + + / dev / null <nl> @ @ - 1 , 10 + 0 , 0 @ @ <nl> - [ <nl> - { <nl> - " request " : { <nl> - " uri " : " / foo " <nl> - } , <nl> - " response " : { <nl> - " text " : " foo " <nl> - } <nl> - } <nl> - ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / multiple / settings . json b / moco - runner / src / test / resources / multiple / settings . json <nl> deleted file mode 100644 <nl> index 85aa321 . . 0000000 <nl> - - - a / moco - runner / src / test / resources / multiple / settings . json <nl> + + + / dev / null <nl> @ @ - 1 , 8 + 0 , 0 @ @ <nl> - [ <nl> - { <nl> - " include " : " src / test / resources / multiple / foo . json " <nl> - } , <nl> - { <nl> - " include " : " src / test / resources / multiple / bar . json " <nl> - } <nl> - ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / bar . json b / moco - runner / src / test / resources / settings / bar . json <nl> new file mode 100644 <nl> index 0000000 . . 9ab1e10 <nl> - - - / dev / null <nl> + + + b / moco - runner / src / test / resources / settings / bar . json <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + [ <nl> + { <nl> + " request " : { <nl> + " uri " : " / bar " <nl> + } , <nl> + " response " : { <nl> + " text " : " bar " <nl> + } <nl> + } <nl> + ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / context - settings . json b / moco - runner / src / test / resources / settings / context - settings . json <nl> new file mode 100644 <nl> index 0000000 . . 8a097a5 <nl> - - - / dev / null <nl> + + + b / moco - runner / src / test / resources / settings / context - settings . json <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + [ <nl> + { <nl> + " context " : " / foo " , <nl> + " include " : " src / test / resources / settings / foo . json " <nl> + } , <nl> + { <nl> + " context " : " / bar " , <nl> + " include " : " src / test / resources / settings / bar . json " <nl> + } <nl> + ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / env - settings . json b / moco - runner / src / test / resources / settings / env - settings . json <nl> new file mode 100644 <nl> index 0000000 . . ffa4148 <nl> - - - / dev / null <nl> + + + b / moco - runner / src / test / resources / settings / env - settings . json <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + [ <nl> + { <nl> + " context " : " / foo " , <nl> + " env " : " foo " , <nl> + " include " : " src / test / resources / settings / foo . json " <nl> + } , <nl> + { <nl> + " context " : " / bar " , <nl> + " env " : " bar " , <nl> + " include " : " src / test / resources / settings / bar . json " <nl> + } <nl> + ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / fileroot - settings . json b / moco - runner / src / test / resources / settings / fileroot - settings . json <nl> new file mode 100644 <nl> index 0000000 . . f128787 <nl> - - - / dev / null <nl> + + + b / moco - runner / src / test / resources / settings / fileroot - settings . json <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + [ <nl> + { <nl> + " context " : " / fileroot " , <nl> + " file _ root " : " src / test / resources " , <nl> + " include " : " settings / fileroot . json " <nl> + } <nl> + ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / fileroot . json b / moco - runner / src / test / resources / settings / fileroot . json <nl> new file mode 100644 <nl> index 0000000 . . 969cd05 <nl> - - - / dev / null <nl> + + + b / moco - runner / src / test / resources / settings / fileroot . json <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + [ <nl> + { <nl> + " request " : { <nl> + " uri " : " / fileroot " <nl> + } , <nl> + " response " : { <nl> + " file " : " foo . response " <nl> + } <nl> + } <nl> + ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / foo . json b / moco - runner / src / test / resources / settings / foo . json <nl> new file mode 100644 <nl> index 0000000 . . 85d861c <nl> - - - / dev / null <nl> + + + b / moco - runner / src / test / resources / settings / foo . json <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + [ <nl> + { <nl> + " request " : { <nl> + " uri " : " / foo " <nl> + } , <nl> + " response " : { <nl> + " text " : " foo " <nl> + } <nl> + } <nl> + ] <nl> \ No newline at end of file <nl> diff - - git a / moco - runner / src / test / resources / settings / settings . json b / moco - runner / src / test / resources / settings / settings . json <nl> new file mode 100644 <nl> index 0000000 . . dc9856a <nl> - - - / dev / null <nl> + + + b / moco - runner / src / test / resources / settings / settings . json <nl> @ @ - 0 , 0 + 1 , 8 @ @ <nl> + [ <nl> + { <nl> + " include " : " src / test / resources / settings / foo . json " <nl> + } , <nl> + { <nl> + " include " : " src / test / resources / settings / bar . json " <nl> + } <nl> + ] <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java 
 index 5f98eed . . f5f1d39 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / MocoMount . java 
 @ @ - 27 , 8 + 27 , 8 @ @ public final class MocoMount { 
 } ; 
 } 
 
 - public static MountPredicate exclude ( final String wildcard ) { 
 - return not ( include ( checkNotNullOrEmpty ( wildcard , " Wildcard should not be null " ) ) ) ; 
 + public static MountPredicate exclude ( final String glob ) { 
 + return not ( include ( checkNotNullOrEmpty ( glob , " Glob should not be null " ) ) ) ; 
 } 
 
 private static MountPredicate not ( final MountPredicate predicate ) { 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java 
 index 941c171 . . edb1efb 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java 
 @ @ - 11 , 7 + 11 , 7 @ @ import static org . junit . Assert . assertThat ; 
 public class MocoMulipleConfigurationsTest extends AbstractMocoStandaloneTest { 
 @ Test 
 public void should _ run _ with _ many _ configurations ( ) throws IOException { 
 - runWithConfiguration ( " settings / foo . json " , " settings / bar . json " ) ; 
 + runWithConfiguration ( " settings / details / foo . json " , " settings / details / bar . json " ) ; 
 assertThat ( helper . get ( remoteUrl ( " / foo " ) ) , is ( " foo " ) ) ; 
 assertThat ( helper . get ( remoteUrl ( " / bar " ) ) , is ( " bar " ) ) ; 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java 
 index 29268f0 . . 0aece8c 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java 
 @ @ - 25 , 8 + 25 , 8 @ @ public class GlobalSettingParserTest { 
 InputStream stream = getResourceAsStream ( " settings / settings . json " ) ; 
 ImmutableList < GlobalSetting > globalSettings = parser . parse ( stream ) ; 
 
 - assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; 
 - assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " foo . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " bar . json " ) ) ) ; 
 } 
 
 @ Test 
 @ @ - 34 , 9 + 34 , 9 @ @ public class GlobalSettingParserTest { 
 InputStream stream = getResourceAsStream ( " settings / context - settings . json " ) ; 
 ImmutableList < GlobalSetting > globalSettings = parser . parse ( stream ) ; 
 
 - assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " foo . json " ) ) ) ; 
 assertThat ( globalSettings . get ( 0 ) . getContext ( ) , is ( " / foo " ) ) ; 
 - assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " bar . json " ) ) ) ; 
 assertThat ( globalSettings . get ( 1 ) . getContext ( ) , is ( " / bar " ) ) ; 
 } 
 
 @ @ - 55 , 10 + 55 , 10 @ @ public class GlobalSettingParserTest { 
 InputStream stream = getResourceAsStream ( " settings / env - settings . json " ) ; 
 ImmutableList < GlobalSetting > globalSettings = parser . parse ( stream ) ; 
 
 - assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 0 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " foo . json " ) ) ) ; 
 assertThat ( globalSettings . get ( 0 ) . getContext ( ) , is ( " / foo " ) ) ; 
 assertThat ( globalSettings . get ( 0 ) . getEnv ( ) , is ( " foo " ) ) ; 
 - assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 1 ) . includes ( ) . get ( 0 ) , is ( join ( " src " , " test " , " resources " , " settings " , " details " , " bar . json " ) ) ) ; 
 assertThat ( globalSettings . get ( 1 ) . getContext ( ) , is ( " / bar " ) ) ; 
 assertThat ( globalSettings . get ( 1 ) . getEnv ( ) , is ( " bar " ) ) ; 
 } 
 diff - - git a / moco - runner / src / test / resources / settings / bar . json b / moco - runner / src / test / resources / settings / bar . json 
 deleted file mode 100644 
 index 9ab1e10 . . 0000000 
 - - - a / moco - runner / src / test / resources / settings / bar . json 
 + + + / dev / null 
 @ @ - 1 , 10 + 0 , 0 @ @ 
 - [ 
 - { 
 - " request " : { 
 - " uri " : " / bar " 
 - } , 
 - " response " : { 
 - " text " : " bar " 
 - } 
 - } 
 - ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / context - settings . json b / moco - runner / src / test / resources / settings / context - settings . json 
 index 8a097a5 . . 63b2aa4 100644 
 - - - a / moco - runner / src / test / resources / settings / context - settings . json 
 + + + b / moco - runner / src / test / resources / settings / context - settings . json 
 @ @ - 1 , 10 + 1 , 10 @ @ 
 [ 
 { 
 " context " : " / foo " , 
 - " include " : " src / test / resources / settings / foo . json " 
 + " include " : " src / test / resources / settings / details / foo . json " 
 } , 
 { 
 " context " : " / bar " , 
 - " include " : " src / test / resources / settings / bar . json " 
 + " include " : " src / test / resources / settings / details / bar . json " 
 } 
 ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / details / bar . json b / moco - runner / src / test / resources / settings / details / bar . json 
 new file mode 100644 
 index 0000000 . . 9ab1e10 
 - - - / dev / null 
 + + + b / moco - runner / src / test / resources / settings / details / bar . json 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + [ 
 + { 
 + " request " : { 
 + " uri " : " / bar " 
 + } , 
 + " response " : { 
 + " text " : " bar " 
 + } 
 + } 
 + ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / details / foo . json b / moco - runner / src / test / resources / settings / details / foo . json 
 new file mode 100644 
 index 0000000 . . 85d861c 
 - - - / dev / null 
 + + + b / moco - runner / src / test / resources / settings / details / foo . json 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + [ 
 + { 
 + " request " : { 
 + " uri " : " / foo " 
 + } , 
 + " response " : { 
 + " text " : " foo " 
 + } 
 + } 
 + ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / env - settings . json b / moco - runner / src / test / resources / settings / env - settings . json 
 index ffa4148 . . 934ed56 100644 
 - - - a / moco - runner / src / test / resources / settings / env - settings . json 
 + + + b / moco - runner / src / test / resources / settings / env - settings . json 
 @ @ - 2 , 11 + 2 , 11 @ @ 
 { 
 " context " : " / foo " , 
 " env " : " foo " , 
 - " include " : " src / test / resources / settings / foo . json " 
 + " include " : " src / test / resources / settings / details / foo . json " 
 } , 
 { 
 " context " : " / bar " , 
 " env " : " bar " , 
 - " include " : " src / test / resources / settings / bar . json " 
 + " include " : " src / test / resources / settings / details / bar . json " 
 } 
 ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / foo . json b / moco - runner / src / test / resources / settings / foo . json 
 deleted file mode 100644 
 index 85d861c . . 0000000 
 - - - a / moco - runner / src / test / resources / settings / foo . json 
 + + + / dev / null 
 @ @ - 1 , 10 + 0 , 0 @ @ 
 - [ 
 - { 
 - " request " : { 
 - " uri " : " / foo " 
 - } , 
 - " response " : { 
 - " text " : " foo " 
 - } 
 - } 
 - ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / request - settings . json b / moco - runner / src / test / resources / settings / request - settings . json 
 index a56e975 . . 98374e8 100644 
 - - - a / moco - runner / src / test / resources / settings / request - settings . json 
 + + + b / moco - runner / src / test / resources / settings / request - settings . json 
 @ @ - 5 , 6 + 5 , 6 @ @ 
 " foo " : " bar " 
 } 
 } , 
 - " include " : " src / test / resources / settings / foo . json " 
 + " include " : " src / test / resources / settings / details / foo . json " 
 } 
 ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / response - settings . json b / moco - runner / src / test / resources / settings / response - settings . json 
 index 133df46 . . d71ec19 100644 
 - - - a / moco - runner / src / test / resources / settings / response - settings . json 
 + + + b / moco - runner / src / test / resources / settings / response - settings . json 
 @ @ - 5 , 6 + 5 , 6 @ @ 
 " foo " : " bar " 
 } 
 } , 
 - " include " : " src / test / resources / settings / foo . json " 
 + " include " : " src / test / resources / settings / details / foo . json " 
 } 
 ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / settings . json b / moco - runner / src / test / resources / settings / settings . json 
 index dc9856a . . 6d89ccf 100644 
 - - - a / moco - runner / src / test / resources / settings / settings . json 
 + + + b / moco - runner / src / test / resources / settings / settings . json 
 @ @ - 1 , 8 + 1 , 8 @ @ 
 [ 
 { 
 - " include " : " src / test / resources / settings / foo . json " 
 + " include " : " src / test / resources / settings / details / foo . json " 
 } , 
 { 
 - " include " : " src / test / resources / settings / bar . json " 
 + " include " : " src / test / resources / settings / details / bar . json " 
 } 
 ] 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java 
 index d756d18 . . aef39fb 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMulipleConfigurationsTest . java 
 @ @ - 11 , 7 + 11 , 7 @ @ import static org . junit . Assert . assertThat ; 
 public class MocoMulipleConfigurationsTest extends AbstractMocoStandaloneTest { 
 @ Test 
 public void should _ run _ with _ many _ configurations ( ) throws IOException { 
 - runWithConfiguration ( " multiple / foo . json " , " multiple / bar . json " ) ; 
 + runWithConfiguration ( " settings / foo . json " , " settings / bar . json " ) ; 
 assertThat ( helper . get ( remoteUrl ( " / foo " ) ) , is ( " foo " ) ) ; 
 assertThat ( helper . get ( remoteUrl ( " / bar " ) ) , is ( " bar " ) ) ; 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java 
 index 6dd1091 . . c356e53 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / parser / GlobalSettingParserTest . java 
 @ @ - 22 , 43 + 22 , 43 @ @ public class GlobalSettingParserTest { 
 
 @ Test 
 public void should _ parse _ settings _ file ( ) { 
 - InputStream stream = getResourceAsStream ( " multiple / settings . json " ) ; 
 + InputStream stream = getResourceAsStream ( " settings / settings . json " ) ; 
 List < GlobalSetting > globalSettings = parser . parse ( stream ) ; 
 
 - assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " foo . json " ) ) ) ; 
 - assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " bar . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; 
 } 
 
 @ Test 
 public void should _ parse _ settings _ file _ with _ context ( ) { 
 - InputStream stream = getResourceAsStream ( " multiple / context - settings . json " ) ; 
 + InputStream stream = getResourceAsStream ( " settings / context - settings . json " ) ; 
 List < GlobalSetting > globalSettings = parser . parse ( stream ) ; 
 
 - assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " foo . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; 
 assertThat ( globalSettings . get ( 0 ) . getContext ( ) , is ( " / foo " ) ) ; 
 - assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " bar . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; 
 assertThat ( globalSettings . get ( 1 ) . getContext ( ) , is ( " / bar " ) ) ; 
 } 
 
 @ Test 
 public void should _ parse _ setting _ file _ with _ file _ root ( ) { 
 - InputStream stream = getResourceAsStream ( " multiple / fileroot - settings . json " ) ; 
 + InputStream stream = getResourceAsStream ( " settings / fileroot - settings . json " ) ; 
 List < GlobalSetting > globalSettings = parser . parse ( stream ) ; 
 
 - assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " fileroot . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " fileroot . json " ) ) ) ; 
 assertThat ( globalSettings . get ( 0 ) . getContext ( ) , is ( " / fileroot " ) ) ; 
 assertThat ( globalSettings . get ( 0 ) . getFileRoot ( ) , is ( " src / test / resources " ) ) ; 
 } 
 
 @ Test 
 public void should _ parse _ setting _ file _ with _ env ( ) { 
 - InputStream stream = getResourceAsStream ( " multiple / env - settings . json " ) ; 
 + InputStream stream = getResourceAsStream ( " settings / env - settings . json " ) ; 
 List < GlobalSetting > globalSettings = parser . parse ( stream ) ; 
 
 - assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " foo . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 0 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " foo . json " ) ) ) ; 
 assertThat ( globalSettings . get ( 0 ) . getContext ( ) , is ( " / foo " ) ) ; 
 assertThat ( globalSettings . get ( 0 ) . getEnv ( ) , is ( " foo " ) ) ; 
 - assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " multiple " , " bar . json " ) ) ) ; 
 + assertThat ( globalSettings . get ( 1 ) . getInclude ( ) , is ( join ( " src " , " test " , " resources " , " settings " , " bar . json " ) ) ) ; 
 assertThat ( globalSettings . get ( 1 ) . getContext ( ) , is ( " / bar " ) ) ; 
 assertThat ( globalSettings . get ( 1 ) . getEnv ( ) , is ( " bar " ) ) ; 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 index 059987c . . e8ff47e 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 @ @ - 25 , 7 + 25 , 7 @ @ public class SettingRunnerTest { 
 
 @ Test 
 public void should _ run _ with _ setting ( ) throws IOException { 
 - InputStream stream = getResourceAsStream ( " multiple / settings . json " ) ; 
 + InputStream stream = getResourceAsStream ( " settings / settings . json " ) ; 
 runner = new SettingRunner ( stream , createStartArgs ( 12306 ) ) ; 
 runner . run ( ) ; 
 
 @ @ - 35 , 7 + 35 , 7 @ @ public class SettingRunnerTest { 
 
 @ Test 
 public void should _ run _ with _ setting _ with _ context ( ) throws IOException { 
 - InputStream stream = getResourceAsStream ( " multiple / context - settings . json " ) ; 
 + InputStream stream = getResourceAsStream ( " settings / context - settings . json " ) ; 
 runner = new SettingRunner ( stream , createStartArgs ( 12306 ) ) ; 
 runner . run ( ) ; 
 
 @ @ - 45 , 7 + 45 , 7 @ @ public class SettingRunnerTest { 
 
 @ Test 
 public void should _ run _ with _ setting _ with _ file _ root ( ) throws IOException { 
 - InputStream stream = getResourceAsStream ( " multiple / fileroot - settings . json " ) ; 
 + InputStream stream = getResourceAsStream ( " settings / fileroot - settings . json " ) ; 
 runner = new SettingRunner ( stream , createStartArgs ( 12306 ) ) ; 
 runner . run ( ) ; 
 
 @ @ - 54 , 7 + 54 , 7 @ @ public class SettingRunnerTest { 
 
 @ Test 
 public void should _ run _ with _ env ( ) throws IOException { 
 - InputStream stream = getResourceAsStream ( " multiple / env - settings . json " ) ; 
 + InputStream stream = getResourceAsStream ( " settings / env - settings . json " ) ; 
 runner = new SettingRunner ( stream , createStartArgs ( 12306 , " foo " ) ) ; 
 runner . run ( ) ; 
 
 @ @ - 63 , 7 + 63 , 7 @ @ public class SettingRunnerTest { 
 
 @ Test ( expected = HttpResponseException . class ) 
 public void should _ not _ run _ without _ env ( ) throws IOException { 
 - InputStream stream = getResourceAsStream ( " multiple / env - settings . json " ) ; 
 + InputStream stream = getResourceAsStream ( " settings / env - settings . json " ) ; 
 runner = new SettingRunner ( stream , createStartArgs ( 12306 , " bar " ) ) ; 
 runner . run ( ) ; 
 
 diff - - git a / moco - runner / src / test / resources / multiple / bar . json b / moco - runner / src / test / resources / multiple / bar . json 
 deleted file mode 100644 
 index 9ab1e10 . . 0000000 
 - - - a / moco - runner / src / test / resources / multiple / bar . json 
 + + + / dev / null 
 @ @ - 1 , 10 + 0 , 0 @ @ 
 - [ 
 - { 
 - " request " : { 
 - " uri " : " / bar " 
 - } , 
 - " response " : { 
 - " text " : " bar " 
 - } 
 - } 
 - ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / multiple / context - settings . json b / moco - runner / src / test / resources / multiple / context - settings . json 
 deleted file mode 100644 
 index c6508db . . 0000000 
 - - - a / moco - runner / src / test / resources / multiple / context - settings . json 
 + + + / dev / null 
 @ @ - 1 , 10 + 0 , 0 @ @ 
 - [ 
 - { 
 - " context " : " / foo " , 
 - " include " : " src / test / resources / multiple / foo . json " 
 - } , 
 - { 
 - " context " : " / bar " , 
 - " include " : " src / test / resources / multiple / bar . json " 
 - } 
 - ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / multiple / env - settings . json b / moco - runner / src / test / resources / multiple / env - settings . json 
 deleted file mode 100644 
 index fd375bc . . 0000000 
 - - - a / moco - runner / src / test / resources / multiple / env - settings . json 
 + + + / dev / null 
 @ @ - 1 , 12 + 0 , 0 @ @ 
 - [ 
 - { 
 - " context " : " / foo " , 
 - " env " : " foo " , 
 - " include " : " src / test / resources / multiple / foo . json " 
 - } , 
 - { 
 - " context " : " / bar " , 
 - " env " : " bar " , 
 - " include " : " src / test / resources / multiple / bar . json " 
 - } 
 - ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / multiple / fileroot - settings . json b / moco - runner / src / test / resources / multiple / fileroot - settings . json 
 deleted file mode 100644 
 index ea731ff . . 0000000 
 - - - a / moco - runner / src / test / resources / multiple / fileroot - settings . json 
 + + + / dev / null 
 @ @ - 1 , 7 + 0 , 0 @ @ 
 - [ 
 - { 
 - " context " : " / fileroot " , 
 - " file _ root " : " src / test / resources " , 
 - " include " : " multiple / fileroot . json " 
 - } 
 - ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / multiple / fileroot . json b / moco - runner / src / test / resources / multiple / fileroot . json 
 deleted file mode 100644 
 index 969cd05 . . 0000000 
 - - - a / moco - runner / src / test / resources / multiple / fileroot . json 
 + + + / dev / null 
 @ @ - 1 , 10 + 0 , 0 @ @ 
 - [ 
 - { 
 - " request " : { 
 - " uri " : " / fileroot " 
 - } , 
 - " response " : { 
 - " file " : " foo . response " 
 - } 
 - } 
 - ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / multiple / foo . json b / moco - runner / src / test / resources / multiple / foo . json 
 deleted file mode 100644 
 index 85d861c . . 0000000 
 - - - a / moco - runner / src / test / resources / multiple / foo . json 
 + + + / dev / null 
 @ @ - 1 , 10 + 0 , 0 @ @ 
 - [ 
 - { 
 - " request " : { 
 - " uri " : " / foo " 
 - } , 
 - " response " : { 
 - " text " : " foo " 
 - } 
 - } 
 - ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / multiple / settings . json b / moco - runner / src / test / resources / multiple / settings . json 
 deleted file mode 100644 
 index 85aa321 . . 0000000 
 - - - a / moco - runner / src / test / resources / multiple / settings . json 
 + + + / dev / null 
 @ @ - 1 , 8 + 0 , 0 @ @ 
 - [ 
 - { 
 - " include " : " src / test / resources / multiple / foo . json " 
 - } , 
 - { 
 - " include " : " src / test / resources / multiple / bar . json " 
 - } 
 - ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / bar . json b / moco - runner / src / test / resources / settings / bar . json 
 new file mode 100644 
 index 0000000 . . 9ab1e10 
 - - - / dev / null 
 + + + b / moco - runner / src / test / resources / settings / bar . json 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + [ 
 + { 
 + " request " : { 
 + " uri " : " / bar " 
 + } , 
 + " response " : { 
 + " text " : " bar " 
 + } 
 + } 
 + ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / context - settings . json b / moco - runner / src / test / resources / settings / context - settings . json 
 new file mode 100644 
 index 0000000 . . 8a097a5 
 - - - / dev / null 
 + + + b / moco - runner / src / test / resources / settings / context - settings . json 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + [ 
 + { 
 + " context " : " / foo " , 
 + " include " : " src / test / resources / settings / foo . json " 
 + } , 
 + { 
 + " context " : " / bar " , 
 + " include " : " src / test / resources / settings / bar . json " 
 + } 
 + ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / env - settings . json b / moco - runner / src / test / resources / settings / env - settings . json 
 new file mode 100644 
 index 0000000 . . ffa4148 
 - - - / dev / null 
 + + + b / moco - runner / src / test / resources / settings / env - settings . json 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + [ 
 + { 
 + " context " : " / foo " , 
 + " env " : " foo " , 
 + " include " : " src / test / resources / settings / foo . json " 
 + } , 
 + { 
 + " context " : " / bar " , 
 + " env " : " bar " , 
 + " include " : " src / test / resources / settings / bar . json " 
 + } 
 + ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / fileroot - settings . json b / moco - runner / src / test / resources / settings / fileroot - settings . json 
 new file mode 100644 
 index 0000000 . . f128787 
 - - - / dev / null 
 + + + b / moco - runner / src / test / resources / settings / fileroot - settings . json 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + [ 
 + { 
 + " context " : " / fileroot " , 
 + " file _ root " : " src / test / resources " , 
 + " include " : " settings / fileroot . json " 
 + } 
 + ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / fileroot . json b / moco - runner / src / test / resources / settings / fileroot . json 
 new file mode 100644 
 index 0000000 . . 969cd05 
 - - - / dev / null 
 + + + b / moco - runner / src / test / resources / settings / fileroot . json 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + [ 
 + { 
 + " request " : { 
 + " uri " : " / fileroot " 
 + } , 
 + " response " : { 
 + " file " : " foo . response " 
 + } 
 + } 
 + ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / foo . json b / moco - runner / src / test / resources / settings / foo . json 
 new file mode 100644 
 index 0000000 . . 85d861c 
 - - - / dev / null 
 + + + b / moco - runner / src / test / resources / settings / foo . json 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + [ 
 + { 
 + " request " : { 
 + " uri " : " / foo " 
 + } , 
 + " response " : { 
 + " text " : " foo " 
 + } 
 + } 
 + ] 
 \ No newline at end of file 
 diff - - git a / moco - runner / src / test / resources / settings / settings . json b / moco - runner / src / test / resources / settings / settings . json 
 new file mode 100644 
 index 0000000 . . dc9856a 
 - - - / dev / null 
 + + + b / moco - runner / src / test / resources / settings / settings . json 
 @ @ - 0 , 0 + 1 , 8 @ @ 
 + [ 
 + { 
 + " include " : " src / test / resources / settings / foo . json " 
 + } , 
 + { 
 + " include " : " src / test / resources / settings / bar . json " 
 + } 
 + ] 
 \ No newline at end of file
