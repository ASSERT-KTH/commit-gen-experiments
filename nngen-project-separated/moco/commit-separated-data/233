BLEU SCORE: 0.06567274736060397

TEST MSG: added missing final to seq container deserializer
GENERATED MSG: added help and check failover not null

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> index c95b757 . . 3dbba6b 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> @ @ - 22 , 7 + 22 , 6 @ @ import static com . github . dreamhead . moco . Moco . jsonPath ; <nl> import static com . github . dreamhead . moco . Moco . log ; <nl> import static com . github . dreamhead . moco . Moco . pathResource ; <nl> import static com . github . dreamhead . moco . Moco . post ; <nl> - import static com . github . dreamhead . moco . Moco . json ; <nl> import static com . github . dreamhead . moco . Moco . uri ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java <nl> index 49c7472 . . e5a0fd5 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java <nl> @ @ - 15 , 7 + 15 , 7 @ @ import java . util . List ; <nl> public class SeqContainerDeserializer extends JsonDeserializer < SeqContainer > { <nl> <nl> @ Override <nl> - public SeqContainer deserialize ( JsonParser jp , DeserializationContext ctxt ) throws IOException { <nl> + public SeqContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { <nl> JsonToken currentToken = jp . getCurrentToken ( ) ; <nl> <nl> if ( currentToken = = JsonToken . START _ ARRAY ) { <nl> @ @ - 25 , 7 + 25 , 7 @ @ public class SeqContainerDeserializer extends JsonDeserializer < SeqContainer > { <nl> return ( SeqContainer ) ctxt . handleUnexpectedToken ( TextContainer . class , jp ) ; <nl> } <nl> <nl> - private List < ResponseSetting > getSeqSettings ( JsonParser jp ) throws IOException { <nl> + private List < ResponseSetting > getSeqSettings ( final JsonParser jp ) throws IOException { <nl> TypeReference < List < ResponseSetting > > reference = new TypeReference < List < ResponseSetting > > ( ) { } ; <nl> return jp . readValueAs ( reference ) ; <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java <nl> index d6e73c9 . . a681555 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java <nl> @ @ - 24 , 7 + 24 , 6 @ @ public class SeqContainer implements Container { <nl> . omitNullValues ( ) <nl> . add ( " sequence " , seqs ) <nl> . toString ( ) ; <nl> - <nl> } <nl> <nl> public ResponseHandler [ ] toResponseHandlers ( ) {
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index 491473c . . b085943 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 193 , 7 + 193 , 7 @ @ public class Moco { <nl> } <nl> <nl> public static ResponseHandler proxy ( final String url , Failover failover ) { <nl> - return new ProxyResponseHandler ( toUrl ( url ) , failover ) ; <nl> + return new ProxyResponseHandler ( toUrl ( url ) , checkNotNull ( failover , " Null failover is not allowed " ) ) ; <nl> } <nl> <nl> public static Resource template ( final String template ) { <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> index 63dfec4 . . bb88d95 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> @ @ - 1 , 20 + 1 , 15 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> - import static com . github . dreamhead . moco . Moco . eq ; <nl> - import static com . github . dreamhead . moco . Moco . json ; <nl> - import static com . github . dreamhead . moco . Moco . jsonPath ; <nl> - import static com . github . dreamhead . moco . Moco . text ; <nl> + import org . junit . Test ; <nl> + <nl> + import java . io . IOException ; <nl> + <nl> + import static com . github . dreamhead . moco . Moco . * ; <nl> import static com . github . dreamhead . moco . RemoteTestUtils . root ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> import static org . junit . Assert . assertThat ; <nl> <nl> - import java . io . IOException ; <nl> - <nl> - import org . junit . Test ; <nl> - <nl> - import static com . github . dreamhead . moco . Moco . eq ; <nl> - <nl> public class MocoJsonTest extends AbstractMocoTest { <nl> 	 @ Test <nl> 	 public void should _ return _ content _ based _ on _ jsonpath ( ) throws Exception { <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java <nl> index 639abd0 . . 18824b0 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java <nl> @ @ - 38 , 5 + 38 , 7 @ @ public class Bootstrap implements BootstrapTask { <nl> <nl> private void help ( ) { <nl> System . out . println ( " moco start - p port - c [ configuration file ] { - s [ shutdown port ] } " ) ; <nl> + System . out . println ( " or " ) ; <nl> + System . out . println ( " moco start - p port - g [ global settings file ] { - e [ environment ] } { - s [ shutdown port ] } " ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 index c95b757 . . 3dbba6b 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 @ @ - 22 , 7 + 22 , 6 @ @ import static com . github . dreamhead . moco . Moco . jsonPath ; 
 import static com . github . dreamhead . moco . Moco . log ; 
 import static com . github . dreamhead . moco . Moco . pathResource ; 
 import static com . github . dreamhead . moco . Moco . post ; 
 - import static com . github . dreamhead . moco . Moco . json ; 
 import static com . github . dreamhead . moco . Moco . uri ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java 
 index 49c7472 . . e5a0fd5 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / SeqContainerDeserializer . java 
 @ @ - 15 , 7 + 15 , 7 @ @ import java . util . List ; 
 public class SeqContainerDeserializer extends JsonDeserializer < SeqContainer > { 
 
 @ Override 
 - public SeqContainer deserialize ( JsonParser jp , DeserializationContext ctxt ) throws IOException { 
 + public SeqContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { 
 JsonToken currentToken = jp . getCurrentToken ( ) ; 
 
 if ( currentToken = = JsonToken . START _ ARRAY ) { 
 @ @ - 25 , 7 + 25 , 7 @ @ public class SeqContainerDeserializer extends JsonDeserializer < SeqContainer > { 
 return ( SeqContainer ) ctxt . handleUnexpectedToken ( TextContainer . class , jp ) ; 
 } 
 
 - private List < ResponseSetting > getSeqSettings ( JsonParser jp ) throws IOException { 
 + private List < ResponseSetting > getSeqSettings ( final JsonParser jp ) throws IOException { 
 TypeReference < List < ResponseSetting > > reference = new TypeReference < List < ResponseSetting > > ( ) { } ; 
 return jp . readValueAs ( reference ) ; 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java 
 index d6e73c9 . . a681555 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java 
 @ @ - 24 , 7 + 24 , 6 @ @ public class SeqContainer implements Container { 
 . omitNullValues ( ) 
 . add ( " sequence " , seqs ) 
 . toString ( ) ; 
 - 
 } 
 
 public ResponseHandler [ ] toResponseHandlers ( ) {

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index 491473c . . b085943 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 193 , 7 + 193 , 7 @ @ public class Moco { 
 } 
 
 public static ResponseHandler proxy ( final String url , Failover failover ) { 
 - return new ProxyResponseHandler ( toUrl ( url ) , failover ) ; 
 + return new ProxyResponseHandler ( toUrl ( url ) , checkNotNull ( failover , " Null failover is not allowed " ) ) ; 
 } 
 
 public static Resource template ( final String template ) { 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 index 63dfec4 . . bb88d95 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 @ @ - 1 , 20 + 1 , 15 @ @ 
 package com . github . dreamhead . moco ; 
 
 - import static com . github . dreamhead . moco . Moco . eq ; 
 - import static com . github . dreamhead . moco . Moco . json ; 
 - import static com . github . dreamhead . moco . Moco . jsonPath ; 
 - import static com . github . dreamhead . moco . Moco . text ; 
 + import org . junit . Test ; 
 + 
 + import java . io . IOException ; 
 + 
 + import static com . github . dreamhead . moco . Moco . * ; 
 import static com . github . dreamhead . moco . RemoteTestUtils . root ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 import static org . hamcrest . CoreMatchers . is ; 
 import static org . junit . Assert . assertThat ; 
 
 - import java . io . IOException ; 
 - 
 - import org . junit . Test ; 
 - 
 - import static com . github . dreamhead . moco . Moco . eq ; 
 - 
 public class MocoJsonTest extends AbstractMocoTest { 
 	 @ Test 
 	 public void should _ return _ content _ based _ on _ jsonpath ( ) throws Exception { 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java 
 index 639abd0 . . 18824b0 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / Bootstrap . java 
 @ @ - 38 , 5 + 38 , 7 @ @ public class Bootstrap implements BootstrapTask { 
 
 private void help ( ) { 
 System . out . println ( " moco start - p port - c [ configuration file ] { - s [ shutdown port ] } " ) ; 
 + System . out . println ( " or " ) ; 
 + System . out . println ( " moco start - p port - g [ global settings file ] { - e [ environment ] } { - s [ shutdown port ] } " ) ; 
 } 
 }
