BLEU SCORE: 0.05341087579952926

TEST MSG: checked now template function arguments
GENERATED MSG: disabled freemarker logger

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> index e3a52ab . . c5af825 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> @ @ - 143 , 6 + 143 , 10 @ @ public class TemplateResourceReader implements ContentResourceReader { <nl> private static class NowMethod implements TemplateMethodModelEx { <nl> @ Override <nl> public Object exec ( final List arguments ) { <nl> + if ( arguments . size ( ) < 1 ) { <nl> + throw new IllegalArgumentException ( " Date format is required " ) ; <nl> + } <nl> + <nl> Date date = new Date ( ) ; <nl> SimpleDateFormat format = new SimpleDateFormat ( arguments . get ( 0 ) . toString ( ) ) ; <nl> return format . format ( date ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> index 19987eb . . b6f1882 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> @ @ - 5 , 6 + 5 , 7 @ @ import com . google . common . collect . ImmutableMultimap ; <nl> import com . google . common . io . ByteStreams ; <nl> import com . google . common . io . Resources ; <nl> import org . apache . http . Header ; <nl> + import org . apache . http . HttpResponse ; <nl> import org . apache . http . HttpVersion ; <nl> import org . apache . http . ProtocolVersion ; <nl> import org . apache . http . client . HttpResponseException ; <nl> @ @ - 444 , 6 + 445 , 19 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { <nl> } <nl> <nl> @ Test <nl> + public void should _ throw _ exception _ for _ now _ without _ format ( ) throws Exception { <nl> + server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { now ( ) } " ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + HttpResponse response = helper . getResponse ( remoteUrl ( " / template " ) ) ; <nl> + assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 400 ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void should _ generate _ response _ with _ random ( ) throws Exception { <nl> server . request ( by ( uri ( " / random " ) ) ) . response ( template ( " $ { random ( ) } " ) ) ; <nl>
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> index f975d71 . . 133b099 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java <nl> @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . resource . reader ; <nl> import com . github . dreamhead . moco . model . MessageFactory ; <nl> import com . github . dreamhead . moco . resource . ContentResource ; <nl> import freemarker . cache . StringTemplateLoader ; <nl> + import freemarker . core . InvalidReferenceException ; <nl> import freemarker . core . ParseException ; <nl> import freemarker . template . * ; <nl> import org . jboss . netty . handler . codec . http . HttpRequest ; <nl> @ @ - 19 , 6 + 20 , 15 @ @ import static com . google . common . collect . ImmutableMap . of ; <nl> public class TemplateResourceReader implements ContentResourceReader { <nl> private static final Logger logger = LoggerFactory . getLogger ( TemplateResourceReader . class ) ; <nl> private static final String TEMPLATE _ NAME = " template " ; <nl> + <nl> + static { <nl> + try { <nl> + freemarker . log . Logger . selectLoggerLibrary ( freemarker . log . Logger . LIBRARY _ NONE ) ; <nl> + } catch ( ClassNotFoundException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + } <nl> + <nl> private final ContentResource template ; <nl> private final Configuration cfg ; <nl> <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> index afd4880 . . 66dd975 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco ; <nl> import org . apache . http . Header ; <nl> import org . apache . http . HttpVersion ; <nl> import org . apache . http . ProtocolVersion ; <nl> + import org . apache . http . client . HttpResponseException ; <nl> import org . apache . http . client . fluent . Request ; <nl> import org . junit . Test ; <nl> <nl> @ @ - 67 , 6 + 68 , 18 @ @ public class MocoTemplateTest extends AbstractMocoTest { <nl> } ) ; <nl> } <nl> <nl> + @ Test ( expected = HttpResponseException . class ) <nl> + public void should _ throw _ exception _ for _ unknown _ header ( ) throws Exception { <nl> + server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { req . headers [ ' foo ' ] } " ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + helper . get ( remoteUrl ( " / template " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> @ Test <nl> public void should _ generate _ response _ with _ http _ query ( ) throws Exception { <nl> server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { req . queries [ ' foo ' ] } " ) ) ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 index e3a52ab . . c5af825 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 @ @ - 143 , 6 + 143 , 10 @ @ public class TemplateResourceReader implements ContentResourceReader { 
 private static class NowMethod implements TemplateMethodModelEx { 
 @ Override 
 public Object exec ( final List arguments ) { 
 + if ( arguments . size ( ) < 1 ) { 
 + throw new IllegalArgumentException ( " Date format is required " ) ; 
 + } 
 + 
 Date date = new Date ( ) ; 
 SimpleDateFormat format = new SimpleDateFormat ( arguments . get ( 0 ) . toString ( ) ) ; 
 return format . format ( date ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 index 19987eb . . b6f1882 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 @ @ - 5 , 6 + 5 , 7 @ @ import com . google . common . collect . ImmutableMultimap ; 
 import com . google . common . io . ByteStreams ; 
 import com . google . common . io . Resources ; 
 import org . apache . http . Header ; 
 + import org . apache . http . HttpResponse ; 
 import org . apache . http . HttpVersion ; 
 import org . apache . http . ProtocolVersion ; 
 import org . apache . http . client . HttpResponseException ; 
 @ @ - 444 , 6 + 445 , 19 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { 
 } 
 
 @ Test 
 + public void should _ throw _ exception _ for _ now _ without _ format ( ) throws Exception { 
 + server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { now ( ) } " ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + HttpResponse response = helper . getResponse ( remoteUrl ( " / template " ) ) ; 
 + assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 400 ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 + @ Test 
 public void should _ generate _ response _ with _ random ( ) throws Exception { 
 server . request ( by ( uri ( " / random " ) ) ) . response ( template ( " $ { random ( ) } " ) ) ; 


NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 index f975d71 . . 133b099 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / reader / TemplateResourceReader . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . resource . reader ; 
 import com . github . dreamhead . moco . model . MessageFactory ; 
 import com . github . dreamhead . moco . resource . ContentResource ; 
 import freemarker . cache . StringTemplateLoader ; 
 + import freemarker . core . InvalidReferenceException ; 
 import freemarker . core . ParseException ; 
 import freemarker . template . * ; 
 import org . jboss . netty . handler . codec . http . HttpRequest ; 
 @ @ - 19 , 6 + 20 , 15 @ @ import static com . google . common . collect . ImmutableMap . of ; 
 public class TemplateResourceReader implements ContentResourceReader { 
 private static final Logger logger = LoggerFactory . getLogger ( TemplateResourceReader . class ) ; 
 private static final String TEMPLATE _ NAME = " template " ; 
 + 
 + static { 
 + try { 
 + freemarker . log . Logger . selectLoggerLibrary ( freemarker . log . Logger . LIBRARY _ NONE ) ; 
 + } catch ( ClassNotFoundException e ) { 
 + throw new RuntimeException ( e ) ; 
 + } 
 + } 
 + 
 private final ContentResource template ; 
 private final Configuration cfg ; 
 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 index afd4880 . . 66dd975 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco ; 
 import org . apache . http . Header ; 
 import org . apache . http . HttpVersion ; 
 import org . apache . http . ProtocolVersion ; 
 + import org . apache . http . client . HttpResponseException ; 
 import org . apache . http . client . fluent . Request ; 
 import org . junit . Test ; 
 
 @ @ - 67 , 6 + 68 , 18 @ @ public class MocoTemplateTest extends AbstractMocoTest { 
 } ) ; 
 } 
 
 + @ Test ( expected = HttpResponseException . class ) 
 + public void should _ throw _ exception _ for _ unknown _ header ( ) throws Exception { 
 + server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { req . headers [ ' foo ' ] } " ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + helper . get ( remoteUrl ( " / template " ) ) ; 
 + } 
 + } ) ; 
 + } 
 + 
 @ Test 
 public void should _ generate _ response _ with _ http _ query ( ) throws Exception { 
 server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { req . queries [ ' foo ' ] } " ) ) ;
