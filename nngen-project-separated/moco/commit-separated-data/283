BLEU SCORE: 0.04372912656590315

TEST MSG: searched absolute files with glob
GENERATED MSG: added direct file test for globs

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java <nl> index ecb81b8 . . 4320497 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java <nl> @ @ - 18 , 12 + 18 , 23 @ @ import static com . google . common . collect . ImmutableList . of ; <nl> public class Globs { <nl> public static ImmutableList < String > glob ( final String glob ) { <nl> Path path = Paths . get ( glob ) ; <nl> + <nl> int globIndex = getGlobIndex ( path ) ; <nl> if ( globIndex < 0 ) { <nl> return of ( glob ) ; <nl> } <nl> <nl> - return doGlob ( path , path . subpath ( 0 , globIndex ) ) ; <nl> + return doGlob ( path , searchPath ( path , globIndex ) ) ; <nl> + } <nl> + <nl> + private static Path searchPath ( final Path path , final int globIndex ) { <nl> + Path root = path . getRoot ( ) ; <nl> + Path subpath = path . subpath ( 0 , globIndex ) ; <nl> + if ( root = = null ) { <nl> + return subpath ; <nl> + } <nl> + <nl> + return Paths . get ( root . toString ( ) , subpath . toString ( ) ) ; <nl> } <nl> <nl> private static ImmutableList < String > doGlob ( final Path path , final Path searchPath ) { <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java <nl> index 1dda996 . . d914bbb 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java <nl> @ @ - 1 , 12 + 1 , 20 @ @ <nl> package com . github . dreamhead . moco . util ; <nl> <nl> import com . google . common . collect . ImmutableList ; <nl> + import org . junit . Rule ; <nl> import org . junit . Test ; <nl> + import org . junit . rules . TemporaryFolder ; <nl> + <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> <nl> import static org . hamcrest . CoreMatchers . is ; <nl> import static org . junit . Assert . * ; <nl> <nl> public class GlobsTest { <nl> + @ Rule <nl> + public TemporaryFolder folder = new TemporaryFolder ( ) ; <nl> + <nl> @ Test <nl> public void should _ glob _ relative _ files ( ) { <nl> ImmutableList < String > files = Globs . glob ( " src / test / resources / details / * . json " ) ; <nl> @ @ - 20 , 4 + 28 , 20 @ @ public class GlobsTest { <nl> assertThat ( files . contains ( " src / test / resources / details / foo . json " ) , is ( true ) ) ; <nl> } <nl> <nl> + @ Test <nl> + public void should _ glob _ absolute _ files ( ) throws IOException { <nl> + File file = folder . newFile ( ) ; <nl> + String path = file . getAbsolutePath ( ) ; <nl> + ImmutableList < String > files = Globs . glob ( path ) ; <nl> + assertThat ( files . contains ( path ) , is ( true ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void should _ glob _ absolute _ files _ with _ glob ( ) throws IOException { <nl> + File file = folder . newFile ( " glob . json " ) ; <nl> + String glob = Files . join ( folder . getRoot ( ) . getAbsolutePath ( ) , " * . json " ) ; <nl> + System . out . println ( glob ) ; <nl> + ImmutableList < String > files = Globs . glob ( glob ) ; <nl> + assertThat ( files . contains ( file . getAbsolutePath ( ) ) , is ( true ) ) ; <nl> + } <nl> } <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java <nl> index 5c344b9 . . ecb81b8 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java <nl> @ @ - 29 , 8 + 29 , 9 @ @ public class Globs { <nl> private static ImmutableList < String > doGlob ( final Path path , final Path searchPath ) { <nl> final PathMatcher matcher = FileSystems . getDefault ( ) . getPathMatcher ( " glob : " + path ) ; <nl> <nl> - final ImmutableList . Builder < String > builder = ImmutableList . builder ( ) ; <nl> try { <nl> + final ImmutableList . Builder < String > builder = ImmutableList . builder ( ) ; <nl> + <nl> Files . walkFileTree ( searchPath , new SimpleFileVisitor < Path > ( ) { <nl> @ Override <nl> public FileVisitResult visitFile ( final Path file , final BasicFileAttributes attrs ) throws IOException { <nl> @ @ - 40 , 11 + 41 , 10 @ @ public class Globs { <nl> return FileVisitResult . CONTINUE ; <nl> } <nl> } ) ; <nl> + return builder . build ( ) ; <nl> } catch ( IOException e ) { <nl> throw new MocoException ( e ) ; <nl> } <nl> - <nl> - return builder . build ( ) ; <nl> } <nl> <nl> private static int getGlobIndex ( Path path ) { <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java <nl> index 516af84 . . 1dda996 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java <nl> @ @ - 14 , 4 + 14 , 10 @ @ public class GlobsTest { <nl> assertThat ( files . contains ( " src / test / resources / details / bar . json " ) , is ( true ) ) ; <nl> } <nl> <nl> + @ Test <nl> + public void should _ glob _ direct _ files ( ) { <nl> + ImmutableList < String > files = Globs . glob ( " src / test / resources / details / foo . json " ) ; <nl> + assertThat ( files . contains ( " src / test / resources / details / foo . json " ) , is ( true ) ) ; <nl> + } <nl> + <nl> } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java 
 index ecb81b8 . . 4320497 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java 
 @ @ - 18 , 12 + 18 , 23 @ @ import static com . google . common . collect . ImmutableList . of ; 
 public class Globs { 
 public static ImmutableList < String > glob ( final String glob ) { 
 Path path = Paths . get ( glob ) ; 
 + 
 int globIndex = getGlobIndex ( path ) ; 
 if ( globIndex < 0 ) { 
 return of ( glob ) ; 
 } 
 
 - return doGlob ( path , path . subpath ( 0 , globIndex ) ) ; 
 + return doGlob ( path , searchPath ( path , globIndex ) ) ; 
 + } 
 + 
 + private static Path searchPath ( final Path path , final int globIndex ) { 
 + Path root = path . getRoot ( ) ; 
 + Path subpath = path . subpath ( 0 , globIndex ) ; 
 + if ( root = = null ) { 
 + return subpath ; 
 + } 
 + 
 + return Paths . get ( root . toString ( ) , subpath . toString ( ) ) ; 
 } 
 
 private static ImmutableList < String > doGlob ( final Path path , final Path searchPath ) { 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java 
 index 1dda996 . . d914bbb 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java 
 @ @ - 1 , 12 + 1 , 20 @ @ 
 package com . github . dreamhead . moco . util ; 
 
 import com . google . common . collect . ImmutableList ; 
 + import org . junit . Rule ; 
 import org . junit . Test ; 
 + import org . junit . rules . TemporaryFolder ; 
 + 
 + import java . io . File ; 
 + import java . io . IOException ; 
 
 import static org . hamcrest . CoreMatchers . is ; 
 import static org . junit . Assert . * ; 
 
 public class GlobsTest { 
 + @ Rule 
 + public TemporaryFolder folder = new TemporaryFolder ( ) ; 
 + 
 @ Test 
 public void should _ glob _ relative _ files ( ) { 
 ImmutableList < String > files = Globs . glob ( " src / test / resources / details / * . json " ) ; 
 @ @ - 20 , 4 + 28 , 20 @ @ public class GlobsTest { 
 assertThat ( files . contains ( " src / test / resources / details / foo . json " ) , is ( true ) ) ; 
 } 
 
 + @ Test 
 + public void should _ glob _ absolute _ files ( ) throws IOException { 
 + File file = folder . newFile ( ) ; 
 + String path = file . getAbsolutePath ( ) ; 
 + ImmutableList < String > files = Globs . glob ( path ) ; 
 + assertThat ( files . contains ( path ) , is ( true ) ) ; 
 + } 
 + 
 + @ Test 
 + public void should _ glob _ absolute _ files _ with _ glob ( ) throws IOException { 
 + File file = folder . newFile ( " glob . json " ) ; 
 + String glob = Files . join ( folder . getRoot ( ) . getAbsolutePath ( ) , " * . json " ) ; 
 + System . out . println ( glob ) ; 
 + ImmutableList < String > files = Globs . glob ( glob ) ; 
 + assertThat ( files . contains ( file . getAbsolutePath ( ) ) , is ( true ) ) ; 
 + } 
 } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java b / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java 
 index 5c344b9 . . ecb81b8 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / util / Globs . java 
 @ @ - 29 , 8 + 29 , 9 @ @ public class Globs { 
 private static ImmutableList < String > doGlob ( final Path path , final Path searchPath ) { 
 final PathMatcher matcher = FileSystems . getDefault ( ) . getPathMatcher ( " glob : " + path ) ; 
 
 - final ImmutableList . Builder < String > builder = ImmutableList . builder ( ) ; 
 try { 
 + final ImmutableList . Builder < String > builder = ImmutableList . builder ( ) ; 
 + 
 Files . walkFileTree ( searchPath , new SimpleFileVisitor < Path > ( ) { 
 @ Override 
 public FileVisitResult visitFile ( final Path file , final BasicFileAttributes attrs ) throws IOException { 
 @ @ - 40 , 11 + 41 , 10 @ @ public class Globs { 
 return FileVisitResult . CONTINUE ; 
 } 
 } ) ; 
 + return builder . build ( ) ; 
 } catch ( IOException e ) { 
 throw new MocoException ( e ) ; 
 } 
 - 
 - return builder . build ( ) ; 
 } 
 
 private static int getGlobIndex ( Path path ) { 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java 
 index 516af84 . . 1dda996 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / util / GlobsTest . java 
 @ @ - 14 , 4 + 14 , 10 @ @ public class GlobsTest { 
 assertThat ( files . contains ( " src / test / resources / details / bar . json " ) , is ( true ) ) ; 
 } 
 
 + @ Test 
 + public void should _ glob _ direct _ files ( ) { 
 + ImmutableList < String > files = Globs . glob ( " src / test / resources / details / foo . json " ) ; 
 + assertThat ( files . contains ( " src / test / resources / details / foo . json " ) , is ( true ) ) ; 
 + } 
 + 
 } 
 \ No newline at end of file
