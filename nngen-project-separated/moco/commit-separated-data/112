BLEU SCORE: 0.03550932348642478

TEST MSG: added missing final to socket setting
GENERATED MSG: removed redundant final modifier from matcher , resource , setting and verification

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / setting / SocketSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / setting / SocketSetting . java <nl> index d128bbc . . faa3eb9 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / setting / SocketSetting . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / setting / SocketSetting . java <nl> @ @ - 13 , 12 + 13 , 12 @ @ public class SocketSetting extends BaseSetting < SocketResponseSetting > <nl> } <nl> <nl> @ Override <nl> - protected BaseSetting < SocketResponseSetting > createSetting ( final RequestMatcher matcher ) { <nl> + protected final BaseSetting < SocketResponseSetting > createSetting ( final RequestMatcher matcher ) { <nl> return new SocketSetting ( matcher ) ; <nl> } <nl> <nl> @ Override <nl> - protected RequestMatcher configMatcher ( final RequestMatcher matcher , final MocoConfig config ) { <nl> + protected final RequestMatcher configMatcher ( final RequestMatcher matcher , final MocoConfig config ) { <nl> return configItem ( matcher , config ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java <nl> index 8f8b17d . . 781215c 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> public interface ConfigApplier < T > { <nl> - T apply ( final MocoConfig config ) ; <nl> + T apply ( MocoConfig config ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java <nl> index 081c4b4 . . be57504 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java <nl> @ @ - 52 , 5 + 52 , 5 @ @ public abstract class CompositeRequestMatcher extends AbstractRequestMatcher { <nl> return doMatch ( request , matchers ) ; <nl> } <nl> <nl> - protected abstract boolean doMatch ( final Request request , final Iterable < RequestMatcher > matchers ) ; <nl> + protected abstract boolean doMatch ( Request request , Iterable < RequestMatcher > matchers ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java <nl> index 1562117 . . ab52906 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java <nl> @ @ - 4 , 5 + 4 , 5 @ @ import com . github . dreamhead . moco . HttpRequest ; <nl> import com . google . common . net . MediaType ; <nl> <nl> public interface Content { <nl> - MediaType getContentType ( final HttpRequest request ) ; <nl> + MediaType getContentType ( HttpRequest request ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java <nl> index dde1cc2 . . c922685 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java <nl> @ @ - 17 , 9 + 17 , 9 @ @ public abstract class BaseSetting < T extends ResponseSetting < T > > <nl> extends BaseResponseSettingConfiguration < T > implements Setting < T > { <nl> private final RequestMatcher matcher ; <nl> <nl> - protected abstract BaseSetting < T > createSetting ( final RequestMatcher matcher ) ; <nl> + protected abstract BaseSetting < T > createSetting ( RequestMatcher matcher ) ; <nl> <nl> - protected abstract RequestMatcher configMatcher ( final RequestMatcher matcher , final MocoConfig config ) ; <nl> + protected abstract RequestMatcher configMatcher ( RequestMatcher matcher , MocoConfig config ) ; <nl> <nl> protected BaseSetting ( final RequestMatcher matcher ) { <nl> this . matcher = matcher ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java b / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java <nl> index 987cd1a . . 324bfd5 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java <nl> @ @ - 5 , 7 + 5 , 7 @ @ import com . github . dreamhead . moco . VerificationException ; <nl> import com . github . dreamhead . moco . VerificationMode ; <nl> <nl> public abstract class AbstractTimesVerification implements VerificationMode { <nl> - protected abstract boolean meet ( final int size ) ; <nl> + protected abstract boolean meet ( int size ) ; <nl> protected abstract String expectedTip ( ) ; <nl> <nl> @ Override

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / setting / SocketSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / setting / SocketSetting . java 
 index d128bbc . . faa3eb9 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / setting / SocketSetting . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / setting / SocketSetting . java 
 @ @ - 13 , 12 + 13 , 12 @ @ public class SocketSetting extends BaseSetting < SocketResponseSetting > 
 } 
 
 @ Override 
 - protected BaseSetting < SocketResponseSetting > createSetting ( final RequestMatcher matcher ) { 
 + protected final BaseSetting < SocketResponseSetting > createSetting ( final RequestMatcher matcher ) { 
 return new SocketSetting ( matcher ) ; 
 } 
 
 @ Override 
 - protected RequestMatcher configMatcher ( final RequestMatcher matcher , final MocoConfig config ) { 
 + protected final RequestMatcher configMatcher ( final RequestMatcher matcher , final MocoConfig config ) { 
 return configItem ( matcher , config ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java 
 index 8f8b17d . . 781215c 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 package com . github . dreamhead . moco ; 
 
 public interface ConfigApplier < T > { 
 - T apply ( final MocoConfig config ) ; 
 + T apply ( MocoConfig config ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java 
 index 081c4b4 . . be57504 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / CompositeRequestMatcher . java 
 @ @ - 52 , 5 + 52 , 5 @ @ public abstract class CompositeRequestMatcher extends AbstractRequestMatcher { 
 return doMatch ( request , matchers ) ; 
 } 
 
 - protected abstract boolean doMatch ( final Request request , final Iterable < RequestMatcher > matchers ) ; 
 + protected abstract boolean doMatch ( Request request , Iterable < RequestMatcher > matchers ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java 
 index 1562117 . . ab52906 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Content . java 
 @ @ - 4 , 5 + 4 , 5 @ @ import com . github . dreamhead . moco . HttpRequest ; 
 import com . google . common . net . MediaType ; 
 
 public interface Content { 
 - MediaType getContentType ( final HttpRequest request ) ; 
 + MediaType getContentType ( HttpRequest request ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java 
 index dde1cc2 . . c922685 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java 
 @ @ - 17 , 9 + 17 , 9 @ @ public abstract class BaseSetting < T extends ResponseSetting < T > > 
 extends BaseResponseSettingConfiguration < T > implements Setting < T > { 
 private final RequestMatcher matcher ; 
 
 - protected abstract BaseSetting < T > createSetting ( final RequestMatcher matcher ) ; 
 + protected abstract BaseSetting < T > createSetting ( RequestMatcher matcher ) ; 
 
 - protected abstract RequestMatcher configMatcher ( final RequestMatcher matcher , final MocoConfig config ) ; 
 + protected abstract RequestMatcher configMatcher ( RequestMatcher matcher , MocoConfig config ) ; 
 
 protected BaseSetting ( final RequestMatcher matcher ) { 
 this . matcher = matcher ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java b / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java 
 index 987cd1a . . 324bfd5 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / verification / AbstractTimesVerification . java 
 @ @ - 5 , 7 + 5 , 7 @ @ import com . github . dreamhead . moco . VerificationException ; 
 import com . github . dreamhead . moco . VerificationMode ; 
 
 public abstract class AbstractTimesVerification implements VerificationMode { 
 - protected abstract boolean meet ( final int size ) ; 
 + protected abstract boolean meet ( int size ) ; 
 protected abstract String expectedTip ( ) ; 
 
 @ Override
