BLEU SCORE: 0.240785655451027

TEST MSG: used failover container in proxy container builder
GENERATED MSG: used failover container for failover in standalone proxy

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> index 63e698d . . af5bf1b 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> @ @ - 5 , 6 + 5 , 7 @ @ import com . fasterxml . jackson . core . JsonParser ; <nl> import com . fasterxml . jackson . core . JsonToken ; <nl> import com . fasterxml . jackson . databind . DeserializationContext ; <nl> import com . fasterxml . jackson . databind . JsonDeserializer ; <nl> + import com . github . dreamhead . moco . parser . model . FailoverContainer ; <nl> import com . github . dreamhead . moco . parser . model . ProxyContainer ; <nl> import com . github . dreamhead . moco . parser . model . TextContainer ; <nl> <nl> @ @ - 35 , 8 + 36 , 8 @ @ public final class ProxyContainerDeserializer extends JsonDeserializer < ProxyCont <nl> private String from ; <nl> private String to ; <nl> <nl> - private String failover ; <nl> - private String playback ; <nl> + private FailoverContainer failover ; <nl> + private FailoverContainer playback ; <nl> <nl> public ProxyContainer toProxyContainer ( ) { <nl> return builder ( ) <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java <nl> index 619df26 . . b247b0a 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java <nl> @ @ - 73 , 8 + 73 , 8 @ @ public class ProxyContainer { <nl> <nl> public static class Builder { <nl> private TextContainer url ; <nl> - private String failover ; <nl> - private String playback ; <nl> + private FailoverContainer failover ; <nl> + private FailoverContainer playback ; <nl> <nl> private String from ; <nl> private String to ; <nl> @ @ - 99 , 12 + 99 , 12 @ @ public class ProxyContainer { <nl> return this ; <nl> } <nl> <nl> - public final Builder withFailover ( final String failover ) { <nl> + public final Builder withFailover ( final FailoverContainer failover ) { <nl> this . failover = failover ; <nl> return this ; <nl> } <nl> <nl> - public final Builder withPlayback ( final String playback ) { <nl> + public final Builder withPlayback ( final FailoverContainer playback ) { <nl> this . playback = playback ; <nl> return this ; <nl> } <nl> @ @ - 122 , 8 + 122 , 8 @ @ public class ProxyContainer { <nl> container . url = url ; <nl> container . from = from ; <nl> container . to = to ; <nl> - container . failover = ( failover ! = null ) ? new FailoverContainer ( failover ) : null ; <nl> - container . playback = ( playback ! = null ) ? new FailoverContainer ( playback ) : null ; <nl> + container . failover = failover ; <nl> + container . playback = playback ; <nl> return container ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FailoverContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FailoverContainerDeserializer . java <nl> new file mode 100644 <nl> index 0000000 . . ff2a593 <nl> - - - / dev / null <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FailoverContainerDeserializer . java <nl> @ @ - 0 , 0 + 1 , 23 @ @ <nl> + package com . github . dreamhead . moco . parser . deserializer ; <nl> + <nl> + import com . fasterxml . jackson . core . JsonParser ; <nl> + import com . fasterxml . jackson . core . JsonProcessingException ; <nl> + import com . fasterxml . jackson . core . JsonToken ; <nl> + import com . fasterxml . jackson . databind . DeserializationContext ; <nl> + import com . fasterxml . jackson . databind . JsonDeserializer ; <nl> + import com . github . dreamhead . moco . parser . model . FailoverContainer ; <nl> + import com . github . dreamhead . moco . parser . model . ProxyContainer ; <nl> + <nl> + import java . io . IOException ; <nl> + <nl> + public class FailoverContainerDeserializer extends JsonDeserializer < FailoverContainer > { <nl> + @ Override <nl> + public FailoverContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException , JsonProcessingException { <nl> + JsonToken currentToken = jp . getCurrentToken ( ) ; <nl> + if ( currentToken = = JsonToken . VALUE _ STRING ) { <nl> + return new FailoverContainer ( jp . getText ( ) ) ; <nl> + } <nl> + <nl> + return ( FailoverContainer ) ctxt . handleUnexpectedToken ( ProxyContainer . class , jp ) ; <nl> + } <nl> + } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FailoverContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FailoverContainer . java <nl> new file mode 100644 <nl> index 0000000 . . 6a601e9 <nl> - - - / dev / null <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FailoverContainer . java <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + package com . github . dreamhead . moco . parser . model ; <nl> + <nl> + import com . fasterxml . jackson . databind . annotation . JsonDeserialize ; <nl> + import com . github . dreamhead . moco . parser . deserializer . FailoverContainerDeserializer ; <nl> + <nl> + @ JsonDeserialize ( using = FailoverContainerDeserializer . class ) <nl> + public class FailoverContainer { <nl> + private String failover ; <nl> + <nl> + public FailoverContainer ( final String failover ) { <nl> + this . failover = failover ; <nl> + } <nl> + <nl> + public String getFailover ( ) { <nl> + return failover ; <nl> + } <nl> + } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java <nl> index cfde481 . . 619df26 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java <nl> @ @ - 18 , 8 + 18 , 8 @ @ public class ProxyContainer { <nl> private String from ; <nl> private String to ; <nl> <nl> - private String failover ; <nl> - private String playback ; <nl> + private FailoverContainer failover ; <nl> + private FailoverContainer playback ; <nl> <nl> public final boolean hasUrl ( ) { <nl> return url ! = null ; <nl> @ @ - 43 , 11 + 43 , 11 @ @ public class ProxyContainer { <nl> <nl> public final Failover getFailover ( ) { <nl> if ( failover ! = null ) { <nl> - return failover ( failover ) ; <nl> + return failover ( failover . getFailover ( ) ) ; <nl> } <nl> <nl> if ( playback ! = null ) { <nl> - return playback ( playback ) ; <nl> + return playback ( playback . getFailover ( ) ) ; <nl> } <nl> <nl> return Failover . DEFAULT _ FAILOVER ; <nl> @ @ - 122 , 8 + 122 , 8 @ @ public class ProxyContainer { <nl> container . url = url ; <nl> container . from = from ; <nl> container . to = to ; <nl> - container . failover = failover ; <nl> - container . playback = playback ; <nl> + container . failover = ( failover ! = null ) ? new FailoverContainer ( failover ) : null ; <nl> + container . playback = ( playback ! = null ) ? new FailoverContainer ( playback ) : null ; <nl> return container ; <nl> } <nl> }

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 index 63e698d . . af5bf1b 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 @ @ - 5 , 6 + 5 , 7 @ @ import com . fasterxml . jackson . core . JsonParser ; 
 import com . fasterxml . jackson . core . JsonToken ; 
 import com . fasterxml . jackson . databind . DeserializationContext ; 
 import com . fasterxml . jackson . databind . JsonDeserializer ; 
 + import com . github . dreamhead . moco . parser . model . FailoverContainer ; 
 import com . github . dreamhead . moco . parser . model . ProxyContainer ; 
 import com . github . dreamhead . moco . parser . model . TextContainer ; 
 
 @ @ - 35 , 8 + 36 , 8 @ @ public final class ProxyContainerDeserializer extends JsonDeserializer < ProxyCont 
 private String from ; 
 private String to ; 
 
 - private String failover ; 
 - private String playback ; 
 + private FailoverContainer failover ; 
 + private FailoverContainer playback ; 
 
 public ProxyContainer toProxyContainer ( ) { 
 return builder ( ) 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java 
 index 619df26 . . b247b0a 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java 
 @ @ - 73 , 8 + 73 , 8 @ @ public class ProxyContainer { 
 
 public static class Builder { 
 private TextContainer url ; 
 - private String failover ; 
 - private String playback ; 
 + private FailoverContainer failover ; 
 + private FailoverContainer playback ; 
 
 private String from ; 
 private String to ; 
 @ @ - 99 , 12 + 99 , 12 @ @ public class ProxyContainer { 
 return this ; 
 } 
 
 - public final Builder withFailover ( final String failover ) { 
 + public final Builder withFailover ( final FailoverContainer failover ) { 
 this . failover = failover ; 
 return this ; 
 } 
 
 - public final Builder withPlayback ( final String playback ) { 
 + public final Builder withPlayback ( final FailoverContainer playback ) { 
 this . playback = playback ; 
 return this ; 
 } 
 @ @ - 122 , 8 + 122 , 8 @ @ public class ProxyContainer { 
 container . url = url ; 
 container . from = from ; 
 container . to = to ; 
 - container . failover = ( failover ! = null ) ? new FailoverContainer ( failover ) : null ; 
 - container . playback = ( playback ! = null ) ? new FailoverContainer ( playback ) : null ; 
 + container . failover = failover ; 
 + container . playback = playback ; 
 return container ; 
 } 
 }

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FailoverContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FailoverContainerDeserializer . java 
 new file mode 100644 
 index 0000000 . . ff2a593 
 - - - / dev / null 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FailoverContainerDeserializer . java 
 @ @ - 0 , 0 + 1 , 23 @ @ 
 + package com . github . dreamhead . moco . parser . deserializer ; 
 + 
 + import com . fasterxml . jackson . core . JsonParser ; 
 + import com . fasterxml . jackson . core . JsonProcessingException ; 
 + import com . fasterxml . jackson . core . JsonToken ; 
 + import com . fasterxml . jackson . databind . DeserializationContext ; 
 + import com . fasterxml . jackson . databind . JsonDeserializer ; 
 + import com . github . dreamhead . moco . parser . model . FailoverContainer ; 
 + import com . github . dreamhead . moco . parser . model . ProxyContainer ; 
 + 
 + import java . io . IOException ; 
 + 
 + public class FailoverContainerDeserializer extends JsonDeserializer < FailoverContainer > { 
 + @ Override 
 + public FailoverContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException , JsonProcessingException { 
 + JsonToken currentToken = jp . getCurrentToken ( ) ; 
 + if ( currentToken = = JsonToken . VALUE _ STRING ) { 
 + return new FailoverContainer ( jp . getText ( ) ) ; 
 + } 
 + 
 + return ( FailoverContainer ) ctxt . handleUnexpectedToken ( ProxyContainer . class , jp ) ; 
 + } 
 + } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FailoverContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FailoverContainer . java 
 new file mode 100644 
 index 0000000 . . 6a601e9 
 - - - / dev / null 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / FailoverContainer . java 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + package com . github . dreamhead . moco . parser . model ; 
 + 
 + import com . fasterxml . jackson . databind . annotation . JsonDeserialize ; 
 + import com . github . dreamhead . moco . parser . deserializer . FailoverContainerDeserializer ; 
 + 
 + @ JsonDeserialize ( using = FailoverContainerDeserializer . class ) 
 + public class FailoverContainer { 
 + private String failover ; 
 + 
 + public FailoverContainer ( final String failover ) { 
 + this . failover = failover ; 
 + } 
 + 
 + public String getFailover ( ) { 
 + return failover ; 
 + } 
 + } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java 
 index cfde481 . . 619df26 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java 
 @ @ - 18 , 8 + 18 , 8 @ @ public class ProxyContainer { 
 private String from ; 
 private String to ; 
 
 - private String failover ; 
 - private String playback ; 
 + private FailoverContainer failover ; 
 + private FailoverContainer playback ; 
 
 public final boolean hasUrl ( ) { 
 return url ! = null ; 
 @ @ - 43 , 11 + 43 , 11 @ @ public class ProxyContainer { 
 
 public final Failover getFailover ( ) { 
 if ( failover ! = null ) { 
 - return failover ( failover ) ; 
 + return failover ( failover . getFailover ( ) ) ; 
 } 
 
 if ( playback ! = null ) { 
 - return playback ( playback ) ; 
 + return playback ( playback . getFailover ( ) ) ; 
 } 
 
 return Failover . DEFAULT _ FAILOVER ; 
 @ @ - 122 , 8 + 122 , 8 @ @ public class ProxyContainer { 
 container . url = url ; 
 container . from = from ; 
 container . to = to ; 
 - container . failover = failover ; 
 - container . playback = playback ; 
 + container . failover = ( failover ! = null ) ? new FailoverContainer ( failover ) : null ; 
 + container . playback = ( playback ! = null ) ? new FailoverContainer ( playback ) : null ; 
 return container ; 
 } 
 }
