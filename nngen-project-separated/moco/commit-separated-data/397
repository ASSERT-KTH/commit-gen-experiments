BLEU SCORE: 0.24446151121745052

TEST MSG: added final to check valid url item
GENERATED MSG: added final to some fields

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> index 2f868e1 . . 5b50af3 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> @ @ - 50 , 5 + 50 , 6 @ @ public final class HttpDumpers { <nl> return defaultValue ; <nl> } <nl> <nl> - private HttpDumpers ( ) { } <nl> + private HttpDumpers ( ) { <nl> + } <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java <nl> index b0e58fd . . 738bd12 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java <nl> @ @ - 24 , 7 + 24 , 7 @ @ public class JsonPathRequestExtractor extends HttpRequestExtractor < Object > { <nl> @ Override <nl> protected Optional < Object > doExtract ( final HttpRequest request ) { <nl> Optional < byte [ ] > requestBody = extractor . extract ( request ) ; <nl> - 	 	 try { <nl> + try { <nl> if ( ! requestBody . isPresent ( ) ) { <nl> return absent ( ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java <nl> index a1e8453 . . e0dd293 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java <nl> @ @ - 38 , 7 + 38 , 6 @ @ import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> import java . io . IOException ; <nl> - import java . net . MalformedURLException ; <nl> import java . net . URL ; <nl> import java . util . Map ; <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestIds . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestIds . java <nl> index e60bce5 . . 6aa9d7e 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestIds . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestIds . java <nl> @ @ - 13 , 7 + 13 , 7 @ @ public class RestIds { <nl> return checkValidUrlItem ( name , " Resource name " ) ; <nl> } <nl> <nl> - private static String checkValidUrlItem ( String id , String item ) { <nl> + private static String checkValidUrlItem ( final String id , final String item ) { <nl> checkNotNullOrEmpty ( id , item + " should not be null or empty " ) ; <nl> <nl> if ( id . contains ( URLs . SEPARATOR ) ) {
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractContentResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractContentResponseHandler . java <nl> index aab0ef7 . . 74cad47 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractContentResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractContentResponseHandler . java <nl> @ @ - 7 , 7 + 7 , 7 @ @ import org . jboss . netty . handler . codec . http . HttpRequest ; <nl> import org . jboss . netty . handler . codec . http . HttpResponse ; <nl> <nl> public abstract class AbstractContentResponseHandler implements ResponseHandler { <nl> - private ContentTypeDetector detector = new ContentTypeDetector ( ) ; <nl> + private final ContentTypeDetector detector = new ContentTypeDetector ( ) ; <nl> <nl> protected abstract void writeContentResponse ( HttpRequest request , ChannelBuffer buffer ) ; <nl> <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java <nl> index 33b9efc . . dadf2af 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java <nl> @ @ - 7 , 7 + 7 , 7 @ @ import org . jboss . netty . handler . codec . http . HttpRequest ; <nl> import org . jboss . netty . handler . codec . http . HttpResponse ; <nl> <nl> public class HeaderResponseHandler implements ResponseHandler { <nl> - private ContentTypeDetector detector = new ContentTypeDetector ( ) ; <nl> + private final ContentTypeDetector detector = new ContentTypeDetector ( ) ; <nl> <nl> private final String name ; <nl> private final String value ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java <nl> index 176d1ed . . ad3e223 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java <nl> @ @ - 9 , 8 + 9 , 8 @ @ import org . jboss . netty . handler . codec . http . HttpRequest ; <nl> import java . util . Arrays ; <nl> <nl> public class EqRequestMatcher implements RequestMatcher { <nl> - private RequestExtractor extractor ; <nl> - private Resource expected ; <nl> + private final RequestExtractor extractor ; <nl> + private final Resource expected ; <nl> <nl> public EqRequestMatcher ( RequestExtractor extractor , Resource expected ) { <nl> this . extractor = extractor ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountHandler . java <nl> index 25fa400 . . 17a6685 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountHandler . java <nl> @ @ - 13 , 7 + 13 , 7 @ @ import java . io . IOException ; <nl> import static com . google . common . io . Files . toByteArray ; <nl> <nl> public class MountHandler extends AbstractContentResponseHandler { <nl> - private MountPathExtractor extractor ; <nl> + private final MountPathExtractor extractor ; <nl> <nl> private final File dir ; <nl> private final MountTo target ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountMatcher . java <nl> index 4862337 . . 8b5efa8 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountMatcher . java <nl> @ @ - 10 , 7 + 10 , 7 @ @ import static com . google . common . base . Predicates . and ; <nl> import static com . google . common . base . Strings . isNullOrEmpty ; <nl> <nl> public class MountMatcher implements RequestMatcher { <nl> - private MountPathExtractor extractor ; <nl> + private final MountPathExtractor extractor ; <nl> <nl> private final File dir ; <nl> private final Iterable < MountPredicate > predicates ; <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ClasspathFileResource . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ClasspathFileResource . java <nl> index 64944e2 . . d4963d1 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ClasspathFileResource . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ClasspathFileResource . java <nl> @ @ - 8 , 7 + 8 , 7 @ @ import java . io . IOException ; <nl> import static com . google . common . io . ByteStreams . toByteArray ; <nl> <nl> public class ClasspathFileResource implements ContentResource { <nl> - private String filename ; <nl> + private final String filename ; <nl> <nl> public ClasspathFileResource ( String filename ) { <nl> this . filename = filename ; <nl> diff - - git a / moco - doc / plan . md b / moco - doc / plan . md <nl> index 7431d35 . . 3a3956c 100644 <nl> - - - a / moco - doc / plan . md <nl> + + + b / moco - doc / plan . md <nl> @ @ - 25 , 6 + 25 , 9 @ @ <nl> <nl> # Tools Support <nl> * Proguard to reduce uberjar size <nl> + * homebrew <nl> + * IntelliJ IDEA plugin <nl> + * Eclipse plugin <nl> <nl> # Polyglot <nl> * Groovy

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 index 2f868e1 . . 5b50af3 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 @ @ - 50 , 5 + 50 , 6 @ @ public final class HttpDumpers { 
 return defaultValue ; 
 } 
 
 - private HttpDumpers ( ) { } 
 + private HttpDumpers ( ) { 
 + } 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java 
 index b0e58fd . . 738bd12 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / extractor / JsonPathRequestExtractor . java 
 @ @ - 24 , 7 + 24 , 7 @ @ public class JsonPathRequestExtractor extends HttpRequestExtractor < Object > { 
 @ Override 
 protected Optional < Object > doExtract ( final HttpRequest request ) { 
 Optional < byte [ ] > requestBody = extractor . extract ( request ) ; 
 - 	 	 try { 
 + try { 
 if ( ! requestBody . isPresent ( ) ) { 
 return absent ( ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java 
 index a1e8453 . . e0dd293 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractProxyResponseHandler . java 
 @ @ - 38 , 7 + 38 , 6 @ @ import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 import java . io . IOException ; 
 - import java . net . MalformedURLException ; 
 import java . net . URL ; 
 import java . util . Map ; 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestIds . java b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestIds . java 
 index e60bce5 . . 6aa9d7e 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestIds . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / rest / RestIds . java 
 @ @ - 13 , 7 + 13 , 7 @ @ public class RestIds { 
 return checkValidUrlItem ( name , " Resource name " ) ; 
 } 
 
 - private static String checkValidUrlItem ( String id , String item ) { 
 + private static String checkValidUrlItem ( final String id , final String item ) { 
 checkNotNullOrEmpty ( id , item + " should not be null or empty " ) ; 
 
 if ( id . contains ( URLs . SEPARATOR ) ) {

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractContentResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractContentResponseHandler . java 
 index aab0ef7 . . 74cad47 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractContentResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / AbstractContentResponseHandler . java 
 @ @ - 7 , 7 + 7 , 7 @ @ import org . jboss . netty . handler . codec . http . HttpRequest ; 
 import org . jboss . netty . handler . codec . http . HttpResponse ; 
 
 public abstract class AbstractContentResponseHandler implements ResponseHandler { 
 - private ContentTypeDetector detector = new ContentTypeDetector ( ) ; 
 + private final ContentTypeDetector detector = new ContentTypeDetector ( ) ; 
 
 protected abstract void writeContentResponse ( HttpRequest request , ChannelBuffer buffer ) ; 
 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java 
 index 33b9efc . . dadf2af 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / HeaderResponseHandler . java 
 @ @ - 7 , 7 + 7 , 7 @ @ import org . jboss . netty . handler . codec . http . HttpRequest ; 
 import org . jboss . netty . handler . codec . http . HttpResponse ; 
 
 public class HeaderResponseHandler implements ResponseHandler { 
 - private ContentTypeDetector detector = new ContentTypeDetector ( ) ; 
 + private final ContentTypeDetector detector = new ContentTypeDetector ( ) ; 
 
 private final String name ; 
 private final String value ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java 
 index 176d1ed . . ad3e223 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / EqRequestMatcher . java 
 @ @ - 9 , 8 + 9 , 8 @ @ import org . jboss . netty . handler . codec . http . HttpRequest ; 
 import java . util . Arrays ; 
 
 public class EqRequestMatcher implements RequestMatcher { 
 - private RequestExtractor extractor ; 
 - private Resource expected ; 
 + private final RequestExtractor extractor ; 
 + private final Resource expected ; 
 
 public EqRequestMatcher ( RequestExtractor extractor , Resource expected ) { 
 this . extractor = extractor ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountHandler . java 
 index 25fa400 . . 17a6685 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountHandler . java 
 @ @ - 13 , 7 + 13 , 7 @ @ import java . io . IOException ; 
 import static com . google . common . io . Files . toByteArray ; 
 
 public class MountHandler extends AbstractContentResponseHandler { 
 - private MountPathExtractor extractor ; 
 + private final MountPathExtractor extractor ; 
 
 private final File dir ; 
 private final MountTo target ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountMatcher . java 
 index 4862337 . . 8b5efa8 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / mount / MountMatcher . java 
 @ @ - 10 , 7 + 10 , 7 @ @ import static com . google . common . base . Predicates . and ; 
 import static com . google . common . base . Strings . isNullOrEmpty ; 
 
 public class MountMatcher implements RequestMatcher { 
 - private MountPathExtractor extractor ; 
 + private final MountPathExtractor extractor ; 
 
 private final File dir ; 
 private final Iterable < MountPredicate > predicates ; 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ClasspathFileResource . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ClasspathFileResource . java 
 index 64944e2 . . d4963d1 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / ClasspathFileResource . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / ClasspathFileResource . java 
 @ @ - 8 , 7 + 8 , 7 @ @ import java . io . IOException ; 
 import static com . google . common . io . ByteStreams . toByteArray ; 
 
 public class ClasspathFileResource implements ContentResource { 
 - private String filename ; 
 + private final String filename ; 
 
 public ClasspathFileResource ( String filename ) { 
 this . filename = filename ; 
 diff - - git a / moco - doc / plan . md b / moco - doc / plan . md 
 index 7431d35 . . 3a3956c 100644 
 - - - a / moco - doc / plan . md 
 + + + b / moco - doc / plan . md 
 @ @ - 25 , 6 + 25 , 9 @ @ 
 
 # Tools Support 
 * Proguard to reduce uberjar size 
 + * homebrew 
 + * IntelliJ IDEA plugin 
 + * Eclipse plugin 
 
 # Polyglot 
 * Groovy
