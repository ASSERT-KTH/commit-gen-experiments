BLEU SCORE: 0.05522397783539471

TEST MSG: removed unused header helper in http message builder
GENERATED MSG: fixed request and response builder for proxy dumper

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> index d5465d8 . . 6edb6aa 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java <nl> @ @ - 109 , 14 + 109 , 6 @ @ public abstract class DefaultHttpMessage implements HttpMessage { <nl> return clazz . cast ( this ) ; <nl> } <nl> <nl> - public T forHeaders ( final Map < String , String > headers ) { <nl> - if ( headers ! = null ) { <nl> - this . headers = simpleValueToArray ( headers ) ; <nl> - } <nl> - <nl> - return clazz . cast ( this ) ; <nl> - } <nl> - <nl> public T withHeaders ( final Map < String , ? > headers ) { <nl> if ( headers ! = null ) { <nl> this . headers = asHeaders ( headers ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java <nl> index 2557b86 . . 178ee9f 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( request ) , is ( true ) ) ; <nl> @ @ - 32 , 7 + 32 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> HttpRequest another = DefaultHttpRequest . builder ( ) <nl> @ @ - 40 , 7 + 40 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " different " ) <nl> - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( another ) , is ( false ) ) ; <nl> @ @ - 54 , 7 + 54 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> . withUri ( " / foo " ) <nl> - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> HttpRequest another = DefaultHttpRequest . builder ( ) <nl> @ @ - 63 , 7 + 63 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> . withUri ( " / bar " ) <nl> - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( another ) , is ( false ) ) ; <nl> @ @ - 76 , 14 + 76 , 14 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> HttpRequest failover = DefaultHttpRequest . builder ( ) <nl> . withUri ( " / uri " ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> assertThat ( new HttpRequestFailoverMatcher ( failover ) . match ( request ) , is ( true ) ) ; <nl> @ @ - 96 , 7 + 96 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> HttpRequest failover = DefaultHttpRequest . builder ( ) <nl> @ @ - 104 , 7 + 104 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . forHeaders ( of ( " Host " , " localhost : 12306 " ) ) <nl> + . withHeaders ( of ( " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> assertThat ( new HttpRequestFailoverMatcher ( failover ) . match ( request ) , is ( true ) ) ;
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> index afbcd07 . . 85759f3 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java <nl> @ @ - 142 , 8 + 142 , 8 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http <nl> <nl> return builder ( ) <nl> . withVersion ( HttpProtocolVersion . versionOf ( request . protocolVersion ( ) . text ( ) ) ) <nl> - . forHeaders ( toHeaders ( request . headers ( ) ) ) <nl> - / / . withHeaders ( collectHeaders ( request . headers ( ) ) ) <nl> + . withHeaders ( toHeaders ( request . headers ( ) ) ) <nl> + / / . forHeaders ( collectHeaders ( request . headers ( ) ) ) <nl> . withMethod ( HttpMethod . valueOf ( request . method ( ) . toString ( ) . toUpperCase ( ) ) ) <nl> . withUri ( decoder . path ( ) ) <nl> . withQueries ( queries ) <nl> @ @ - 246 , 7 + 246 , 7 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http <nl> return this ; <nl> } <nl> <nl> - public Builder withHeaders ( final Map < String , String > headers ) { <nl> + public Builder forHeaders ( final Map < String , String > headers ) { <nl> if ( headers ! = null ) { <nl> ImmutableMap . Builder < String , String [ ] > builder = ImmutableMap . builder ( ) ; <nl> for ( Map . Entry < String , String > entry : headers . entrySet ( ) ) { <nl> @ @ - 258 , 7 + 258 , 7 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http <nl> return this ; <nl> } <nl> <nl> - public Builder forHeaders ( final Map < String , String [ ] > headers ) { <nl> + public Builder withHeaders ( final Map < String , String [ ] > headers ) { <nl> if ( headers ! = null ) { <nl> this . headers = copyOf ( headers ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> index d3c9be3 . . f0ef734 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java <nl> @ @ - 39 , 7 + 39 , 7 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo <nl> return builder ( ) <nl> . withVersion ( toHttpProtocolVersion ( response . protocolVersion ( ) ) ) <nl> . withStatus ( response . status ( ) . code ( ) ) <nl> - . withHeaders ( headerBuilder . build ( ) ) <nl> + . forHeaders ( headerBuilder . build ( ) ) <nl> . withContent ( content ( ) <nl> . withContent ( new ByteBufInputStream ( response . content ( ) ) ) <nl> . build ( ) ) <nl> @ @ - 70 , 7 + 70 , 15 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo <nl> return this ; <nl> } <nl> <nl> - public Builder withHeaders ( final Map < String , String > headers ) { <nl> + public Builder withHeaders ( final Map < String , String [ ] > headers ) { <nl> + if ( headers ! = null ) { <nl> + this . headers = copyOf ( headers ) ; <nl> + } <nl> + <nl> + return this ; <nl> + } <nl> + <nl> + public Builder forHeaders ( final Map < String , String > headers ) { <nl> if ( headers ! = null ) { <nl> this . headers = asArray ( copyOf ( headers ) ) ; <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> index 85521f4 . . 0c8bbcc 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> @ @ - 421 , 7 + 421 , 9 @ @ public class MocoProxyTest extends AbstractMocoHttpTest { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> assertThat ( helper . get ( remoteUrl ( " / proxy _ playback " ) ) , is ( " proxy " ) ) ; <nl> + System . out . println ( " First request " ) ; <nl> assertThat ( helper . get ( remoteUrl ( " / proxy _ playback " ) ) , is ( " proxy " ) ) ; <nl> + System . out . println ( " Second request " ) ; <nl> } <nl> } ) ; <nl> <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java <nl> index 240c22d . . 2b9bf89 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java <nl> @ @ - 84 , 7 + 84 , 7 @ @ public class HttpDumpersTest { <nl> <nl> private HttpMessage messageWithHeaders ( final Map < String , String > headers ) { <nl> return DefaultHttpResponse . builder ( ) <nl> - . withHeaders ( headers ) <nl> + . forHeaders ( headers ) <nl> . withContent ( MessageContent . content ( MESSAGE _ BODY ) ) <nl> . build ( ) ; <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java <nl> index 178ee9f . . 2557b86 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( request ) , is ( true ) ) ; <nl> @ @ - 32 , 7 + 32 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> HttpRequest another = DefaultHttpRequest . builder ( ) <nl> @ @ - 40 , 7 + 40 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " different " ) <nl> - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( another ) , is ( false ) ) ; <nl> @ @ - 54 , 7 + 54 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> . withUri ( " / foo " ) <nl> - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> HttpRequest another = DefaultHttpRequest . builder ( ) <nl> @ @ - 63 , 7 + 63 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> . withUri ( " / bar " ) <nl> - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( another ) , is ( false ) ) ; <nl> @ @ - 76 , 14 + 76 , 14 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> HttpRequest failover = DefaultHttpRequest . builder ( ) <nl> . withUri ( " / uri " ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> assertThat ( new HttpRequestFailoverMatcher ( failover ) . match ( request ) , is ( true ) ) ; <nl> @ @ - 96 , 7 + 96 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> HttpRequest failover = DefaultHttpRequest . builder ( ) <nl> @ @ - 104 , 7 + 104 , 7 @ @ public class HttpRequestMatcherTest { <nl> . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) <nl> . withMethod ( HttpMethod . POST ) <nl> . withTextContent ( " proxy " ) <nl> - . withHeaders ( of ( " Host " , " localhost : 12306 " ) ) <nl> + . forHeaders ( of ( " Host " , " localhost : 12306 " ) ) <nl> . build ( ) ; <nl> <nl> assertThat ( new HttpRequestFailoverMatcher ( failover ) . match ( request ) , is ( true ) ) ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 index d5465d8 . . 6edb6aa 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpMessage . java 
 @ @ - 109 , 14 + 109 , 6 @ @ public abstract class DefaultHttpMessage implements HttpMessage { 
 return clazz . cast ( this ) ; 
 } 
 
 - public T forHeaders ( final Map < String , String > headers ) { 
 - if ( headers ! = null ) { 
 - this . headers = simpleValueToArray ( headers ) ; 
 - } 
 - 
 - return clazz . cast ( this ) ; 
 - } 
 - 
 public T withHeaders ( final Map < String , ? > headers ) { 
 if ( headers ! = null ) { 
 this . headers = asHeaders ( headers ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java 
 index 2557b86 . . 178ee9f 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( request ) , is ( true ) ) ; 
 @ @ - 32 , 7 + 32 , 7 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 HttpRequest another = DefaultHttpRequest . builder ( ) 
 @ @ - 40 , 7 + 40 , 7 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " different " ) 
 - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( another ) , is ( false ) ) ; 
 @ @ - 54 , 7 + 54 , 7 @ @ public class HttpRequestMatcherTest { 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 . withUri ( " / foo " ) 
 - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 HttpRequest another = DefaultHttpRequest . builder ( ) 
 @ @ - 63 , 7 + 63 , 7 @ @ public class HttpRequestMatcherTest { 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 . withUri ( " / bar " ) 
 - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( another ) , is ( false ) ) ; 
 @ @ - 76 , 14 + 76 , 14 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 HttpRequest failover = DefaultHttpRequest . builder ( ) 
 . withUri ( " / uri " ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 assertThat ( new HttpRequestFailoverMatcher ( failover ) . match ( request ) , is ( true ) ) ; 
 @ @ - 96 , 7 + 96 , 7 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 HttpRequest failover = DefaultHttpRequest . builder ( ) 
 @ @ - 104 , 7 + 104 , 7 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . forHeaders ( of ( " Host " , " localhost : 12306 " ) ) 
 + . withHeaders ( of ( " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 assertThat ( new HttpRequestFailoverMatcher ( failover ) . match ( request ) , is ( true ) ) ;

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 index afbcd07 . . 85759f3 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpRequest . java 
 @ @ - 142 , 8 + 142 , 8 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http 
 
 return builder ( ) 
 . withVersion ( HttpProtocolVersion . versionOf ( request . protocolVersion ( ) . text ( ) ) ) 
 - . forHeaders ( toHeaders ( request . headers ( ) ) ) 
 - / / . withHeaders ( collectHeaders ( request . headers ( ) ) ) 
 + . withHeaders ( toHeaders ( request . headers ( ) ) ) 
 + / / . forHeaders ( collectHeaders ( request . headers ( ) ) ) 
 . withMethod ( HttpMethod . valueOf ( request . method ( ) . toString ( ) . toUpperCase ( ) ) ) 
 . withUri ( decoder . path ( ) ) 
 . withQueries ( queries ) 
 @ @ - 246 , 7 + 246 , 7 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http 
 return this ; 
 } 
 
 - public Builder withHeaders ( final Map < String , String > headers ) { 
 + public Builder forHeaders ( final Map < String , String > headers ) { 
 if ( headers ! = null ) { 
 ImmutableMap . Builder < String , String [ ] > builder = ImmutableMap . builder ( ) ; 
 for ( Map . Entry < String , String > entry : headers . entrySet ( ) ) { 
 @ @ - 258 , 7 + 258 , 7 @ @ public final class DefaultHttpRequest extends DefaultHttpMessage implements Http 
 return this ; 
 } 
 
 - public Builder forHeaders ( final Map < String , String [ ] > headers ) { 
 + public Builder withHeaders ( final Map < String , String [ ] > headers ) { 
 if ( headers ! = null ) { 
 this . headers = copyOf ( headers ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 index d3c9be3 . . f0ef734 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / model / DefaultHttpResponse . java 
 @ @ - 39 , 7 + 39 , 7 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo 
 return builder ( ) 
 . withVersion ( toHttpProtocolVersion ( response . protocolVersion ( ) ) ) 
 . withStatus ( response . status ( ) . code ( ) ) 
 - . withHeaders ( headerBuilder . build ( ) ) 
 + . forHeaders ( headerBuilder . build ( ) ) 
 . withContent ( content ( ) 
 . withContent ( new ByteBufInputStream ( response . content ( ) ) ) 
 . build ( ) ) 
 @ @ - 70 , 7 + 70 , 15 @ @ public class DefaultHttpResponse extends DefaultHttpMessage implements HttpRespo 
 return this ; 
 } 
 
 - public Builder withHeaders ( final Map < String , String > headers ) { 
 + public Builder withHeaders ( final Map < String , String [ ] > headers ) { 
 + if ( headers ! = null ) { 
 + this . headers = copyOf ( headers ) ; 
 + } 
 + 
 + return this ; 
 + } 
 + 
 + public Builder forHeaders ( final Map < String , String > headers ) { 
 if ( headers ! = null ) { 
 this . headers = asArray ( copyOf ( headers ) ) ; 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 index 85521f4 . . 0c8bbcc 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 @ @ - 421 , 7 + 421 , 9 @ @ public class MocoProxyTest extends AbstractMocoHttpTest { 
 @ Override 
 public void run ( ) throws Exception { 
 assertThat ( helper . get ( remoteUrl ( " / proxy _ playback " ) ) , is ( " proxy " ) ) ; 
 + System . out . println ( " First request " ) ; 
 assertThat ( helper . get ( remoteUrl ( " / proxy _ playback " ) ) , is ( " proxy " ) ) ; 
 + System . out . println ( " Second request " ) ; 
 } 
 } ) ; 
 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java 
 index 240c22d . . 2b9bf89 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java 
 @ @ - 84 , 7 + 84 , 7 @ @ public class HttpDumpersTest { 
 
 private HttpMessage messageWithHeaders ( final Map < String , String > headers ) { 
 return DefaultHttpResponse . builder ( ) 
 - . withHeaders ( headers ) 
 + . forHeaders ( headers ) 
 . withContent ( MessageContent . content ( MESSAGE _ BODY ) ) 
 . build ( ) ; 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java 
 index 178ee9f . . 2557b86 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / handler / failover / HttpRequestMatcherTest . java 
 @ @ - 19 , 7 + 19 , 7 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( request ) , is ( true ) ) ; 
 @ @ - 32 , 7 + 32 , 7 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 HttpRequest another = DefaultHttpRequest . builder ( ) 
 @ @ - 40 , 7 + 40 , 7 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " different " ) 
 - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( another ) , is ( false ) ) ; 
 @ @ - 54 , 7 + 54 , 7 @ @ public class HttpRequestMatcherTest { 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 . withUri ( " / foo " ) 
 - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 HttpRequest another = DefaultHttpRequest . builder ( ) 
 @ @ - 63 , 7 + 63 , 7 @ @ public class HttpRequestMatcherTest { 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 . withUri ( " / bar " ) 
 - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 assertThat ( new HttpRequestFailoverMatcher ( request ) . match ( another ) , is ( false ) ) ; 
 @ @ - 76 , 14 + 76 , 14 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 HttpRequest failover = DefaultHttpRequest . builder ( ) 
 . withUri ( " / uri " ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 assertThat ( new HttpRequestFailoverMatcher ( failover ) . match ( request ) , is ( true ) ) ; 
 @ @ - 96 , 7 + 96 , 7 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . withHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 + . forHeaders ( of ( " Cookie " , " loggedIn = true " , " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 HttpRequest failover = DefaultHttpRequest . builder ( ) 
 @ @ - 104 , 7 + 104 , 7 @ @ public class HttpRequestMatcherTest { 
 . withVersion ( HttpProtocolVersion . VERSION _ 1 _ 1 ) 
 . withMethod ( HttpMethod . POST ) 
 . withTextContent ( " proxy " ) 
 - . withHeaders ( of ( " Host " , " localhost : 12306 " ) ) 
 + . forHeaders ( of ( " Host " , " localhost : 12306 " ) ) 
 . build ( ) ; 
 
 assertThat ( new HttpRequestFailoverMatcher ( failover ) . match ( request ) , is ( true ) ) ;
