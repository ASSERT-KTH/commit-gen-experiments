BLEU SCORE: 0.03283637368030199

TEST MSG: caught exception in http protocol version deserializer
GENERATED MSG: introduced Monitor interface

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpProtocolVersionDeserializer . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpProtocolVersionDeserializer . java <nl> index 118a219 . . f7bcd8f 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpProtocolVersionDeserializer . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpProtocolVersionDeserializer . java <nl> @ @ - 10 , 6 + 10 , 10 @ @ import java . io . IOException ; <nl> public class HttpProtocolVersionDeserializer extends JsonDeserializer < HttpProtocolVersion > { <nl> @ Override <nl> public HttpProtocolVersion deserialize ( final JsonParser jp , final DeserializationContext ctx ) throws IOException { <nl> - return HttpProtocolVersion . versionOf ( jp . getText ( ) ) ; <nl> + try { <nl> + return HttpProtocolVersion . versionOf ( jp . getText ( ) ) ; <nl> + } catch ( IllegalArgumentException e ) { <nl> + return ( HttpProtocolVersion ) ctx . handleUnexpectedToken ( HttpProtocolVersion . class , jp ) ; <nl> + } <nl> } <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> index 5a382f1 . . fb7f476 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> @ @ - 117 , 7 + 117 , 7 @ @ public class SettingRunnerTest { <nl> return httpArgs ( ) . withPort ( port ) . build ( ) ; <nl> } <nl> <nl> - private InputStream getResourceAsStream ( String filename ) { <nl> + private InputStream getResourceAsStream ( final String filename ) { <nl> return SettingRunnerTest . class . getClassLoader ( ) . getResourceAsStream ( filename ) ; <nl> } <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java <nl> index 5e3b763 . . 3917b5f 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ public class ShutdownMonitorRunnerTest extends AbstractRunnerTest { <nl> helper . get ( root ( ) ) ; <nl> } <nl> <nl> - private void shutdownMoco ( int shutdownPort , String shutdownMocoKey ) throws IOException { <nl> + private void shutdownMoco ( final int shutdownPort , final String shutdownMocoKey ) throws IOException { <nl> Socket socket = new Socket ( InetAddress . getByName ( " 127 . 0 . 0 . 1 " ) , shutdownPort ) ; <nl> socket . setSoLinger ( false , 0 ) ; <nl>
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java <nl> index dbbb363 . . e8d273e 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java <nl> @ @ - 9 , 7 + 9 , 7 @ @ import org . slf4j . LoggerFactory ; <nl> import java . io . File ; <nl> import java . io . FileFilter ; <nl> <nl> - public class FileMonitor { <nl> + public class FileMonitor implements Monitor { <nl> public static final int INTERVAL = 1000 ; <nl> private static Logger logger = LoggerFactory . getLogger ( FileMonitor . class ) ; <nl> <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java <nl> new file mode 100644 <nl> index 0000000 . . 33e9ace <nl> - - - / dev / null <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + package com . github . dreamhead . moco . runner ; <nl> + <nl> + public interface Monitor { <nl> + void startMonitor ( ) ; <nl> + void stopMonitor ( ) ; <nl> + } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java <nl> index 4741816 . . 7b60e20 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java <nl> @ @ - 11 , 7 + 11 , 7 @ @ import java . io . Reader ; <nl> import java . io . StringReader ; <nl> import java . nio . charset . Charset ; <nl> <nl> - public class ShutdownMonitor { <nl> + public class ShutdownMonitor implements Monitor { <nl> private final MocoServer server = new MocoServer ( ) ; <nl> private final int shutdownPort ; <nl> private final String shutdownKey ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpProtocolVersionDeserializer . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpProtocolVersionDeserializer . java 
 index 118a219 . . f7bcd8f 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpProtocolVersionDeserializer . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpProtocolVersionDeserializer . java 
 @ @ - 10 , 6 + 10 , 10 @ @ import java . io . IOException ; 
 public class HttpProtocolVersionDeserializer extends JsonDeserializer < HttpProtocolVersion > { 
 @ Override 
 public HttpProtocolVersion deserialize ( final JsonParser jp , final DeserializationContext ctx ) throws IOException { 
 - return HttpProtocolVersion . versionOf ( jp . getText ( ) ) ; 
 + try { 
 + return HttpProtocolVersion . versionOf ( jp . getText ( ) ) ; 
 + } catch ( IllegalArgumentException e ) { 
 + return ( HttpProtocolVersion ) ctx . handleUnexpectedToken ( HttpProtocolVersion . class , jp ) ; 
 + } 
 } 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 index 5a382f1 . . fb7f476 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 @ @ - 117 , 7 + 117 , 7 @ @ public class SettingRunnerTest { 
 return httpArgs ( ) . withPort ( port ) . build ( ) ; 
 } 
 
 - private InputStream getResourceAsStream ( String filename ) { 
 + private InputStream getResourceAsStream ( final String filename ) { 
 return SettingRunnerTest . class . getClassLoader ( ) . getResourceAsStream ( filename ) ; 
 } 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java 
 index 5e3b763 . . 3917b5f 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / ShutdownMonitorRunnerTest . java 
 @ @ - 79 , 7 + 79 , 7 @ @ public class ShutdownMonitorRunnerTest extends AbstractRunnerTest { 
 helper . get ( root ( ) ) ; 
 } 
 
 - private void shutdownMoco ( int shutdownPort , String shutdownMocoKey ) throws IOException { 
 + private void shutdownMoco ( final int shutdownPort , final String shutdownMocoKey ) throws IOException { 
 Socket socket = new Socket ( InetAddress . getByName ( " 127 . 0 . 0 . 1 " ) , shutdownPort ) ; 
 socket . setSoLinger ( false , 0 ) ; 


NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java 
 index dbbb363 . . e8d273e 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / FileMonitor . java 
 @ @ - 9 , 7 + 9 , 7 @ @ import org . slf4j . LoggerFactory ; 
 import java . io . File ; 
 import java . io . FileFilter ; 
 
 - public class FileMonitor { 
 + public class FileMonitor implements Monitor { 
 public static final int INTERVAL = 1000 ; 
 private static Logger logger = LoggerFactory . getLogger ( FileMonitor . class ) ; 
 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java 
 new file mode 100644 
 index 0000000 . . 33e9ace 
 - - - / dev / null 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / Monitor . java 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + package com . github . dreamhead . moco . runner ; 
 + 
 + public interface Monitor { 
 + void startMonitor ( ) ; 
 + void stopMonitor ( ) ; 
 + } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java 
 index 4741816 . . 7b60e20 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / runner / ShutdownMonitor . java 
 @ @ - 11 , 7 + 11 , 7 @ @ import java . io . Reader ; 
 import java . io . StringReader ; 
 import java . nio . charset . Charset ; 
 
 - public class ShutdownMonitor { 
 + public class ShutdownMonitor implements Monitor { 
 private final MocoServer server = new MocoServer ( ) ; 
 private final int shutdownPort ; 
 private final String shutdownKey ;
