BLEU SCORE: 0.027611988917697356

TEST MSG: fixed import style check in moco defense test
GENERATED MSG: missing https arguments would throw exception

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoDefenseTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoDefenseTest . java <nl> index 0bdc644 . . 1ea6f87 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoDefenseTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoDefenseTest . java <nl> @ @ - 3 , 7 + 3 , 10 @ @ package com . github . dreamhead . moco ; <nl> import org . apache . http . client . HttpResponseException ; <nl> import org . junit . Test ; <nl> <nl> - import static com . github . dreamhead . moco . Moco . * ; <nl> + <nl> + import static com . github . dreamhead . moco . Moco . by ; <nl> + import static com . github . dreamhead . moco . Moco . context ; <nl> + import static com . github . dreamhead . moco . Moco . httpServer ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java <nl> index 0e053a0 . . 6c80c52 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java <nl> @ @ - 37 , 7 + 37 , 6 @ @ public class HttpsArgsParser extends StartArgsParser { <nl> return httpsArgs ( ) . withPort ( getPort ( port ) ) . withShutdownPort ( getPort ( shutdownPort ) ) . withConfigurationFile ( config ) . withSettings ( globalSettings ) . withEnv ( env ) . withHttpsArg ( httpsArg ( cmd ) ) . build ( ) ; <nl> } <nl> <nl> - <nl> private HttpsArg httpsArg ( final CommandLine cmd ) { <nl> String https = cmd . getOptionValue ( " https " ) ; <nl> String keystore = cmd . getOptionValue ( " keystore " ) ;
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java <nl> index df7af86 . . f574e8d 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class HttpsArgsParser extends StartArgsParser { <nl> return new HttpsArg ( https , keystore , cert ) ; <nl> } <nl> <nl> - return null ; <nl> + throw new ParseArgException ( " HTTPS arguments are expected " ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / StartArgsTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / StartArgsTest . java <nl> index 2f97279 . . e73a5b7 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / StartArgsTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / StartArgsTest . java <nl> @ @ - 1 , 7 + 1 , 7 @ @ <nl> package com . github . dreamhead . moco . bootstrap ; <nl> <nl> import com . github . dreamhead . moco . bootstrap . arg . StartArgs ; <nl> - import com . github . dreamhead . moco . bootstrap . parser . HttpsArgsParser ; <nl> + import com . github . dreamhead . moco . bootstrap . parser . HttpArgsParser ; <nl> import com . github . dreamhead . moco . bootstrap . parser . SocketArgsParser ; <nl> import com . github . dreamhead . moco . bootstrap . parser . StartArgsParser ; <nl> import com . google . common . base . Optional ; <nl> @ @ - 17 , 7 + 17 , 7 @ @ public class StartArgsTest { <nl> <nl> @ Before <nl> public void setUp ( ) throws Exception { <nl> - startArgsParser = new HttpsArgsParser ( ) ; <nl> + startArgsParser = new HttpArgsParser ( ) ; <nl> } <nl> <nl> @ Test

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoDefenseTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoDefenseTest . java 
 index 0bdc644 . . 1ea6f87 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoDefenseTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoDefenseTest . java 
 @ @ - 3 , 7 + 3 , 10 @ @ package com . github . dreamhead . moco ; 
 import org . apache . http . client . HttpResponseException ; 
 import org . junit . Test ; 
 
 - import static com . github . dreamhead . moco . Moco . * ; 
 + 
 + import static com . github . dreamhead . moco . Moco . by ; 
 + import static com . github . dreamhead . moco . Moco . context ; 
 + import static com . github . dreamhead . moco . Moco . httpServer ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java 
 index 0e053a0 . . 6c80c52 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java 
 @ @ - 37 , 7 + 37 , 6 @ @ public class HttpsArgsParser extends StartArgsParser { 
 return httpsArgs ( ) . withPort ( getPort ( port ) ) . withShutdownPort ( getPort ( shutdownPort ) ) . withConfigurationFile ( config ) . withSettings ( globalSettings ) . withEnv ( env ) . withHttpsArg ( httpsArg ( cmd ) ) . build ( ) ; 
 } 
 
 - 
 private HttpsArg httpsArg ( final CommandLine cmd ) { 
 String https = cmd . getOptionValue ( " https " ) ; 
 String keystore = cmd . getOptionValue ( " keystore " ) ;

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java 
 index df7af86 . . f574e8d 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / parser / HttpsArgsParser . java 
 @ @ - 47 , 7 + 47 , 7 @ @ public class HttpsArgsParser extends StartArgsParser { 
 return new HttpsArg ( https , keystore , cert ) ; 
 } 
 
 - return null ; 
 + throw new ParseArgException ( " HTTPS arguments are expected " ) ; 
 } 
 
 @ Override 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / StartArgsTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / StartArgsTest . java 
 index 2f97279 . . e73a5b7 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / StartArgsTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / bootstrap / StartArgsTest . java 
 @ @ - 1 , 7 + 1 , 7 @ @ 
 package com . github . dreamhead . moco . bootstrap ; 
 
 import com . github . dreamhead . moco . bootstrap . arg . StartArgs ; 
 - import com . github . dreamhead . moco . bootstrap . parser . HttpsArgsParser ; 
 + import com . github . dreamhead . moco . bootstrap . parser . HttpArgsParser ; 
 import com . github . dreamhead . moco . bootstrap . parser . SocketArgsParser ; 
 import com . github . dreamhead . moco . bootstrap . parser . StartArgsParser ; 
 import com . google . common . base . Optional ; 
 @ @ - 17 , 7 + 17 , 7 @ @ public class StartArgsTest { 
 
 @ Before 
 public void setUp ( ) throws Exception { 
 - startArgsParser = new HttpsArgsParser ( ) ; 
 + startArgsParser = new HttpArgsParser ( ) ; 
 } 
 
 @ Test
