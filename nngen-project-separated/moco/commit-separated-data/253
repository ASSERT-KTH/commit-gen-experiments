BLEU SCORE: 0.1584873897212071

TEST MSG: added missing final to deserializers
GENERATED MSG: added final to https and socket args

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java <nl> index eb9f177 . . de557ed 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java <nl> @ @ - 12 , 7 + 12 , 7 @ @ import java . io . IOException ; <nl> <nl> import static com . github . dreamhead . moco . util . Strings . strip ; <nl> <nl> - public class CookieContainerDeserializer extends JsonDeserializer < CookieContainer > { <nl> + public final class CookieContainerDeserializer extends JsonDeserializer < CookieContainer > { <nl> @ Override <nl> public CookieContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { <nl> JsonToken currentToken = jp . getCurrentToken ( ) ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java <nl> index 726e2e2 . . 6f9b915 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java <nl> @ @ - 14 , 7 + 14 , 7 @ @ import static com . github . dreamhead . moco . parser . model . FileContainer . aFileContaine <nl> import static com . github . dreamhead . moco . parser . model . FileContainer . asFileContainer ; <nl> import static com . github . dreamhead . moco . util . Strings . strip ; <nl> <nl> - public class FileContainerDeserializer extends JsonDeserializer < FileContainer > { <nl> + public final class FileContainerDeserializer extends JsonDeserializer < FileContainer > { <nl> private TextContainerDeserializerHelper helper = new TextContainerDeserializerHelper ( ) ; <nl> <nl> @ Override <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java <nl> index c3cc5e1 . . 046a2bf 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java <nl> @ @ - 10 , 7 + 10 , 7 @ @ import com . github . dreamhead . moco . parser . model . LatencyContainer ; <nl> import java . io . IOException ; <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> - public class LatencyContainerDeserializer extends JsonDeserializer < LatencyContainer > { <nl> + public final class LatencyContainerDeserializer extends JsonDeserializer < LatencyContainer > { <nl> @ Override <nl> public LatencyContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { <nl> JsonToken currentToken = jp . getCurrentToken ( ) ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> index 688e4a7 . . 63e698d 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> @ @ - 13 , 7 + 13 , 7 @ @ import java . io . IOException ; <nl> import static com . github . dreamhead . moco . parser . model . ProxyContainer . builder ; <nl> import static com . github . dreamhead . moco . util . Strings . strip ; <nl> <nl> - public class ProxyContainerDeserializer extends JsonDeserializer < ProxyContainer > { <nl> + public final class ProxyContainerDeserializer extends JsonDeserializer < ProxyContainer > { <nl> @ Override <nl> public ProxyContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { <nl> JsonToken currentToken = jp . getCurrentToken ( ) ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java <nl> index 3651e33 . . a3716ec 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java <nl> @ @ - 8 , 7 + 8 , 7 @ @ import com . github . dreamhead . moco . parser . model . TextContainer ; <nl> <nl> import java . io . IOException ; <nl> <nl> - public class TextContainerDeserializer extends JsonDeserializer < TextContainer > { <nl> + public final class TextContainerDeserializer extends JsonDeserializer < TextContainer > { <nl> private TextContainerDeserializerHelper helper = new TextContainerDeserializerHelper ( ) ; <nl> <nl> @ Override <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java <nl> index aa4e573 . . a8019b0 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java <nl> @ @ - 18 , 7 + 18 , 7 @ @ import static com . github . dreamhead . moco . util . Strings . strip ; <nl> import static com . google . common . collect . ImmutableMap . copyOf ; <nl> import static com . google . common . collect . Maps . transformEntries ; <nl> <nl> - public class TextContainerDeserializerHelper { <nl> + public final class TextContainerDeserializerHelper { <nl> private static final ImmutableMap < String , String > NAMES = ImmutableMap . < String , String > builder ( ) <nl> . put ( " json _ path " , " jsonPaths " ) <nl> . put ( " xpath " , " xpaths " )
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / HttpsArgs . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / HttpsArgs . java <nl> index c600f6c . . 9152f30 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / HttpsArgs . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / HttpsArgs . java <nl> @ @ - 3 , 7 + 3 , 7 @ @ package com . github . dreamhead . moco . bootstrap . arg ; <nl> import com . github . dreamhead . moco . bootstrap . HttpsArg ; <nl> import com . github . dreamhead . moco . bootstrap . ServerType ; <nl> <nl> - public class HttpsArgs extends StartArgs { <nl> + public final class HttpsArgs extends StartArgs { <nl> private HttpsArgs ( final Integer port , final Integer shutdownPort , final String configurationFile , <nl> final String globalSettings , final String env , final HttpsArg httpsArg ) { <nl> super ( ServerType . HTTPS , port , shutdownPort , configurationFile , globalSettings , env , httpsArg ) ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / SocketArgs . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / SocketArgs . java <nl> index 3999001 . . 69b3131 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / SocketArgs . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / SocketArgs . java <nl> @ @ - 2 , 7 + 2 , 7 @ @ package com . github . dreamhead . moco . bootstrap . arg ; <nl> <nl> import static com . github . dreamhead . moco . bootstrap . ServerType . SOCKET ; <nl> <nl> - public class SocketArgs extends StartArgs { <nl> + public final class SocketArgs extends StartArgs { <nl> private SocketArgs ( final Integer port , final Integer shutdownPort , final String configurationFile ) { <nl> super ( SOCKET , port , shutdownPort , configurationFile , null , null , null ) ; <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java <nl> index eafdc7a . . f4ec4f2 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java <nl> @ @ - 13 , 7 + 13 , 7 @ @ import static com . google . common . collect . Iterators . get ; <nl> <nl> public class CookieContainerDeserializer extends JsonDeserializer < CookieContainer > { <nl> @ Override <nl> - public CookieContainer deserialize ( JsonParser jp , DeserializationContext ctxt ) throws IOException { <nl> + public CookieContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { <nl> JsonToken currentToken = jp . getCurrentToken ( ) ; <nl> if ( currentToken = = JsonToken . VALUE _ STRING ) { <nl> return CookieContainer . newContainer ( jp . getText ( ) ) ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java <nl> index 7111d3b . . fa37297 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java <nl> @ @ - 35 , 7 + 35 , 7 @ @ public class FileContainerDeserializer extends JsonDeserializer < FileContainer > { <nl> return asFileContainer ( helper . textContainer ( jp , ctxt ) ) ; <nl> } <nl> <nl> - return ( FileContainer ) ctxt . handleUnexpectedToken ( FileContainer . class , jp ) ; <nl> + return ( FileContainer ) ctxt . handleUnexpectedToken ( FileContainer . class , jp ) ; <nl> } <nl> <nl> private FileContainer toFileContainer ( final JsonParser jp ) throws IOException { <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java <nl> index 24879db . . f543c4c 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java <nl> @ @ - 26 , 7 + 26 , 7 @ @ public class LatencyContainerDeserializer extends JsonDeserializer < LatencyContai <nl> TimeUnit . valueOf ( container . unit . toUpperCase ( ) + ' S ' ) ) ; <nl> } <nl> <nl> - return ( LatencyContainer ) ctxt . handleUnexpectedToken ( LatencyContainer . class , jp ) ; <nl> + return ( LatencyContainer ) ctxt . handleUnexpectedToken ( LatencyContainer . class , jp ) ; <nl> } <nl> <nl> private static class InternalLatencyContainer { <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> index 5cfd664 . . b14b73b 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> @ @ - 24 , 7 + 24 , 7 @ @ public class ProxyContainerDeserializer extends JsonDeserializer < ProxyContainer > <nl> return container . toProxyContainer ( ) ; <nl> } <nl> <nl> - return ( ProxyContainer ) ctxt . handleUnexpectedToken ( ProxyContainer . class , jp ) ; <nl> + return ( ProxyContainer ) ctxt . handleUnexpectedToken ( ProxyContainer . class , jp ) ; <nl> } <nl> <nl> private static class InternalProxyContainer {

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java 
 index eb9f177 . . de557ed 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java 
 @ @ - 12 , 7 + 12 , 7 @ @ import java . io . IOException ; 
 
 import static com . github . dreamhead . moco . util . Strings . strip ; 
 
 - public class CookieContainerDeserializer extends JsonDeserializer < CookieContainer > { 
 + public final class CookieContainerDeserializer extends JsonDeserializer < CookieContainer > { 
 @ Override 
 public CookieContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { 
 JsonToken currentToken = jp . getCurrentToken ( ) ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java 
 index 726e2e2 . . 6f9b915 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java 
 @ @ - 14 , 7 + 14 , 7 @ @ import static com . github . dreamhead . moco . parser . model . FileContainer . aFileContaine 
 import static com . github . dreamhead . moco . parser . model . FileContainer . asFileContainer ; 
 import static com . github . dreamhead . moco . util . Strings . strip ; 
 
 - public class FileContainerDeserializer extends JsonDeserializer < FileContainer > { 
 + public final class FileContainerDeserializer extends JsonDeserializer < FileContainer > { 
 private TextContainerDeserializerHelper helper = new TextContainerDeserializerHelper ( ) ; 
 
 @ Override 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java 
 index c3cc5e1 . . 046a2bf 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java 
 @ @ - 10 , 7 + 10 , 7 @ @ import com . github . dreamhead . moco . parser . model . LatencyContainer ; 
 import java . io . IOException ; 
 import java . util . concurrent . TimeUnit ; 
 
 - public class LatencyContainerDeserializer extends JsonDeserializer < LatencyContainer > { 
 + public final class LatencyContainerDeserializer extends JsonDeserializer < LatencyContainer > { 
 @ Override 
 public LatencyContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { 
 JsonToken currentToken = jp . getCurrentToken ( ) ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 index 688e4a7 . . 63e698d 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 @ @ - 13 , 7 + 13 , 7 @ @ import java . io . IOException ; 
 import static com . github . dreamhead . moco . parser . model . ProxyContainer . builder ; 
 import static com . github . dreamhead . moco . util . Strings . strip ; 
 
 - public class ProxyContainerDeserializer extends JsonDeserializer < ProxyContainer > { 
 + public final class ProxyContainerDeserializer extends JsonDeserializer < ProxyContainer > { 
 @ Override 
 public ProxyContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { 
 JsonToken currentToken = jp . getCurrentToken ( ) ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java 
 index 3651e33 . . a3716ec 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializer . java 
 @ @ - 8 , 7 + 8 , 7 @ @ import com . github . dreamhead . moco . parser . model . TextContainer ; 
 
 import java . io . IOException ; 
 
 - public class TextContainerDeserializer extends JsonDeserializer < TextContainer > { 
 + public final class TextContainerDeserializer extends JsonDeserializer < TextContainer > { 
 private TextContainerDeserializerHelper helper = new TextContainerDeserializerHelper ( ) ; 
 
 @ Override 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java 
 index aa4e573 . . a8019b0 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java 
 @ @ - 18 , 7 + 18 , 7 @ @ import static com . github . dreamhead . moco . util . Strings . strip ; 
 import static com . google . common . collect . ImmutableMap . copyOf ; 
 import static com . google . common . collect . Maps . transformEntries ; 
 
 - public class TextContainerDeserializerHelper { 
 + public final class TextContainerDeserializerHelper { 
 private static final ImmutableMap < String , String > NAMES = ImmutableMap . < String , String > builder ( ) 
 . put ( " json _ path " , " jsonPaths " ) 
 . put ( " xpath " , " xpaths " )

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / HttpsArgs . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / HttpsArgs . java 
 index c600f6c . . 9152f30 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / HttpsArgs . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / HttpsArgs . java 
 @ @ - 3 , 7 + 3 , 7 @ @ package com . github . dreamhead . moco . bootstrap . arg ; 
 import com . github . dreamhead . moco . bootstrap . HttpsArg ; 
 import com . github . dreamhead . moco . bootstrap . ServerType ; 
 
 - public class HttpsArgs extends StartArgs { 
 + public final class HttpsArgs extends StartArgs { 
 private HttpsArgs ( final Integer port , final Integer shutdownPort , final String configurationFile , 
 final String globalSettings , final String env , final HttpsArg httpsArg ) { 
 super ( ServerType . HTTPS , port , shutdownPort , configurationFile , globalSettings , env , httpsArg ) ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / SocketArgs . java b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / SocketArgs . java 
 index 3999001 . . 69b3131 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / SocketArgs . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / bootstrap / arg / SocketArgs . java 
 @ @ - 2 , 7 + 2 , 7 @ @ package com . github . dreamhead . moco . bootstrap . arg ; 
 
 import static com . github . dreamhead . moco . bootstrap . ServerType . SOCKET ; 
 
 - public class SocketArgs extends StartArgs { 
 + public final class SocketArgs extends StartArgs { 
 private SocketArgs ( final Integer port , final Integer shutdownPort , final String configurationFile ) { 
 super ( SOCKET , port , shutdownPort , configurationFile , null , null , null ) ; 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java 
 index eafdc7a . . f4ec4f2 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CookieContainerDeserializer . java 
 @ @ - 13 , 7 + 13 , 7 @ @ import static com . google . common . collect . Iterators . get ; 
 
 public class CookieContainerDeserializer extends JsonDeserializer < CookieContainer > { 
 @ Override 
 - public CookieContainer deserialize ( JsonParser jp , DeserializationContext ctxt ) throws IOException { 
 + public CookieContainer deserialize ( final JsonParser jp , final DeserializationContext ctxt ) throws IOException { 
 JsonToken currentToken = jp . getCurrentToken ( ) ; 
 if ( currentToken = = JsonToken . VALUE _ STRING ) { 
 return CookieContainer . newContainer ( jp . getText ( ) ) ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java 
 index 7111d3b . . fa37297 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / FileContainerDeserializer . java 
 @ @ - 35 , 7 + 35 , 7 @ @ public class FileContainerDeserializer extends JsonDeserializer < FileContainer > { 
 return asFileContainer ( helper . textContainer ( jp , ctxt ) ) ; 
 } 
 
 - return ( FileContainer ) ctxt . handleUnexpectedToken ( FileContainer . class , jp ) ; 
 + return ( FileContainer ) ctxt . handleUnexpectedToken ( FileContainer . class , jp ) ; 
 } 
 
 private FileContainer toFileContainer ( final JsonParser jp ) throws IOException { 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java 
 index 24879db . . f543c4c 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java 
 @ @ - 26 , 7 + 26 , 7 @ @ public class LatencyContainerDeserializer extends JsonDeserializer < LatencyContai 
 TimeUnit . valueOf ( container . unit . toUpperCase ( ) + ' S ' ) ) ; 
 } 
 
 - return ( LatencyContainer ) ctxt . handleUnexpectedToken ( LatencyContainer . class , jp ) ; 
 + return ( LatencyContainer ) ctxt . handleUnexpectedToken ( LatencyContainer . class , jp ) ; 
 } 
 
 private static class InternalLatencyContainer { 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 index 5cfd664 . . b14b73b 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 @ @ - 24 , 7 + 24 , 7 @ @ public class ProxyContainerDeserializer extends JsonDeserializer < ProxyContainer > 
 return container . toProxyContainer ( ) ; 
 } 
 
 - return ( ProxyContainer ) ctxt . handleUnexpectedToken ( ProxyContainer . class , jp ) ; 
 + return ( ProxyContainer ) ctxt . handleUnexpectedToken ( ProxyContainer . class , jp ) ; 
 } 
 
 private static class InternalProxyContainer {
