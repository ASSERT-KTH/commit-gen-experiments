BLEU SCORE: 0.03772691894380681

TEST MSG: made template fields private
GENERATED MSG: fixed a typo in proxy container deserializer

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java <nl> index e2f6c38 . . b936f71 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco . parser . deserializer ; <nl> <nl> + import com . fasterxml . jackson . annotation . JsonAutoDetect ; <nl> import com . fasterxml . jackson . core . JsonParser ; <nl> import com . fasterxml . jackson . core . JsonToken ; <nl> import com . fasterxml . jackson . databind . DeserializationContext ; <nl> @ @ - 58 , 9 + 59 , 10 @ @ public class TextContainerDeserializerHelper { <nl> return builder ( ) . withText ( jp . getText ( ) . trim ( ) ) . build ( ) ; <nl> } <nl> <nl> + @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) <nl> private static class Template { <nl> - public String with ; <nl> - public Map < String , TextContainer > vars ; <nl> + private String with ; <nl> + private Map < String , TextContainer > vars ; <nl> <nl> private ImmutableMap < String , TextContainer > toTemplateVars ( ) { <nl> return copyOf ( transformEntries ( vars , toLocalContainer ( ) ) ) ;
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java <nl> index 0781f9f . . 089f712 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java <nl> @ @ - 5 , 7 + 5 , 6 @ @ import com . fasterxml . jackson . core . JsonToken ; <nl> import com . fasterxml . jackson . databind . DeserializationContext ; <nl> import com . fasterxml . jackson . databind . JsonDeserializer ; <nl> import com . github . dreamhead . moco . parser . model . LatencyContainer ; <nl> - import com . github . dreamhead . moco . parser . model . TextContainer ; <nl> <nl> import java . io . IOException ; <nl> import java . util . concurrent . TimeUnit ; <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> index 90ee3fa . . 2f44bb7 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java <nl> @ @ - 5 , 7 + 5 , 6 @ @ import com . fasterxml . jackson . core . JsonToken ; <nl> import com . fasterxml . jackson . databind . DeserializationContext ; <nl> import com . fasterxml . jackson . databind . JsonDeserializer ; <nl> import com . github . dreamhead . moco . parser . model . ProxyContainer ; <nl> - import com . github . dreamhead . moco . parser . model . TextContainer ; <nl> <nl> import java . io . IOException ; <nl> <nl> @ @ - 25 , 7 + 24 , 7 @ @ public class ProxyContainerDeserializer extends JsonDeserializer < ProxyContainer > <nl> return container . toProxyContainer ( ) ; <nl> } <nl> <nl> - throw ctxt . mappingException ( TextContainer . class , currentToken ) ; <nl> + throw ctxt . mappingException ( ProxyContainer . class , currentToken ) ; <nl> } <nl> <nl> private static class InternalProxyContainer {

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java 
 index e2f6c38 . . b936f71 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / TextContainerDeserializerHelper . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package com . github . dreamhead . moco . parser . deserializer ; 
 
 + import com . fasterxml . jackson . annotation . JsonAutoDetect ; 
 import com . fasterxml . jackson . core . JsonParser ; 
 import com . fasterxml . jackson . core . JsonToken ; 
 import com . fasterxml . jackson . databind . DeserializationContext ; 
 @ @ - 58 , 9 + 59 , 10 @ @ public class TextContainerDeserializerHelper { 
 return builder ( ) . withText ( jp . getText ( ) . trim ( ) ) . build ( ) ; 
 } 
 
 + @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) 
 private static class Template { 
 - public String with ; 
 - public Map < String , TextContainer > vars ; 
 + private String with ; 
 + private Map < String , TextContainer > vars ; 
 
 private ImmutableMap < String , TextContainer > toTemplateVars ( ) { 
 return copyOf ( transformEntries ( vars , toLocalContainer ( ) ) ) ;

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java 
 index 0781f9f . . 089f712 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / LatencyContainerDeserializer . java 
 @ @ - 5 , 7 + 5 , 6 @ @ import com . fasterxml . jackson . core . JsonToken ; 
 import com . fasterxml . jackson . databind . DeserializationContext ; 
 import com . fasterxml . jackson . databind . JsonDeserializer ; 
 import com . github . dreamhead . moco . parser . model . LatencyContainer ; 
 - import com . github . dreamhead . moco . parser . model . TextContainer ; 
 
 import java . io . IOException ; 
 import java . util . concurrent . TimeUnit ; 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 index 90ee3fa . . 2f44bb7 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / ProxyContainerDeserializer . java 
 @ @ - 5 , 7 + 5 , 6 @ @ import com . fasterxml . jackson . core . JsonToken ; 
 import com . fasterxml . jackson . databind . DeserializationContext ; 
 import com . fasterxml . jackson . databind . JsonDeserializer ; 
 import com . github . dreamhead . moco . parser . model . ProxyContainer ; 
 - import com . github . dreamhead . moco . parser . model . TextContainer ; 
 
 import java . io . IOException ; 
 
 @ @ - 25 , 7 + 24 , 7 @ @ public class ProxyContainerDeserializer extends JsonDeserializer < ProxyContainer > 
 return container . toProxyContainer ( ) ; 
 } 
 
 - throw ctxt . mappingException ( TextContainer . class , currentToken ) ; 
 + throw ctxt . mappingException ( ProxyContainer . class , currentToken ) ; 
 } 
 
 private static class InternalProxyContainer {
