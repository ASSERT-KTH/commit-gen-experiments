BLEU SCORE: 0.12440234748126781

TEST MSG: simplified collection container deserialization
GENERATED MSG: added toString to seq container

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CollectionContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CollectionContainerDeserializer . java <nl> deleted file mode 100644 <nl> index 1fc8eba . . 0000000 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CollectionContainerDeserializer . java <nl> + + + / dev / null <nl> @ @ - 1 , 31 + 0 , 0 @ @ <nl> - package com . github . dreamhead . moco . parser . deserializer ; <nl> - <nl> - import com . fasterxml . jackson . core . JsonParser ; <nl> - import com . fasterxml . jackson . core . JsonToken ; <nl> - import com . fasterxml . jackson . core . type . TypeReference ; <nl> - import com . fasterxml . jackson . databind . DeserializationContext ; <nl> - import com . fasterxml . jackson . databind . JsonDeserializer ; <nl> - import com . github . dreamhead . moco . parser . model . ResponseSetting ; <nl> - import com . github . dreamhead . moco . parser . model . CollectionContainer ; <nl> - import com . github . dreamhead . moco . parser . model . TextContainer ; <nl> - <nl> - import java . io . IOException ; <nl> - import java . util . List ; <nl> - <nl> - public class CollectionContainerDeserializer extends JsonDeserializer < CollectionContainer > { <nl> - @ Override <nl> - public CollectionContainer deserialize ( final JsonParser jp , final DeserializationContext ctx ) throws IOException { <nl> - JsonToken currentToken = jp . getCurrentToken ( ) ; <nl> - <nl> - if ( currentToken = = JsonToken . START _ ARRAY ) { <nl> - return new CollectionContainer ( getSeqSettings ( jp ) ) ; <nl> - } <nl> - <nl> - return ( CollectionContainer ) ctx . handleUnexpectedToken ( TextContainer . class , jp ) ; <nl> - } <nl> - <nl> - private Iterable < ResponseSetting > getSeqSettings ( final JsonParser jp ) throws IOException { <nl> - TypeReference < List < ResponseSetting > > reference = new TypeReference < List < ResponseSetting > > ( ) { } ; <nl> - return jp . readValueAs ( reference ) ; <nl> - } <nl> - } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CollectionContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CollectionContainer . java <nl> index ca886f3 . . 3255923 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CollectionContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CollectionContainer . java <nl> @ @ - 1 , 17 + 1 , 16 @ @ <nl> package com . github . dreamhead . moco . parser . model ; <nl> <nl> - import com . fasterxml . jackson . databind . annotation . JsonDeserialize ; <nl> + import com . fasterxml . jackson . annotation . JsonCreator ; <nl> import com . github . dreamhead . moco . ResponseHandler ; <nl> - import com . github . dreamhead . moco . parser . deserializer . CollectionContainerDeserializer ; <nl> import com . google . common . base . Function ; <nl> import com . google . common . base . MoreObjects ; <nl> <nl> import static com . google . common . collect . FluentIterable . from ; <nl> <nl> - @ JsonDeserialize ( using = CollectionContainerDeserializer . class ) <nl> public class CollectionContainer implements Container { <nl> private Iterable < ResponseSetting > collection ; <nl> <nl> + @ JsonCreator <nl> public CollectionContainer ( final Iterable < ResponseSetting > collection ) { <nl> this . collection = collection ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java <nl> index 344d9e3 . . 9907ad0 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java <nl> @ @ - 5 , 7 + 5 , 6 @ @ import com . github . dreamhead . moco . ResponseHandler ; <nl> import com . github . dreamhead . moco . parser . ResponseHandlerFactory ; <nl> import com . google . common . base . MoreObjects ; <nl> <nl> - import java . util . List ; <nl> import java . util . Map ; <nl> <nl> @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) <nl> @ @ - 35 , 6 + 34 , 7 @ @ public class ResponseSetting extends BaseResourceSetting { <nl> responseSetting . version = version ; <nl> responseSetting . json = json ; <nl> responseSetting . attachment = attachment ; <nl> + responseSetting . seq = seq ; <nl> <nl> return responseSetting ; <nl> } <nl> @ @ - 54 , 6 + 54 , 7 @ @ public class ResponseSetting extends BaseResourceSetting { <nl> . add ( " path resource " , pathResource ) <nl> . add ( " json " , json ) <nl> . add ( " attachment " , attachment ) <nl> + . add ( " seq " , seq ) <nl> . toString ( ) ; <nl> } <nl> <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java <nl> index f741415 . . d6e73c9 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java <nl> @ @ - 4 , 11 + 4 , 11 @ @ import com . fasterxml . jackson . databind . annotation . JsonDeserialize ; <nl> import com . github . dreamhead . moco . ResponseHandler ; <nl> import com . github . dreamhead . moco . parser . deserializer . SeqContainerDeserializer ; <nl> import com . google . common . base . Function ; <nl> + import com . google . common . base . MoreObjects ; <nl> <nl> import java . util . List ; <nl> <nl> import static com . google . common . collect . FluentIterable . from ; <nl> - import static com . google . common . collect . Lists . newArrayList ; <nl> <nl> @ JsonDeserialize ( using = SeqContainerDeserializer . class ) <nl> public class SeqContainer implements Container { <nl> @ @ - 18 , 6 + 18 , 15 @ @ public class SeqContainer implements Container { <nl> this . seqs = seqs ; <nl> } <nl> <nl> + @ Override <nl> + public String toString ( ) { <nl> + return MoreObjects . toStringHelper ( this ) <nl> + . omitNullValues ( ) <nl> + . add ( " sequence " , seqs ) <nl> + . toString ( ) ; <nl> + <nl> + } <nl> + <nl> public ResponseHandler [ ] toResponseHandlers ( ) { <nl> return from ( seqs ) . transform ( toResponseHandler ( ) ) . toArray ( ResponseHandler . class ) ; <nl> }

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CollectionContainerDeserializer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CollectionContainerDeserializer . java 
 deleted file mode 100644 
 index 1fc8eba . . 0000000 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / deserializer / CollectionContainerDeserializer . java 
 + + + / dev / null 
 @ @ - 1 , 31 + 0 , 0 @ @ 
 - package com . github . dreamhead . moco . parser . deserializer ; 
 - 
 - import com . fasterxml . jackson . core . JsonParser ; 
 - import com . fasterxml . jackson . core . JsonToken ; 
 - import com . fasterxml . jackson . core . type . TypeReference ; 
 - import com . fasterxml . jackson . databind . DeserializationContext ; 
 - import com . fasterxml . jackson . databind . JsonDeserializer ; 
 - import com . github . dreamhead . moco . parser . model . ResponseSetting ; 
 - import com . github . dreamhead . moco . parser . model . CollectionContainer ; 
 - import com . github . dreamhead . moco . parser . model . TextContainer ; 
 - 
 - import java . io . IOException ; 
 - import java . util . List ; 
 - 
 - public class CollectionContainerDeserializer extends JsonDeserializer < CollectionContainer > { 
 - @ Override 
 - public CollectionContainer deserialize ( final JsonParser jp , final DeserializationContext ctx ) throws IOException { 
 - JsonToken currentToken = jp . getCurrentToken ( ) ; 
 - 
 - if ( currentToken = = JsonToken . START _ ARRAY ) { 
 - return new CollectionContainer ( getSeqSettings ( jp ) ) ; 
 - } 
 - 
 - return ( CollectionContainer ) ctx . handleUnexpectedToken ( TextContainer . class , jp ) ; 
 - } 
 - 
 - private Iterable < ResponseSetting > getSeqSettings ( final JsonParser jp ) throws IOException { 
 - TypeReference < List < ResponseSetting > > reference = new TypeReference < List < ResponseSetting > > ( ) { } ; 
 - return jp . readValueAs ( reference ) ; 
 - } 
 - } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CollectionContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CollectionContainer . java 
 index ca886f3 . . 3255923 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CollectionContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CollectionContainer . java 
 @ @ - 1 , 17 + 1 , 16 @ @ 
 package com . github . dreamhead . moco . parser . model ; 
 
 - import com . fasterxml . jackson . databind . annotation . JsonDeserialize ; 
 + import com . fasterxml . jackson . annotation . JsonCreator ; 
 import com . github . dreamhead . moco . ResponseHandler ; 
 - import com . github . dreamhead . moco . parser . deserializer . CollectionContainerDeserializer ; 
 import com . google . common . base . Function ; 
 import com . google . common . base . MoreObjects ; 
 
 import static com . google . common . collect . FluentIterable . from ; 
 
 - @ JsonDeserialize ( using = CollectionContainerDeserializer . class ) 
 public class CollectionContainer implements Container { 
 private Iterable < ResponseSetting > collection ; 
 
 + @ JsonCreator 
 public CollectionContainer ( final Iterable < ResponseSetting > collection ) { 
 this . collection = collection ; 
 }

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java 
 index 344d9e3 . . 9907ad0 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ResponseSetting . java 
 @ @ - 5 , 7 + 5 , 6 @ @ import com . github . dreamhead . moco . ResponseHandler ; 
 import com . github . dreamhead . moco . parser . ResponseHandlerFactory ; 
 import com . google . common . base . MoreObjects ; 
 
 - import java . util . List ; 
 import java . util . Map ; 
 
 @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) 
 @ @ - 35 , 6 + 34 , 7 @ @ public class ResponseSetting extends BaseResourceSetting { 
 responseSetting . version = version ; 
 responseSetting . json = json ; 
 responseSetting . attachment = attachment ; 
 + responseSetting . seq = seq ; 
 
 return responseSetting ; 
 } 
 @ @ - 54 , 6 + 54 , 7 @ @ public class ResponseSetting extends BaseResourceSetting { 
 . add ( " path resource " , pathResource ) 
 . add ( " json " , json ) 
 . add ( " attachment " , attachment ) 
 + . add ( " seq " , seq ) 
 . toString ( ) ; 
 } 
 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java 
 index f741415 . . d6e73c9 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / SeqContainer . java 
 @ @ - 4 , 11 + 4 , 11 @ @ import com . fasterxml . jackson . databind . annotation . JsonDeserialize ; 
 import com . github . dreamhead . moco . ResponseHandler ; 
 import com . github . dreamhead . moco . parser . deserializer . SeqContainerDeserializer ; 
 import com . google . common . base . Function ; 
 + import com . google . common . base . MoreObjects ; 
 
 import java . util . List ; 
 
 import static com . google . common . collect . FluentIterable . from ; 
 - import static com . google . common . collect . Lists . newArrayList ; 
 
 @ JsonDeserialize ( using = SeqContainerDeserializer . class ) 
 public class SeqContainer implements Container { 
 @ @ - 18 , 6 + 18 , 15 @ @ public class SeqContainer implements Container { 
 this . seqs = seqs ; 
 } 
 
 + @ Override 
 + public String toString ( ) { 
 + return MoreObjects . toStringHelper ( this ) 
 + . omitNullValues ( ) 
 + . add ( " sequence " , seqs ) 
 + . toString ( ) ; 
 + 
 + } 
 + 
 public ResponseHandler [ ] toResponseHandlers ( ) { 
 return from ( seqs ) . transform ( toResponseHandler ( ) ) . toArray ( ResponseHandler . class ) ; 
 }
