BLEU SCORE: 0.024675789207681903

TEST MSG: changed header joiner name to constant name
GENERATED MSG: dumped message content even if content length is missing

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> index c52979b . . 13c75a2 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> @ @ - 57 , 10 + 57 , 10 @ @ public final class HttpDumpers { <nl> <nl> } <nl> <nl> - private final static Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; <nl> + private static final Joiner . MapJoiner HEAD _ JOINER = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; <nl> <nl> public static String asHeaders ( final HttpMessage message ) { <nl> - return headerJoiner . join ( from ( message . getHeaders ( ) . entrySet ( ) ) <nl> + return HEAD _ JOINER . join ( from ( message . getHeaders ( ) . entrySet ( ) ) <nl> . transformAndConcat ( toMapEntries ( ) ) ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> index c565f37 . . c52979b 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> package com . github . dreamhead . moco . dumper ; <nl> <nl> import com . github . dreamhead . moco . HttpMessage ; <nl> + import com . github . dreamhead . moco . model . MessageContent ; <nl> import com . google . common . base . Function ; <nl> import com . google . common . base . Joiner ; <nl> import com . google . common . collect . ImmutableList ; <nl> @ @ - 15 , 8 + 16 , 7 @ @ import static com . google . common . collect . FluentIterable . from ; <nl> <nl> public final class HttpDumpers { <nl> public static String asContent ( final HttpMessage message ) { <nl> - long length = getContentLength ( message , - 1 ) ; <nl> - if ( length > 0 ) { <nl> + if ( hasContent ( message ) ) { <nl> return StringUtil . NEWLINE + StringUtil . NEWLINE + contentForDump ( message ) ; <nl> } <nl> <nl> @ @ - 46 , 17 + 46 , 15 @ @ public final class HttpDumpers { <nl> } <nl> } <nl> <nl> - private static long getContentLength ( final HttpMessage response , final long defaultValue ) { <nl> - String lengthText = response . getHeader ( HttpHeaders . CONTENT _ LENGTH ) ; <nl> + private static boolean hasContent ( final HttpMessage message ) { <nl> + String lengthText = message . getHeader ( HttpHeaders . CONTENT _ LENGTH ) ; <nl> if ( lengthText ! = null ) { <nl> - try { <nl> - return Long . parseLong ( lengthText ) ; <nl> - } catch ( NumberFormatException e ) { <nl> - return defaultValue ; <nl> - } <nl> + return true ; <nl> } <nl> <nl> - return defaultValue ; <nl> + MessageContent content = message . getContent ( ) ; <nl> + return content ! = null & & content . hasContent ( ) ; <nl> + <nl> } <nl> <nl> private final static Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java <nl> index 1f0ff8d . . ac90405 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java <nl> @ @ - 74 , 7 + 74 , 7 @ @ public class HttpDumpersTest { <nl> @ Test <nl> @ SuppressWarnings ( " unchecked " ) <nl> public void should _ not _ parse _ content _ when _ content _ length _ not _ set ( ) { <nl> - assertThat ( asContent ( messageWithHeaders ( EMPTY _ MAP ) ) , isEmptyString ( ) ) ; <nl> + assertThat ( asContent ( messageWithHeaders ( ImmutableMap . of ( HttpHeaders . CONTENT _ TYPE , " text / plain " ) ) ) , is ( EXPECTED _ MESSAGE _ BODY ) ) ; <nl> } <nl> <nl> private void assertMessageContent ( final String mediaType , final String expectedContent ) {

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 index c52979b . . 13c75a2 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 @ @ - 57 , 10 + 57 , 10 @ @ public final class HttpDumpers { 
 
 } 
 
 - private final static Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; 
 + private static final Joiner . MapJoiner HEAD _ JOINER = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; 
 
 public static String asHeaders ( final HttpMessage message ) { 
 - return headerJoiner . join ( from ( message . getHeaders ( ) . entrySet ( ) ) 
 + return HEAD _ JOINER . join ( from ( message . getHeaders ( ) . entrySet ( ) ) 
 . transformAndConcat ( toMapEntries ( ) ) ) ; 
 } 


NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 index c565f37 . . c52979b 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / dumper / HttpDumpers . java 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 package com . github . dreamhead . moco . dumper ; 
 
 import com . github . dreamhead . moco . HttpMessage ; 
 + import com . github . dreamhead . moco . model . MessageContent ; 
 import com . google . common . base . Function ; 
 import com . google . common . base . Joiner ; 
 import com . google . common . collect . ImmutableList ; 
 @ @ - 15 , 8 + 16 , 7 @ @ import static com . google . common . collect . FluentIterable . from ; 
 
 public final class HttpDumpers { 
 public static String asContent ( final HttpMessage message ) { 
 - long length = getContentLength ( message , - 1 ) ; 
 - if ( length > 0 ) { 
 + if ( hasContent ( message ) ) { 
 return StringUtil . NEWLINE + StringUtil . NEWLINE + contentForDump ( message ) ; 
 } 
 
 @ @ - 46 , 17 + 46 , 15 @ @ public final class HttpDumpers { 
 } 
 } 
 
 - private static long getContentLength ( final HttpMessage response , final long defaultValue ) { 
 - String lengthText = response . getHeader ( HttpHeaders . CONTENT _ LENGTH ) ; 
 + private static boolean hasContent ( final HttpMessage message ) { 
 + String lengthText = message . getHeader ( HttpHeaders . CONTENT _ LENGTH ) ; 
 if ( lengthText ! = null ) { 
 - try { 
 - return Long . parseLong ( lengthText ) ; 
 - } catch ( NumberFormatException e ) { 
 - return defaultValue ; 
 - } 
 + return true ; 
 } 
 
 - return defaultValue ; 
 + MessageContent content = message . getContent ( ) ; 
 + return content ! = null & & content . hasContent ( ) ; 
 + 
 } 
 
 private final static Joiner . MapJoiner headerJoiner = Joiner . on ( StringUtil . NEWLINE ) . withKeyValueSeparator ( " : " ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java 
 index 1f0ff8d . . ac90405 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / dumper / HttpDumpersTest . java 
 @ @ - 74 , 7 + 74 , 7 @ @ public class HttpDumpersTest { 
 @ Test 
 @ SuppressWarnings ( " unchecked " ) 
 public void should _ not _ parse _ content _ when _ content _ length _ not _ set ( ) { 
 - assertThat ( asContent ( messageWithHeaders ( EMPTY _ MAP ) ) , isEmptyString ( ) ) ; 
 + assertThat ( asContent ( messageWithHeaders ( ImmutableMap . of ( HttpHeaders . CONTENT _ TYPE , " text / plain " ) ) ) , is ( EXPECTED _ MESSAGE _ BODY ) ) ; 
 } 
 
 private void assertMessageContent ( final String mediaType , final String expectedContent ) {
