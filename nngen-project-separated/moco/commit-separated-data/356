BLEU SCORE: 0.08116697886877475

TEST MSG: applied execute in moco test helper
GENERATED MSG: introduced header shortcut for test

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoFileRootTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoFileRootTest . java <nl> index b0f28ca . . 432a37e 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoFileRootTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoFileRootTest . java <nl> @ @ - 15 , 10 + 15 , 10 @ @ import static com . github . dreamhead . moco . Moco . httpServer ; <nl> import static com . github . dreamhead . moco . Moco . log ; <nl> import static com . github . dreamhead . moco . Moco . template ; <nl> import static com . github . dreamhead . moco . MocoMount . to ; <nl> + import static com . github . dreamhead . moco . Runner . running ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . remoteUrl ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; <nl> - import static com . github . dreamhead . moco . Runner . running ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> import static org . junit . Assert . assertThat ; <nl> <nl> @ @ - 52 , 7 + 52 , 9 @ @ public class MocoFileRootTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws IOException { <nl> - Header header = Request . Get ( root ( ) ) . execute ( ) . returnResponse ( ) . getFirstHeader ( " foo " ) ; <nl> + Request request = Request . Get ( root ( ) ) ; <nl> + Header header = helper . execute ( request ) . getFirstHeader ( " foo " ) ; <nl> + <nl> assertThat ( header . getValue ( ) , is ( " foo . response " ) ) ; <nl> } <nl> } ) ; <nl> @ @ - 65 , 7 + 67 , 8 @ @ public class MocoFileRootTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws IOException { <nl> - Header header = Request . Get ( root ( ) ) . execute ( ) . returnResponse ( ) . getFirstHeader ( " foo " ) ; <nl> + org . apache . http . HttpResponse response = helper . getResponse ( root ( ) ) ; <nl> + Header header = response . getFirstHeader ( " foo " ) ; <nl> assertThat ( header . getValue ( ) , is ( " foo . response " ) ) ; <nl> } <nl> } ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoHttpMethodTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoHttpMethodTest . java <nl> index 7c5670f . . 299f762 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoHttpMethodTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoHttpMethodTest . java <nl> @ @ - 58 , 7 + 58 , 8 @ @ public class MocoHttpMethodTest extends AbstractMocoHttpTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws IOException { <nl> - String response = Request . Delete ( remoteUrl ( " / foo " ) ) . execute ( ) . returnContent ( ) . asString ( ) ; <nl> + Request request = Request . Delete ( remoteUrl ( " / foo " ) ) ; <nl> + String response = helper . executeAsString ( request ) ; <nl> assertThat ( response , is ( " bar " ) ) ; <nl> } <nl> } ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoMountTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoMountTest . java <nl> index 33499ac . . 9f2e3a2 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoMountTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoMountTest . java <nl> @ @ - 3 , 7 + 3 , 6 @ @ package com . github . dreamhead . moco ; <nl> import com . google . common . io . CharStreams ; <nl> import com . google . common . net . HttpHeaders ; <nl> import org . apache . http . client . HttpResponseException ; <nl> - import org . apache . http . client . fluent . Request ; <nl> import org . junit . Test ; <nl> <nl> import java . io . IOException ; <nl> @ @ - 101 , 7 + 100 , 7 @ @ public class MocoMountTest extends AbstractMocoHttpTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws IOException { <nl> - org . apache . http . HttpResponse httpResponse = Request . Get ( remoteUrl ( " / dir / dir . response " ) ) . execute ( ) . returnResponse ( ) ; <nl> + org . apache . http . HttpResponse httpResponse = helper . getResponse ( remoteUrl ( " / dir / dir . response " ) ) ; <nl> String value = httpResponse . getFirstHeader ( HttpHeaders . CONTENT _ TYPE ) . getValue ( ) ; <nl> assertThat ( value , is ( " text / plain " ) ) ; <nl> String content = CharStreams . toString ( new InputStreamReader ( httpResponse . getEntity ( ) . getContent ( ) ) ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRequestHitTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRequestHitTest . java <nl> index 538a105 . . 2f34dee 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRequestHitTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRequestHitTest . java <nl> @ @ - 259 , 7 + 259 , 8 @ @ public class MocoRequestHitTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> - String content = Request . Post ( root ( ) ) . bodyForm ( new BasicNameValuePair ( " name " , " dreamhead " ) ) . execute ( ) . returnContent ( ) . asString ( ) ; <nl> + Request request = Request . Post ( root ( ) ) . bodyForm ( new BasicNameValuePair ( " name " , " dreamhead " ) ) ; <nl> + String content = helper . executeAsString ( request ) ; <nl> assertThat ( content , is ( " foobar " ) ) ; <nl> } <nl> } ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java <nl> index 0ce8ae9 . . b54af9e 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java <nl> @ @ - 40 , 22 + 40 , 19 @ @ public class MocoTestHelper { <nl> } <nl> <nl> public String get ( final String url ) throws IOException { <nl> - return get ( Request . Get ( url ) ) ; <nl> + return executeAsString ( Request . Get ( url ) ) ; <nl> } <nl> <nl> public byte [ ] getAsBytes ( final String url ) throws IOException { <nl> - return getAsBytes ( Request . Get ( url ) ) ; <nl> + return EntityUtils . toByteArray ( execute ( Request . Get ( url ) ) . getEntity ( ) ) ; <nl> } <nl> <nl> public HttpResponse getResponse ( final String url ) throws IOException { <nl> - Request request = Request . Get ( url ) ; <nl> - return runRequest ( request ) ; <nl> + return execute ( Request . Get ( url ) ) ; <nl> } <nl> <nl> public String getWithHeader ( final String url , final ImmutableMultimap < String , String > headers ) throws IOException { <nl> - Request request = getRequest ( url , headers ) ; <nl> - <nl> - return get ( request ) ; <nl> + return executeAsString ( getRequest ( url , headers ) ) ; <nl> } <nl> <nl> private Request getRequest ( final String url , final ImmutableMultimap < String , String > headers ) { <nl> @ @ - 68 , 23 + 65 , 11 @ @ public class MocoTestHelper { <nl> <nl> public HttpResponse getResponseWithHeader ( final String url , final ImmutableMultimap < String , String > headers ) <nl> throws IOException { <nl> - return runRequest ( getRequest ( url , headers ) ) ; <nl> - } <nl> - <nl> - private HttpResponse runRequest ( final Request request ) throws IOException { <nl> - return executor . execute ( request ) . returnResponse ( ) ; <nl> + return execute ( getRequest ( url , headers ) ) ; <nl> } <nl> <nl> public String getWithVersion ( final String url , final HttpVersion version ) throws IOException { <nl> - return get ( Request . Get ( url ) . version ( version ) ) ; <nl> - } <nl> - <nl> - private String get ( final Request request ) throws IOException { <nl> - return executor . execute ( request ) . returnContent ( ) . asString ( ) ; <nl> - } <nl> - <nl> - public byte [ ] getAsBytes ( final Request request ) throws IOException { <nl> - return executor . execute ( request ) . returnContent ( ) . asBytes ( ) ; <nl> + return executeAsString ( Request . Get ( url ) . version ( version ) ) ; <nl> } <nl> <nl> public String postContent ( final String url , final String postContent ) throws IOException { <nl> @ @ - 92 , 10 + 77 , 9 @ @ public class MocoTestHelper { <nl> } <nl> <nl> public String postBytes ( final String url , final byte [ ] bytes ) throws IOException { <nl> - Request request = Request . Post ( url ) <nl> + return executeAsString ( Request . Post ( url ) <nl> . addHeader ( CONTENT _ TYPE , PLAIN _ TEXT _ UTF _ 8 . toString ( ) ) <nl> - . bodyByteArray ( bytes ) ; <nl> - return executor . execute ( request ) . returnContent ( ) . asString ( ) ; <nl> + . bodyByteArray ( bytes ) ) ; <nl> } <nl> <nl> public HttpResponse postForResponse ( final String url , final String content ) throws IOException { <nl> @ @ - 104 , 17 + 88 , 15 @ @ public class MocoTestHelper { <nl> <nl> public HttpResponse postForResponse ( final String url , final String content , final String contentType ) <nl> throws IOException { <nl> - Request request = Request . Post ( url ) <nl> + return execute ( Request . Post ( url ) <nl> . addHeader ( CONTENT _ TYPE , contentType ) <nl> - . bodyByteArray ( content . getBytes ( ) ) ; <nl> - return executor . execute ( request ) . returnResponse ( ) ; <nl> + . bodyByteArray ( content . getBytes ( ) ) ) ; <nl> } <nl> <nl> public HttpResponse putForResponse ( final String url , final String content ) throws IOException { <nl> - Request request = Request . Put ( url ) <nl> + return execute ( Request . Put ( url ) <nl> . addHeader ( CONTENT _ TYPE , PLAIN _ TEXT _ UTF _ 8 . toString ( ) ) <nl> - . bodyByteArray ( content . getBytes ( ) ) ; <nl> - return executor . execute ( request ) . returnResponse ( ) ; <nl> + . bodyByteArray ( content . getBytes ( ) ) ) ; <nl> } <nl> <nl> public HttpResponse putForResponseWithHeaders ( final String url , final String content , <nl> @ @ - 124 , 12 + 106 , 11 @ @ public class MocoTestHelper { <nl> for ( Map . Entry < String , String > entry : headers . entries ( ) ) { <nl> request . addHeader ( entry . getKey ( ) , entry . getValue ( ) ) ; <nl> } <nl> - return executor . execute ( request ) . returnResponse ( ) ; <nl> + return execute ( request ) ; <nl> } <nl> <nl> public HttpResponse deleteForResponse ( final String url ) throws IOException { <nl> - Request request = Request . Delete ( url ) ; <nl> - return executor . execute ( request ) . returnResponse ( ) ; <nl> + return execute ( Request . Delete ( url ) ) ; <nl> } <nl> <nl> public HttpResponse deleteForResponseWithHeaders ( final String url , final ImmutableMultimap < String , String > headers ) <nl> @ @ - 138 , 12 + 119 , 11 @ @ public class MocoTestHelper { <nl> for ( Map . Entry < String , String > entry : headers . entries ( ) ) { <nl> request . addHeader ( entry . getKey ( ) , entry . getValue ( ) ) ; <nl> } <nl> - return executor . execute ( request ) . returnResponse ( ) ; <nl> + return execute ( request ) ; <nl> } <nl> <nl> public HttpResponse headForResponse ( final String url ) throws IOException { <nl> - Request request = Request . Head ( url ) ; <nl> - return executor . execute ( request ) . returnResponse ( ) ; <nl> + return execute ( Request . Head ( url ) ) ; <nl> } <nl> <nl> public String postStream ( final String url , final InputStream stream ) throws IOException { <nl> @ @ - 155 , 12 + 135 , 12 @ @ public class MocoTestHelper { <nl> } <nl> <nl> public int getForStatus ( final String url ) throws IOException { <nl> - return runRequest ( Request . Get ( url ) ) . getStatusLine ( ) . getStatusCode ( ) ; <nl> + return execute ( Request . Get ( url ) ) . getStatusLine ( ) . getStatusCode ( ) ; <nl> } <nl> <nl> public String patchForResponse ( final String url , final String content ) throws IOException { <nl> - Request request = Request . Patch ( url ) . bodyByteArray ( content . getBytes ( ) , ContentType . DEFAULT _ TEXT ) ; <nl> - return executor . execute ( request ) . returnContent ( ) . asString ( ) ; <nl> + return executeAsString ( Request . Patch ( url ) <nl> + . bodyByteArray ( content . getBytes ( ) , ContentType . DEFAULT _ TEXT ) ) ; <nl> } <nl> <nl> public HttpResponse execute ( final Request request ) throws IOException { <nl> @ @ - 168 , 7 + 148 , 7 @ @ public class MocoTestHelper { <nl> } <nl> <nl> public String executeAsString ( final Request request ) throws IOException { <nl> - return EntityUtils . toString ( executor . execute ( request ) . returnResponse ( ) . getEntity ( ) ) ; <nl> + return executor . execute ( request ) . returnContent ( ) . asString ( ) ; <nl> } <nl> <nl> private static final String PROTOCOL = " TLS " ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / MocoConnectionTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / MocoConnectionTest . java <nl> index 6ee2865 . . df2cee0 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / internal / MocoConnectionTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / MocoConnectionTest . java <nl> @ @ - 2 , 13 + 2 , 13 @ @ package com . github . dreamhead . moco . internal ; <nl> <nl> import com . github . dreamhead . moco . AbstractMocoHttpTest ; <nl> import com . github . dreamhead . moco . Runnable ; <nl> + import org . apache . http . HttpResponse ; <nl> import org . apache . http . HttpVersion ; <nl> import org . apache . http . client . fluent . Request ; <nl> - import org . apache . http . client . fluent . Response ; <nl> import org . junit . Test ; <nl> <nl> - import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> + import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> import static org . hamcrest . CoreMatchers . nullValue ; <nl> import static org . junit . Assert . assertThat ; <nl> @ @ - 21 , 8 + 21 , 9 @ @ public class MocoConnectionTest extends AbstractMocoHttpTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> - Response response = Request . Get ( root ( ) ) . version ( HttpVersion . HTTP _ 1 _ 0 ) . addHeader ( " Connection " , " keep - alive " ) . execute ( ) ; <nl> - String connection = response . returnResponse ( ) . getFirstHeader ( " Connection " ) . getValue ( ) ; <nl> + Request request = Request . Get ( root ( ) ) . version ( HttpVersion . HTTP _ 1 _ 0 ) . addHeader ( " Connection " , " keep - alive " ) ; <nl> + HttpResponse response = helper . execute ( request ) ; <nl> + String connection = response . getFirstHeader ( " Connection " ) . getValue ( ) ; <nl> assertThat ( connection , is ( " keep - alive " ) ) ; <nl> } <nl> } ) ; <nl> @ @ - 35 , 8 + 36 , 9 @ @ public class MocoConnectionTest extends AbstractMocoHttpTest { <nl> running ( server , new com . github . dreamhead . moco . Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> - Response response = Request . Get ( root ( ) ) . version ( HttpVersion . HTTP _ 1 _ 1 ) . addHeader ( " Connection " , " keep - alive " ) . execute ( ) ; <nl> - assertThat ( response . returnResponse ( ) . getFirstHeader ( " Connection " ) , nullValue ( ) ) ; <nl> + Request request = Request . Get ( root ( ) ) . version ( HttpVersion . HTTP _ 1 _ 1 ) . addHeader ( " Connection " , " keep - alive " ) ; <nl> + HttpResponse response = helper . execute ( request ) ; <nl> + assertThat ( response . getFirstHeader ( " Connection " ) , nullValue ( ) ) ; <nl> } <nl> } ) ; <nl> } <nl> @ @ - 48 , 8 + 50 , 9 @ @ public class MocoConnectionTest extends AbstractMocoHttpTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> - Response response = Request . Get ( root ( ) ) . addHeader ( " Connection " , " close " ) . execute ( ) ; <nl> - assertThat ( response . returnResponse ( ) . getFirstHeader ( " Connection " ) , nullValue ( ) ) ; <nl> + Request request = Request . Get ( root ( ) ) . addHeader ( " Connection " , " close " ) ; <nl> + HttpResponse response = helper . execute ( request ) ; <nl> + assertThat ( response . getFirstHeader ( " Connection " ) , nullValue ( ) ) ; <nl> } <nl> } ) ; <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMountStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMountStandaloneTest . java <nl> index 6c4b510 . . 62bd3a6 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMountStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMountStandaloneTest . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class MocoMountStandaloneTest extends AbstractMocoStandaloneTest { <nl> public void should _ mount _ dir _ to _ uri _ with _ response ( ) throws IOException { <nl> runWithConfiguration ( " mount . json " ) ; <nl> <nl> - org . apache . http . HttpResponse httpResponse = org . apache . http . client . fluent . Request . Get ( remoteUrl ( " / mount - response / mount . response " ) ) . execute ( ) . returnResponse ( ) ; <nl> + org . apache . http . HttpResponse httpResponse = helper . getResponse ( remoteUrl ( " / mount - response / mount . response " ) ) ; <nl> String value = httpResponse . getFirstHeader ( HttpHeaders . CONTENT _ TYPE ) . getValue ( ) ; <nl> assertThat ( value , is ( " text / plain " ) ) ; <nl> String content = CharStreams . toString ( new InputStreamReader ( httpResponse . getEntity ( ) . getContent ( ) ) ) ; <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> index fb7f476 . . 4d0c4af 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java <nl> @ @ - 4 , 7 + 4 , 6 @ @ import com . github . dreamhead . moco . bootstrap . arg . StartArgs ; <nl> import com . github . dreamhead . moco . helper . MocoTestHelper ; <nl> import org . apache . http . Header ; <nl> import org . apache . http . client . HttpResponseException ; <nl> - import org . apache . http . client . fluent . Request ; <nl> import org . junit . After ; <nl> import org . junit . Test ; <nl> <nl> @ @ - 87 , 7 + 86 , 7 @ @ public class SettingRunnerTest { <nl> runner = new SettingRunner ( stream , createStartArgs ( 12306 ) ) ; <nl> runner . run ( ) ; <nl> <nl> - Header header = Request . Get ( remoteUrl ( " / foo " ) ) . execute ( ) . returnResponse ( ) . getFirstHeader ( " foo " ) ; <nl> + Header header = helper . getResponse ( remoteUrl ( " / foo " ) ) . getFirstHeader ( " foo " ) ; <nl> assertThat ( header . getValue ( ) , is ( " bar " ) ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> index 408792b . . 4eccc95 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ import static com . github . dreamhead . moco . Moco . * ; <nl> import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; <nl> import static com . github . dreamhead . moco . RemoteTestUtils . root ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> + import static com . google . common . collect . ImmutableMap . of ; <nl> import static java . lang . String . format ; <nl> import static org . hamcrest . CoreMatchers . containsString ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> @ @ - 87 , 8 + 88 , 7 @ @ public class MocoProxyTest extends AbstractMocoTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws IOException { <nl> - Content content = Request . Get ( remoteUrl ( " / proxy " ) ) . addHeader ( " foo " , " foo " ) . execute ( ) . returnContent ( ) ; <nl> - assertThat ( content . asString ( ) , is ( " foo _ proxy " ) ) ; <nl> + assertThat ( helper . getWithHeader ( remoteUrl ( " / proxy " ) , of ( " foo " , " foo " ) ) , is ( " foo _ proxy " ) ) ; <nl> } <nl> } ) ; <nl> } <nl> @ @ - 117 , 7 + 117 , 7 @ @ public class MocoProxyTest extends AbstractMocoTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws IOException { <nl> - String fooHeader = Request . Get ( remoteUrl ( " / proxy " ) ) . addHeader ( " foo " , " foo " ) . execute ( ) . returnResponse ( ) . getHeaders ( " foo " ) [ 0 ] . getValue ( ) ; <nl> + String fooHeader = Request . Get ( remoteUrl ( " / proxy " ) ) . addHeader ( " foo " , " foo " ) . execute ( ) . returnResponse ( ) . getFirstHeader ( " foo " ) . getValue ( ) ; <nl> assertThat ( fooHeader , is ( " foo _ header " ) ) ; <nl> } <nl> } ) ; <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> index b09000c . . 02dd26f 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ import static com . github . dreamhead . moco . Moco . * ; <nl> import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; <nl> import static com . github . dreamhead . moco . RemoteTestUtils . root ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> + import static com . google . common . collect . ImmutableMap . of ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> import static org . junit . Assert . assertThat ; <nl> <nl> @ @ - 62 , 8 + 63 , 7 @ @ public class MocoTemplateTest extends AbstractMocoTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> - String response = Request . Get ( remoteUrl ( " / template " ) ) . addHeader ( " foo " , " bar " ) . execute ( ) . returnContent ( ) . asString ( ) ; <nl> - assertThat ( response , is ( " bar " ) ) ; <nl> + assertThat ( helper . getWithHeader ( remoteUrl ( " / template " ) , of ( " foo " , " bar " ) ) , is ( " bar " ) ) ; <nl> } <nl> } ) ; <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> index 4dd8813 . . 5aa67ad 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ import static com . github . dreamhead . moco . Moco . * ; <nl> import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; <nl> import static com . github . dreamhead . moco . RemoteTestUtils . root ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> + import static com . google . common . collect . ImmutableMap . of ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> import static org . hamcrest . Matchers . greaterThan ; <nl> import static org . junit . Assert . assertThat ; <nl> @ @ - 316 , 10 + 317 , 8 @ @ public class MocoTest extends AbstractMocoTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> - Content barRequest = Request . Get ( root ( ) ) . addHeader ( " foo " , " bar " ) . execute ( ) . returnContent ( ) ; <nl> - assertThat ( barRequest . asString ( ) , is ( " header " ) ) ; <nl> - Content blahRequest = Request . Get ( root ( ) ) . addHeader ( " foo " , " blah " ) . execute ( ) . returnContent ( ) ; <nl> - assertThat ( blahRequest . asString ( ) , is ( " header " ) ) ; <nl> + assertThat ( helper . getWithHeader ( root ( ) , of ( " foo " , " bar " ) ) , is ( " header " ) ) ; <nl> + assertThat ( helper . getWithHeader ( root ( ) , of ( " foo " , " blah " ) ) , is ( " header " ) ) ; <nl> } <nl> } ) ; <nl> } <nl> @ @ - 331 , 8 + 330 , 7 @ @ public class MocoTest extends AbstractMocoTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws IOException { <nl> - Content content = Request . Get ( remoteUrl ( " / foo " ) ) . addHeader ( " foo " , " bar " ) . execute ( ) . returnContent ( ) ; <nl> - assertThat ( content . asString ( ) , is ( " blah " ) ) ; <nl> + assertThat ( helper . getWithHeader ( root ( ) , of ( " foo " , " bar " ) ) , is ( " blah " ) ) ; <nl> } <nl> } ) ; <nl> } <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java <nl> index 757b759 . . cc4b4d7 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco . helper ; <nl> <nl> + import com . google . common . collect . ImmutableMap ; <nl> import com . google . common . io . Resources ; <nl> import org . apache . http . StatusLine ; <nl> import org . apache . http . client . fluent . Content ; <nl> @ @ - 7 , 34 + 8 , 47 @ @ import org . apache . http . client . fluent . Request ; <nl> <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> + import java . util . Map ; <nl> <nl> import static com . google . common . io . ByteStreams . toByteArray ; <nl> <nl> public class MocoTestHelper { <nl> - public String get ( String uri ) throws IOException { <nl> - Content content = Request . Get ( uri ) . execute ( ) . returnContent ( ) ; <nl> - return content . asString ( ) ; <nl> + public String get ( String url ) throws IOException { <nl> + return get ( Request . Get ( url ) ) ; <nl> + } <nl> + <nl> + public String getWithHeader ( String url , ImmutableMap < String , String > headers ) throws IOException { <nl> + Request request = Request . Get ( url ) ; <nl> + for ( Map . Entry < String , String > entry : headers . entrySet ( ) ) { <nl> + request = request . addHeader ( entry . getKey ( ) , entry . getValue ( ) ) ; <nl> + } <nl> + <nl> + return get ( request ) ; <nl> + } <nl> + <nl> + private String get ( Request request ) throws IOException { <nl> + return request . execute ( ) . returnContent ( ) . asString ( ) ; <nl> } <nl> <nl> - public String postContent ( String uri , String postContent ) throws IOException { <nl> - return postBytes ( uri , postContent . getBytes ( ) ) ; <nl> + public String postContent ( String url , String postContent ) throws IOException { <nl> + return postBytes ( url , postContent . getBytes ( ) ) ; <nl> } <nl> <nl> - public String postBytes ( String uri , byte [ ] bytes ) throws IOException { <nl> - Content content = Request . Post ( uri ) . bodyByteArray ( bytes ) <nl> + public String postBytes ( String url , byte [ ] bytes ) throws IOException { <nl> + Content content = Request . Post ( url ) . bodyByteArray ( bytes ) <nl> . execute ( ) . returnContent ( ) ; <nl> return content . asString ( ) ; <nl> } <nl> <nl> - public String postFile ( String uri , String file ) throws IOException { <nl> + public String postFile ( String url , String file ) throws IOException { <nl> InputStream is = Resources . getResource ( file ) . openStream ( ) ; <nl> - Content content = Request . Post ( uri ) . bodyByteArray ( toByteArray ( is ) ) <nl> + Content content = Request . Post ( url ) . bodyByteArray ( toByteArray ( is ) ) <nl> . execute ( ) . returnContent ( ) ; <nl> return content . asString ( ) ; <nl> } <nl> <nl> - public int getForStatus ( String uri ) throws IOException { <nl> - StatusLine statusLine = Request . Get ( uri ) . execute ( ) . returnResponse ( ) . getStatusLine ( ) ; <nl> + public int getForStatus ( String url ) throws IOException { <nl> + StatusLine statusLine = Request . Get ( url ) . execute ( ) . returnResponse ( ) . getStatusLine ( ) ; <nl> return statusLine . getStatusCode ( ) ; <nl> } <nl> } <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMatchTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMatchTest . java <nl> index c778497 . . 6b87c4f 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMatchTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMatchTest . java <nl> @ @ - 1 , 12 + 1 , 11 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> - import org . apache . http . client . fluent . Content ; <nl> - import org . apache . http . client . fluent . Request ; <nl> import org . junit . Test ; <nl> <nl> import java . io . IOException ; <nl> <nl> import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; <nl> + import static com . google . common . collect . ImmutableMap . of ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> import static org . junit . Assert . assertThat ; <nl> <nl> @ @ - 36 , 10 + 35 , 8 @ @ public class MocoMatchTest extends AbstractMocoStandaloneTest { <nl> public void should _ match _ header ( ) throws IOException { <nl> runWithConfiguration ( " match . json " ) ; <nl> <nl> - Content jsonContent = Request . Get ( remoteUrl ( " / header - match " ) ) . addHeader ( " Content - type " , " application / json " ) . execute ( ) . returnContent ( ) ; <nl> - assertThat ( jsonContent . asString ( ) , is ( " header _ match " ) ) ; <nl> - Content xmlContent = Request . Get ( remoteUrl ( " / header - match " ) ) . addHeader ( " Content - type " , " application / xml " ) . execute ( ) . returnContent ( ) ; <nl> - assertThat ( xmlContent . asString ( ) , is ( " header _ match " ) ) ; <nl> + assertThat ( helper . getWithHeader ( remoteUrl ( " / header - match " ) , of ( " Content - type " , " application / json " ) ) , is ( " header _ match " ) ) ; <nl> + assertThat ( helper . getWithHeader ( remoteUrl ( " / header - match " ) , of ( " Content - type " , " application / xml " ) ) , is ( " header _ match " ) ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> index 4307001 . . bf25c60 100644 <nl> - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java <nl> @ @ - 3 , 14 + 3 , 15 @ @ package com . github . dreamhead . moco ; <nl> import org . apache . http . HttpResponse ; <nl> import org . apache . http . HttpVersion ; <nl> import org . apache . http . ProtocolVersion ; <nl> - import org . apache . http . client . fluent . Content ; <nl> import org . apache . http . client . fluent . Request ; <nl> import org . apache . http . message . BasicNameValuePair ; <nl> import org . junit . Test ; <nl> <nl> import java . io . IOException ; <nl> <nl> - import static com . github . dreamhead . moco . RemoteTestUtils . * ; <nl> + import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; <nl> + import static com . github . dreamhead . moco . RemoteTestUtils . root ; <nl> + import static com . google . common . collect . ImmutableMap . of ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> import static org . hamcrest . CoreMatchers . startsWith ; <nl> import static org . hamcrest . Matchers . greaterThan ; <nl> @ @ - 110 , 8 + 111 , 7 @ @ public class MocoStandaloneTest extends AbstractMocoStandaloneTest { <nl> @ Test <nl> public void should _ return _ expected _ response _ based _ on _ specified _ header _ request ( ) throws IOException { <nl> runWithConfiguration ( " header . json " ) ; <nl> - Content content = Request . Get ( remoteUrl ( " / header " ) ) . addHeader ( " content - type " , " application / json " ) . execute ( ) . returnContent ( ) ; <nl> - assertThat ( content . asString ( ) , is ( " response _ for _ header _ request " ) ) ; <nl> + assertThat ( helper . getWithHeader ( remoteUrl ( " / header " ) , of ( " content - type " , " application / json " ) ) , is ( " response _ for _ header _ request " ) ) ; <nl> } <nl> <nl> @ Test ( expected = IOException . class )

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoFileRootTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoFileRootTest . java 
 index b0f28ca . . 432a37e 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoFileRootTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoFileRootTest . java 
 @ @ - 15 , 10 + 15 , 10 @ @ import static com . github . dreamhead . moco . Moco . httpServer ; 
 import static com . github . dreamhead . moco . Moco . log ; 
 import static com . github . dreamhead . moco . Moco . template ; 
 import static com . github . dreamhead . moco . MocoMount . to ; 
 + import static com . github . dreamhead . moco . Runner . running ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . remoteUrl ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; 
 - import static com . github . dreamhead . moco . Runner . running ; 
 import static org . hamcrest . CoreMatchers . is ; 
 import static org . junit . Assert . assertThat ; 
 
 @ @ - 52 , 7 + 52 , 9 @ @ public class MocoFileRootTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws IOException { 
 - Header header = Request . Get ( root ( ) ) . execute ( ) . returnResponse ( ) . getFirstHeader ( " foo " ) ; 
 + Request request = Request . Get ( root ( ) ) ; 
 + Header header = helper . execute ( request ) . getFirstHeader ( " foo " ) ; 
 + 
 assertThat ( header . getValue ( ) , is ( " foo . response " ) ) ; 
 } 
 } ) ; 
 @ @ - 65 , 7 + 67 , 8 @ @ public class MocoFileRootTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws IOException { 
 - Header header = Request . Get ( root ( ) ) . execute ( ) . returnResponse ( ) . getFirstHeader ( " foo " ) ; 
 + org . apache . http . HttpResponse response = helper . getResponse ( root ( ) ) ; 
 + Header header = response . getFirstHeader ( " foo " ) ; 
 assertThat ( header . getValue ( ) , is ( " foo . response " ) ) ; 
 } 
 } ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoHttpMethodTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoHttpMethodTest . java 
 index 7c5670f . . 299f762 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoHttpMethodTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoHttpMethodTest . java 
 @ @ - 58 , 7 + 58 , 8 @ @ public class MocoHttpMethodTest extends AbstractMocoHttpTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws IOException { 
 - String response = Request . Delete ( remoteUrl ( " / foo " ) ) . execute ( ) . returnContent ( ) . asString ( ) ; 
 + Request request = Request . Delete ( remoteUrl ( " / foo " ) ) ; 
 + String response = helper . executeAsString ( request ) ; 
 assertThat ( response , is ( " bar " ) ) ; 
 } 
 } ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoMountTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoMountTest . java 
 index 33499ac . . 9f2e3a2 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoMountTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoMountTest . java 
 @ @ - 3 , 7 + 3 , 6 @ @ package com . github . dreamhead . moco ; 
 import com . google . common . io . CharStreams ; 
 import com . google . common . net . HttpHeaders ; 
 import org . apache . http . client . HttpResponseException ; 
 - import org . apache . http . client . fluent . Request ; 
 import org . junit . Test ; 
 
 import java . io . IOException ; 
 @ @ - 101 , 7 + 100 , 7 @ @ public class MocoMountTest extends AbstractMocoHttpTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws IOException { 
 - org . apache . http . HttpResponse httpResponse = Request . Get ( remoteUrl ( " / dir / dir . response " ) ) . execute ( ) . returnResponse ( ) ; 
 + org . apache . http . HttpResponse httpResponse = helper . getResponse ( remoteUrl ( " / dir / dir . response " ) ) ; 
 String value = httpResponse . getFirstHeader ( HttpHeaders . CONTENT _ TYPE ) . getValue ( ) ; 
 assertThat ( value , is ( " text / plain " ) ) ; 
 String content = CharStreams . toString ( new InputStreamReader ( httpResponse . getEntity ( ) . getContent ( ) ) ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRequestHitTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRequestHitTest . java 
 index 538a105 . . 2f34dee 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoRequestHitTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoRequestHitTest . java 
 @ @ - 259 , 7 + 259 , 8 @ @ public class MocoRequestHitTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 - String content = Request . Post ( root ( ) ) . bodyForm ( new BasicNameValuePair ( " name " , " dreamhead " ) ) . execute ( ) . returnContent ( ) . asString ( ) ; 
 + Request request = Request . Post ( root ( ) ) . bodyForm ( new BasicNameValuePair ( " name " , " dreamhead " ) ) ; 
 + String content = helper . executeAsString ( request ) ; 
 assertThat ( content , is ( " foobar " ) ) ; 
 } 
 } ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java 
 index 0ce8ae9 . . b54af9e 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java 
 @ @ - 40 , 22 + 40 , 19 @ @ public class MocoTestHelper { 
 } 
 
 public String get ( final String url ) throws IOException { 
 - return get ( Request . Get ( url ) ) ; 
 + return executeAsString ( Request . Get ( url ) ) ; 
 } 
 
 public byte [ ] getAsBytes ( final String url ) throws IOException { 
 - return getAsBytes ( Request . Get ( url ) ) ; 
 + return EntityUtils . toByteArray ( execute ( Request . Get ( url ) ) . getEntity ( ) ) ; 
 } 
 
 public HttpResponse getResponse ( final String url ) throws IOException { 
 - Request request = Request . Get ( url ) ; 
 - return runRequest ( request ) ; 
 + return execute ( Request . Get ( url ) ) ; 
 } 
 
 public String getWithHeader ( final String url , final ImmutableMultimap < String , String > headers ) throws IOException { 
 - Request request = getRequest ( url , headers ) ; 
 - 
 - return get ( request ) ; 
 + return executeAsString ( getRequest ( url , headers ) ) ; 
 } 
 
 private Request getRequest ( final String url , final ImmutableMultimap < String , String > headers ) { 
 @ @ - 68 , 23 + 65 , 11 @ @ public class MocoTestHelper { 
 
 public HttpResponse getResponseWithHeader ( final String url , final ImmutableMultimap < String , String > headers ) 
 throws IOException { 
 - return runRequest ( getRequest ( url , headers ) ) ; 
 - } 
 - 
 - private HttpResponse runRequest ( final Request request ) throws IOException { 
 - return executor . execute ( request ) . returnResponse ( ) ; 
 + return execute ( getRequest ( url , headers ) ) ; 
 } 
 
 public String getWithVersion ( final String url , final HttpVersion version ) throws IOException { 
 - return get ( Request . Get ( url ) . version ( version ) ) ; 
 - } 
 - 
 - private String get ( final Request request ) throws IOException { 
 - return executor . execute ( request ) . returnContent ( ) . asString ( ) ; 
 - } 
 - 
 - public byte [ ] getAsBytes ( final Request request ) throws IOException { 
 - return executor . execute ( request ) . returnContent ( ) . asBytes ( ) ; 
 + return executeAsString ( Request . Get ( url ) . version ( version ) ) ; 
 } 
 
 public String postContent ( final String url , final String postContent ) throws IOException { 
 @ @ - 92 , 10 + 77 , 9 @ @ public class MocoTestHelper { 
 } 
 
 public String postBytes ( final String url , final byte [ ] bytes ) throws IOException { 
 - Request request = Request . Post ( url ) 
 + return executeAsString ( Request . Post ( url ) 
 . addHeader ( CONTENT _ TYPE , PLAIN _ TEXT _ UTF _ 8 . toString ( ) ) 
 - . bodyByteArray ( bytes ) ; 
 - return executor . execute ( request ) . returnContent ( ) . asString ( ) ; 
 + . bodyByteArray ( bytes ) ) ; 
 } 
 
 public HttpResponse postForResponse ( final String url , final String content ) throws IOException { 
 @ @ - 104 , 17 + 88 , 15 @ @ public class MocoTestHelper { 
 
 public HttpResponse postForResponse ( final String url , final String content , final String contentType ) 
 throws IOException { 
 - Request request = Request . Post ( url ) 
 + return execute ( Request . Post ( url ) 
 . addHeader ( CONTENT _ TYPE , contentType ) 
 - . bodyByteArray ( content . getBytes ( ) ) ; 
 - return executor . execute ( request ) . returnResponse ( ) ; 
 + . bodyByteArray ( content . getBytes ( ) ) ) ; 
 } 
 
 public HttpResponse putForResponse ( final String url , final String content ) throws IOException { 
 - Request request = Request . Put ( url ) 
 + return execute ( Request . Put ( url ) 
 . addHeader ( CONTENT _ TYPE , PLAIN _ TEXT _ UTF _ 8 . toString ( ) ) 
 - . bodyByteArray ( content . getBytes ( ) ) ; 
 - return executor . execute ( request ) . returnResponse ( ) ; 
 + . bodyByteArray ( content . getBytes ( ) ) ) ; 
 } 
 
 public HttpResponse putForResponseWithHeaders ( final String url , final String content , 
 @ @ - 124 , 12 + 106 , 11 @ @ public class MocoTestHelper { 
 for ( Map . Entry < String , String > entry : headers . entries ( ) ) { 
 request . addHeader ( entry . getKey ( ) , entry . getValue ( ) ) ; 
 } 
 - return executor . execute ( request ) . returnResponse ( ) ; 
 + return execute ( request ) ; 
 } 
 
 public HttpResponse deleteForResponse ( final String url ) throws IOException { 
 - Request request = Request . Delete ( url ) ; 
 - return executor . execute ( request ) . returnResponse ( ) ; 
 + return execute ( Request . Delete ( url ) ) ; 
 } 
 
 public HttpResponse deleteForResponseWithHeaders ( final String url , final ImmutableMultimap < String , String > headers ) 
 @ @ - 138 , 12 + 119 , 11 @ @ public class MocoTestHelper { 
 for ( Map . Entry < String , String > entry : headers . entries ( ) ) { 
 request . addHeader ( entry . getKey ( ) , entry . getValue ( ) ) ; 
 } 
 - return executor . execute ( request ) . returnResponse ( ) ; 
 + return execute ( request ) ; 
 } 
 
 public HttpResponse headForResponse ( final String url ) throws IOException { 
 - Request request = Request . Head ( url ) ; 
 - return executor . execute ( request ) . returnResponse ( ) ; 
 + return execute ( Request . Head ( url ) ) ; 
 } 
 
 public String postStream ( final String url , final InputStream stream ) throws IOException { 
 @ @ - 155 , 12 + 135 , 12 @ @ public class MocoTestHelper { 
 } 
 
 public int getForStatus ( final String url ) throws IOException { 
 - return runRequest ( Request . Get ( url ) ) . getStatusLine ( ) . getStatusCode ( ) ; 
 + return execute ( Request . Get ( url ) ) . getStatusLine ( ) . getStatusCode ( ) ; 
 } 
 
 public String patchForResponse ( final String url , final String content ) throws IOException { 
 - Request request = Request . Patch ( url ) . bodyByteArray ( content . getBytes ( ) , ContentType . DEFAULT _ TEXT ) ; 
 - return executor . execute ( request ) . returnContent ( ) . asString ( ) ; 
 + return executeAsString ( Request . Patch ( url ) 
 + . bodyByteArray ( content . getBytes ( ) , ContentType . DEFAULT _ TEXT ) ) ; 
 } 
 
 public HttpResponse execute ( final Request request ) throws IOException { 
 @ @ - 168 , 7 + 148 , 7 @ @ public class MocoTestHelper { 
 } 
 
 public String executeAsString ( final Request request ) throws IOException { 
 - return EntityUtils . toString ( executor . execute ( request ) . returnResponse ( ) . getEntity ( ) ) ; 
 + return executor . execute ( request ) . returnContent ( ) . asString ( ) ; 
 } 
 
 private static final String PROTOCOL = " TLS " ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / internal / MocoConnectionTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / internal / MocoConnectionTest . java 
 index 6ee2865 . . df2cee0 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / internal / MocoConnectionTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / internal / MocoConnectionTest . java 
 @ @ - 2 , 13 + 2 , 13 @ @ package com . github . dreamhead . moco . internal ; 
 
 import com . github . dreamhead . moco . AbstractMocoHttpTest ; 
 import com . github . dreamhead . moco . Runnable ; 
 + import org . apache . http . HttpResponse ; 
 import org . apache . http . HttpVersion ; 
 import org . apache . http . client . fluent . Request ; 
 - import org . apache . http . client . fluent . Response ; 
 import org . junit . Test ; 
 
 - import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 + import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; 
 import static org . hamcrest . CoreMatchers . is ; 
 import static org . hamcrest . CoreMatchers . nullValue ; 
 import static org . junit . Assert . assertThat ; 
 @ @ - 21 , 8 + 21 , 9 @ @ public class MocoConnectionTest extends AbstractMocoHttpTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 - Response response = Request . Get ( root ( ) ) . version ( HttpVersion . HTTP _ 1 _ 0 ) . addHeader ( " Connection " , " keep - alive " ) . execute ( ) ; 
 - String connection = response . returnResponse ( ) . getFirstHeader ( " Connection " ) . getValue ( ) ; 
 + Request request = Request . Get ( root ( ) ) . version ( HttpVersion . HTTP _ 1 _ 0 ) . addHeader ( " Connection " , " keep - alive " ) ; 
 + HttpResponse response = helper . execute ( request ) ; 
 + String connection = response . getFirstHeader ( " Connection " ) . getValue ( ) ; 
 assertThat ( connection , is ( " keep - alive " ) ) ; 
 } 
 } ) ; 
 @ @ - 35 , 8 + 36 , 9 @ @ public class MocoConnectionTest extends AbstractMocoHttpTest { 
 running ( server , new com . github . dreamhead . moco . Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 - Response response = Request . Get ( root ( ) ) . version ( HttpVersion . HTTP _ 1 _ 1 ) . addHeader ( " Connection " , " keep - alive " ) . execute ( ) ; 
 - assertThat ( response . returnResponse ( ) . getFirstHeader ( " Connection " ) , nullValue ( ) ) ; 
 + Request request = Request . Get ( root ( ) ) . version ( HttpVersion . HTTP _ 1 _ 1 ) . addHeader ( " Connection " , " keep - alive " ) ; 
 + HttpResponse response = helper . execute ( request ) ; 
 + assertThat ( response . getFirstHeader ( " Connection " ) , nullValue ( ) ) ; 
 } 
 } ) ; 
 } 
 @ @ - 48 , 8 + 50 , 9 @ @ public class MocoConnectionTest extends AbstractMocoHttpTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 - Response response = Request . Get ( root ( ) ) . addHeader ( " Connection " , " close " ) . execute ( ) ; 
 - assertThat ( response . returnResponse ( ) . getFirstHeader ( " Connection " ) , nullValue ( ) ) ; 
 + Request request = Request . Get ( root ( ) ) . addHeader ( " Connection " , " close " ) ; 
 + HttpResponse response = helper . execute ( request ) ; 
 + assertThat ( response . getFirstHeader ( " Connection " ) , nullValue ( ) ) ; 
 } 
 } ) ; 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMountStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMountStandaloneTest . java 
 index 6c4b510 . . 62bd3a6 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMountStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMountStandaloneTest . java 
 @ @ - 47 , 7 + 47 , 7 @ @ public class MocoMountStandaloneTest extends AbstractMocoStandaloneTest { 
 public void should _ mount _ dir _ to _ uri _ with _ response ( ) throws IOException { 
 runWithConfiguration ( " mount . json " ) ; 
 
 - org . apache . http . HttpResponse httpResponse = org . apache . http . client . fluent . Request . Get ( remoteUrl ( " / mount - response / mount . response " ) ) . execute ( ) . returnResponse ( ) ; 
 + org . apache . http . HttpResponse httpResponse = helper . getResponse ( remoteUrl ( " / mount - response / mount . response " ) ) ; 
 String value = httpResponse . getFirstHeader ( HttpHeaders . CONTENT _ TYPE ) . getValue ( ) ; 
 assertThat ( value , is ( " text / plain " ) ) ; 
 String content = CharStreams . toString ( new InputStreamReader ( httpResponse . getEntity ( ) . getContent ( ) ) ) ; 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 index fb7f476 . . 4d0c4af 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / runner / SettingRunnerTest . java 
 @ @ - 4 , 7 + 4 , 6 @ @ import com . github . dreamhead . moco . bootstrap . arg . StartArgs ; 
 import com . github . dreamhead . moco . helper . MocoTestHelper ; 
 import org . apache . http . Header ; 
 import org . apache . http . client . HttpResponseException ; 
 - import org . apache . http . client . fluent . Request ; 
 import org . junit . After ; 
 import org . junit . Test ; 
 
 @ @ - 87 , 7 + 86 , 7 @ @ public class SettingRunnerTest { 
 runner = new SettingRunner ( stream , createStartArgs ( 12306 ) ) ; 
 runner . run ( ) ; 
 
 - Header header = Request . Get ( remoteUrl ( " / foo " ) ) . execute ( ) . returnResponse ( ) . getFirstHeader ( " foo " ) ; 
 + Header header = helper . getResponse ( remoteUrl ( " / foo " ) ) . getFirstHeader ( " foo " ) ; 
 assertThat ( header . getValue ( ) , is ( " bar " ) ) ; 
 } 


NEAREST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 index 408792b . . 4eccc95 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoProxyTest . java 
 @ @ - 21 , 6 + 21 , 7 @ @ import static com . github . dreamhead . moco . Moco . * ; 
 import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; 
 import static com . github . dreamhead . moco . RemoteTestUtils . root ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 + import static com . google . common . collect . ImmutableMap . of ; 
 import static java . lang . String . format ; 
 import static org . hamcrest . CoreMatchers . containsString ; 
 import static org . hamcrest . CoreMatchers . is ; 
 @ @ - 87 , 8 + 88 , 7 @ @ public class MocoProxyTest extends AbstractMocoTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws IOException { 
 - Content content = Request . Get ( remoteUrl ( " / proxy " ) ) . addHeader ( " foo " , " foo " ) . execute ( ) . returnContent ( ) ; 
 - assertThat ( content . asString ( ) , is ( " foo _ proxy " ) ) ; 
 + assertThat ( helper . getWithHeader ( remoteUrl ( " / proxy " ) , of ( " foo " , " foo " ) ) , is ( " foo _ proxy " ) ) ; 
 } 
 } ) ; 
 } 
 @ @ - 117 , 7 + 117 , 7 @ @ public class MocoProxyTest extends AbstractMocoTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws IOException { 
 - String fooHeader = Request . Get ( remoteUrl ( " / proxy " ) ) . addHeader ( " foo " , " foo " ) . execute ( ) . returnResponse ( ) . getHeaders ( " foo " ) [ 0 ] . getValue ( ) ; 
 + String fooHeader = Request . Get ( remoteUrl ( " / proxy " ) ) . addHeader ( " foo " , " foo " ) . execute ( ) . returnResponse ( ) . getFirstHeader ( " foo " ) . getValue ( ) ; 
 assertThat ( fooHeader , is ( " foo _ header " ) ) ; 
 } 
 } ) ; 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 index b09000c . . 02dd26f 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 @ @ - 13 , 6 + 13 , 7 @ @ import static com . github . dreamhead . moco . Moco . * ; 
 import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; 
 import static com . github . dreamhead . moco . RemoteTestUtils . root ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 + import static com . google . common . collect . ImmutableMap . of ; 
 import static org . hamcrest . CoreMatchers . is ; 
 import static org . junit . Assert . assertThat ; 
 
 @ @ - 62 , 8 + 63 , 7 @ @ public class MocoTemplateTest extends AbstractMocoTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 - String response = Request . Get ( remoteUrl ( " / template " ) ) . addHeader ( " foo " , " bar " ) . execute ( ) . returnContent ( ) . asString ( ) ; 
 - assertThat ( response , is ( " bar " ) ) ; 
 + assertThat ( helper . getWithHeader ( remoteUrl ( " / template " ) , of ( " foo " , " bar " ) ) , is ( " bar " ) ) ; 
 } 
 } ) ; 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 index 4dd8813 . . 5aa67ad 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTest . java 
 @ @ - 17 , 6 + 17 , 7 @ @ import static com . github . dreamhead . moco . Moco . * ; 
 import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; 
 import static com . github . dreamhead . moco . RemoteTestUtils . root ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 + import static com . google . common . collect . ImmutableMap . of ; 
 import static org . hamcrest . CoreMatchers . is ; 
 import static org . hamcrest . Matchers . greaterThan ; 
 import static org . junit . Assert . assertThat ; 
 @ @ - 316 , 10 + 317 , 8 @ @ public class MocoTest extends AbstractMocoTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 - Content barRequest = Request . Get ( root ( ) ) . addHeader ( " foo " , " bar " ) . execute ( ) . returnContent ( ) ; 
 - assertThat ( barRequest . asString ( ) , is ( " header " ) ) ; 
 - Content blahRequest = Request . Get ( root ( ) ) . addHeader ( " foo " , " blah " ) . execute ( ) . returnContent ( ) ; 
 - assertThat ( blahRequest . asString ( ) , is ( " header " ) ) ; 
 + assertThat ( helper . getWithHeader ( root ( ) , of ( " foo " , " bar " ) ) , is ( " header " ) ) ; 
 + assertThat ( helper . getWithHeader ( root ( ) , of ( " foo " , " blah " ) ) , is ( " header " ) ) ; 
 } 
 } ) ; 
 } 
 @ @ - 331 , 8 + 330 , 7 @ @ public class MocoTest extends AbstractMocoTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws IOException { 
 - Content content = Request . Get ( remoteUrl ( " / foo " ) ) . addHeader ( " foo " , " bar " ) . execute ( ) . returnContent ( ) ; 
 - assertThat ( content . asString ( ) , is ( " blah " ) ) ; 
 + assertThat ( helper . getWithHeader ( root ( ) , of ( " foo " , " bar " ) ) , is ( " blah " ) ) ; 
 } 
 } ) ; 
 } 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java 
 index 757b759 . . cc4b4d7 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / helper / MocoTestHelper . java 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 package com . github . dreamhead . moco . helper ; 
 
 + import com . google . common . collect . ImmutableMap ; 
 import com . google . common . io . Resources ; 
 import org . apache . http . StatusLine ; 
 import org . apache . http . client . fluent . Content ; 
 @ @ - 7 , 34 + 8 , 47 @ @ import org . apache . http . client . fluent . Request ; 
 
 import java . io . IOException ; 
 import java . io . InputStream ; 
 + import java . util . Map ; 
 
 import static com . google . common . io . ByteStreams . toByteArray ; 
 
 public class MocoTestHelper { 
 - public String get ( String uri ) throws IOException { 
 - Content content = Request . Get ( uri ) . execute ( ) . returnContent ( ) ; 
 - return content . asString ( ) ; 
 + public String get ( String url ) throws IOException { 
 + return get ( Request . Get ( url ) ) ; 
 + } 
 + 
 + public String getWithHeader ( String url , ImmutableMap < String , String > headers ) throws IOException { 
 + Request request = Request . Get ( url ) ; 
 + for ( Map . Entry < String , String > entry : headers . entrySet ( ) ) { 
 + request = request . addHeader ( entry . getKey ( ) , entry . getValue ( ) ) ; 
 + } 
 + 
 + return get ( request ) ; 
 + } 
 + 
 + private String get ( Request request ) throws IOException { 
 + return request . execute ( ) . returnContent ( ) . asString ( ) ; 
 } 
 
 - public String postContent ( String uri , String postContent ) throws IOException { 
 - return postBytes ( uri , postContent . getBytes ( ) ) ; 
 + public String postContent ( String url , String postContent ) throws IOException { 
 + return postBytes ( url , postContent . getBytes ( ) ) ; 
 } 
 
 - public String postBytes ( String uri , byte [ ] bytes ) throws IOException { 
 - Content content = Request . Post ( uri ) . bodyByteArray ( bytes ) 
 + public String postBytes ( String url , byte [ ] bytes ) throws IOException { 
 + Content content = Request . Post ( url ) . bodyByteArray ( bytes ) 
 . execute ( ) . returnContent ( ) ; 
 return content . asString ( ) ; 
 } 
 
 - public String postFile ( String uri , String file ) throws IOException { 
 + public String postFile ( String url , String file ) throws IOException { 
 InputStream is = Resources . getResource ( file ) . openStream ( ) ; 
 - Content content = Request . Post ( uri ) . bodyByteArray ( toByteArray ( is ) ) 
 + Content content = Request . Post ( url ) . bodyByteArray ( toByteArray ( is ) ) 
 . execute ( ) . returnContent ( ) ; 
 return content . asString ( ) ; 
 } 
 
 - public int getForStatus ( String uri ) throws IOException { 
 - StatusLine statusLine = Request . Get ( uri ) . execute ( ) . returnResponse ( ) . getStatusLine ( ) ; 
 + public int getForStatus ( String url ) throws IOException { 
 + StatusLine statusLine = Request . Get ( url ) . execute ( ) . returnResponse ( ) . getStatusLine ( ) ; 
 return statusLine . getStatusCode ( ) ; 
 } 
 } 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMatchTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMatchTest . java 
 index c778497 . . 6b87c4f 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMatchTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoMatchTest . java 
 @ @ - 1 , 12 + 1 , 11 @ @ 
 package com . github . dreamhead . moco ; 
 
 - import org . apache . http . client . fluent . Content ; 
 - import org . apache . http . client . fluent . Request ; 
 import org . junit . Test ; 
 
 import java . io . IOException ; 
 
 import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; 
 + import static com . google . common . collect . ImmutableMap . of ; 
 import static org . hamcrest . CoreMatchers . is ; 
 import static org . junit . Assert . assertThat ; 
 
 @ @ - 36 , 10 + 35 , 8 @ @ public class MocoMatchTest extends AbstractMocoStandaloneTest { 
 public void should _ match _ header ( ) throws IOException { 
 runWithConfiguration ( " match . json " ) ; 
 
 - Content jsonContent = Request . Get ( remoteUrl ( " / header - match " ) ) . addHeader ( " Content - type " , " application / json " ) . execute ( ) . returnContent ( ) ; 
 - assertThat ( jsonContent . asString ( ) , is ( " header _ match " ) ) ; 
 - Content xmlContent = Request . Get ( remoteUrl ( " / header - match " ) ) . addHeader ( " Content - type " , " application / xml " ) . execute ( ) . returnContent ( ) ; 
 - assertThat ( xmlContent . asString ( ) , is ( " header _ match " ) ) ; 
 + assertThat ( helper . getWithHeader ( remoteUrl ( " / header - match " ) , of ( " Content - type " , " application / json " ) ) , is ( " header _ match " ) ) ; 
 + assertThat ( helper . getWithHeader ( remoteUrl ( " / header - match " ) , of ( " Content - type " , " application / xml " ) ) , is ( " header _ match " ) ) ; 
 } 
 
 @ Test 
 diff - - git a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 index 4307001 . . bf25c60 100644 
 - - - a / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 + + + b / moco - runner / src / test / java / com / github / dreamhead / moco / MocoStandaloneTest . java 
 @ @ - 3 , 14 + 3 , 15 @ @ package com . github . dreamhead . moco ; 
 import org . apache . http . HttpResponse ; 
 import org . apache . http . HttpVersion ; 
 import org . apache . http . ProtocolVersion ; 
 - import org . apache . http . client . fluent . Content ; 
 import org . apache . http . client . fluent . Request ; 
 import org . apache . http . message . BasicNameValuePair ; 
 import org . junit . Test ; 
 
 import java . io . IOException ; 
 
 - import static com . github . dreamhead . moco . RemoteTestUtils . * ; 
 + import static com . github . dreamhead . moco . RemoteTestUtils . remoteUrl ; 
 + import static com . github . dreamhead . moco . RemoteTestUtils . root ; 
 + import static com . google . common . collect . ImmutableMap . of ; 
 import static org . hamcrest . CoreMatchers . is ; 
 import static org . hamcrest . CoreMatchers . startsWith ; 
 import static org . hamcrest . Matchers . greaterThan ; 
 @ @ - 110 , 8 + 111 , 7 @ @ public class MocoStandaloneTest extends AbstractMocoStandaloneTest { 
 @ Test 
 public void should _ return _ expected _ response _ based _ on _ specified _ header _ request ( ) throws IOException { 
 runWithConfiguration ( " header . json " ) ; 
 - Content content = Request . Get ( remoteUrl ( " / header " ) ) . addHeader ( " content - type " , " application / json " ) . execute ( ) . returnContent ( ) ; 
 - assertThat ( content . asString ( ) , is ( " response _ for _ header _ request " ) ) ; 
 + assertThat ( helper . getWithHeader ( remoteUrl ( " / header " ) , of ( " content - type " , " application / json " ) ) , is ( " response _ for _ header _ request " ) ) ; 
 } 
 
 @ Test ( expected = IOException . class )
