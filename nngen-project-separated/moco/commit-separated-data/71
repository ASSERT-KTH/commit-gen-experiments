BLEU SCORE: 0.24446151121745052

TEST MSG: added missing final to default failover executor
GENERATED MSG: used type reference in default failover executor

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> index 1e237b1 . . 3be650f 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> @ @ - 24 , 7 + 24 , 7 @ @ import static com . google . common . collect . FluentIterable . from ; <nl> import static com . google . common . collect . ImmutableList . of ; <nl> import static com . google . common . collect . Iterables . tryFind ; <nl> <nl> - public class DefaultFailoverExecutor implements FailoverExecutor { <nl> + public final class DefaultFailoverExecutor implements FailoverExecutor { <nl> private static Logger logger = LoggerFactory . getLogger ( DefaultFailoverExecutor . class ) ; <nl> <nl> private final ObjectMapper mapper = new ObjectMapper ( ) ;
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> index ed2684e . . edee7a2 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java <nl> @ @ - 1 , 14 + 1 , 15 @ @ <nl> package com . github . dreamhead . moco . handler . failover ; <nl> <nl> + import com . fasterxml . jackson . core . type . TypeReference ; <nl> import com . fasterxml . jackson . databind . JsonMappingException ; <nl> import com . fasterxml . jackson . databind . ObjectMapper ; <nl> import com . fasterxml . jackson . databind . ObjectWriter ; <nl> - import com . fasterxml . jackson . databind . type . TypeFactory ; <nl> import com . github . dreamhead . moco . HttpRequest ; <nl> import com . github . dreamhead . moco . HttpResponse ; <nl> import com . github . dreamhead . moco . MocoException ; <nl> import com . github . dreamhead . moco . model . HttpRequestFailoverMatcher ; <nl> import com . github . dreamhead . moco . model . Session ; <nl> + import com . github . dreamhead . moco . util . Jsons ; <nl> import com . google . common . base . Optional ; <nl> import com . google . common . base . Predicate ; <nl> import com . google . common . collect . ImmutableList ; <nl> @ @ - 28 , 7 + 29 , 6 @ @ import static com . google . common . collect . Iterables . tryFind ; <nl> public class DefaultFailoverExecutor implements FailoverExecutor { <nl> private static Logger logger = LoggerFactory . getLogger ( DefaultFailoverExecutor . class ) ; <nl> <nl> - private final TypeFactory factory = TypeFactory . defaultInstance ( ) ; <nl> private final ObjectMapper mapper = new ObjectMapper ( ) ; <nl> private final File file ; <nl> <nl> @ @ - 69 , 7 + 69 , 7 @ @ public class DefaultFailoverExecutor implements FailoverExecutor { <nl> <nl> private ImmutableList < Session > restoreSessions ( final File file ) { <nl> try { <nl> - List < Session > sessions = mapper . readValue ( file , factory . constructCollectionType ( List . class , Session . class ) ) ; <nl> + List < Session > sessions = mapper . readValue ( file , new TypeReference < List < Session > > ( ) { } ) ; <nl> return copyOf ( sessions ) ; <nl> } catch ( JsonMappingException jme ) { <nl> logger . error ( " exception found " , jme ) ;

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 index 1e237b1 . . 3be650f 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 @ @ - 24 , 7 + 24 , 7 @ @ import static com . google . common . collect . FluentIterable . from ; 
 import static com . google . common . collect . ImmutableList . of ; 
 import static com . google . common . collect . Iterables . tryFind ; 
 
 - public class DefaultFailoverExecutor implements FailoverExecutor { 
 + public final class DefaultFailoverExecutor implements FailoverExecutor { 
 private static Logger logger = LoggerFactory . getLogger ( DefaultFailoverExecutor . class ) ; 
 
 private final ObjectMapper mapper = new ObjectMapper ( ) ;

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 index ed2684e . . edee7a2 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / handler / failover / DefaultFailoverExecutor . java 
 @ @ - 1 , 14 + 1 , 15 @ @ 
 package com . github . dreamhead . moco . handler . failover ; 
 
 + import com . fasterxml . jackson . core . type . TypeReference ; 
 import com . fasterxml . jackson . databind . JsonMappingException ; 
 import com . fasterxml . jackson . databind . ObjectMapper ; 
 import com . fasterxml . jackson . databind . ObjectWriter ; 
 - import com . fasterxml . jackson . databind . type . TypeFactory ; 
 import com . github . dreamhead . moco . HttpRequest ; 
 import com . github . dreamhead . moco . HttpResponse ; 
 import com . github . dreamhead . moco . MocoException ; 
 import com . github . dreamhead . moco . model . HttpRequestFailoverMatcher ; 
 import com . github . dreamhead . moco . model . Session ; 
 + import com . github . dreamhead . moco . util . Jsons ; 
 import com . google . common . base . Optional ; 
 import com . google . common . base . Predicate ; 
 import com . google . common . collect . ImmutableList ; 
 @ @ - 28 , 7 + 29 , 6 @ @ import static com . google . common . collect . Iterables . tryFind ; 
 public class DefaultFailoverExecutor implements FailoverExecutor { 
 private static Logger logger = LoggerFactory . getLogger ( DefaultFailoverExecutor . class ) ; 
 
 - private final TypeFactory factory = TypeFactory . defaultInstance ( ) ; 
 private final ObjectMapper mapper = new ObjectMapper ( ) ; 
 private final File file ; 
 
 @ @ - 69 , 7 + 69 , 7 @ @ public class DefaultFailoverExecutor implements FailoverExecutor { 
 
 private ImmutableList < Session > restoreSessions ( final File file ) { 
 try { 
 - List < Session > sessions = mapper . readValue ( file , factory . constructCollectionType ( List . class , Session . class ) ) ; 
 + List < Session > sessions = mapper . readValue ( file , new TypeReference < List < Session > > ( ) { } ) ; 
 return copyOf ( sessions ) ; 
 } catch ( JsonMappingException jme ) { 
 logger . error ( " exception found " , jme ) ;
