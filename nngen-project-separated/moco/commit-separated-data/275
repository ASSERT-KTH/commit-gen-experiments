BLEU SCORE: 0.05341087579952926

TEST MSG: added missing final to configs
GENERATED MSG: created config applier

TEST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoContextConfig . java b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoContextConfig . java <nl> index 607e5c6 . . 1945b7e 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoContextConfig . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoContextConfig . java <nl> @ @ - 4 , 7 + 4 , 7 @ @ import com . github . dreamhead . moco . MocoConfig ; <nl> <nl> import static com . github . dreamhead . moco . util . URLs . join ; <nl> <nl> - public class MocoContextConfig implements MocoConfig < String > { <nl> + public final class MocoContextConfig implements MocoConfig < String > { <nl> private final String context ; <nl> <nl> public MocoContextConfig ( final String context ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoFileRootConfig . java b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoFileRootConfig . java <nl> index 7b458ab . . 294853a 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoFileRootConfig . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoFileRootConfig . java <nl> @ @ - 4 , 7 + 4 , 7 @ @ import com . github . dreamhead . moco . MocoConfig ; <nl> <nl> import static com . github . dreamhead . moco . util . Files . join ; <nl> <nl> - public class MocoFileRootConfig implements MocoConfig < String > { <nl> + public final class MocoFileRootConfig implements MocoConfig < String > { <nl> private final String fileRoot ; <nl> <nl> public MocoFileRootConfig ( final String fileRoot ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoRequestConfig . java b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoRequestConfig . java <nl> index c707825 . . 6fead76 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoRequestConfig . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoRequestConfig . java <nl> @ @ - 5 , 7 + 5 , 7 @ @ import com . github . dreamhead . moco . RequestMatcher ; <nl> <nl> import static com . github . dreamhead . moco . Moco . and ; <nl> <nl> - public class MocoRequestConfig implements MocoConfig < RequestMatcher > { <nl> + public final class MocoRequestConfig implements MocoConfig < RequestMatcher > { <nl> private final RequestMatcher requestMatcher ; <nl> <nl> public MocoRequestConfig ( final RequestMatcher requestMatcher ) { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoResponseConfig . java b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoResponseConfig . java <nl> index 4dad890 . . 0a33df5 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoResponseConfig . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoResponseConfig . java <nl> @ @ - 5 , 7 + 5 , 7 @ @ import com . github . dreamhead . moco . ResponseHandler ; <nl> <nl> import static com . github . dreamhead . moco . handler . AndResponseHandler . and ; <nl> <nl> - public class MocoResponseConfig implements MocoConfig < ResponseHandler > { <nl> + public final class MocoResponseConfig implements MocoConfig < ResponseHandler > { <nl> private final ResponseHandler handler ; <nl> <nl> public MocoResponseConfig ( final ResponseHandler handler ) {
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java <nl> new file mode 100644 <nl> index 0000000 . . 8f8b17d <nl> - - - / dev / null <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + package com . github . dreamhead . moco ; <nl> + <nl> + public interface ConfigApplier < T > { <nl> + T apply ( final MocoConfig config ) ; <nl> + } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / RequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / RequestMatcher . java <nl> index f53a003 . . 796a2b1 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / RequestMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / RequestMatcher . java <nl> @ @ - 2 , 8 + 2 , 6 @ @ package com . github . dreamhead . moco ; <nl> <nl> import org . jboss . netty . handler . codec . http . HttpRequest ; <nl> <nl> - public interface RequestMatcher { <nl> - boolean match ( HttpRequest request ) ; <nl> - <nl> - RequestMatcher apply ( final MocoConfig config ) ; <nl> + public interface RequestMatcher extends ConfigApplier < RequestMatcher > { <nl> + boolean match ( final HttpRequest request ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java <nl> index 0d1409a . . ad475ff 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java <nl> @ @ - 3 , 8 + 3 , 6 @ @ package com . github . dreamhead . moco ; <nl> import org . jboss . netty . handler . codec . http . HttpRequest ; <nl> import org . jboss . netty . handler . codec . http . HttpResponse ; <nl> <nl> - public interface ResponseHandler { <nl> + public interface ResponseHandler extends ConfigApplier < ResponseHandler > { <nl> void writeToResponse ( HttpRequest request , HttpResponse response ) ; <nl> - <nl> - ResponseHandler apply ( final MocoConfig config ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / XmlRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / XmlRequestMatcher . java <nl> index 3a9ba16 . . e0e0a49 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / XmlRequestMatcher . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / XmlRequestMatcher . java <nl> @ @ - 43 , 12 + 43 , 11 @ @ public class XmlRequestMatcher implements RequestMatcher { <nl> <nl> @ Override <nl> public RequestMatcher apply ( final MocoConfig config ) { <nl> - Resource applied = resource . apply ( config ) ; <nl> - if ( applied = = this ) { <nl> - return this ; <nl> + if ( config . isFor ( resource . id ( ) ) ) { <nl> + return new XmlRequestMatcher ( this . extractor , resource . apply ( config ) ) ; <nl> } <nl> <nl> - return new XmlRequestMatcher ( this . extractor , applied ) ; <nl> + return this ; <nl> } <nl> <nl> private Document getResourceDocument ( HttpRequest request , Resource resource ) throws SAXException { <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Resource . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Resource . java <nl> index a65b04e . . 7c7cd2b 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Resource . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Resource . java <nl> @ @ - 1 , 10 + 1 , 9 @ @ <nl> package com . github . dreamhead . moco . resource ; <nl> <nl> - import com . github . dreamhead . moco . MocoConfig ; <nl> + import com . github . dreamhead . moco . ConfigApplier ; <nl> import org . jboss . netty . handler . codec . http . HttpRequest ; <nl> <nl> - public interface Resource { <nl> + public interface Resource extends ConfigApplier < Resource > { <nl> String id ( ) ; <nl> - Resource apply ( final MocoConfig config ) ; <nl> byte [ ] asByteArray ( HttpRequest request ) ; <nl> } <nl> diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java <nl> index 6d171a2 . . 739ec14 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java <nl> @ @ - 1 , 9 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco . setting ; <nl> <nl> - import com . github . dreamhead . moco . MocoConfig ; <nl> - import com . github . dreamhead . moco . RequestMatcher ; <nl> - import com . github . dreamhead . moco . ResponseHandler ; <nl> - import com . github . dreamhead . moco . Setting ; <nl> + import com . github . dreamhead . moco . * ; <nl> import com . github . dreamhead . moco . internal . ActualHttpServer ; <nl> import com . github . dreamhead . moco . matcher . AndRequestMatcher ; <nl> import org . jboss . netty . handler . codec . http . HttpRequest ; <nl> @ @ - 11 , 7 + 8 , 7 @ @ import org . jboss . netty . handler . codec . http . HttpResponse ; <nl> <nl> import static com . google . common . collect . ImmutableList . of ; <nl> <nl> - public class BaseSetting extends Setting { <nl> + public class BaseSetting extends Setting implements ConfigApplier < BaseSetting > { <nl> private final ActualHttpServer httpServer ; <nl> <nl> public BaseSetting ( ActualHttpServer httpServer , RequestMatcher matcher ) {

TEST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoContextConfig . java b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoContextConfig . java 
 index 607e5c6 . . 1945b7e 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoContextConfig . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoContextConfig . java 
 @ @ - 4 , 7 + 4 , 7 @ @ import com . github . dreamhead . moco . MocoConfig ; 
 
 import static com . github . dreamhead . moco . util . URLs . join ; 
 
 - public class MocoContextConfig implements MocoConfig < String > { 
 + public final class MocoContextConfig implements MocoConfig < String > { 
 private final String context ; 
 
 public MocoContextConfig ( final String context ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoFileRootConfig . java b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoFileRootConfig . java 
 index 7b458ab . . 294853a 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoFileRootConfig . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoFileRootConfig . java 
 @ @ - 4 , 7 + 4 , 7 @ @ import com . github . dreamhead . moco . MocoConfig ; 
 
 import static com . github . dreamhead . moco . util . Files . join ; 
 
 - public class MocoFileRootConfig implements MocoConfig < String > { 
 + public final class MocoFileRootConfig implements MocoConfig < String > { 
 private final String fileRoot ; 
 
 public MocoFileRootConfig ( final String fileRoot ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoRequestConfig . java b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoRequestConfig . java 
 index c707825 . . 6fead76 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoRequestConfig . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoRequestConfig . java 
 @ @ - 5 , 7 + 5 , 7 @ @ import com . github . dreamhead . moco . RequestMatcher ; 
 
 import static com . github . dreamhead . moco . Moco . and ; 
 
 - public class MocoRequestConfig implements MocoConfig < RequestMatcher > { 
 + public final class MocoRequestConfig implements MocoConfig < RequestMatcher > { 
 private final RequestMatcher requestMatcher ; 
 
 public MocoRequestConfig ( final RequestMatcher requestMatcher ) { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoResponseConfig . java b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoResponseConfig . java 
 index 4dad890 . . 0a33df5 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoResponseConfig . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / config / MocoResponseConfig . java 
 @ @ - 5 , 7 + 5 , 7 @ @ import com . github . dreamhead . moco . ResponseHandler ; 
 
 import static com . github . dreamhead . moco . handler . AndResponseHandler . and ; 
 
 - public class MocoResponseConfig implements MocoConfig < ResponseHandler > { 
 + public final class MocoResponseConfig implements MocoConfig < ResponseHandler > { 
 private final ResponseHandler handler ; 
 
 public MocoResponseConfig ( final ResponseHandler handler ) {

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java 
 new file mode 100644 
 index 0000000 . . 8f8b17d 
 - - - / dev / null 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ConfigApplier . java 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + package com . github . dreamhead . moco ; 
 + 
 + public interface ConfigApplier < T > { 
 + T apply ( final MocoConfig config ) ; 
 + } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / RequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / RequestMatcher . java 
 index f53a003 . . 796a2b1 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / RequestMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / RequestMatcher . java 
 @ @ - 2 , 8 + 2 , 6 @ @ package com . github . dreamhead . moco ; 
 
 import org . jboss . netty . handler . codec . http . HttpRequest ; 
 
 - public interface RequestMatcher { 
 - boolean match ( HttpRequest request ) ; 
 - 
 - RequestMatcher apply ( final MocoConfig config ) ; 
 + public interface RequestMatcher extends ConfigApplier < RequestMatcher > { 
 + boolean match ( final HttpRequest request ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java 
 index 0d1409a . . ad475ff 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / ResponseHandler . java 
 @ @ - 3 , 8 + 3 , 6 @ @ package com . github . dreamhead . moco ; 
 import org . jboss . netty . handler . codec . http . HttpRequest ; 
 import org . jboss . netty . handler . codec . http . HttpResponse ; 
 
 - public interface ResponseHandler { 
 + public interface ResponseHandler extends ConfigApplier < ResponseHandler > { 
 void writeToResponse ( HttpRequest request , HttpResponse response ) ; 
 - 
 - ResponseHandler apply ( final MocoConfig config ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / XmlRequestMatcher . java b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / XmlRequestMatcher . java 
 index 3a9ba16 . . e0e0a49 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / matcher / XmlRequestMatcher . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / matcher / XmlRequestMatcher . java 
 @ @ - 43 , 12 + 43 , 11 @ @ public class XmlRequestMatcher implements RequestMatcher { 
 
 @ Override 
 public RequestMatcher apply ( final MocoConfig config ) { 
 - Resource applied = resource . apply ( config ) ; 
 - if ( applied = = this ) { 
 - return this ; 
 + if ( config . isFor ( resource . id ( ) ) ) { 
 + return new XmlRequestMatcher ( this . extractor , resource . apply ( config ) ) ; 
 } 
 
 - return new XmlRequestMatcher ( this . extractor , applied ) ; 
 + return this ; 
 } 
 
 private Document getResourceDocument ( HttpRequest request , Resource resource ) throws SAXException { 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Resource . java b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Resource . java 
 index a65b04e . . 7c7cd2b 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / resource / Resource . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / resource / Resource . java 
 @ @ - 1 , 10 + 1 , 9 @ @ 
 package com . github . dreamhead . moco . resource ; 
 
 - import com . github . dreamhead . moco . MocoConfig ; 
 + import com . github . dreamhead . moco . ConfigApplier ; 
 import org . jboss . netty . handler . codec . http . HttpRequest ; 
 
 - public interface Resource { 
 + public interface Resource extends ConfigApplier < Resource > { 
 String id ( ) ; 
 - Resource apply ( final MocoConfig config ) ; 
 byte [ ] asByteArray ( HttpRequest request ) ; 
 } 
 diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java 
 index 6d171a2 . . 739ec14 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / setting / BaseSetting . java 
 @ @ - 1 , 9 + 1 , 6 @ @ 
 package com . github . dreamhead . moco . setting ; 
 
 - import com . github . dreamhead . moco . MocoConfig ; 
 - import com . github . dreamhead . moco . RequestMatcher ; 
 - import com . github . dreamhead . moco . ResponseHandler ; 
 - import com . github . dreamhead . moco . Setting ; 
 + import com . github . dreamhead . moco . * ; 
 import com . github . dreamhead . moco . internal . ActualHttpServer ; 
 import com . github . dreamhead . moco . matcher . AndRequestMatcher ; 
 import org . jboss . netty . handler . codec . http . HttpRequest ; 
 @ @ - 11 , 7 + 8 , 7 @ @ import org . jboss . netty . handler . codec . http . HttpResponse ; 
 
 import static com . google . common . collect . ImmutableList . of ; 
 
 - public class BaseSetting extends Setting { 
 + public class BaseSetting extends Setting implements ConfigApplier < BaseSetting > { 
 private final ActualHttpServer httpServer ; 
 
 public BaseSetting ( ActualHttpServer httpServer , RequestMatcher matcher ) {
