BLEU SCORE: 0.24446151121745052

TEST MSG: added test for unknown json in template
GENERATED MSG: added test for many extracted variables

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> index 07cdf59 . . 5a7a4c5 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> @ @ - 560 , 4 + 560 , 16 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { <nl> } <nl> } ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ throw _ exception _ for _ unknown _ json ( ) throws Exception { <nl> + server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { req . json . code } $ { req . json . message } " ) ) ; <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws IOException { <nl> + HttpResponse response = helper . getResponse ( remoteUrl ( " / template " ) ) ; <nl> + assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 400 ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> index 7639f80 . . 05fe59a 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java <nl> @ @ - 321 , 4 + 321 , 16 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { <nl> } <nl> } ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void should _ generate _ response _ with _ many _ extracted _ variables ( ) throws Exception { <nl> + server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " < # list seq as item > $ { item } < / # list > " , " seq " , xpath ( " / request / parameters / id / text ( ) " ) ) ) ; <nl> + <nl> + running ( server , new Runnable ( ) { <nl> + @ Override <nl> + public void run ( ) throws Exception { <nl> + assertThat ( helper . postFile ( remoteUrl ( " / template " ) , " foobar . xml " ) , is ( " 12 " ) ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 index 07cdf59 . . 5a7a4c5 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 @ @ - 560 , 4 + 560 , 16 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { 
 } 
 } ) ; 
 } 
 + 
 + @ Test 
 + public void should _ throw _ exception _ for _ unknown _ json ( ) throws Exception { 
 + server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " $ { req . json . code } $ { req . json . message } " ) ) ; 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws IOException { 
 + HttpResponse response = helper . getResponse ( remoteUrl ( " / template " ) ) ; 
 + assertThat ( response . getStatusLine ( ) . getStatusCode ( ) , is ( 400 ) ) ; 
 + } 
 + } ) ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 index 7639f80 . . 05fe59a 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoTemplateTest . java 
 @ @ - 321 , 4 + 321 , 16 @ @ public class MocoTemplateTest extends AbstractMocoHttpTest { 
 } 
 } ) ; 
 } 
 + 
 + @ Test 
 + public void should _ generate _ response _ with _ many _ extracted _ variables ( ) throws Exception { 
 + server . request ( by ( uri ( " / template " ) ) ) . response ( template ( " < # list seq as item > $ { item } < / # list > " , " seq " , xpath ( " / request / parameters / id / text ( ) " ) ) ) ; 
 + 
 + running ( server , new Runnable ( ) { 
 + @ Override 
 + public void run ( ) throws Exception { 
 + assertThat ( helper . postFile ( remoteUrl ( " / template " ) , " foobar . xml " ) , is ( " 12 " ) ) ; 
 + } 
 + } ) ; 
 + } 
 }
