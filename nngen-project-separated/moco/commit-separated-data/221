BLEU SCORE: 0.056697911109760024

TEST MSG: replaced result assertion with json assert in json test
GENERATED MSG: added json header to json response handler

TEST DIFF (one line): diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> index c940c44 . . f467401 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> @ @ - 1 , 7 + 1 , 6 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> import com . github . dreamhead . moco . internal . SessionContext ; <nl> - import com . github . dreamhead . moco . util . Jsons ; <nl> import com . google . common . io . ByteStreams ; <nl> import com . google . common . io . CharStreams ; <nl> import com . google . common . net . MediaType ; <nl> @ @ - 189 , 9 + 188 , 7 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> String content = helper . get ( remoteUrl ( root ( ) ) ) ; <nl> - PlainA responseA = Jsons . toObject ( content , PlainA . class ) ; <nl> - assertThat ( responseA . code , is ( 1 ) ) ; <nl> - assertThat ( responseA . message , is ( " 消 息 " ) ) ; <nl> + JSONAssert . assertEquals ( " { code : 1 , message : \ " 消 息 \ " } " , content , JSONCompareMode . LENIENT ) ; <nl> } <nl> } ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> index 147f953 . . 2f67c23 100644 <nl> - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java <nl> @ @ - 329 , 7 + 329 , 7 @ @ public final class Moco { <nl> } <nl> <nl> public static ResponseHandler toJson ( Object pojo ) { <nl> - return new JsonResponseHandler ( pojo ) ; <nl> + return AndResponseHandler . and ( new JsonResponseHandler ( pojo ) , header ( HttpHeaders . CONTENT _ TYPE , " application / json " ) ) ; <nl> } <nl> <nl> public static JsonPathRequestExtractor jsonPath ( final String jsonPath ) { <nl> diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> index 69a7b20 . . 11c9edb 100644 <nl> - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java <nl> @ @ - 1 , 15 + 1 , 21 @ @ <nl> package com . github . dreamhead . moco ; <nl> <nl> import com . fasterxml . jackson . databind . ObjectMapper ; <nl> + import com . google . common . io . CharStreams ; <nl> + import com . google . common . net . * ; <nl> + import org . apache . http . * ; <nl> import org . apache . http . client . HttpResponseException ; <nl> import org . junit . Test ; <nl> <nl> import java . io . IOException ; <nl> + import java . io . InputStreamReader ; <nl> + import java . nio . charset . Charset ; <nl> <nl> import static com . github . dreamhead . moco . Moco . * ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; <nl> import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; <nl> import static com . github . dreamhead . moco . Runner . running ; <nl> + import static com . google . common . net . HttpHeaders . CONTENT _ TYPE ; <nl> import static org . hamcrest . CoreMatchers . is ; <nl> import static org . junit . Assert . assertThat ; <nl> <nl> @ @ - 108 , 7 + 114 , 6 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { <nl> <nl> @ Test <nl> public void should _ return _ json _ for _ POJO ( ) throws Exception { <nl> - server = httpServer ( port ( ) , log ( ) ) ; <nl> PlainA pojo = new PlainA ( ) ; <nl> pojo . code = 1 ; <nl> pojo . message = " message " ; <nl> @ @ - 116 , 11 + 121 , 14 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { <nl> running ( server , new Runnable ( ) { <nl> @ Override <nl> public void run ( ) throws Exception { <nl> - String actual = helper . get ( root ( ) ) ; <nl> + org . apache . http . HttpResponse response = helper . getResponse ( root ( ) ) ; <nl> + HttpEntity entity = response . getEntity ( ) ; <nl> + assertThat ( entity . getContentType ( ) . getValue ( ) , is ( " application / json " ) ) ; <nl> + String content = CharStreams . toString ( new InputStreamReader ( entity . getContent ( ) , Charset . defaultCharset ( ) ) ) ; <nl> ObjectMapper mapper = new ObjectMapper ( ) ; <nl> - PlainA response = mapper . readValue ( actual , PlainA . class ) ; <nl> - assertThat ( response . code , is ( 1 ) ) ; <nl> - assertThat ( response . message , is ( " message " ) ) ; <nl> + PlainA responseA = mapper . readValue ( content , PlainA . class ) ; <nl> + assertThat ( responseA . code , is ( 1 ) ) ; <nl> + assertThat ( responseA . message , is ( " message " ) ) ; <nl> } <nl> } ) ; <nl> }

TEST DIFF:
diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 index c940c44 . . f467401 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 @ @ - 1 , 7 + 1 , 6 @ @ 
 package com . github . dreamhead . moco ; 
 
 import com . github . dreamhead . moco . internal . SessionContext ; 
 - import com . github . dreamhead . moco . util . Jsons ; 
 import com . google . common . io . ByteStreams ; 
 import com . google . common . io . CharStreams ; 
 import com . google . common . net . MediaType ; 
 @ @ - 189 , 9 + 188 , 7 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { 
 @ Override 
 public void run ( ) throws Exception { 
 String content = helper . get ( remoteUrl ( root ( ) ) ) ; 
 - PlainA responseA = Jsons . toObject ( content , PlainA . class ) ; 
 - assertThat ( responseA . code , is ( 1 ) ) ; 
 - assertThat ( responseA . message , is ( " 消 息 " ) ) ; 
 + JSONAssert . assertEquals ( " { code : 1 , message : \ " 消 息 \ " } " , content , JSONCompareMode . LENIENT ) ; 
 } 
 } ) ; 
 }

NEAREST DIFF:
diff - - git a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 index 147f953 . . 2f67c23 100644 
 - - - a / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 + + + b / moco - core / src / main / java / com / github / dreamhead / moco / Moco . java 
 @ @ - 329 , 7 + 329 , 7 @ @ public final class Moco { 
 } 
 
 public static ResponseHandler toJson ( Object pojo ) { 
 - return new JsonResponseHandler ( pojo ) ; 
 + return AndResponseHandler . and ( new JsonResponseHandler ( pojo ) , header ( HttpHeaders . CONTENT _ TYPE , " application / json " ) ) ; 
 } 
 
 public static JsonPathRequestExtractor jsonPath ( final String jsonPath ) { 
 diff - - git a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 index 69a7b20 . . 11c9edb 100644 
 - - - a / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 + + + b / moco - core / src / test / java / com / github / dreamhead / moco / MocoJsonTest . java 
 @ @ - 1 , 15 + 1 , 21 @ @ 
 package com . github . dreamhead . moco ; 
 
 import com . fasterxml . jackson . databind . ObjectMapper ; 
 + import com . google . common . io . CharStreams ; 
 + import com . google . common . net . * ; 
 + import org . apache . http . * ; 
 import org . apache . http . client . HttpResponseException ; 
 import org . junit . Test ; 
 
 import java . io . IOException ; 
 + import java . io . InputStreamReader ; 
 + import java . nio . charset . Charset ; 
 
 import static com . github . dreamhead . moco . Moco . * ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . port ; 
 import static com . github . dreamhead . moco . helper . RemoteTestUtils . root ; 
 import static com . github . dreamhead . moco . Runner . running ; 
 + import static com . google . common . net . HttpHeaders . CONTENT _ TYPE ; 
 import static org . hamcrest . CoreMatchers . is ; 
 import static org . junit . Assert . assertThat ; 
 
 @ @ - 108 , 7 + 114 , 6 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { 
 
 @ Test 
 public void should _ return _ json _ for _ POJO ( ) throws Exception { 
 - server = httpServer ( port ( ) , log ( ) ) ; 
 PlainA pojo = new PlainA ( ) ; 
 pojo . code = 1 ; 
 pojo . message = " message " ; 
 @ @ - 116 , 11 + 121 , 14 @ @ public class MocoJsonTest extends AbstractMocoHttpTest { 
 running ( server , new Runnable ( ) { 
 @ Override 
 public void run ( ) throws Exception { 
 - String actual = helper . get ( root ( ) ) ; 
 + org . apache . http . HttpResponse response = helper . getResponse ( root ( ) ) ; 
 + HttpEntity entity = response . getEntity ( ) ; 
 + assertThat ( entity . getContentType ( ) . getValue ( ) , is ( " application / json " ) ) ; 
 + String content = CharStreams . toString ( new InputStreamReader ( entity . getContent ( ) , Charset . defaultCharset ( ) ) ) ; 
 ObjectMapper mapper = new ObjectMapper ( ) ; 
 - PlainA response = mapper . readValue ( actual , PlainA . class ) ; 
 - assertThat ( response . code , is ( 1 ) ) ; 
 - assertThat ( response . message , is ( " message " ) ) ; 
 + PlainA responseA = mapper . readValue ( content , PlainA . class ) ; 
 + assertThat ( responseA . code , is ( 1 ) ) ; 
 + assertThat ( responseA . message , is ( " message " ) ) ; 
 } 
 } ) ; 
 }
