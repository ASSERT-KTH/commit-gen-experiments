BLEU SCORE: 0.03283637368030199

TEST MSG: created as response handler in proxy container
GENERATED MSG: added toString to event setting

TEST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> index 29fdd8e . . 37a15de 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java <nl> @ @ - 3 , 7 + 3 , 6 @ @ package com . github . dreamhead . moco . parser . model ; <nl> import com . github . dreamhead . moco . Moco ; <nl> import com . github . dreamhead . moco . RequestExtractor ; <nl> import com . github . dreamhead . moco . ResponseHandler ; <nl> - import com . github . dreamhead . moco . handler . failover . Failover ; <nl> import com . github . dreamhead . moco . parser . ResponseHandlerFactory ; <nl> import com . github . dreamhead . moco . resource . Resource ; <nl> import com . google . common . base . Function ; <nl> @ @ - 99 , 7 + 98 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> } <nl> <nl> if ( ProxyContainer . class . isInstance ( value ) ) { <nl> - return createProxy ( ( ProxyContainer ) value ) ; <nl> + return ( ( ProxyContainer ) value ) . asResponseHandler ( ) ; <nl> } <nl> <nl> if ( " attachment " . equalsIgnoreCase ( name ) ) { <nl> @ @ - 245 , 13 + 244 , 4 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH <nl> } ; <nl> } <nl> <nl> - private ResponseHandler createProxy ( final ProxyContainer proxy ) { <nl> - Failover failover = proxy . getFailover ( ) ; <nl> - <nl> - if ( proxy . hasProxyConfig ( ) ) { <nl> - return proxy ( proxy . getProxyConfig ( ) , failover ) ; <nl> - } <nl> - <nl> - return proxy ( proxy . getUrl ( ) , failover ) ; <nl> - } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java <nl> index 2884750 . . 54b366c 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java <nl> @ @ - 1 , 6 + 1 , 8 @ @ <nl> package com . github . dreamhead . moco . parser . model ; <nl> <nl> import com . fasterxml . jackson . databind . annotation . JsonDeserialize ; <nl> + import com . github . dreamhead . moco . Moco ; <nl> + import com . github . dreamhead . moco . ResponseHandler ; <nl> import com . github . dreamhead . moco . handler . failover . Failover ; <nl> import com . github . dreamhead . moco . handler . proxy . ProxyConfig ; <nl> import com . github . dreamhead . moco . parser . deserializer . ProxyContainerDeserializer ; <nl> @ @ - 59 , 10 + 61 , 20 @ @ public class ProxyContainer { <nl> return from ( from ) . to ( to ) ; <nl> } <nl> <nl> - public boolean hasProxyConfig ( ) { <nl> + private boolean hasProxyConfig ( ) { <nl> return from ! = null & & to ! = null ; <nl> } <nl> <nl> + public ResponseHandler asResponseHandler ( ) { <nl> + Failover failover = getFailover ( ) ; <nl> + <nl> + if ( hasProxyConfig ( ) ) { <nl> + return Moco . proxy ( getProxyConfig ( ) , failover ) ; <nl> + } <nl> + <nl> + return Moco . proxy ( getUrl ( ) , failover ) ; <nl> + } <nl> + <nl> public static class Builder { <nl> private String url ; <nl> private String failover ;
NEAREST DIFF (one line): diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java <nl> index e31aa2d . . 7946e71 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java <nl> @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; <nl> import com . fasterxml . jackson . annotation . JsonAutoDetect ; <nl> import com . github . dreamhead . moco . Moco ; <nl> import com . github . dreamhead . moco . MocoEventAction ; <nl> + import com . google . common . base . MoreObjects ; <nl> <nl> @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) <nl> public class CompleteEventSetting { <nl> @ @ - 33 , 4 + 34 , 15 @ @ public class CompleteEventSetting { <nl> <nl> return null ; <nl> } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return MoreObjects . toStringHelper ( this ) <nl> + . omitNullValues ( ) <nl> + . add ( " async " , async ) <nl> + . add ( " latency " , latency ) <nl> + . add ( " post " , post ) <nl> + . add ( " get " , get ) <nl> + . toString ( ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java <nl> index 8891e8d . . bb3cc52 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java <nl> @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; <nl> import com . fasterxml . jackson . annotation . JsonAutoDetect ; <nl> import com . github . dreamhead . moco . Moco ; <nl> import com . github . dreamhead . moco . MocoEventTrigger ; <nl> + import com . google . common . base . MoreObjects ; <nl> import com . google . common . collect . ImmutableList ; <nl> <nl> import static com . google . common . collect . ImmutableList . of ; <nl> @ @ - 18 , 4 + 19 , 12 @ @ public class EventSetting { <nl> <nl> return of ( ) ; <nl> } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return MoreObjects . toStringHelper ( this ) <nl> + . omitNullValues ( ) <nl> + . add ( " complete " , complete ) <nl> + . toString ( ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> index fbdb5f2 . . 391cae7 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java <nl> @ @ - 2 , 6 + 2 , 7 @ @ package com . github . dreamhead . moco . parser . model ; <nl> <nl> import com . fasterxml . jackson . annotation . JsonAutoDetect ; <nl> import com . github . dreamhead . moco . MocoEventAction ; <nl> + import com . google . common . base . MoreObjects ; <nl> <nl> import static com . github . dreamhead . moco . Moco . get ; <nl> <nl> @ @ - 12 , 4 + 13 , 12 @ @ public class GetSetting { <nl> public MocoEventAction createAction ( ) { <nl> return get ( url ) ; <nl> } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return MoreObjects . toStringHelper ( this ) <nl> + . omitNullValues ( ) <nl> + . add ( " url " , url ) <nl> + . toString ( ) ; <nl> + } <nl> } <nl> diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java <nl> index ecc61a0 . . aa5d3b7 100644 <nl> - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java <nl> + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java <nl> @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; <nl> import com . fasterxml . jackson . annotation . JsonAutoDetect ; <nl> import com . github . dreamhead . moco . Moco ; <nl> import com . github . dreamhead . moco . MocoEventAction ; <nl> + import com . google . common . base . MoreObjects ; <nl> <nl> import static com . github . dreamhead . moco . Moco . post ; <nl> <nl> @ @ - 14 , 4 + 15 , 13 @ @ public class PostSetting { <nl> public MocoEventAction createAction ( ) { <nl> return post ( url , Moco . text ( content ) ) ; <nl> } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return MoreObjects . toStringHelper ( this ) <nl> + . omitNullValues ( ) <nl> + . add ( " url " , url ) <nl> + . add ( " content " , content ) <nl> + . toString ( ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 index 29fdd8e . . 37a15de 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / DynamicResponseHandlerFactory . java 
 @ @ - 3 , 7 + 3 , 6 @ @ package com . github . dreamhead . moco . parser . model ; 
 import com . github . dreamhead . moco . Moco ; 
 import com . github . dreamhead . moco . RequestExtractor ; 
 import com . github . dreamhead . moco . ResponseHandler ; 
 - import com . github . dreamhead . moco . handler . failover . Failover ; 
 import com . github . dreamhead . moco . parser . ResponseHandlerFactory ; 
 import com . github . dreamhead . moco . resource . Resource ; 
 import com . google . common . base . Function ; 
 @ @ - 99 , 7 + 98 , 7 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 } 
 
 if ( ProxyContainer . class . isInstance ( value ) ) { 
 - return createProxy ( ( ProxyContainer ) value ) ; 
 + return ( ( ProxyContainer ) value ) . asResponseHandler ( ) ; 
 } 
 
 if ( " attachment " . equalsIgnoreCase ( name ) ) { 
 @ @ - 245 , 13 + 244 , 4 @ @ public class DynamicResponseHandlerFactory extends Dynamics implements ResponseH 
 } ; 
 } 
 
 - private ResponseHandler createProxy ( final ProxyContainer proxy ) { 
 - Failover failover = proxy . getFailover ( ) ; 
 - 
 - if ( proxy . hasProxyConfig ( ) ) { 
 - return proxy ( proxy . getProxyConfig ( ) , failover ) ; 
 - } 
 - 
 - return proxy ( proxy . getUrl ( ) , failover ) ; 
 - } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java 
 index 2884750 . . 54b366c 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / ProxyContainer . java 
 @ @ - 1 , 6 + 1 , 8 @ @ 
 package com . github . dreamhead . moco . parser . model ; 
 
 import com . fasterxml . jackson . databind . annotation . JsonDeserialize ; 
 + import com . github . dreamhead . moco . Moco ; 
 + import com . github . dreamhead . moco . ResponseHandler ; 
 import com . github . dreamhead . moco . handler . failover . Failover ; 
 import com . github . dreamhead . moco . handler . proxy . ProxyConfig ; 
 import com . github . dreamhead . moco . parser . deserializer . ProxyContainerDeserializer ; 
 @ @ - 59 , 10 + 61 , 20 @ @ public class ProxyContainer { 
 return from ( from ) . to ( to ) ; 
 } 
 
 - public boolean hasProxyConfig ( ) { 
 + private boolean hasProxyConfig ( ) { 
 return from ! = null & & to ! = null ; 
 } 
 
 + public ResponseHandler asResponseHandler ( ) { 
 + Failover failover = getFailover ( ) ; 
 + 
 + if ( hasProxyConfig ( ) ) { 
 + return Moco . proxy ( getProxyConfig ( ) , failover ) ; 
 + } 
 + 
 + return Moco . proxy ( getUrl ( ) , failover ) ; 
 + } 
 + 
 public static class Builder { 
 private String url ; 
 private String failover ;

NEAREST DIFF:
diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java 
 index e31aa2d . . 7946e71 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / CompleteEventSetting . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; 
 import com . fasterxml . jackson . annotation . JsonAutoDetect ; 
 import com . github . dreamhead . moco . Moco ; 
 import com . github . dreamhead . moco . MocoEventAction ; 
 + import com . google . common . base . MoreObjects ; 
 
 @ JsonAutoDetect ( fieldVisibility = JsonAutoDetect . Visibility . ANY ) 
 public class CompleteEventSetting { 
 @ @ - 33 , 4 + 34 , 15 @ @ public class CompleteEventSetting { 
 
 return null ; 
 } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return MoreObjects . toStringHelper ( this ) 
 + . omitNullValues ( ) 
 + . add ( " async " , async ) 
 + . add ( " latency " , latency ) 
 + . add ( " post " , post ) 
 + . add ( " get " , get ) 
 + . toString ( ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java 
 index 8891e8d . . bb3cc52 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / EventSetting . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; 
 import com . fasterxml . jackson . annotation . JsonAutoDetect ; 
 import com . github . dreamhead . moco . Moco ; 
 import com . github . dreamhead . moco . MocoEventTrigger ; 
 + import com . google . common . base . MoreObjects ; 
 import com . google . common . collect . ImmutableList ; 
 
 import static com . google . common . collect . ImmutableList . of ; 
 @ @ - 18 , 4 + 19 , 12 @ @ public class EventSetting { 
 
 return of ( ) ; 
 } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return MoreObjects . toStringHelper ( this ) 
 + . omitNullValues ( ) 
 + . add ( " complete " , complete ) 
 + . toString ( ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 index fbdb5f2 . . 391cae7 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / GetSetting . java 
 @ @ - 2 , 6 + 2 , 7 @ @ package com . github . dreamhead . moco . parser . model ; 
 
 import com . fasterxml . jackson . annotation . JsonAutoDetect ; 
 import com . github . dreamhead . moco . MocoEventAction ; 
 + import com . google . common . base . MoreObjects ; 
 
 import static com . github . dreamhead . moco . Moco . get ; 
 
 @ @ - 12 , 4 + 13 , 12 @ @ public class GetSetting { 
 public MocoEventAction createAction ( ) { 
 return get ( url ) ; 
 } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return MoreObjects . toStringHelper ( this ) 
 + . omitNullValues ( ) 
 + . add ( " url " , url ) 
 + . toString ( ) ; 
 + } 
 } 
 diff - - git a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java 
 index ecc61a0 . . aa5d3b7 100644 
 - - - a / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java 
 + + + b / moco - runner / src / main / java / com / github / dreamhead / moco / parser / model / PostSetting . java 
 @ @ - 3 , 6 + 3 , 7 @ @ package com . github . dreamhead . moco . parser . model ; 
 import com . fasterxml . jackson . annotation . JsonAutoDetect ; 
 import com . github . dreamhead . moco . Moco ; 
 import com . github . dreamhead . moco . MocoEventAction ; 
 + import com . google . common . base . MoreObjects ; 
 
 import static com . github . dreamhead . moco . Moco . post ; 
 
 @ @ - 14 , 4 + 15 , 13 @ @ public class PostSetting { 
 public MocoEventAction createAction ( ) { 
 return post ( url , Moco . text ( content ) ) ; 
 } 
 + 
 + @ Override 
 + public String toString ( ) { 
 + return MoreObjects . toStringHelper ( this ) 
 + . omitNullValues ( ) 
 + . add ( " url " , url ) 
 + . add ( " content " , content ) 
 + . toString ( ) ; 
 + } 
 }
